{"nodes":[{"content":"Exposes the public members of the <xref href=\"System.Reflection.MethodInfo\"></xref> class to unmanaged code.","nodes":[{"pos":[0,108],"content":"Exposes the public members of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> class to unmanaged code.","source":"Exposes the public members of the <xref href=\"System.Reflection.MethodInfo\"></xref> class to unmanaged code."}],"pos":[3152,3261],"yaml":true},{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","nodes":[{"pos":[0,111],"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,288],"content":"This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","nodes":[{"content":"This interface preserves the vtable order of the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt;</ph> class members that can be accessed by unmanaged COM objects.","pos":[0,170],"source":"This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}],"pos":[3272,3565],"yaml":true,"extradata":"MT"},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Attributes\"></xref> property.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.Attributes\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Attributes\"></xref> property."}],"pos":[5307,5438],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,228],"content":"The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;</ph> property gets the attributes associated with this method.","pos":[0,111],"source":"The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method."}]}],"pos":[5449,5682],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Reflection.MethodAttributes\"></xref> values.","nodes":[{"pos":[0,74],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodAttributes\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Reflection.MethodAttributes\"></xref> values."}],"pos":[5845,5920],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.CallingConvention\"></xref> property.","nodes":[{"pos":[0,137],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.CallingConvention\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.CallingConvention\"></xref> property."}],"pos":[7125,7263],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,251],"content":"The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</ph> property gets a value indicating the calling conventions for this method.","pos":[0,134],"source":"The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method."}]}],"pos":[7274,7530],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Reflection.CallingConventions\"></xref> values.","nodes":[{"pos":[0,76],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CallingConventions\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Reflection.CallingConventions\"></xref> values."}],"pos":[7704,7781],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.DeclaringType\"></xref> property.","nodes":[{"pos":[0,133],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.DeclaringType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.DeclaringType\"></xref> property."}],"pos":[8969,9103],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,224],"content":"The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</ph> property gets the class that declares this member.","pos":[0,107],"source":"The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."}]}],"pos":[9114,9343],"yaml":true,"extradata":"MT"},{"content":"The `Type` object for the class that declares this member.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">`Type`</ph> object for the class that declares this member.","source":"The `Type` object for the class that declares this member."}],"pos":[9456,9515],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.Equals(System.Object)\"></xref> method.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.Equals(System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.Equals(System.Object)\"></xref> method."}],"pos":[10724,10849],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,256],"content":"The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> method determines whether the specified <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph>.","pos":[0,141],"source":"The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."}]}],"pos":[10860,11121],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>."}],"pos":[11256,11359],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`."}],"pos":[11417,11558],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.GetBaseDefinition\"></xref> method.","nodes":[{"pos":[0,135],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo.GetBaseDefinition\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.GetBaseDefinition\"></xref> method."}],"pos":[12763,12899],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,358],"content":"The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.GetBaseDefinition%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object for the method on the direct or indirect base class in which the method represented by this instance was first declared.","pos":[0,243],"source":"The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared."}]}],"pos":[12910,13273],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object for the first implementation of this method.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object for the first implementation of this method.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object for the first implementation of this method."}],"pos":[13445,13549],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,153],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"></xref> method."}],"pos":[14846,15000],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,239],"content":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method returns an array containing all the custom attributes.","pos":[0,124],"source":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."}]}],"pos":[15011,15255],"yaml":true,"extradata":"MT"},{"content":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`."}],"pos":[15410,15505],"yaml":true},{"content":"An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.","nodes":[{"pos":[0,114],"content":"An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.","nodes":[{"content":"An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.","pos":[0,114]}]}],"pos":[15564,15679],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,165],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method."}],"pos":[17032,17198],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,264],"content":"The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</ph> method returns an array of custom attributes identified by <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,149],"source":"The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."}]}],"pos":[17209,17478],"yaml":true,"extradata":"MT"},{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","nodes":[{"pos":[0,99],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]}],"pos":[17656,17756],"yaml":true},{"content":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`."}],"pos":[17820,17915],"yaml":true},{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"pos":[0,124],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]}],"pos":[17974,18099],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.GetHashCode\"></xref> method.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.GetHashCode\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.GetHashCode\"></xref> method."}],"pos":[19281,19396],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,330],"content":"The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"content":"The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> method serves as a hash function for a particular type.","pos":[0,95],"source":"The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[96,215],"source":" <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table."}]}]}],"pos":[19407,19742],"yaml":true,"extradata":"MT"},{"content":"The hash code for the current instance.","nodes":[{"pos":[0,39],"content":"The hash code for the current instance.","nodes":[{"content":"The hash code for the current instance.","pos":[0,39]}]}],"pos":[19867,19907],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[21411,21479],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,185],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[109,185],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[21490,21676],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[21875,21918],"yaml":true},{"content":"An array of names to be mapped.","nodes":[{"pos":[0,31],"content":"An array of names to be mapped.","nodes":[{"content":"An array of names to be mapped.","pos":[0,31]}]}],"pos":[21983,22015],"yaml":true},{"content":"The count of the names to be mapped.","nodes":[{"pos":[0,36],"content":"The count of the names to be mapped.","nodes":[{"content":"The count of the names to be mapped.","pos":[0,36]}]}],"pos":[22077,22114],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[22174,22226],"yaml":true},{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","nodes":[{"pos":[0,90],"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","nodes":[{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","pos":[0,90]}]}],"pos":[22290,22381],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.GetMethodImplementationFlags\"></xref> method.","nodes":[{"pos":[0,146],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.GetMethodImplementationFlags\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.GetMethodImplementationFlags\"></xref> method."}],"pos":[23659,23806],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,258],"content":"The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</ph> member returns the <ph id=\"ph2\">&lt;xref:System.Reflection.MethodImplAttributes&gt;</ph> flags.","pos":[0,143],"source":"The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags."}]}],"pos":[23817,24080],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Reflection.MethodImplAttributes\"></xref> values.","nodes":[{"pos":[0,78],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodImplAttributes\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Reflection.MethodImplAttributes\"></xref> values."}],"pos":[24283,24362],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.GetParameters\"></xref> method.","nodes":[{"pos":[0,131],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.GetParameters\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.GetParameters\"></xref> method."}],"pos":[25565,25697],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,238],"content":"The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;</ph> method gets the parameters of the specified method or constructor.","pos":[0,123],"source":"The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor."}]}],"pos":[25708,25951],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Reflection.ParameterInfo\"></xref> containing information that matches the signature of the method (or constructor) reflected by this instance.","nodes":[{"pos":[0,178],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterInfo\"&gt;&lt;/xref&gt;</ph> containing information that matches the signature of the method (or constructor) reflected by this instance.","source":"An array of type <xref href=\"System.Reflection.ParameterInfo\"></xref> containing information that matches the signature of the method (or constructor) reflected by this instance."}],"pos":[26129,26308],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetType\"></xref> method.","nodes":[{"pos":[0,108],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Type.GetType\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Type.GetType\"></xref> method."}],"pos":[27460,27569],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Type.GetType%2A> method gets the type of the current instance.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,194],"content":"The <xref:System.Type.GetType%2A> method gets the type of the current instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.GetType%2A&gt;</ph> method gets the type of the current instance.","pos":[0,79],"source":"The <xref:System.Type.GetType%2A> method gets the type of the current instance."}]}],"pos":[27580,27779],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object.","nodes":[{"pos":[0,42],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Type\"></xref> object."}],"pos":[27900,27943],"yaml":true},{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","nodes":[{"pos":[0,109],"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","pos":[0,109]}]}],"pos":[29308,29418],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,183],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[109,183],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[29429,29613],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[29780,29812],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[29872,29920],"yaml":true},{"content":"A pointer to the requested type information object.","nodes":[{"pos":[0,51],"content":"A pointer to the requested type information object.","nodes":[{"content":"A pointer to the requested type information object.","pos":[0,51]}]}],"pos":[29983,30035],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[31305,31398],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,188],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[109,188],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[31409,31598],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","nodes":[{"pos":[0,178],"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","pos":[0,178],"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.","pos":[0,138]},{"content":"This parameter is passed uninitialized.","pos":[139,178]}]}]}],"pos":[31749,31928],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"></xref> method."}],"pos":[33218,33374],"yaml":true},{"content":"The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.","nodes":[{"pos":[0,150],"content":"The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> method invokes the method or constructor represented by this object, using the specified parameters.","pos":[0,150],"source":"The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters."}]}],"pos":[33385,33536],"yaml":true,"extradata":"MT"},{"content":"The instance that created this method.","nodes":[{"pos":[0,38],"content":"The instance that created this method.","nodes":[{"content":"The instance that created this method.","pos":[0,38]}]}],"pos":[33690,33729],"yaml":true},{"content":"An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, <code>parameters</code> should be `null`.  \n  \n If the method or constructor represented by this instance takes a `ref` parameter (`ByRef` in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is `null`. For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,253],"content":"An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, <code>parameters</code> should be `null`.","nodes":[{"content":"An argument list for the invoked method or constructor.","pos":[0,55]},{"content":"This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.","pos":[56,183]},{"content":"If there are no parameters, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parameters</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be <ph id=\"ph2\">`null`</ph>.","pos":[184,253],"source":" If there are no parameters, <code>parameters</code> should be `null`."}]},{"pos":[260,753],"content":"If the method or constructor represented by this instance takes a `ref` parameter (`ByRef` in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is `null`. For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"If the method or constructor represented by this instance takes a <ph id=\"ph1\">`ref`</ph> parameter (<ph id=\"ph2\">`ByRef`</ph> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.","pos":[0,217],"source":"If the method or constructor represented by this instance takes a `ref` parameter (`ByRef` in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function."},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[218,343]},{"content":"For reference type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[344,394],"source":" For reference type elements, this value is `null`."},{"content":"For value type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[395,493],"source":" For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[33797,34555],"yaml":true},{"content":"An instance of the class associated with the constructor.","nodes":[{"pos":[0,57],"content":"An instance of the class associated with the constructor.","nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]}],"pos":[34612,34670],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.","nodes":[{"pos":[0,244],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method."}],"pos":[36322,36567],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,370],"content":"The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> method invokes the constructor reflected by this <ph id=\"ph2\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> object with the specified arguments, under the constraints of the specified <ph id=\"ph3\">&lt;xref:System.Reflection.Binder&gt;</ph> object.","pos":[0,255],"source":"The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object."}]}],"pos":[36578,36953],"yaml":true,"extradata":"MT"},{"content":"The instance that created this method.","nodes":[{"pos":[0,38],"content":"The instance that created this method.","nodes":[{"content":"The instance that created this method.","pos":[0,38]}]}],"pos":[37225,37264],"yaml":true},{"content":"One of the `BindingFlags` values that specifies the type of binding.","nodes":[{"pos":[0,68],"content":"One of the <ph id=\"ph1\">`BindingFlags`</ph> values that specifies the type of binding.","source":"One of the `BindingFlags` values that specifies the type of binding."}],"pos":[37347,37416],"yaml":true},{"content":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.","nodes":[{"pos":[0,212],"content":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.","nodes":[{"content":"A <ph id=\"ph1\">`Binder`</ph> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,140],"source":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, then <ph id=\"ph3\">`Binder.DefaultBinding`</ph> is used.","pos":[141,212],"source":" If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used."}]}],"pos":[37489,37702],"yaml":true},{"content":"An array of type `Object` used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in <code>Object[] parameters = new Object[0]</code>. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is `null`. For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"pos":[0,568],"content":"An array of type `Object` used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in <code>Object[] parameters = new Object[0]</code>. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is `null`. For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type.","nodes":[{"content":"An array of type <ph id=\"ph1\">`Object`</ph> used to match the number, order, and type of the parameters for this constructor, under the constraints of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,153],"source":"An array of type `Object` used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>."},{"content":"If this constructor does not require parameters, pass an array with zero elements, as in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Object[] parameters = new Object[0]</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[154,292],"source":" If this constructor does not require parameters, pass an array with zero elements, as in <code>Object[] parameters = new Object[0]</code>."},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[293,418]},{"content":"For reference type elements, this value is <ph id=\"ph1\">`null`</ph>.","pos":[419,469],"source":" For reference type elements, this value is `null`."},{"content":"For value type elements, this value is 0, 0.0, or <ph id=\"ph1\">`false`</ph>, depending on the specific element type.","pos":[470,568],"source":" For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type."}]}],"pos":[37770,38339],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"pos":[0,209],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object used to govern the coercion of types.","pos":[0,100],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object used to govern the coercion of types."},{"content":"If this is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[101,209],"source":" If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."}]}],"pos":[38421,38631],"yaml":true},{"content":"An instance of the class associated with the constructor.","nodes":[{"pos":[0,57],"content":"An instance of the class associated with the constructor.","nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]}],"pos":[38688,38746],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[40395,40459],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,178],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[109,178],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[40470,40649],"yaml":true,"extradata":"MT"},{"content":"An identifier for the member.","nodes":[{"pos":[0,29],"content":"An identifier for the member.","nodes":[{"content":"An identifier for the member.","pos":[0,29]}]}],"pos":[40911,40941],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[40999,41042],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[41102,41154],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[41215,41257],"yaml":true},{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,161],"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,161]}]}],"pos":[41324,41486],"yaml":true},{"content":"A pointer to the location where the result will be stored.","nodes":[{"pos":[0,58],"content":"A pointer to the location where the result will be stored.","nodes":[{"content":"A pointer to the location where the result will be stored.","pos":[0,58]}]}],"pos":[41552,41611],"yaml":true},{"content":"A pointer to a structure that contains exception information.","nodes":[{"pos":[0,61],"content":"A pointer to a structure that contains exception information.","nodes":[{"content":"A pointer to a structure that contains exception information.","pos":[0,61]}]}],"pos":[41677,41739],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[41803,41854],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsAbstract\"></xref> property.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsAbstract\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsAbstract\"></xref> property."}],"pos":[43013,43144],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,235],"content":"The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</ph> property gets a value indicating whether the method is abstract.","pos":[0,118],"source":"The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract."}]}],"pos":[43155,43395],"yaml":true,"extradata":"MT"},{"content":"`true` if the method is abstract; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the method is abstract; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the method is abstract; otherwise, `false`."}],"pos":[43508,43564],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsAssembly\"></xref> property.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsAssembly\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsAssembly\"></xref> property."}],"pos":[44727,44858],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,275],"content":"The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</ph> property gets a value indicating whether this method can be called by other classes in the same assembly","pos":[0,158],"source":"The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly"}]}],"pos":[44869,45149],"yaml":true,"extradata":"MT"},{"content":"`true` if this method can be called by other classes in the same assembly; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if this method can be called by other classes in the same assembly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method can be called by other classes in the same assembly; otherwise, `false`."}],"pos":[45262,45359],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsConstructor\"></xref> property.","nodes":[{"pos":[0,133],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsConstructor\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsConstructor\"></xref> property."}],"pos":[46540,46674],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,243],"content":"The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</ph> property gets a value indicating whether the method is a constructor.","pos":[0,126],"source":"The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor."}]}],"pos":[46685,46933],"yaml":true,"extradata":"MT"},{"content":"`true` if this method is a constructor; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if this method is a constructor; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method is a constructor; otherwise, `false`."}],"pos":[47049,47111],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method."}],"pos":[48398,48554],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,275],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</ph> member indicates whether one or more instances of the <ph id=\"ph2\">`attributeType`</ph> parameter are applied to this member.","source":"The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member."}],"pos":[48565,48845],"yaml":true,"extradata":"MT"},{"content":"The `Type` object to which the custom attributes are applied.","nodes":[{"pos":[0,61],"content":"The <ph id=\"ph1\">`Type`</ph> object to which the custom attributes are applied.","source":"The `Type` object to which the custom attributes are applied."}],"pos":[49009,49071],"yaml":true},{"content":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`."}],"pos":[49135,49230],"yaml":true},{"content":"`true` if one or more instance of the <code>attributeType</code> parameter is applied to this member; otherwise, `false`.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">`true`</ph> if one or more instance of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is applied to this member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if one or more instance of the <code>attributeType</code> parameter is applied to this member; otherwise, `false`."}],"pos":[49288,49412],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamily\"></xref> property.","nodes":[{"pos":[0,128],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsFamily\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamily\"></xref> property."}],"pos":[50562,50691],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,305],"content":"The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;</ph> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.","pos":[0,188],"source":"The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes."}]}],"pos":[50702,51012],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, `false`."}],"pos":[51123,51259],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamilyAndAssembly\"></xref> property.","nodes":[{"pos":[0,139],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsFamilyAndAssembly\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamilyAndAssembly\"></xref> property."}],"pos":[52474,52614],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,330],"content":"The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</ph> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly","pos":[0,213],"source":"The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly"}]}],"pos":[52625,52960],"yaml":true,"extradata":"MT"},{"content":"`true` if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, `false`.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">`true`</ph> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, `false`."}],"pos":[53082,53246],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamilyOrAssembly\"></xref> property.","nodes":[{"pos":[0,138],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsFamilyOrAssembly\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamilyOrAssembly\"></xref> property."}],"pos":[54466,54605],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,325],"content":"The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</ph> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.","pos":[0,208],"source":"The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly."}]}],"pos":[54616,54946],"yaml":true,"extradata":"MT"},{"content":"`true` if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, `false`.","nodes":[{"pos":[0,194],"content":"<ph id=\"ph1\">`true`</ph> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, `false`."}],"pos":[55067,55264],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFinal\"></xref> property.","nodes":[{"pos":[0,127],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsFinal\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFinal\"></xref> property."}],"pos":[56417,56545],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,232],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;</ph> property gets a value indicating whether this method is <ph id=\"ph2\">`final`</ph>.","source":"The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`."}],"pos":[56556,56793],"yaml":true,"extradata":"MT"},{"content":"`true` if this method is `final`; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if this method is <ph id=\"ph2\">`final`</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this method is `final`; otherwise, `false`."}],"pos":[56903,56959],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsHideBySig\"></xref> property.","nodes":[{"pos":[0,131],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsHideBySig\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsHideBySig\"></xref> property."}],"pos":[58125,58257],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,307],"content":"The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</ph> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.","pos":[0,190],"source":"The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class."}]}],"pos":[58268,58580],"yaml":true,"extradata":"MT"},{"content":"`true` if the member is hidden by signature; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the member is hidden by signature; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the member is hidden by signature; otherwise, `false`."}],"pos":[58694,58761],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsPrivate\"></xref> property.","nodes":[{"pos":[0,129],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsPrivate\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsPrivate\"></xref> property."}],"pos":[59919,60049],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,234],"content":"The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</ph> property gets a value indicating whether this member is private.","pos":[0,117],"source":"The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private."}]}],"pos":[60060,60299],"yaml":true,"extradata":"MT"},{"content":"`true` if access to this method is restricted to other members of the class itself; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if access to this method is restricted to other members of the class itself; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if access to this method is restricted to other members of the class itself; otherwise, `false`."}],"pos":[60411,60517],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsPublic\"></xref> property.","nodes":[{"pos":[0,128],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsPublic\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsPublic\"></xref> property."}],"pos":[61667,61796],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,232],"content":"The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;</ph> property gets a value indicating whether this method is public.","pos":[0,115],"source":"The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public."}]}],"pos":[61807,62044],"yaml":true,"extradata":"MT"},{"content":"`true` if this method is public; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if this method is public; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method is public; otherwise, `false`."}],"pos":[62155,62210],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsSpecialName\"></xref> property.","nodes":[{"pos":[0,133],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsSpecialName\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsSpecialName\"></xref> property."}],"pos":[63389,63523],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,246],"content":"The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</ph> property gets a value indicating whether this method has a special name.","pos":[0,129],"source":"The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name."}]}],"pos":[63534,63785],"yaml":true,"extradata":"MT"},{"content":"`true` if this method has a special name; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if this method has a special name; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method has a special name; otherwise, `false`."}],"pos":[63901,63965],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsStatic\"></xref> property.","nodes":[{"pos":[0,128],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsStatic\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsStatic\"></xref> property."}],"pos":[65119,65248],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,233],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;</ph> property gets a value indicating whether the method is <ph id=\"ph2\">`static`</ph>.","source":"The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`."}],"pos":[65259,65497],"yaml":true,"extradata":"MT"},{"content":"`true` if this method is `static`; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if this method is <ph id=\"ph2\">`static`</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this method is `static`; otherwise, `false`."}],"pos":[65608,65665],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsVirtual\"></xref> property.","nodes":[{"pos":[0,129],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.IsVirtual\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsVirtual\"></xref> property."}],"pos":[66820,66950],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,235],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</ph> property gets a value indicating whether the method is <ph id=\"ph2\">`virtual`</ph>.","source":"The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`."}],"pos":[66961,67201],"yaml":true,"extradata":"MT"},{"content":"`true` if this method is `virtual`; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if this method is <ph id=\"ph2\">`virtual`</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this method is `virtual`; otherwise, `false`."}],"pos":[67313,67371],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.MemberType\"></xref> property.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.MemberType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.MemberType\"></xref> property."}],"pos":[68533,68664],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,304],"content":"The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> property gets a <ph id=\"ph2\">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value indicating the type of the member — method, constructor, event, and so on.","pos":[0,187],"source":"The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on."}]}],"pos":[68675,68984],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating the type of member.","nodes":[{"pos":[0,99],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;&lt;/xref&gt;</ph> values indicating the type of member.","source":"One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating the type of member."}],"pos":[69137,69237],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.MethodHandle\"></xref> property.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase.MethodHandle\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.MethodHandle\"></xref> property."}],"pos":[70412,70545],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,248],"content":"The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</ph> property gets a handle to the internal metadata representation of a method.","pos":[0,131],"source":"The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method."}]}],"pos":[70556,70809],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.RuntimeMethodHandle\"></xref> object.","nodes":[{"pos":[0,57],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.RuntimeMethodHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.RuntimeMethodHandle\"></xref> object."}],"pos":[70951,71009],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.Name\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property."}],"pos":[72138,72263],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,210],"content":"The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property gets the name of the current member.","pos":[0,93],"source":"The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."}]}],"pos":[72274,72489],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> object containing the name of this member.","nodes":[{"pos":[0,79],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object containing the name of this member.","source":"A <xref href=\"System.String\"></xref> object containing the name of this member."}],"pos":[72597,72677],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.ReflectedType\"></xref> property.","nodes":[{"pos":[0,133],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.ReflectedType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.ReflectedType\"></xref> property."}],"pos":[73852,73986],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,254],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> property gets the class object that was used to obtain this <ph id=\"ph2\">`MemberInfo`</ph> object.","source":"The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object."}],"pos":[73997,74256],"yaml":true,"extradata":"MT"},{"content":"The `Type` object that was used to obtain this `MemberInfo` object.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">`Type`</ph> object that was used to obtain this <ph id=\"ph2\">`MemberInfo`</ph> object.","source":"The `Type` object that was used to obtain this `MemberInfo` object."}],"pos":[74369,74437],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.ReturnType\"></xref> property.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo.ReturnType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.ReturnType\"></xref> property."}],"pos":[75603,75734],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,216],"content":"The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.ReturnType%2A&gt;</ph> property gets the return type of this method.","pos":[0,99],"source":"The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method."}]}],"pos":[75745,75966],"yaml":true,"extradata":"MT"},{"content":"The return type of this method.","nodes":[{"pos":[0,31],"content":"The return type of this method.","nodes":[{"content":"The return type of this method.","pos":[0,31]}]}],"pos":[76076,76108],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.ReturnTypeCustomAttributes\"></xref> property.","nodes":[{"pos":[0,146],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo.ReturnTypeCustomAttributes\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.ReturnTypeCustomAttributes\"></xref> property."}],"pos":[77367,77514],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,243],"content":"The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A&gt;</ph> property gets the custom attributes for the return type.","pos":[0,126],"source":"The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type."}]}],"pos":[77525,77773],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> object representing the custom attributes for the return type.","nodes":[{"pos":[0,129],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;&lt;/xref&gt;</ph> object representing the custom attributes for the return type.","source":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> object representing the custom attributes for the return type."}],"pos":[77968,78098],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.ToString\"></xref> method.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.ToString\"></xref> method."}],"pos":[79269,79381],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]}],"pos":[79392,79501],"yaml":true,"extradata":"MT"},{"content":"A string that represents the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,72],"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"A string that represents the current <xref href=\"System.Object\"></xref>."}],"pos":[79627,79700],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._MethodInfo\n  commentId: T:System.Runtime.InteropServices._MethodInfo\n  id: _MethodInfo\n  children:\n  - System.Runtime.InteropServices._MethodInfo.Attributes\n  - System.Runtime.InteropServices._MethodInfo.CallingConvention\n  - System.Runtime.InteropServices._MethodInfo.DeclaringType\n  - System.Runtime.InteropServices._MethodInfo.Equals(System.Object)\n  - System.Runtime.InteropServices._MethodInfo.GetBaseDefinition\n  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._MethodInfo.GetHashCode\n  - System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags\n  - System.Runtime.InteropServices._MethodInfo.GetParameters\n  - System.Runtime.InteropServices._MethodInfo.GetType\n  - System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])\n  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._MethodInfo.IsAbstract\n  - System.Runtime.InteropServices._MethodInfo.IsAssembly\n  - System.Runtime.InteropServices._MethodInfo.IsConstructor\n  - System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._MethodInfo.IsFamily\n  - System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly\n  - System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly\n  - System.Runtime.InteropServices._MethodInfo.IsFinal\n  - System.Runtime.InteropServices._MethodInfo.IsHideBySig\n  - System.Runtime.InteropServices._MethodInfo.IsPrivate\n  - System.Runtime.InteropServices._MethodInfo.IsPublic\n  - System.Runtime.InteropServices._MethodInfo.IsSpecialName\n  - System.Runtime.InteropServices._MethodInfo.IsStatic\n  - System.Runtime.InteropServices._MethodInfo.IsVirtual\n  - System.Runtime.InteropServices._MethodInfo.MemberType\n  - System.Runtime.InteropServices._MethodInfo.MethodHandle\n  - System.Runtime.InteropServices._MethodInfo.Name\n  - System.Runtime.InteropServices._MethodInfo.ReflectedType\n  - System.Runtime.InteropServices._MethodInfo.ReturnType\n  - System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes\n  - System.Runtime.InteropServices._MethodInfo.ToString\n  langs:\n  - csharp\n  name: _MethodInfo\n  nameWithType: _MethodInfo\n  fullName: System.Runtime.InteropServices._MethodInfo\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Exposes the public members of the <xref href=\"System.Reflection.MethodInfo\"></xref> class to unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface _MethodInfo\n  derivedClasses:\n  - System.Reflection.MethodInfo\n  implements: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.Attributes\n  commentId: P:System.Runtime.InteropServices._MethodInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _MethodInfo.Attributes\n  fullName: _MethodInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Attributes\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.\"\n  syntax:\n    content: public System.Reflection.MethodAttributes Attributes { get; }\n    return:\n      type: System.Reflection.MethodAttributes\n      description: One of the <xref href=\"System.Reflection.MethodAttributes\"></xref> values.\n  overload: System.Runtime.InteropServices._MethodInfo.Attributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention\n  commentId: P:System.Runtime.InteropServices._MethodInfo.CallingConvention\n  id: CallingConvention\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: CallingConvention\n  nameWithType: _MethodInfo.CallingConvention\n  fullName: _MethodInfo.CallingConvention\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.CallingConvention\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.\"\n  syntax:\n    content: public System.Reflection.CallingConventions CallingConvention { get; }\n    return:\n      type: System.Reflection.CallingConventions\n      description: One of the <xref href=\"System.Reflection.CallingConventions\"></xref> values.\n  overload: System.Runtime.InteropServices._MethodInfo.CallingConvention*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType\n  commentId: P:System.Runtime.InteropServices._MethodInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _MethodInfo.DeclaringType\n  fullName: _MethodInfo.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.DeclaringType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The `Type` object for the class that declares this member.\n  overload: System.Runtime.InteropServices._MethodInfo.DeclaringType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _MethodInfo.Equals(Object)\n  fullName: _MethodInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.Equals(System.Object)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetBaseDefinition\n  id: GetBaseDefinition\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetBaseDefinition()\n  nameWithType: _MethodInfo.GetBaseDefinition()\n  fullName: _MethodInfo.GetBaseDefinition()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.GetBaseDefinition\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetBaseDefinition ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object for the first implementation of this method.\n  overload: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)\n  fullName: _MethodInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: \"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.\"\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.\n  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: _MethodInfo.GetCustomAttributes(Type, Boolean)\n  fullName: _MethodInfo.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: \"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.\"\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _MethodInfo.GetHashCode()\n  fullName: _MethodInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.GetHashCode\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance.\n  overload: System.Runtime.InteropServices._MethodInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: _MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: _MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: An array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: The count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: An array allocated by the caller that receives the identifiers corresponding to the names.\n  overload: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags\n  id: GetMethodImplementationFlags\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetMethodImplementationFlags()\n  nameWithType: _MethodInfo.GetMethodImplementationFlags()\n  fullName: _MethodInfo.GetMethodImplementationFlags()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.GetMethodImplementationFlags\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.\"\n  syntax:\n    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: One of the <xref href=\"System.Reflection.MethodImplAttributes\"></xref> values.\n  overload: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetParameters\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetParameters\n  id: GetParameters\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: _MethodInfo.GetParameters()\n  fullName: _MethodInfo.GetParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.GetParameters\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.\"\n  syntax:\n    content: public System.Reflection.ParameterInfo[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: An array of type <xref href=\"System.Reflection.ParameterInfo\"></xref> containing information that matches the signature of the method (or constructor) reflected by this instance.\n  overload: System.Runtime.InteropServices._MethodInfo.GetParameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetType\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _MethodInfo.GetType()\n  fullName: _MethodInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Type.GetType\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Type.GetType%2A> method gets the type of the current instance.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object.\n  overload: System.Runtime.InteropServices._MethodInfo.GetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: _MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: _MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: A pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)\n  fullName: _MethodInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.\n  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])\n  commentId: M:System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])\n  id: Invoke(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: Invoke(Object, Object[])\n  nameWithType: _MethodInfo.Invoke(Object, Object[])\n  fullName: _MethodInfo.Invoke(Object, Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\"></xref> method.\n  remarks: The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.\n  syntax:\n    content: public object Invoke (object obj, object[] parameters);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance that created this method.\n    - id: parameters\n      type: System.Object[]\n      description: \"An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, <code>parameters</code> should be `null`.  \\n  \\n If the method or constructor represented by this instance takes a `ref` parameter (`ByRef` in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is `null`. For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\"\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Runtime.InteropServices._MethodInfo.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: _MethodInfo.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: _MethodInfo.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.\"\n  syntax:\n    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance that created this method.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the `BindingFlags` values that specifies the type of binding.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then `Binder.DefaultBinding` is used.\n    - id: parameters\n      type: System.Object[]\n      description: An array of type `Object` used to match the number, order, and type of the parameters for this constructor, under the constraints of <code>binder</code>. If this constructor does not require parameters, pass an array with zero elements, as in <code>Object[] parameters = new Object[0]</code>. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is `null`. For value type elements, this value is 0, 0.0, or `false`, depending on the specific element type.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> object used to govern the coercion of types. If this is `null`, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Runtime.InteropServices._MethodInfo.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: _MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: _MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: An identifier for the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: A pointer to the location where the result will be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: A pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._MethodInfo.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsAbstract\n  id: IsAbstract\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsAbstract\n  nameWithType: _MethodInfo.IsAbstract\n  fullName: _MethodInfo.IsAbstract\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsAbstract\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.\"\n  syntax:\n    content: public bool IsAbstract { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the method is abstract; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsAbstract*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsAssembly\n  id: IsAssembly\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsAssembly\n  nameWithType: _MethodInfo.IsAssembly\n  fullName: _MethodInfo.IsAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsAssembly\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly\"\n  syntax:\n    content: public bool IsAssembly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method can be called by other classes in the same assembly; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsAssembly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsConstructor\n  id: IsConstructor\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsConstructor\n  nameWithType: _MethodInfo.IsConstructor\n  fullName: _MethodInfo.IsConstructor\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsConstructor\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.\"\n  syntax:\n    content: public bool IsConstructor { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method is a constructor; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsConstructor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: _MethodInfo.IsDefined(Type, Boolean)\n  fullName: _MethodInfo.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The `Type` object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: \"`true` to search this member's inheritance chain to find the attributes; otherwise, `false`.\"\n    return:\n      type: System.Boolean\n      description: '`true` if one or more instance of the <code>attributeType</code> parameter is applied to this member; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsDefined*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamily\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsFamily\n  id: IsFamily\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsFamily\n  nameWithType: _MethodInfo.IsFamily\n  fullName: _MethodInfo.IsFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamily\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.\"\n  syntax:\n    content: public bool IsFamily { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsFamily*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly\n  id: IsFamilyAndAssembly\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsFamilyAndAssembly\n  nameWithType: _MethodInfo.IsFamilyAndAssembly\n  fullName: _MethodInfo.IsFamilyAndAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamilyAndAssembly\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly\"\n  syntax:\n    content: public bool IsFamilyAndAssembly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly\n  id: IsFamilyOrAssembly\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsFamilyOrAssembly\n  nameWithType: _MethodInfo.IsFamilyOrAssembly\n  fullName: _MethodInfo.IsFamilyOrAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFamilyOrAssembly\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.\"\n  syntax:\n    content: public bool IsFamilyOrAssembly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsFinal\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsFinal\n  id: IsFinal\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsFinal\n  nameWithType: _MethodInfo.IsFinal\n  fullName: _MethodInfo.IsFinal\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsFinal\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.\"\n  syntax:\n    content: public bool IsFinal { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method is `final`; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsFinal*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsHideBySig\n  id: IsHideBySig\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsHideBySig\n  nameWithType: _MethodInfo.IsHideBySig\n  fullName: _MethodInfo.IsHideBySig\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsHideBySig\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.\"\n  syntax:\n    content: public bool IsHideBySig { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the member is hidden by signature; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsHideBySig*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsPrivate\n  id: IsPrivate\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsPrivate\n  nameWithType: _MethodInfo.IsPrivate\n  fullName: _MethodInfo.IsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsPrivate\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.\"\n  syntax:\n    content: public bool IsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to this method is restricted to other members of the class itself; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsPrivate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsPublic\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsPublic\n  id: IsPublic\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: _MethodInfo.IsPublic\n  fullName: _MethodInfo.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsPublic\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public.\"\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method is public; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _MethodInfo.IsSpecialName\n  fullName: _MethodInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsSpecialName\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method has a special name; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsSpecialName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsStatic\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsStatic\n  id: IsStatic\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsStatic\n  nameWithType: _MethodInfo.IsStatic\n  fullName: _MethodInfo.IsStatic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsStatic\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.\"\n  syntax:\n    content: public bool IsStatic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method is `static`; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsStatic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual\n  commentId: P:System.Runtime.InteropServices._MethodInfo.IsVirtual\n  id: IsVirtual\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: IsVirtual\n  nameWithType: _MethodInfo.IsVirtual\n  fullName: _MethodInfo.IsVirtual\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.IsVirtual\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.\"\n  syntax:\n    content: public bool IsVirtual { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this method is `virtual`; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._MethodInfo.IsVirtual*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.MemberType\n  commentId: P:System.Runtime.InteropServices._MethodInfo.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _MethodInfo.MemberType\n  fullName: _MethodInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.MemberType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating the type of member.\n  overload: System.Runtime.InteropServices._MethodInfo.MemberType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle\n  commentId: P:System.Runtime.InteropServices._MethodInfo.MethodHandle\n  id: MethodHandle\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: MethodHandle\n  nameWithType: _MethodInfo.MethodHandle\n  fullName: _MethodInfo.MethodHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodBase.MethodHandle\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.\"\n  syntax:\n    content: public RuntimeMethodHandle MethodHandle { get; }\n    return:\n      type: System.RuntimeMethodHandle\n      description: A <xref href=\"System.RuntimeMethodHandle\"></xref> object.\n  overload: System.Runtime.InteropServices._MethodInfo.MethodHandle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.Name\n  commentId: P:System.Runtime.InteropServices._MethodInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _MethodInfo.Name\n  fullName: _MethodInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> object containing the name of this member.\n  overload: System.Runtime.InteropServices._MethodInfo.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType\n  commentId: P:System.Runtime.InteropServices._MethodInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _MethodInfo.ReflectedType\n  fullName: _MethodInfo.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.ReflectedType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The `Type` object that was used to obtain this `MemberInfo` object.\n  overload: System.Runtime.InteropServices._MethodInfo.ReflectedType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.ReturnType\n  commentId: P:System.Runtime.InteropServices._MethodInfo.ReturnType\n  id: ReturnType\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: ReturnType\n  nameWithType: _MethodInfo.ReturnType\n  fullName: _MethodInfo.ReturnType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.ReturnType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method.\"\n  syntax:\n    content: public Type ReturnType { get; }\n    return:\n      type: System.Type\n      description: The return type of this method.\n  overload: System.Runtime.InteropServices._MethodInfo.ReturnType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes\n  commentId: P:System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes\n  id: ReturnTypeCustomAttributes\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: ReturnTypeCustomAttributes\n  nameWithType: _MethodInfo.ReturnTypeCustomAttributes\n  fullName: _MethodInfo.ReturnTypeCustomAttributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MethodInfo.ReturnTypeCustomAttributes\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type.\"\n  syntax:\n    content: public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }\n    return:\n      type: System.Reflection.ICustomAttributeProvider\n      description: An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> object representing the custom attributes for the return type.\n  overload: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._MethodInfo.ToString\n  commentId: M:System.Runtime.InteropServices._MethodInfo.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._MethodInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _MethodInfo.ToString()\n  fullName: _MethodInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.ToString\"></xref> method.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code.\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Object\"></xref>.\n  overload: System.Runtime.InteropServices._MethodInfo.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Runtime.InteropServices._MethodInfo.Attributes\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _MethodInfo.Attributes\n  fullName: _MethodInfo.Attributes\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: CallingConvention\n  nameWithType: _MethodInfo.CallingConvention\n  fullName: _MethodInfo.CallingConvention\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _MethodInfo.DeclaringType\n  fullName: _MethodInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _MethodInfo.Equals(Object)\n  fullName: _MethodInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetBaseDefinition()\n  nameWithType: _MethodInfo.GetBaseDefinition()\n  fullName: _MethodInfo.GetBaseDefinition()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)\n  fullName: _MethodInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: _MethodInfo.GetCustomAttributes(Type, Boolean)\n  fullName: _MethodInfo.GetCustomAttributes(Type, Boolean)\n- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _MethodInfo.GetHashCode()\n  fullName: _MethodInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: _MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: _MethodInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  nameWithType: _MethodInfo.GetMethodImplementationFlags()\n  fullName: _MethodInfo.GetMethodImplementationFlags()\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Runtime.InteropServices._MethodInfo.GetParameters\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetParameters()\n  nameWithType: _MethodInfo.GetParameters()\n  fullName: _MethodInfo.GetParameters()\n- uid: System.Reflection.ParameterInfo\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Reflection.ParameterInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo[]\n  nameWithType: ParameterInfo[]\n  fullName: System.Reflection.ParameterInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._MethodInfo.GetType\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetType()\n  nameWithType: _MethodInfo.GetType()\n  fullName: _MethodInfo.GetType()\n- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: _MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: _MethodInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)\n  fullName: _MethodInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Invoke(Object, Object[])\n  nameWithType: _MethodInfo.Invoke(Object, Object[])\n  fullName: _MethodInfo.Invoke(Object, Object[])\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: _MethodInfo.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: _MethodInfo.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: _MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: _MethodInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsAbstract\n  nameWithType: _MethodInfo.IsAbstract\n  fullName: _MethodInfo.IsAbstract\n- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: _MethodInfo.IsAssembly\n  fullName: _MethodInfo.IsAssembly\n- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsConstructor\n  nameWithType: _MethodInfo.IsConstructor\n  fullName: _MethodInfo.IsConstructor\n- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: _MethodInfo.IsDefined(Type, Boolean)\n  fullName: _MethodInfo.IsDefined(Type, Boolean)\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamily\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: _MethodInfo.IsFamily\n  fullName: _MethodInfo.IsFamily\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: _MethodInfo.IsFamilyAndAssembly\n  fullName: _MethodInfo.IsFamilyAndAssembly\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: _MethodInfo.IsFamilyOrAssembly\n  fullName: _MethodInfo.IsFamilyOrAssembly\n- uid: System.Runtime.InteropServices._MethodInfo.IsFinal\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFinal\n  nameWithType: _MethodInfo.IsFinal\n  fullName: _MethodInfo.IsFinal\n- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: _MethodInfo.IsHideBySig\n  fullName: _MethodInfo.IsHideBySig\n- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: _MethodInfo.IsPrivate\n  fullName: _MethodInfo.IsPrivate\n- uid: System.Runtime.InteropServices._MethodInfo.IsPublic\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: _MethodInfo.IsPublic\n  fullName: _MethodInfo.IsPublic\n- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _MethodInfo.IsSpecialName\n  fullName: _MethodInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._MethodInfo.IsStatic\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: _MethodInfo.IsStatic\n  fullName: _MethodInfo.IsStatic\n- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsVirtual\n  nameWithType: _MethodInfo.IsVirtual\n  fullName: _MethodInfo.IsVirtual\n- uid: System.Runtime.InteropServices._MethodInfo.MemberType\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _MethodInfo.MemberType\n  fullName: _MethodInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: MethodHandle\n  nameWithType: _MethodInfo.MethodHandle\n  fullName: _MethodInfo.MethodHandle\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Runtime.InteropServices._MethodInfo.Name\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Name\n  nameWithType: _MethodInfo.Name\n  fullName: _MethodInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _MethodInfo.ReflectedType\n  fullName: _MethodInfo.ReflectedType\n- uid: System.Runtime.InteropServices._MethodInfo.ReturnType\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ReturnType\n  nameWithType: _MethodInfo.ReturnType\n  fullName: _MethodInfo.ReturnType\n- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ReturnTypeCustomAttributes\n  nameWithType: _MethodInfo.ReturnTypeCustomAttributes\n  fullName: _MethodInfo.ReturnTypeCustomAttributes\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n- uid: System.Runtime.InteropServices._MethodInfo.ToString\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: _MethodInfo.ToString()\n  fullName: _MethodInfo.ToString()\n- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _MethodInfo.GetCustomAttributes\n  fullName: _MethodInfo.GetCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.Invoke*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _MethodInfo.Invoke\n  fullName: _MethodInfo.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.Attributes*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _MethodInfo.Attributes\n  fullName: _MethodInfo.Attributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: CallingConvention\n  nameWithType: _MethodInfo.CallingConvention\n  fullName: _MethodInfo.CallingConvention\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _MethodInfo.DeclaringType\n  fullName: _MethodInfo.DeclaringType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.Equals*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Equals\n  nameWithType: _MethodInfo.Equals\n  fullName: _MethodInfo.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetBaseDefinition\n  nameWithType: _MethodInfo.GetBaseDefinition\n  fullName: _MethodInfo.GetBaseDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _MethodInfo.GetHashCode\n  fullName: _MethodInfo.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _MethodInfo.GetIDsOfNames\n  fullName: _MethodInfo.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetMethodImplementationFlags\n  nameWithType: _MethodInfo.GetMethodImplementationFlags\n  fullName: _MethodInfo.GetMethodImplementationFlags\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetParameters*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetParameters\n  nameWithType: _MethodInfo.GetParameters\n  fullName: _MethodInfo.GetParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetType*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetType\n  nameWithType: _MethodInfo.GetType\n  fullName: _MethodInfo.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _MethodInfo.GetTypeInfo\n  fullName: _MethodInfo.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _MethodInfo.GetTypeInfoCount\n  fullName: _MethodInfo.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsAbstract\n  nameWithType: _MethodInfo.IsAbstract\n  fullName: _MethodInfo.IsAbstract\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsAssembly\n  nameWithType: _MethodInfo.IsAssembly\n  fullName: _MethodInfo.IsAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsConstructor\n  nameWithType: _MethodInfo.IsConstructor\n  fullName: _MethodInfo.IsConstructor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsDefined*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: _MethodInfo.IsDefined\n  fullName: _MethodInfo.IsDefined\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamily*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFamily\n  nameWithType: _MethodInfo.IsFamily\n  fullName: _MethodInfo.IsFamily\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: _MethodInfo.IsFamilyAndAssembly\n  fullName: _MethodInfo.IsFamilyAndAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: _MethodInfo.IsFamilyOrAssembly\n  fullName: _MethodInfo.IsFamilyOrAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsFinal*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsFinal\n  nameWithType: _MethodInfo.IsFinal\n  fullName: _MethodInfo.IsFinal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: _MethodInfo.IsHideBySig\n  fullName: _MethodInfo.IsHideBySig\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsPrivate\n  nameWithType: _MethodInfo.IsPrivate\n  fullName: _MethodInfo.IsPrivate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsPublic*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: _MethodInfo.IsPublic\n  fullName: _MethodInfo.IsPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _MethodInfo.IsSpecialName\n  fullName: _MethodInfo.IsSpecialName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsStatic*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsStatic\n  nameWithType: _MethodInfo.IsStatic\n  fullName: _MethodInfo.IsStatic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: IsVirtual\n  nameWithType: _MethodInfo.IsVirtual\n  fullName: _MethodInfo.IsVirtual\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.MemberType*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _MethodInfo.MemberType\n  fullName: _MethodInfo.MemberType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: MethodHandle\n  nameWithType: _MethodInfo.MethodHandle\n  fullName: _MethodInfo.MethodHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.Name*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: Name\n  nameWithType: _MethodInfo.Name\n  fullName: _MethodInfo.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _MethodInfo.ReflectedType\n  fullName: _MethodInfo.ReflectedType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.ReturnType*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ReturnType\n  nameWithType: _MethodInfo.ReturnType\n  fullName: _MethodInfo.ReturnType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ReturnTypeCustomAttributes\n  nameWithType: _MethodInfo.ReturnTypeCustomAttributes\n  fullName: _MethodInfo.ReturnTypeCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n- uid: System.Runtime.InteropServices._MethodInfo.ToString*\n  parent: System.Runtime.InteropServices._MethodInfo\n  isExternal: false\n  name: ToString\n  nameWithType: _MethodInfo.ToString\n  fullName: _MethodInfo.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_MethodInfo.xml\n"}