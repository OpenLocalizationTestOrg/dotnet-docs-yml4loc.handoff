{"nodes":[{"content":"Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.","nodes":[{"pos":[0,141],"content":"Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.","nodes":[{"content":"Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.","pos":[0,141]}]}],"pos":[639,781],"yaml":true},{"content":"An encoding maps a Unicode character to an encoded sequence of bytes. A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class. Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> or <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> method.  \n  \n An encoding operation can fail if the input character cannot be represented by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.  \n  \n When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.  \n  \n <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework. They support the following three kinds of fallback handling mechanisms:  \n  \n-   Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent. For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Ã† (U+00C6) to AE (U+0041 + U+0045). A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman). The .NET Framework does not provide any public best-fit fallback implementations.  \n  \n-   Replacement fallback, which replaces each character that cannot be encoded with a predefined string. The .NET Framework provides a predefined replacement fallback handler. The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character (\"?\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD). You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor. After the substitute string is emitted, the encoding operation continues converting the remainder of the input.  \n  \n-   Exception fallback, which throws an exception when a character cannot be encoded. The .NET Framework provides a predefined exception fallback handler. The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.  \n  \n If you choose to implement a custom solution, you must override the following abstract members of the <xref:System.Text.EncoderFallback> class:  \n  \n-   The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>. Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.  \n  \n-   The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return. For an exception fallback handler, its value should be zero.  \n  \n For more information about encoding, decoding, and fallback strategies, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).","nodes":[{"pos":[0,559],"content":"An encoding maps a Unicode character to an encoded sequence of bytes. A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class. Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> or <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> method.","nodes":[{"content":"An encoding maps a Unicode character to an encoded sequence of bytes. A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class. Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> or <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> method.","pos":[0,559],"nodes":[{"content":"An encoding maps a Unicode character to an encoded sequence of bytes.","pos":[0,69]},{"content":"A particular encoding is represented by a type that is derived from the <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> class.","pos":[70,176],"source":" A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class."},{"content":"Specifically, a character is encoded to a byte sequence by calling the encoding type's <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName&gt;</ph> method, and the byte sequence is decoded to a character array or a string by calling the <ph id=\"ph2\">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=fullName&gt;</ph> method.","pos":[177,559],"source":" Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> or <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> method."}]}]},{"pos":[566,810],"content":"An encoding operation can fail if the input character cannot be represented by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.","nodes":[{"content":"An encoding operation can fail if the input character cannot be represented by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.","pos":[0,244],"nodes":[{"content":"An encoding operation can fail if the input character cannot be represented by the encoding.","pos":[0,92]},{"content":"For example, an <ph id=\"ph1\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.","pos":[93,244],"source":" For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F."}]}]},{"pos":[817,1160],"content":"When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.","nodes":[{"content":"When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.","pos":[0,343],"nodes":[{"content":"When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.","pos":[0,124]},{"content":"Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> classes.","pos":[125,343],"source":" Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes."}]}]},{"pos":[1167,1397],"content":"<xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework. They support the following three kinds of fallback handling mechanisms:","nodes":[{"content":"<xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework. They support the following three kinds of fallback handling mechanisms:","pos":[0,230],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> are the base classes for all encoding fallback handlers in the .NET Framework.","pos":[0,158],"source":"<xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework."},{"content":"They support the following three kinds of fallback handling mechanisms:","pos":[159,230]}]}]},{"pos":[1407,1870],"content":"Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent. For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Ã† (U+00C6) to AE (U+0041 + U+0045). A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman). The .NET Framework does not provide any public best-fit fallback implementations.","nodes":[{"content":"Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent. For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Ã† (U+00C6) to AE (U+0041 + U+0045). A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman). The .NET Framework does not provide any public best-fit fallback implementations.","pos":[0,463],"nodes":[{"content":"Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent.","pos":[0,107]},{"content":"For example, a best-fit fallback handler for the <ph id=\"ph1\">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class might map Ã† (U+00C6) to AE (U+0041 + U+0045).","pos":[108,241],"source":" For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Ã† (U+00C6) to AE (U+0041 + U+0045)."},{"content":"A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman).","pos":[242,381]},{"content":"The .NET Framework does not provide any public best-fit fallback implementations.","pos":[382,463]}]}]},{"pos":[1880,2553],"content":"Replacement fallback, which replaces each character that cannot be encoded with a predefined string. The .NET Framework provides a predefined replacement fallback handler. The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character (\"?\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD). You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor. After the substitute string is emitted, the encoding operation continues converting the remainder of the input.","nodes":[{"content":"Replacement fallback, which replaces each character that cannot be encoded with a predefined string. The .NET Framework provides a predefined replacement fallback handler. The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character (\"?\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD). You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor. After the substitute string is emitted, the encoding operation continues converting the remainder of the input.","pos":[0,673],"nodes":[{"content":"Replacement fallback, which replaces each character that cannot be encoded with a predefined string.","pos":[0,100]},{"content":"The .NET Framework provides a predefined replacement fallback handler.","pos":[101,171]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> class replaces each byte sequence that cannot be decoded with a question mark character (\"?\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD).","pos":[172,363],"source":" The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character (\"?\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD)."},{"content":"You can customize the replacement string by specifying a substitute in the call to the <ph id=\"ph1\">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor.","pos":[364,561],"source":" You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor."},{"content":"After the substitute string is emitted, the encoding operation continues converting the remainder of the input.","pos":[562,673]}]}]},{"pos":[2563,2902],"content":"Exception fallback, which throws an exception when a character cannot be encoded. The .NET Framework provides a predefined exception fallback handler. The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.","nodes":[{"content":"Exception fallback, which throws an exception when a character cannot be encoded. The .NET Framework provides a predefined exception fallback handler. The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.","pos":[0,339],"nodes":[{"content":"Exception fallback, which throws an exception when a character cannot be encoded.","pos":[0,81]},{"content":"The .NET Framework provides a predefined exception fallback handler.","pos":[82,150]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> class throws an <ph id=\"ph2\">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> when an invalid character is encountered, and the encoding operation terminates.","pos":[151,339],"source":" The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates."}]}]},{"pos":[2909,3052],"content":"If you choose to implement a custom solution, you must override the following abstract members of the <xref:System.Text.EncoderFallback> class:","nodes":[{"content":"If you choose to implement a custom solution, you must override the following abstract members of the <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback&gt;</ph> class:","pos":[0,143],"source":"If you choose to implement a custom solution, you must override the following abstract members of the <xref:System.Text.EncoderFallback> class:"}]},{"pos":[3062,3434],"content":"The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>. Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.","nodes":[{"content":"The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>. Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.","pos":[0,372],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> method, which returns a class instance derived from <ph id=\"ph2\">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>.","pos":[0,156],"source":"The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>."},{"content":"Depending on the type of fallback handler that you are developing, the <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation is responsible for performing the mapping or replacement, or for throwing the exception.","pos":[157,372],"source":" Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception."}]}]},{"pos":[3444,3661],"content":"The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return. For an exception fallback handler, its value should be zero.","nodes":[{"content":"The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return. For an exception fallback handler, its value should be zero.","pos":[0,217],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback.MaxCharCount%2A&gt;</ph> property, which returns the maximum number of characters that the fallback implementation can return.","pos":[0,156],"source":"The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return."},{"content":"For an exception fallback handler, its value should be zero.","pos":[157,217]}]}]},{"pos":[3668,3837],"content":"For more information about encoding, decoding, and fallback strategies, see <bpt id=\"p1\">[</bpt>Character Encoding in the .NET Framework<ept id=\"p1\">](~/docs/standard/base-types/character-encoding.md)</ept>.","source":"For more information about encoding, decoding, and fallback strategies, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md)."}],"pos":[792,4654],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Text.EncoderFallback\"></xref> class.","nodes":[{"pos":[0,89],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderFallback\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Text.EncoderFallback\"></xref> class."}],"pos":[6496,6586],"yaml":true},{"content":"When overridden in a derived class, initializes a new instance of the <xref href=\"System.Text.EncoderFallbackBuffer\"></xref> class.","nodes":[{"pos":[0,131],"content":"When overridden in a derived class, initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderFallbackBuffer\"&gt;&lt;/xref&gt;</ph> class.","source":"When overridden in a derived class, initializes a new instance of the <xref href=\"System.Text.EncoderFallbackBuffer\"></xref> class."}],"pos":[8110,8242],"yaml":true},{"content":"This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation. For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.  \n  \n The<xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode. The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.","nodes":[{"pos":[0,601],"content":"This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation. For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.","nodes":[{"content":"This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation. For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.","pos":[0,601],"nodes":[{"content":"This method returns an object derived from <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> that is responsible for performing the fallback operation.","pos":[0,142],"source":"This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation."},{"content":"For example, of the predefined <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback&gt;</ph> implementations in the .NET Framework, the <ph id=\"ph2\">&lt;xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName&gt;</ph> method returns an <ph id=\"ph3\">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> object, and the <ph id=\"ph4\">&lt;xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName&gt;</ph> method returns an <ph id=\"ph5\">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> object.","pos":[143,601],"source":" For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object."}]}]},{"pos":[608,998],"content":"The<xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode. The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.","nodes":[{"content":"The<xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode. The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.","pos":[0,390],"nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> method is called by an encoder when it encounters the first character that it is unable to encode.","pos":[0,160],"source":"The<xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.","pos":[161,390],"source":" The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded."}]}]}],"pos":[8253,9256],"yaml":true,"extradata":"MT"},{"content":"An object that provides a fallback buffer for an encoder.","nodes":[{"pos":[0,57],"content":"An object that provides a fallback buffer for an encoder.","nodes":[{"content":"An object that provides a fallback buffer for an encoder.","pos":[0,57]}]}],"pos":[9450,9508],"yaml":true},{"content":"Gets an object that throws an exception when an input character cannot be encoded.","nodes":[{"pos":[0,82],"content":"Gets an object that throws an exception when an input character cannot be encoded.","nodes":[{"content":"Gets an object that throws an exception when an input character cannot be encoded.","pos":[0,82]}]}],"pos":[10953,11036],"yaml":true},{"content":"A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class. The default value is a <xref href=\"System.Text.EncoderExceptionFallback\"></xref> object.","nodes":[{"pos":[0,168],"content":"A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class. The default value is a <xref href=\"System.Text.EncoderExceptionFallback\"></xref> object.","nodes":[{"content":"A type derived from the <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderFallback\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,79],"source":"A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class."},{"content":"The default value is a <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderExceptionFallback\"&gt;&lt;/xref&gt;</ph> object.","pos":[80,168],"source":" The default value is a <xref href=\"System.Text.EncoderExceptionFallback\"></xref> object."}]}],"pos":[11199,11368],"yaml":true},{"content":"When overridden in a derived class, gets the maximum number of characters the current <xref href=\"System.Text.EncoderFallback\"></xref> object can return.","nodes":[{"pos":[0,153],"content":"When overridden in a derived class, gets the maximum number of characters the current <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderFallback\"&gt;&lt;/xref&gt;</ph> object can return.","source":"When overridden in a derived class, gets the maximum number of characters the current <xref href=\"System.Text.EncoderFallback\"></xref> object can return."}],"pos":[12780,12934],"yaml":true},{"content":"For an exception fallback handler, this property should return zero.","nodes":[{"pos":[0,68],"content":"For an exception fallback handler, this property should return zero.","nodes":[{"content":"For an exception fallback handler, this property should return zero.","pos":[0,68]}]}],"pos":[12945,13014],"yaml":true,"extradata":"MT"},{"content":"The maximum number of characters the current <xref href=\"System.Text.EncoderFallback\"></xref> object can return.","nodes":[{"pos":[0,112],"content":"The maximum number of characters the current <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderFallback\"&gt;&lt;/xref&gt;</ph> object can return.","source":"The maximum number of characters the current <xref href=\"System.Text.EncoderFallback\"></xref> object can return."}],"pos":[13135,13248],"yaml":true},{"content":"Gets an object that outputs a substitute string in place of an input character that cannot be encoded.","nodes":[{"pos":[0,102],"content":"Gets an object that outputs a substitute string in place of an input character that cannot be encoded.","nodes":[{"content":"Gets an object that outputs a substitute string in place of an input character that cannot be encoded.","pos":[0,102]}]}],"pos":[14697,14800],"yaml":true},{"content":"A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class. The default value is a <xref href=\"System.Text.EncoderReplacementFallback\"></xref> object that replaces unknown input characters with the QUESTION MARK character (\"?\", U+003F).","nodes":[{"pos":[0,256],"content":"A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class. The default value is a <xref href=\"System.Text.EncoderReplacementFallback\"></xref> object that replaces unknown input characters with the QUESTION MARK character (\"?\", U+003F).","nodes":[{"content":"A type derived from the <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderFallback\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,79],"source":"A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class."},{"content":"The default value is a <ph id=\"ph1\">&lt;xref href=\"System.Text.EncoderReplacementFallback\"&gt;&lt;/xref&gt;</ph> object that replaces unknown input characters with the QUESTION MARK character (\"?\", U+003F).","pos":[80,256],"source":" The default value is a <xref href=\"System.Text.EncoderReplacementFallback\"></xref> object that replaces unknown input characters with the QUESTION MARK character (\"?\", U+003F)."}]}],"pos":[14965,15222],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.EncoderFallback\n  commentId: T:System.Text.EncoderFallback\n  id: EncoderFallback\n  children:\n  - System.Text.EncoderFallback.#ctor\n  - System.Text.EncoderFallback.CreateFallbackBuffer\n  - System.Text.EncoderFallback.ExceptionFallback\n  - System.Text.EncoderFallback.MaxCharCount\n  - System.Text.EncoderFallback.ReplacementFallback\n  langs:\n  - csharp\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n  type: Class\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.\n  remarks: \"An encoding maps a Unicode character to an encoded sequence of bytes. A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class. Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> or <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> method.  \\n  \\n An encoding operation can fail if the input character cannot be represented by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.  \\n  \\n When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.  \\n  \\n <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework. They support the following three kinds of fallback handling mechanisms:  \\n  \\n-   Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent. For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Ã† (U+00C6) to AE (U+0041 + U+0045). A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman). The .NET Framework does not provide any public best-fit fallback implementations.  \\n  \\n-   Replacement fallback, which replaces each character that cannot be encoded with a predefined string. The .NET Framework provides a predefined replacement fallback handler. The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character (\\\"?\\\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD). You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor. After the substitute string is emitted, the encoding operation continues converting the remainder of the input.  \\n  \\n-   Exception fallback, which throws an exception when a character cannot be encoded. The .NET Framework provides a predefined exception fallback handler. The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.  \\n  \\n If you choose to implement a custom solution, you must override the following abstract members of the <xref:System.Text.EncoderFallback> class:  \\n  \\n-   The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>. Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.  \\n  \\n-   The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return. For an exception fallback handler, its value should be zero.  \\n  \\n For more information about encoding, decoding, and fallback strategies, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).\"\n  syntax:\n    content: public abstract class EncoderFallback\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Text.EncoderExceptionFallback\n  - System.Text.EncoderReplacementFallback\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncoderFallback.#ctor\n  commentId: M:System.Text.EncoderFallback.#ctor\n  id: '#ctor'\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  name: EncoderFallback()\n  nameWithType: EncoderFallback.EncoderFallback()\n  fullName: EncoderFallback.EncoderFallback()\n  type: Constructor\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Initializes a new instance of the <xref href=\"System.Text.EncoderFallback\"></xref> class.\n  syntax:\n    content: protected EncoderFallback ();\n    parameters: []\n  overload: System.Text.EncoderFallback.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncoderFallback.CreateFallbackBuffer\n  commentId: M:System.Text.EncoderFallback.CreateFallbackBuffer\n  id: CreateFallbackBuffer\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  name: CreateFallbackBuffer()\n  nameWithType: EncoderFallback.CreateFallbackBuffer()\n  fullName: EncoderFallback.CreateFallbackBuffer()\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: When overridden in a derived class, initializes a new instance of the <xref href=\"System.Text.EncoderFallbackBuffer\"></xref> class.\n  remarks: \"This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation. For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.  \\n  \\n The<xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode. The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.\"\n  syntax:\n    content: public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();\n    parameters: []\n    return:\n      type: System.Text.EncoderFallbackBuffer\n      description: An object that provides a fallback buffer for an encoder.\n  overload: System.Text.EncoderFallback.CreateFallbackBuffer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncoderFallback.ExceptionFallback\n  commentId: P:System.Text.EncoderFallback.ExceptionFallback\n  id: ExceptionFallback\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  name: ExceptionFallback\n  nameWithType: EncoderFallback.ExceptionFallback\n  fullName: EncoderFallback.ExceptionFallback\n  type: Property\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Gets an object that throws an exception when an input character cannot be encoded.\n  syntax:\n    content: public static System.Text.EncoderFallback ExceptionFallback { get; }\n    return:\n      type: System.Text.EncoderFallback\n      description: A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class. The default value is a <xref href=\"System.Text.EncoderExceptionFallback\"></xref> object.\n  overload: System.Text.EncoderFallback.ExceptionFallback*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncoderFallback.MaxCharCount\n  commentId: P:System.Text.EncoderFallback.MaxCharCount\n  id: MaxCharCount\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  name: MaxCharCount\n  nameWithType: EncoderFallback.MaxCharCount\n  fullName: EncoderFallback.MaxCharCount\n  type: Property\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: When overridden in a derived class, gets the maximum number of characters the current <xref href=\"System.Text.EncoderFallback\"></xref> object can return.\n  remarks: For an exception fallback handler, this property should return zero.\n  syntax:\n    content: public abstract int MaxCharCount { get; }\n    return:\n      type: System.Int32\n      description: The maximum number of characters the current <xref href=\"System.Text.EncoderFallback\"></xref> object can return.\n  overload: System.Text.EncoderFallback.MaxCharCount*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncoderFallback.ReplacementFallback\n  commentId: P:System.Text.EncoderFallback.ReplacementFallback\n  id: ReplacementFallback\n  parent: System.Text.EncoderFallback\n  langs:\n  - csharp\n  name: ReplacementFallback\n  nameWithType: EncoderFallback.ReplacementFallback\n  fullName: EncoderFallback.ReplacementFallback\n  type: Property\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Gets an object that outputs a substitute string in place of an input character that cannot be encoded.\n  syntax:\n    content: public static System.Text.EncoderFallback ReplacementFallback { get; }\n    return:\n      type: System.Text.EncoderFallback\n      description: A type derived from the <xref href=\"System.Text.EncoderFallback\"></xref> class. The default value is a <xref href=\"System.Text.EncoderReplacementFallback\"></xref> object that replaces unknown input characters with the QUESTION MARK character (\"?\", U+003F).\n  overload: System.Text.EncoderFallback.ReplacementFallback*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.EncoderFallback.#ctor\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: EncoderFallback()\n  nameWithType: EncoderFallback.EncoderFallback()\n  fullName: EncoderFallback.EncoderFallback()\n- uid: System.Text.EncoderFallback.CreateFallbackBuffer\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: CreateFallbackBuffer()\n  nameWithType: EncoderFallback.CreateFallbackBuffer()\n  fullName: EncoderFallback.CreateFallbackBuffer()\n- uid: System.Text.EncoderFallbackBuffer\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallbackBuffer\n  nameWithType: EncoderFallbackBuffer\n  fullName: System.Text.EncoderFallbackBuffer\n- uid: System.Text.EncoderFallback.ExceptionFallback\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  nameWithType: EncoderFallback.ExceptionFallback\n  fullName: EncoderFallback.ExceptionFallback\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n- uid: System.Text.EncoderFallback.MaxCharCount\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: MaxCharCount\n  nameWithType: EncoderFallback.MaxCharCount\n  fullName: EncoderFallback.MaxCharCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncoderFallback.ReplacementFallback\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  nameWithType: EncoderFallback.ReplacementFallback\n  fullName: EncoderFallback.ReplacementFallback\n- uid: System.Text.EncoderFallback.#ctor*\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback.EncoderFallback\n  fullName: EncoderFallback.EncoderFallback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n- uid: System.Text.EncoderFallback.CreateFallbackBuffer*\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: CreateFallbackBuffer\n  nameWithType: EncoderFallback.CreateFallbackBuffer\n  fullName: EncoderFallback.CreateFallbackBuffer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n- uid: System.Text.EncoderFallback.ExceptionFallback*\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ExceptionFallback\n  nameWithType: EncoderFallback.ExceptionFallback\n  fullName: EncoderFallback.ExceptionFallback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n- uid: System.Text.EncoderFallback.MaxCharCount*\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: MaxCharCount\n  nameWithType: EncoderFallback.MaxCharCount\n  fullName: EncoderFallback.MaxCharCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n- uid: System.Text.EncoderFallback.ReplacementFallback*\n  parent: System.Text.EncoderFallback\n  isExternal: false\n  name: ReplacementFallback\n  nameWithType: EncoderFallback.ReplacementFallback\n  fullName: EncoderFallback.ReplacementFallback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncoderFallback.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}