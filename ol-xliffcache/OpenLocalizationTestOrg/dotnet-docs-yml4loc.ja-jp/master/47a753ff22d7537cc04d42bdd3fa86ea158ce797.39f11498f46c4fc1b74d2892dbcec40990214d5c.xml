{"nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm. This class cannot be inherited.","nodes":[{"pos":[0,193],"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm. This class cannot be inherited.","nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;&lt;/xref&gt;</ph> algorithm.","pos":[0,161],"source":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm."},{"content":"This class cannot be inherited.","pos":[162,193]}]}],"pos":[1896,2090],"yaml":true},{"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.  \n  \n> [!NOTE]\n>  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> class. Use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> only for compatibility with legacy applications and data.","nodes":[{"pos":[0,87],"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","nodes":[{"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","pos":[0,87]}]},{"pos":[95,499],"content":"[!NOTE]\n A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> class. Use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> only for compatibility with legacy applications and data.","leadings":["","> "],"nodes":[{"content":" A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> class. Use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> only for compatibility with legacy applications and data.","pos":[8,402],"nodes":[{"content":"A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.","pos":[1,90]},{"content":"Consider using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.AesCryptoServiceProvider&gt;</ph> class instead of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider&gt;</ph> class.","pos":[91,265],"source":" Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> class."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider&gt;</ph> only for compatibility with legacy applications and data.","pos":[266,394],"source":" Use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> only for compatibility with legacy applications and data."}]}]}],"pos":[2101,2606],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"></xref> class."}],"pos":[7011,7133],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.TripleDES\"></xref> cryptographic service provider is not available.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;&lt;/xref&gt;</ph> cryptographic service provider is not available.","source":"The <xref href=\"System.Security.Cryptography.TripleDES\"></xref> cryptographic service provider is not available."}],"pos":[8847,8960],"yaml":true},{"content":"Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,295],"content":"Creates a symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;&lt;/xref&gt;</ph> decryptor object with the specified key (<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[12509,12805],"yaml":true},{"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","nodes":[{"pos":[0,180],"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","nodes":[{"content":"This method decrypts an encrypted message created using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A&gt;</ph> overload with the same parameters.","pos":[0,180],"source":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters."}]}],"pos":[12816,12997],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[14582,14633],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[14694,14756],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object.","nodes":[{"pos":[0,89],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;&lt;/xref&gt;</ph> decryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object."}],"pos":[14845,14935],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>.  \n  \n -or-  \n  \n The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8.  \n  \n -or-  \n  \n An invalid key size was used.  \n  \n -or-  \n  \n The algorithm key size was not available.","nodes":[{"pos":[0,168],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>."},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,475],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> and the value of the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"&gt;&lt;/xref&gt;</ph> property is not 8.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8."},{"pos":[482,486],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[493,522],"content":"An invalid key size was used.","nodes":[{"content":"An invalid key size was used.","pos":[0,29]}]},{"pos":[529,533],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[540,581],"content":"The algorithm key size was not available.","nodes":[{"content":"The algorithm key size was not available.","pos":[0,41]}]}],"pos":[15186,15792],"yaml":true},{"content":"Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,295],"content":"Creates a symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;&lt;/xref&gt;</ph> encryptor object with the specified key (<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[18424,18720],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","nodes":[{"pos":[0,165],"content":"Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A&gt;</ph> overload with the same parameters to decrypt the result of this method.","pos":[0,165],"source":"Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method."}]}],"pos":[18731,18897],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[20482,20533],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\"></xref>, check the length of the initialization vector and throw an exception if it is too long.  \n  \n</p></block>","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]},{"pos":[68,464],"content":"<block subset=\"none\" type=\"note\"><p>  \n The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\"></xref>, check the length of the initialization vector and throw an exception if it is too long.","nodes":[{"content":" The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\"></xref>, check the length of the initialization vector and throw an exception if it is too long.","pos":[39,396],"nodes":[{"content":"The initialization vector must be 8 bytes long.","pos":[1,48]},{"content":"If it is longer than 8 bytes, it is truncated and an exception is not thrown.","pos":[49,126]},{"content":"Before you call <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\"&gt;&lt;/xref&gt;</ph>, check the length of the initialization vector and throw an exception if it is too long.","pos":[127,357],"source":" Before you call <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\"></xref>, check the length of the initialization vector and throw an exception if it is too long."}]}]},{"pos":[470,482],"content":"</p></block>","nodes":[]}],"pos":[20594,21090],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object.","nodes":[{"pos":[0,89],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.TripleDES\"&gt;&lt;/xref&gt;</ph> encryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object."}],"pos":[21179,21269],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>.  \n  \n -or-  \n  \n The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8.  \n  \n -or-  \n  \n An invalid key size was used.  \n  \n -or-  \n  \n The algorithm key size was not available.","nodes":[{"pos":[0,168],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>."},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,475],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> and the value of the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"&gt;&lt;/xref&gt;</ph> property is not 8.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8."},{"pos":[482,486],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[493,522],"content":"An invalid key size was used.","nodes":[{"content":"An invalid key size was used.","pos":[0,29]}]},{"pos":[529,533],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[540,581],"content":"The algorithm key size was not available.","nodes":[{"content":"The algorithm key size was not available.","pos":[0,41]}]}],"pos":[21520,22126],"yaml":true},{"content":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm.","nodes":[{"pos":[0,140],"content":"Generates a random initialization vector (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>) to use for the algorithm.","source":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm."}],"pos":[25401,25542],"yaml":true},{"content":"Use this method to generate a random initialization vector when none is specified.","nodes":[{"pos":[0,82],"content":"Use this method to generate a random initialization vector when none is specified.","nodes":[{"content":"Use this method to generate a random initialization vector when none is specified.","pos":[0,82]}]}],"pos":[25553,25636],"yaml":true,"extradata":"MT"},{"content":"Generates a random <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> to be used for the algorithm.","nodes":[{"pos":[0,121],"content":"Generates a random <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph> to be used for the algorithm.","source":"Generates a random <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> to be used for the algorithm."}],"pos":[27130,27252],"yaml":true},{"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).  \n  \n This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","nodes":[{"pos":[0,171],"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).","nodes":[{"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).","pos":[0,171],"nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]},{"content":"This method will never return a weak key (see <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A&gt;</ph>).","pos":[65,171],"source":" This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>)."}]}]},{"pos":[178,265],"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","nodes":[{"content":"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.","pos":[0,87]}]}],"pos":[27263,27533],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  commentId: T:System.Security.Cryptography.TripleDESCryptoServiceProvider\n  id: TripleDESCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.IV\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.Key\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode\n  - System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding\n  langs:\n  - csharp\n  name: TripleDESCryptoServiceProvider\n  nameWithType: TripleDESCryptoServiceProvider\n  fullName: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Defines a wrapper object to access the cryptographic service provider (CSP) version of the <xref href=\"System.Security.Cryptography.TripleDES\"></xref> algorithm. This class cannot be inherited.\n  remarks: \"This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.  \\n  \\n> [!NOTE]\\n>  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> class. Use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class TripleDESCryptoServiceProvider : System.Security.Cryptography.TripleDES\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.TripleDES\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  - System.Security.Cryptography.TripleDES.Create\n  - System.Security.Cryptography.TripleDES.Create(System.String)\n  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: TripleDESCryptoServiceProvider()\n  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n  fullName: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.TripleDESCryptoServiceProvider\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: public TripleDESCryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <xref href=\"System.Security.Cryptography.TripleDES\"></xref> cryptographic service provider is not available.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize\n  id: BlockSize\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: BlockSize\n  nameWithType: TripleDESCryptoServiceProvider.BlockSize\n  fullName: TripleDESCryptoServiceProvider.BlockSize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int BlockSize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor()\n  fullName: TripleDESCryptoServiceProvider.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> decryptor object.\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.OFB\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.CFB\\\"></xref> and the value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\\\"></xref> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor()\n  fullName: TripleDESCryptoServiceProvider.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: Use the <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.\n  example:\n  - \"The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  \\n  \\n The following code example creates a <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> object and uses it to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.3DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: \"The initialization vector to use for the symmetric algorithm.  \\n  \\n <block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n The initialization vector must be 8 bytes long. If it is longer than 8 bytes, it is truncated and an exception is not thrown. Before you call <xref href=\\\"System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\\\"></xref>, check the length of the initialization vector and throw an exception if it is too long.  \\n  \\n</p></block>\"\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.TripleDES\"></xref> encryptor object.\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.OFB\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.CFB\\\"></xref> and the value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\\\"></xref> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: TripleDESCryptoServiceProvider.Dispose(Boolean)\n  fullName: TripleDESCryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize\n  id: FeedbackSize\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: FeedbackSize\n  nameWithType: TripleDESCryptoServiceProvider.FeedbackSize\n  fullName: TripleDESCryptoServiceProvider.FeedbackSize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int FeedbackSize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateIV()\n  fullName: TripleDESCryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm.\n  remarks: Use this method to generate a random initialization vector when none is specified.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  commentId: M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateKey()\n  fullName: TripleDESCryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> to be used for the algorithm.\n  remarks: \"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.TripleDES.IsWeakKey%2A>).  \\n  \\n This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.\"\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.IV\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.IV\n  id: IV\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: IV\n  nameWithType: TripleDESCryptoServiceProvider.IV\n  fullName: TripleDESCryptoServiceProvider.IV\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] IV { get; set; }\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.IV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Key\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Key\n  id: Key\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: Key\n  nameWithType: TripleDESCryptoServiceProvider.Key\n  fullName: TripleDESCryptoServiceProvider.Key\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.Key*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: TripleDESCryptoServiceProvider.KeySize\n  fullName: TripleDESCryptoServiceProvider.KeySize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes\n  id: LegalBlockSizes\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: LegalBlockSizes\n  nameWithType: TripleDESCryptoServiceProvider.LegalBlockSizes\n  fullName: TripleDESCryptoServiceProvider.LegalBlockSizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: TripleDESCryptoServiceProvider.LegalKeySizes\n  fullName: TripleDESCryptoServiceProvider.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode\n  id: Mode\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: TripleDESCryptoServiceProvider.Mode\n  fullName: TripleDESCryptoServiceProvider.Mode\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.CipherMode Mode { get; set; }\n    return:\n      type: System.Security.Cryptography.CipherMode\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding\n  commentId: P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding\n  id: Padding\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: TripleDESCryptoServiceProvider.Padding\n  fullName: TripleDESCryptoServiceProvider.Padding\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: ''\n  overload: System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\nreferences:\n- uid: System.Security.Cryptography.TripleDES\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: TripleDES\n  nameWithType: TripleDES\n  fullName: System.Security.Cryptography.TripleDES\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: TripleDESCryptoServiceProvider()\n  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n  fullName: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: BlockSize\n  nameWithType: TripleDESCryptoServiceProvider.BlockSize\n  fullName: TripleDESCryptoServiceProvider.BlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor()\n  fullName: TripleDESCryptoServiceProvider.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: TripleDESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor()\n  fullName: TripleDESCryptoServiceProvider.CreateEncryptor()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: TripleDESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TripleDESCryptoServiceProvider.Dispose(Boolean)\n  fullName: TripleDESCryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: TripleDESCryptoServiceProvider.FeedbackSize\n  fullName: TripleDESCryptoServiceProvider.FeedbackSize\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateIV()\n  fullName: TripleDESCryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: TripleDESCryptoServiceProvider.GenerateKey()\n  fullName: TripleDESCryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.IV\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: IV\n  nameWithType: TripleDESCryptoServiceProvider.IV\n  fullName: TripleDESCryptoServiceProvider.IV\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Key\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Key\n  nameWithType: TripleDESCryptoServiceProvider.Key\n  fullName: TripleDESCryptoServiceProvider.Key\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: TripleDESCryptoServiceProvider.KeySize\n  fullName: TripleDESCryptoServiceProvider.KeySize\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: TripleDESCryptoServiceProvider.LegalBlockSizes\n  fullName: TripleDESCryptoServiceProvider.LegalBlockSizes\n- uid: System.Security.Cryptography.KeySizes\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n- uid: System.Security.Cryptography.KeySizes[]\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes[]\n  nameWithType: KeySizes[]\n  fullName: System.Security.Cryptography.KeySizes[]\n  spec.csharp:\n  - uid: System.Security.Cryptography.KeySizes\n    name: KeySizes\n    nameWithType: KeySizes\n    fullName: System.Security.Cryptography.KeySizes\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: TripleDESCryptoServiceProvider.LegalKeySizes\n  fullName: TripleDESCryptoServiceProvider.LegalKeySizes\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Mode\n  nameWithType: TripleDESCryptoServiceProvider.Mode\n  fullName: TripleDESCryptoServiceProvider.Mode\n- uid: System.Security.Cryptography.CipherMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CipherMode\n  nameWithType: CipherMode\n  fullName: System.Security.Cryptography.CipherMode\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Padding\n  nameWithType: TripleDESCryptoServiceProvider.Padding\n  fullName: TripleDESCryptoServiceProvider.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: TripleDESCryptoServiceProvider\n  nameWithType: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider\n  fullName: TripleDESCryptoServiceProvider.TripleDESCryptoServiceProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: BlockSize\n  nameWithType: TripleDESCryptoServiceProvider.BlockSize\n  fullName: TripleDESCryptoServiceProvider.BlockSize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: TripleDESCryptoServiceProvider.CreateDecryptor\n  fullName: TripleDESCryptoServiceProvider.CreateDecryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: TripleDESCryptoServiceProvider.CreateEncryptor\n  fullName: TripleDESCryptoServiceProvider.CreateEncryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Dispose*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Dispose\n  nameWithType: TripleDESCryptoServiceProvider.Dispose\n  fullName: TripleDESCryptoServiceProvider.Dispose\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: TripleDESCryptoServiceProvider.FeedbackSize\n  fullName: TripleDESCryptoServiceProvider.FeedbackSize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: TripleDESCryptoServiceProvider.GenerateIV\n  fullName: TripleDESCryptoServiceProvider.GenerateIV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: TripleDESCryptoServiceProvider.GenerateKey\n  fullName: TripleDESCryptoServiceProvider.GenerateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.IV*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: IV\n  nameWithType: TripleDESCryptoServiceProvider.IV\n  fullName: TripleDESCryptoServiceProvider.IV\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Key*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Key\n  nameWithType: TripleDESCryptoServiceProvider.Key\n  fullName: TripleDESCryptoServiceProvider.Key\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: TripleDESCryptoServiceProvider.KeySize\n  fullName: TripleDESCryptoServiceProvider.KeySize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: TripleDESCryptoServiceProvider.LegalBlockSizes\n  fullName: TripleDESCryptoServiceProvider.LegalBlockSizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: TripleDESCryptoServiceProvider.LegalKeySizes\n  fullName: TripleDESCryptoServiceProvider.LegalKeySizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Mode\n  nameWithType: TripleDESCryptoServiceProvider.Mode\n  fullName: TripleDESCryptoServiceProvider.Mode\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding*\n  parent: System.Security.Cryptography.TripleDESCryptoServiceProvider\n  isExternal: false\n  name: Padding\n  nameWithType: TripleDESCryptoServiceProvider.Padding\n  fullName: TripleDESCryptoServiceProvider.Padding\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/TripleDESCryptoServiceProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.TripleDES.Create\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: Create()\n  nameWithType: TripleDES.Create()\n  fullName: TripleDES.Create()\n- uid: System.Security.Cryptography.TripleDES.Create(System.String)\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: Create(String)\n  nameWithType: TripleDES.Create(String)\n  fullName: TripleDES.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.TripleDES\n  isExternal: false\n  name: IsWeakKey(Byte[])\n  nameWithType: TripleDES.IsWeakKey(Byte[])\n  fullName: TripleDES.IsWeakKey(Byte[])\n"}