### YamlMime:ManagedReference
items:
- uid: System.Globalization.CultureTypes
  commentId: T:System.Globalization.CultureTypes
  id: CultureTypes
  children:
  - System.Globalization.CultureTypes.AllCultures
  - System.Globalization.CultureTypes.FrameworkCultures
  - System.Globalization.CultureTypes.InstalledWin32Cultures
  - System.Globalization.CultureTypes.NeutralCultures
  - System.Globalization.CultureTypes.ReplacementCultures
  - System.Globalization.CultureTypes.SpecificCultures
  - System.Globalization.CultureTypes.UserCustomCulture
  - System.Globalization.CultureTypes.WindowsOnlyCultures
  langs:
  - csharp
  name: CultureTypes
  nameWithType: CultureTypes
  fullName: System.Globalization.CultureTypes
  type: Enum
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Defines the types of culture lists that can be retrieved using the <xref href="System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)"></xref> method.
  remarks: "These culture type values are returned by the <xref:System.Globalization.CultureInfo.CultureTypes%2A?displayProperty=fullName> property, and also serve as a filter that limits the cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method. For more information on cultures, see <xref:System.Globalization.CultureInfo>.  \n  \n Generally, your application should enumerate all cultures, using the AllCultures value. This allows enumeration of custom cultures, as well as the other culture types.  \n  \n Note that the FrameworkCultures and WindowsOnlyCultures members have been deprecated."
  example:
  - "The following example demonstrates the <xref:System.Globalization.CultureTypes.AllCultures> enumeration and the <xref:System.Globalization.CultureInfo.CultureTypes%2A> property.  \n  \n [!code-cpp[System.Globalization.CultureTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cpp/ct.cpp#1)]\n [!code-csharp[System.Globalization.CultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]\n [!code-vb[System.Globalization.CultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  \n  \n The following example displays several properties of the neutral cultures.  \n  \n [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]\n [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]\n [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum CultureTypes
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.FlagsAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureTypes.AllCultures
  commentId: F:System.Globalization.CultureTypes.AllCultures
  id: AllCultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: AllCultures
  nameWithType: CultureTypes.AllCultures
  fullName: CultureTypes.AllCultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: "All cultures that ship with the .NET Framework, including neutral and specific cultures, cultures installed in the Windows operating system, and custom cultures created by the user.  \n  \n <xref href=\"System.Globalization.CultureTypes.AllCultures\"></xref> is a composite field that includes the <xref href=\"System.Globalization.CultureTypes.NeutralCultures\"></xref>, <xref href=\"System.Globalization.CultureTypes.SpecificCultures\"></xref>, and <xref href=\"System.Globalization.CultureTypes.InstalledWin32Cultures\"></xref> values."
  syntax:
    content: AllCultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.FrameworkCultures
  commentId: F:System.Globalization.CultureTypes.FrameworkCultures
  id: FrameworkCultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: FrameworkCultures
  nameWithType: CultureTypes.FrameworkCultures
  fullName: CultureTypes.FrameworkCultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: This member is deprecated; using this value with <xref href="System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)"></xref> returns neutral and specific cultures shipped with the .NET Framework 2.0.
  syntax:
    content: >-
      [System.Obsolete("This value has been deprecated.  Please use other values in CultureTypes.")]

      FrameworkCultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.InstalledWin32Cultures
  commentId: F:System.Globalization.CultureTypes.InstalledWin32Cultures
  id: InstalledWin32Cultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: InstalledWin32Cultures
  nameWithType: CultureTypes.InstalledWin32Cultures
  fullName: CultureTypes.InstalledWin32Cultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: All cultures that are installed in the Windows operating system. Note that not all cultures supported by the .NET Framework are installed in the operating system.
  syntax:
    content: InstalledWin32Cultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.NeutralCultures
  commentId: F:System.Globalization.CultureTypes.NeutralCultures
  id: NeutralCultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: NeutralCultures
  nameWithType: CultureTypes.NeutralCultures
  fullName: CultureTypes.NeutralCultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: 'Cultures that are associated with a language but are not specific to a country/region. The names of .NET Framework cultures consist of the lowercase two-letter code derived from ISO 639-1. For example: "en" (English) is a neutral culture.'
  remarks: "Custom cultures can have any user-specified name, not just a two-letter code.  \n  \n The invariant culture is included in the array of cultures returned by the <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=fullName> method that specifies this value."
  syntax:
    content: NeutralCultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.ReplacementCultures
  commentId: F:System.Globalization.CultureTypes.ReplacementCultures
  id: ReplacementCultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: ReplacementCultures
  nameWithType: CultureTypes.ReplacementCultures
  fullName: CultureTypes.ReplacementCultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Custom cultures created by the user that replace cultures shipped with the .NET Framework.
  syntax:
    content: ReplacementCultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.SpecificCultures
  commentId: F:System.Globalization.CultureTypes.SpecificCultures
  id: SpecificCultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: SpecificCultures
  nameWithType: CultureTypes.SpecificCultures
  fullName: CultureTypes.SpecificCultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is "<languagecode2>-<country/regioncode2>", where <languagecode2> is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, "en-US" for English (United States) is a specific culture.
  remarks: Custom cultures can have any user-specified name, not just a standard-compliant name.
  syntax:
    content: SpecificCultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.UserCustomCulture
  commentId: F:System.Globalization.CultureTypes.UserCustomCulture
  id: UserCustomCulture
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: UserCustomCulture
  nameWithType: CultureTypes.UserCustomCulture
  fullName: CultureTypes.UserCustomCulture
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Custom cultures created by the user.
  remarks: "In Windows versions prior to Windows 10, the UserCustomCulture value is assigned to custom cultures created by the developer. In Windows 10, the UserCustomCulture value is also assigned to system cultures that are not backed by a complete set of cultural data and that do not have unique local identifiers. (All cultures of type UserCustomCulture share a <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=fullName> value of `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096). As a result, code such as  \n  \n [!code-csharp[System.Globalization.CultureTypes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/getcultures3.cs#2)]\n [!code-vb[System.Globalization.CultureTypes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/getcultures3.vb#2)]  \n  \n or  \n  \n [!code-csharp[System.Globalization.CultureTypes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/getcultures3.cs#3)]\n [!code-vb[System.Globalization.CultureTypes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/getcultures3.vb#3)]  \n  \n will return different sets of cultures on different Windows versions."
  syntax:
    content: UserCustomCulture
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
- uid: System.Globalization.CultureTypes.WindowsOnlyCultures
  commentId: F:System.Globalization.CultureTypes.WindowsOnlyCultures
  id: WindowsOnlyCultures
  parent: System.Globalization.CultureTypes
  langs:
  - csharp
  name: WindowsOnlyCultures
  nameWithType: CultureTypes.WindowsOnlyCultures
  fullName: CultureTypes.WindowsOnlyCultures
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: This member is deprecated. If it is used as an argument to the <xref href="System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)"></xref> method, the method returns an empty array.
  syntax:
    content: >-
      [System.Obsolete("This value has been deprecated.  Please use other values in CultureTypes.")]

      WindowsOnlyCultures
    return:
      type: System.Globalization.CultureTypes
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureTypes.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Globalization.CultureTypes.AllCultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: AllCultures
  nameWithType: CultureTypes.AllCultures
  fullName: CultureTypes.AllCultures
- uid: System.Globalization.CultureTypes
  parent: System.Globalization
  isExternal: false
  name: CultureTypes
  nameWithType: CultureTypes
  fullName: System.Globalization.CultureTypes
- uid: System.Globalization.CultureTypes.FrameworkCultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: FrameworkCultures
  nameWithType: CultureTypes.FrameworkCultures
  fullName: CultureTypes.FrameworkCultures
- uid: System.Globalization.CultureTypes.InstalledWin32Cultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: InstalledWin32Cultures
  nameWithType: CultureTypes.InstalledWin32Cultures
  fullName: CultureTypes.InstalledWin32Cultures
- uid: System.Globalization.CultureTypes.NeutralCultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: NeutralCultures
  nameWithType: CultureTypes.NeutralCultures
  fullName: CultureTypes.NeutralCultures
- uid: System.Globalization.CultureTypes.ReplacementCultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: ReplacementCultures
  nameWithType: CultureTypes.ReplacementCultures
  fullName: CultureTypes.ReplacementCultures
- uid: System.Globalization.CultureTypes.SpecificCultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: SpecificCultures
  nameWithType: CultureTypes.SpecificCultures
  fullName: CultureTypes.SpecificCultures
- uid: System.Globalization.CultureTypes.UserCustomCulture
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: UserCustomCulture
  nameWithType: CultureTypes.UserCustomCulture
  fullName: CultureTypes.UserCustomCulture
- uid: System.Globalization.CultureTypes.WindowsOnlyCultures
  parent: System.Globalization.CultureTypes
  isExternal: false
  name: WindowsOnlyCultures
  nameWithType: CultureTypes.WindowsOnlyCultures
  fullName: CultureTypes.WindowsOnlyCultures
