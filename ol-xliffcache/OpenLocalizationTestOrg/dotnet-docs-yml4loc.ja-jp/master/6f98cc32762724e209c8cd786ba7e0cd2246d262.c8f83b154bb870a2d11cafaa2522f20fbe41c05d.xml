{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event.","nodes":[{"pos":[0,96],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.ManipulationCompleted\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event."}],"pos":[1079,1176],"yaml":true},{"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md). For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,323],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md). For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[117,323],"source":" For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[1187,1513],"yaml":true,"extradata":"MT"},{"content":"Cancels the manipulation.","nodes":[{"pos":[0,25],"content":"Cancels the manipulation.","nodes":[{"content":"Cancels the manipulation.","pos":[0,25]}]}],"pos":[3414,3440],"yaml":true},{"content":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down, mouse move, or mouse up events to the element. Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.","nodes":[{"pos":[0,296],"content":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down, mouse move, or mouse up events to the element. Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.","nodes":[{"content":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down, mouse move, or mouse up events to the element. Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.","pos":[0,296],"nodes":[{"content":"If the method succeeds, the default <ph id=\"ph1\">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> sends previous touch events as mouse down, mouse move, or mouse up events to the element.","pos":[0,165],"source":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down, mouse move, or mouse up events to the element."},{"content":"Touch cannot be promoted to mouse events if the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;</ph> event occurs during inertia.","pos":[166,296],"source":" Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia."}]}]}],"pos":[3451,3748],"yaml":true,"extradata":"MT"},{"content":"`true` if the manipulation was successfully canceled; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the manipulation was successfully canceled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the manipulation was successfully canceled; otherwise, `false`."}],"pos":[3871,3947],"yaml":true},{"content":"Gets the velocities that are used for the manipulation.","nodes":[{"pos":[0,55],"content":"Gets the velocities that are used for the manipulation.","nodes":[{"content":"Gets the velocities that are used for the manipulation.","pos":[0,55]}]}],"pos":[5087,5143],"yaml":true},{"content":"The velocities that are used for the manipulation.","nodes":[{"pos":[0,50],"content":"The velocities that are used for the manipulation.","nodes":[{"content":"The velocities that are used for the manipulation.","pos":[0,50]}]}],"pos":[5329,5380],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event occurs during inertia.","nodes":[{"pos":[0,136],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.ManipulationCompleted\"&gt;&lt;/xref&gt;</ph> event occurs during inertia.","source":"Gets a value that indicates whether the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event occurs during inertia."}],"pos":[7968,8105],"yaml":true},{"content":"`true` if the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event occurs during inertia; `false` if the event occurs while the user has contact with the <xref href=\"System.Windows.UIElement\"></xref>.","nodes":[{"pos":[0,221],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.UIElement.ManipulationCompleted\"&gt;&lt;/xref&gt;</ph> event occurs during inertia; <ph id=\"ph3\">`false`</ph> if the event occurs while the user has contact with the <ph id=\"ph4\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph>.","source":"`true` if the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event occurs during inertia; `false` if the event occurs while the user has contact with the <xref href=\"System.Windows.UIElement\"></xref>."}],"pos":[8218,8442],"yaml":true},{"content":"Gets the container that defines the coordinates for the manipulation.","nodes":[{"pos":[0,69],"content":"Gets the container that defines the coordinates for the manipulation.","nodes":[{"content":"Gets the container that defines the coordinates for the manipulation.","pos":[0,69]}]}],"pos":[9622,9692],"yaml":true},{"content":"The container that defines the coordinates for the manipulation.","nodes":[{"pos":[0,64],"content":"The container that defines the coordinates for the manipulation.","nodes":[{"content":"The container that defines the coordinates for the manipulation.","pos":[0,64]}]}],"pos":[9854,9919],"yaml":true},{"content":"Gets the point from which the manipulation originated.","nodes":[{"pos":[0,54],"content":"Gets the point from which the manipulation originated.","nodes":[{"content":"Gets the point from which the manipulation originated.","pos":[0,54]}]}],"pos":[11070,11125],"yaml":true},{"content":"If two points of contact initiated the manipulation, the <xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A> property is the point between the two points of contact.","nodes":[{"pos":[0,194],"content":"If two points of contact initiated the manipulation, the <xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A> property is the point between the two points of contact.","nodes":[{"content":"If two points of contact initiated the manipulation, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A&gt;</ph> property is the point between the two points of contact.","pos":[0,194],"source":"If two points of contact initiated the manipulation, the <xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A> property is the point between the two points of contact."}]}],"pos":[11136,11331],"yaml":true,"extradata":"MT"},{"content":"The point from which the manipulation originated.","nodes":[{"pos":[0,49],"content":"The point from which the manipulation originated.","nodes":[{"content":"The point from which the manipulation originated.","pos":[0,49]}]}],"pos":[11474,11524],"yaml":true},{"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","nodes":[{"pos":[0,85],"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","nodes":[{"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","pos":[0,85]}]}],"pos":[12658,12744],"yaml":true},{"content":"A collection of objects that represents the touch contacts for the manipulation.","nodes":[{"pos":[0,80],"content":"A collection of objects that represents the touch contacts for the manipulation.","nodes":[{"content":"A collection of objects that represents the touch contacts for the manipulation.","pos":[0,80]}]}],"pos":[12987,13068],"yaml":true},{"content":"Gets the total transformation that occurs during the current manipulation.","nodes":[{"pos":[0,74],"content":"Gets the total transformation that occurs during the current manipulation.","nodes":[{"content":"Gets the total transformation that occurs during the current manipulation.","pos":[0,74]}]}],"pos":[14226,14301],"yaml":true},{"content":"The total transformation that occurs during the current manipulation.","nodes":[{"pos":[0,69],"content":"The total transformation that occurs during the current manipulation.","nodes":[{"content":"The total transformation that occurs during the current manipulation.","pos":[0,69]}]}],"pos":[14479,14549],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationCompletedEventArgs\n  commentId: T:System.Windows.Input.ManipulationCompletedEventArgs\n  id: ManipulationCompletedEventArgs\n  children:\n  - System.Windows.Input.ManipulationCompletedEventArgs.Cancel\n  - System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities\n  - System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ManipulationCompletedEventArgs.IsInertial\n  - System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer\n  - System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin\n  - System.Windows.Input.ManipulationCompletedEventArgs.Manipulators\n  - System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation\n  langs:\n  - csharp\n  name: ManipulationCompletedEventArgs\n  nameWithType: ManipulationCompletedEventArgs\n  fullName: System.Windows.Input.ManipulationCompletedEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides data for the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event.\n  remarks: 'For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md). For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).'\n  syntax:\n    content: 'public sealed class ManipulationCompletedEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.Cancel\n  commentId: M:System.Windows.Input.ManipulationCompletedEventArgs.Cancel\n  id: Cancel\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: ManipulationCompletedEventArgs.Cancel()\n  fullName: ManipulationCompletedEventArgs.Cancel()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Cancels the manipulation.\n  remarks: If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down, mouse move, or mouse up events to the element. Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.\n  syntax:\n    content: public bool Cancel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the manipulation was successfully canceled; otherwise, `false`.'\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities\n  commentId: P:System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities\n  id: FinalVelocities\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: FinalVelocities\n  nameWithType: ManipulationCompletedEventArgs.FinalVelocities\n  fullName: ManipulationCompletedEventArgs.FinalVelocities\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the velocities that are used for the manipulation.\n  syntax:\n    content: public System.Windows.Input.ManipulationVelocities FinalVelocities { get; }\n    return:\n      type: System.Windows.Input.ManipulationVelocities\n      description: The velocities that are used for the manipulation.\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: ManipulationCompletedEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: ManipulationCompletedEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: ''\n    - id: genericTarget\n      type: System.Object\n      description: ''\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.IsInertial\n  commentId: P:System.Windows.Input.ManipulationCompletedEventArgs.IsInertial\n  id: IsInertial\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: IsInertial\n  nameWithType: ManipulationCompletedEventArgs.IsInertial\n  fullName: ManipulationCompletedEventArgs.IsInertial\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a value that indicates whether the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event occurs during inertia.\n  syntax:\n    content: public bool IsInertial { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.UIElement.ManipulationCompleted\"></xref> event occurs during inertia; `false` if the event occurs while the user has contact with the <xref href=\"System.Windows.UIElement\"></xref>.'\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.IsInertial*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer\n  commentId: P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer\n  id: ManipulationContainer\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: ManipulationContainer\n  nameWithType: ManipulationCompletedEventArgs.ManipulationContainer\n  fullName: ManipulationCompletedEventArgs.ManipulationContainer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the container that defines the coordinates for the manipulation.\n  syntax:\n    content: public System.Windows.IInputElement ManipulationContainer { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The container that defines the coordinates for the manipulation.\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin\n  commentId: P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin\n  id: ManipulationOrigin\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: ManipulationOrigin\n  nameWithType: ManipulationCompletedEventArgs.ManipulationOrigin\n  fullName: ManipulationCompletedEventArgs.ManipulationOrigin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the point from which the manipulation originated.\n  remarks: If two points of contact initiated the manipulation, the <xref:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin%2A> property is the point between the two points of contact.\n  syntax:\n    content: public System.Windows.Point ManipulationOrigin { get; }\n    return:\n      type: System.Windows.Point\n      description: The point from which the manipulation originated.\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.Manipulators\n  commentId: P:System.Windows.Input.ManipulationCompletedEventArgs.Manipulators\n  id: Manipulators\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: Manipulators\n  nameWithType: ManipulationCompletedEventArgs.Manipulators\n  fullName: ManipulationCompletedEventArgs.Manipulators\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a collection of objects that represents the touch contacts for the manipulation.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n      description: A collection of objects that represents the touch contacts for the manipulation.\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.Manipulators*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation\n  commentId: P:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation\n  id: TotalManipulation\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  langs:\n  - csharp\n  name: TotalManipulation\n  nameWithType: ManipulationCompletedEventArgs.TotalManipulation\n  fullName: ManipulationCompletedEventArgs.TotalManipulation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the total transformation that occurs during the current manipulation.\n  syntax:\n    content: public System.Windows.Input.ManipulationDelta TotalManipulation { get; }\n    return:\n      type: System.Windows.Input.ManipulationDelta\n      description: The total transformation that occurs during the current manipulation.\n  overload: System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputEventArgs\n  nameWithType: InputEventArgs\n  fullName: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.Cancel\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: Cancel()\n  nameWithType: ManipulationCompletedEventArgs.Cancel()\n  fullName: ManipulationCompletedEventArgs.Cancel()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: FinalVelocities\n  nameWithType: ManipulationCompletedEventArgs.FinalVelocities\n  fullName: ManipulationCompletedEventArgs.FinalVelocities\n- uid: System.Windows.Input.ManipulationVelocities\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationVelocities\n  nameWithType: ManipulationVelocities\n  fullName: System.Windows.Input.ManipulationVelocities\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: ManipulationCompletedEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: ManipulationCompletedEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.IsInertial\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: IsInertial\n  nameWithType: ManipulationCompletedEventArgs.IsInertial\n  fullName: ManipulationCompletedEventArgs.IsInertial\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationCompletedEventArgs.ManipulationContainer\n  fullName: ManipulationCompletedEventArgs.ManipulationContainer\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: ManipulationOrigin\n  nameWithType: ManipulationCompletedEventArgs.ManipulationOrigin\n  fullName: ManipulationCompletedEventArgs.ManipulationOrigin\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.Manipulators\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationCompletedEventArgs.Manipulators\n  fullName: ManipulationCompletedEventArgs.Manipulators\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Windows.Input.IManipulator\n  name: IManipulator\n  nameWithType: IManipulator\n  fullName: System.Windows.Input.IManipulator\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<IManipulator>\n  nameWithType: IEnumerable<IManipulator>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Input.IManipulator\n    name: IManipulator\n    nameWithType: IManipulator\n    fullName: System.Windows.Input.IManipulator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: TotalManipulation\n  nameWithType: ManipulationCompletedEventArgs.TotalManipulation\n  fullName: ManipulationCompletedEventArgs.TotalManipulation\n- uid: System.Windows.Input.ManipulationDelta\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.Cancel*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: ManipulationCompletedEventArgs.Cancel\n  fullName: ManipulationCompletedEventArgs.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: FinalVelocities\n  nameWithType: ManipulationCompletedEventArgs.FinalVelocities\n  fullName: ManipulationCompletedEventArgs.FinalVelocities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: ManipulationCompletedEventArgs.InvokeEventHandler\n  fullName: ManipulationCompletedEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.IsInertial*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: IsInertial\n  nameWithType: ManipulationCompletedEventArgs.IsInertial\n  fullName: ManipulationCompletedEventArgs.IsInertial\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationCompletedEventArgs.ManipulationContainer\n  fullName: ManipulationCompletedEventArgs.ManipulationContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: ManipulationOrigin\n  nameWithType: ManipulationCompletedEventArgs.ManipulationOrigin\n  fullName: ManipulationCompletedEventArgs.ManipulationOrigin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.Manipulators*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationCompletedEventArgs.Manipulators\n  fullName: ManipulationCompletedEventArgs.Manipulators\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation*\n  parent: System.Windows.Input.ManipulationCompletedEventArgs\n  isExternal: false\n  name: TotalManipulation\n  nameWithType: ManipulationCompletedEventArgs.TotalManipulation\n  fullName: ManipulationCompletedEventArgs.TotalManipulation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationCompletedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n- uid: System.Windows.Input.InputEventArgs.Device\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Device\n  nameWithType: InputEventArgs.Device\n  fullName: InputEventArgs.Device\n- uid: System.Windows.Input.InputEventArgs.Timestamp\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Timestamp\n  nameWithType: InputEventArgs.Timestamp\n  fullName: InputEventArgs.Timestamp\n"}