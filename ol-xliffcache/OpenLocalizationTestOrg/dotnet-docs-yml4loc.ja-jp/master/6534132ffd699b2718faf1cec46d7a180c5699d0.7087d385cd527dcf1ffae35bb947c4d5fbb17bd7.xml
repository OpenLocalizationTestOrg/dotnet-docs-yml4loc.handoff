{"nodes":[{"content":"Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.","nodes":[{"pos":[0,121],"content":"Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.","nodes":[{"content":"Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.","pos":[0,121]}]}],"pos":[642,764],"yaml":true},{"content":"This interface enables data entity classes to implement custom validation rules and expose validation results asynchronously. This interface also supports custom error objects, multiple errors per property, cross-property errors, and entity-level errors. Cross-property errors are errors that affect multiple properties. You can associate these errors with one or all of the affected properties, or you can treat them as entity-level errors. Entity-level errors are errors that either affect multiple properties or affect the entire entity without affecting a particular property.","nodes":[{"pos":[0,580],"content":"This interface enables data entity classes to implement custom validation rules and expose validation results asynchronously. This interface also supports custom error objects, multiple errors per property, cross-property errors, and entity-level errors. Cross-property errors are errors that affect multiple properties. You can associate these errors with one or all of the affected properties, or you can treat them as entity-level errors. Entity-level errors are errors that either affect multiple properties or affect the entire entity without affecting a particular property.","nodes":[{"content":"This interface enables data entity classes to implement custom validation rules and expose validation results asynchronously. This interface also supports custom error objects, multiple errors per property, cross-property errors, and entity-level errors. Cross-property errors are errors that affect multiple properties. You can associate these errors with one or all of the affected properties, or you can treat them as entity-level errors. Entity-level errors are errors that either affect multiple properties or affect the entire entity without affecting a particular property.","pos":[0,580],"nodes":[{"content":"This interface enables data entity classes to implement custom validation rules and expose validation results asynchronously.","pos":[0,125]},{"content":"This interface also supports custom error objects, multiple errors per property, cross-property errors, and entity-level errors.","pos":[126,254]},{"content":"Cross-property errors are errors that affect multiple properties.","pos":[255,320]},{"content":"You can associate these errors with one or all of the affected properties, or you can treat them as entity-level errors.","pos":[321,441]},{"content":"Entity-level errors are errors that either affect multiple properties or affect the entire entity without affecting a particular property.","pos":[442,580]}]}]}],"pos":[775,1356],"yaml":true,"extradata":"MT"},{"content":"Occurs when the validation errors have changed for a property or for the entire entity.","nodes":[{"pos":[0,87],"content":"Occurs when the validation errors have changed for a property or for the entire entity.","nodes":[{"content":"Occurs when the validation errors have changed for a property or for the entire entity.","pos":[0,87]}]}],"pos":[2949,3037],"yaml":true},{"content":"The implementing class should raise this event on the user interface thread whenever the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> return value changes, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.","nodes":[{"pos":[0,273],"content":"The implementing class should raise this event on the user interface thread whenever the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> return value changes, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.","nodes":[{"content":"The implementing class should raise this event on the user interface thread whenever the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A&gt;</ph> return value changes, even if the return value implements <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>.","pos":[0,273],"source":"The implementing class should raise this event on the user interface thread whenever the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> return value changes, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>."}]}],"pos":[3048,3322],"yaml":true,"extradata":"MT"},{"content":"Gets the validation errors for a specified property or for the entire entity.","nodes":[{"pos":[0,77],"content":"Gets the validation errors for a specified property or for the entire entity.","nodes":[{"content":"Gets the validation errors for a specified property or for the entire entity.","pos":[0,77]}]}],"pos":[5130,5208],"yaml":true},{"content":"This method returns an <xref:System.Collections.IEnumerable> that can change as asynchronous validation rules finish processing. This enables the binding engine to automatically update the user interface validation feedback when errors are added, removed, or modified.  \n  \n The return value can change to a different <xref:System.Collections.IEnumerable>, or it can reuse a previously returned <xref:System.Collections.IEnumerable> and change its contents. Any changes to the return value should raise the <xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged> event, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.","nodes":[{"pos":[0,268],"content":"This method returns an <xref:System.Collections.IEnumerable> that can change as asynchronous validation rules finish processing. This enables the binding engine to automatically update the user interface validation feedback when errors are added, removed, or modified.","nodes":[{"content":"This method returns an <xref:System.Collections.IEnumerable> that can change as asynchronous validation rules finish processing. This enables the binding engine to automatically update the user interface validation feedback when errors are added, removed, or modified.","pos":[0,268],"nodes":[{"content":"This method returns an <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable&gt;</ph> that can change as asynchronous validation rules finish processing.","pos":[0,128],"source":"This method returns an <xref:System.Collections.IEnumerable> that can change as asynchronous validation rules finish processing."},{"content":"This enables the binding engine to automatically update the user interface validation feedback when errors are added, removed, or modified.","pos":[129,268]}]}]},{"pos":[275,677],"content":"The return value can change to a different <xref:System.Collections.IEnumerable>, or it can reuse a previously returned <xref:System.Collections.IEnumerable> and change its contents. Any changes to the return value should raise the <xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged> event, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.","nodes":[{"content":"The return value can change to a different <xref:System.Collections.IEnumerable>, or it can reuse a previously returned <xref:System.Collections.IEnumerable> and change its contents. Any changes to the return value should raise the <xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged> event, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.","pos":[0,402],"nodes":[{"content":"The return value can change to a different <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable&gt;</ph>, or it can reuse a previously returned <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> and change its contents.","pos":[0,182],"source":"The return value can change to a different <xref:System.Collections.IEnumerable>, or it can reuse a previously returned <xref:System.Collections.IEnumerable> and change its contents."},{"content":"Any changes to the return value should raise the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&gt;</ph> event, even if the return value implements <ph id=\"ph2\">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>.","pos":[183,402],"source":" Any changes to the return value should raise the <xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged> event, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>."}]}]}],"pos":[5219,5901],"yaml":true,"extradata":"MT"},{"content":"The name of the property to retrieve validation errors for; or `null` or <xref href=\"System.String.Empty\"></xref>, to retrieve entity-level errors.","nodes":[{"pos":[0,147],"content":"The name of the property to retrieve validation errors for; or <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>, to retrieve entity-level errors.","source":"The name of the property to retrieve validation errors for; or `null` or <xref href=\"System.String.Empty\"></xref>, to retrieve entity-level errors."}],"pos":[6079,6227],"yaml":true},{"content":"The validation errors for the property or entity.","nodes":[{"pos":[0,49],"content":"The validation errors for the property or entity.","nodes":[{"content":"The validation errors for the property or entity.","pos":[0,49]}]}],"pos":[6301,6351],"yaml":true},{"content":"Gets a value that indicates whether the entity has validation errors.","nodes":[{"pos":[0,69],"content":"Gets a value that indicates whether the entity has validation errors.","nodes":[{"content":"Gets a value that indicates whether the entity has validation errors.","pos":[0,69]}]}],"pos":[7928,7998],"yaml":true},{"content":"This property returns `false` if there are no known entity-level or property-level validation errors for the entity at the time it is accessed. However, some validation rules may still be running asynchronously as described for the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> method.","nodes":[{"pos":[0,302],"content":"This property returns `false` if there are no known entity-level or property-level validation errors for the entity at the time it is accessed. However, some validation rules may still be running asynchronously as described for the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> method.","nodes":[{"content":"This property returns <ph id=\"ph1\">`false`</ph> if there are no known entity-level or property-level validation errors for the entity at the time it is accessed.","pos":[0,143],"source":"This property returns `false` if there are no known entity-level or property-level validation errors for the entity at the time it is accessed."},{"content":"However, some validation rules may still be running asynchronously as described for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A&gt;</ph> method.","pos":[144,302],"source":" However, some validation rules may still be running asynchronously as described for the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> method."}]}],"pos":[8009,8312],"yaml":true,"extradata":"MT"},{"content":"`true` if the entity currently has validation errors; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the entity currently has validation errors; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the entity currently has validation errors; otherwise, `false`."}],"pos":[8424,8500],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.INotifyDataErrorInfo\n  commentId: T:System.ComponentModel.INotifyDataErrorInfo\n  id: INotifyDataErrorInfo\n  children:\n  - System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  - System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  - System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  langs:\n  - csharp\n  name: INotifyDataErrorInfo\n  nameWithType: INotifyDataErrorInfo\n  fullName: System.ComponentModel.INotifyDataErrorInfo\n  type: Interface\n  assemblies:\n  - System.ObjectModel\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.\n  remarks: This interface enables data entity classes to implement custom validation rules and expose validation results asynchronously. This interface also supports custom error objects, multiple errors per property, cross-property errors, and entity-level errors. Cross-property errors are errors that affect multiple properties. You can associate these errors with one or all of the affected properties, or you can treat them as entity-level errors. Entity-level errors are errors that either affect multiple properties or affect the entire entity without affecting a particular property.\n  syntax:\n    content: public interface INotifyDataErrorInfo\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/INotifyDataErrorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  commentId: E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  id: ErrorsChanged\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  langs:\n  - csharp\n  name: ErrorsChanged\n  nameWithType: INotifyDataErrorInfo.ErrorsChanged\n  fullName: INotifyDataErrorInfo.ErrorsChanged\n  type: Event\n  assemblies:\n  - System.ObjectModel\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Occurs when the validation errors have changed for a property or for the entire entity.\n  remarks: The implementing class should raise this event on the user interface thread whenever the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> return value changes, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.\n  syntax:\n    content: public event EventHandler<System.ComponentModel.DataErrorsChangedEventArgs> ErrorsChanged;\n    return:\n      type: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/INotifyDataErrorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  commentId: M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  id: GetErrors(System.String)\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  langs:\n  - csharp\n  name: GetErrors(String)\n  nameWithType: INotifyDataErrorInfo.GetErrors(String)\n  fullName: INotifyDataErrorInfo.GetErrors(String)\n  type: Method\n  assemblies:\n  - System.ObjectModel\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the validation errors for a specified property or for the entire entity.\n  remarks: \"This method returns an <xref:System.Collections.IEnumerable> that can change as asynchronous validation rules finish processing. This enables the binding engine to automatically update the user interface validation feedback when errors are added, removed, or modified.  \\n  \\n The return value can change to a different <xref:System.Collections.IEnumerable>, or it can reuse a previously returned <xref:System.Collections.IEnumerable> and change its contents. Any changes to the return value should raise the <xref:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged> event, even if the return value implements <xref:System.Collections.Specialized.INotifyCollectionChanged>.\"\n  syntax:\n    content: public System.Collections.IEnumerable GetErrors (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to retrieve validation errors for; or `null` or <xref href=\"System.String.Empty\"></xref>, to retrieve entity-level errors.\n    return:\n      type: System.Collections.IEnumerable\n      description: The validation errors for the property or entity.\n  overload: System.ComponentModel.INotifyDataErrorInfo.GetErrors*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/INotifyDataErrorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  commentId: P:System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  id: HasErrors\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  langs:\n  - csharp\n  name: HasErrors\n  nameWithType: INotifyDataErrorInfo.HasErrors\n  fullName: INotifyDataErrorInfo.HasErrors\n  type: Property\n  assemblies:\n  - System.ObjectModel\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether the entity has validation errors.\n  remarks: This property returns `false` if there are no known entity-level or property-level validation errors for the entity at the time it is accessed. However, some validation rules may still be running asynchronously as described for the <xref:System.ComponentModel.INotifyDataErrorInfo.GetErrors%2A> method.\n  syntax:\n    content: public bool HasErrors { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the entity currently has validation errors; otherwise, `false`.'\n  overload: System.ComponentModel.INotifyDataErrorInfo.HasErrors*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/INotifyDataErrorInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  isExternal: false\n  name: ErrorsChanged\n  nameWithType: INotifyDataErrorInfo.ErrorsChanged\n  fullName: INotifyDataErrorInfo.ErrorsChanged\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.ComponentModel.DataErrorsChangedEventArgs\n  name: DataErrorsChangedEventArgs\n  nameWithType: DataErrorsChangedEventArgs\n  fullName: System.ComponentModel.DataErrorsChangedEventArgs\n- uid: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<DataErrorsChangedEventArgs>\n  nameWithType: EventHandler<DataErrorsChangedEventArgs>\n  fullName: System.EventHandler<System.ComponentModel.DataErrorsChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.DataErrorsChangedEventArgs\n    name: DataErrorsChangedEventArgs\n    nameWithType: DataErrorsChangedEventArgs\n    fullName: System.ComponentModel.DataErrorsChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  isExternal: false\n  name: GetErrors(String)\n  nameWithType: INotifyDataErrorInfo.GetErrors(String)\n  fullName: INotifyDataErrorInfo.GetErrors(String)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.INotifyDataErrorInfo.HasErrors\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  isExternal: false\n  name: HasErrors\n  nameWithType: INotifyDataErrorInfo.HasErrors\n  fullName: INotifyDataErrorInfo.HasErrors\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.INotifyDataErrorInfo.GetErrors*\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  isExternal: false\n  name: GetErrors\n  nameWithType: INotifyDataErrorInfo.GetErrors\n  fullName: INotifyDataErrorInfo.GetErrors\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/INotifyDataErrorInfo.xml\n- uid: System.ComponentModel.INotifyDataErrorInfo.HasErrors*\n  parent: System.ComponentModel.INotifyDataErrorInfo\n  isExternal: false\n  name: HasErrors\n  nameWithType: INotifyDataErrorInfo.HasErrors\n  fullName: INotifyDataErrorInfo.HasErrors\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/INotifyDataErrorInfo.xml\n"}