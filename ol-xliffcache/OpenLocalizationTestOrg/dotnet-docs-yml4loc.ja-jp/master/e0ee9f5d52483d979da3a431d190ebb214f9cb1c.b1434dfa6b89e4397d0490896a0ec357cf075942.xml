{"nodes":[{"content":"Represents information about how the taskbar thumbnail is displayed.","nodes":[{"pos":[0,68],"content":"Represents information about how the taskbar thumbnail is displayed.","nodes":[{"content":"Represents information about how the taskbar thumbnail is displayed.","pos":[0,68]}]}],"pos":[1207,1276],"yaml":true},{"content":"The <xref:System.Windows.Shell.TaskbarItemInfo> class provides a managed wrapper for [!INCLUDE[win7](~/includes/win7-md.md)] taskbar functionality. For more information about the Windows shell and native taskbar APIs, see [Taskbar Extensions](http://go.microsoft.com/fwlink/?LinkId=178479). <xref:System.Windows.Shell.TaskbarItemInfo> is exposed as the <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName> dependency property on a <xref:System.Windows.Window>.  \n  \n The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden. The functionality that is exposed by the <xref:System.Windows.Shell.TaskbarItemInfo> class is unavailable in versions of Windows earlier than [!INCLUDE[win7](~/includes/win7-md.md)]. Applications that use the <xref:System.Windows.Shell.TaskbarItemInfo> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions.  \n  \n In [!INCLUDE[win7](~/includes/win7-md.md)], some taskbar functionality might be unavailable, depending on the user's settings. For example, taskbar functionality is unavailable if [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] is disabled or if the application is started with elevated permissions. Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in [!INCLUDE[win7](~/includes/win7-md.md)].  \n  \n Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar hides program icons in the notification area. However, you can set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property to add an image to the taskbar button to communicate status, such as online status in a messaging application. The overlay image lets users see the application status even if they cannot see the program icon in the notification area. You can also display the progress of running tasks in the taskbar button by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> and <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> properties.  \n  \n The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button. By default the whole application window is shown. You can specify a particular part of the window to display in the thumbnail by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property. You can also specify a <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> that is displayed in a tooltip above the taskbar thumbnail. The tooltip is displayed even when the thumbnail cannot be seen because of user settings.  \n  \n You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window. For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.  \n  \n The following illustration shows the enhanced features of the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Enhanced Features","nodes":[{"pos":[0,480],"content":"The <xref:System.Windows.Shell.TaskbarItemInfo> class provides a managed wrapper for [!INCLUDE[win7](~/includes/win7-md.md)] taskbar functionality. For more information about the Windows shell and native taskbar APIs, see [Taskbar Extensions](http://go.microsoft.com/fwlink/?LinkId=178479). <xref:System.Windows.Shell.TaskbarItemInfo> is exposed as the <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName> dependency property on a <xref:System.Windows.Window>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class provides a managed wrapper for <ph id=\"ph2\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar functionality.","pos":[0,147],"source":"The <xref:System.Windows.Shell.TaskbarItemInfo> class provides a managed wrapper for [!INCLUDE[win7](~/includes/win7-md.md)] taskbar functionality."},{"content":"For more information about the Windows shell and native taskbar APIs, see <bpt id=\"p1\">[</bpt>Taskbar Extensions<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=178479)</ept>.","pos":[148,290],"source":" For more information about the Windows shell and native taskbar APIs, see [Taskbar Extensions](http://go.microsoft.com/fwlink/?LinkId=178479)."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> is exposed as the <ph id=\"ph2\">&lt;xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName&gt;</ph> dependency property on a <ph id=\"ph3\">&lt;xref:System.Windows.Window&gt;</ph>.","pos":[291,480],"source":" <xref:System.Windows.Shell.TaskbarItemInfo> is exposed as the <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName> dependency property on a <xref:System.Windows.Window>."}]},{"pos":[487,1089],"content":"The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden. The functionality that is exposed by the <xref:System.Windows.Shell.TaskbarItemInfo> class is unavailable in versions of Windows earlier than [!INCLUDE[win7](~/includes/win7-md.md)]. Applications that use the <xref:System.Windows.Shell.TaskbarItemInfo> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden.","pos":[0,220],"source":"The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden."},{"content":"The functionality that is exposed by the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class is unavailable in versions of Windows earlier than <ph id=\"ph2\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>.","pos":[221,403],"source":" The functionality that is exposed by the <xref:System.Windows.Shell.TaskbarItemInfo> class is unavailable in versions of Windows earlier than [!INCLUDE[win7](~/includes/win7-md.md)]."},{"content":"Applications that use the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions.","pos":[404,602],"source":" Applications that use the <xref:System.Windows.Shell.TaskbarItemInfo> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions."}]},{"pos":[1096,1577],"content":"In [!INCLUDE[win7](~/includes/win7-md.md)], some taskbar functionality might be unavailable, depending on the user's settings. For example, taskbar functionality is unavailable if [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] is disabled or if the application is started with elevated permissions. Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in [!INCLUDE[win7](~/includes/win7-md.md)].","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>, some taskbar functionality might be unavailable, depending on the user's settings.","pos":[0,126],"source":"In [!INCLUDE[win7](~/includes/win7-md.md)], some taskbar functionality might be unavailable, depending on the user's settings."},{"content":"For example, taskbar functionality is unavailable if <ph id=\"ph1\">[!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)]</ph> is disabled or if the application is started with elevated permissions.","pos":[127,311],"source":" For example, taskbar functionality is unavailable if [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] is disabled or if the application is started with elevated permissions."},{"content":"Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>.","pos":[312,481],"source":" Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in [!INCLUDE[win7](~/includes/win7-md.md)]."}]},{"pos":[1584,2388],"content":"Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar hides program icons in the notification area. However, you can set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property to add an image to the taskbar button to communicate status, such as online status in a messaging application. The overlay image lets users see the application status even if they cannot see the program icon in the notification area. You can also display the progress of running tasks in the taskbar button by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> and <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> properties.","nodes":[{"content":"Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user.","pos":[0,145]},{"content":"By default, the <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar hides program icons in the notification area.","pos":[146,255],"source":" By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar hides program icons in the notification area."},{"content":"However, you can set the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A&gt;</ph> property to add an image to the taskbar button to communicate status, such as online status in a messaging application.","pos":[256,455],"source":" However, you can set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property to add an image to the taskbar button to communicate status, such as online status in a messaging application."},{"content":"The overlay image lets users see the application status even if they cannot see the program icon in the notification area.","pos":[456,578]},{"content":"You can also display the progress of running tasks in the taskbar button by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> properties.","pos":[579,804],"source":" You can also display the progress of running tasks in the taskbar button by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> and <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> properties."}]},{"pos":[2395,2993],"content":"The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button. By default the whole application window is shown. You can specify a particular part of the window to display in the thumbnail by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property. You can also specify a <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> that is displayed in a tooltip above the taskbar thumbnail. The tooltip is displayed even when the thumbnail cannot be seen because of user settings.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button.","pos":[0,148],"source":"The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button."},{"content":"By default the whole application window is shown.","pos":[149,198]},{"content":"You can specify a particular part of the window to display in the thumbnail by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A&gt;</ph> property.","pos":[199,366],"source":" You can specify a particular part of the window to display in the thumbnail by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property."},{"content":"You can also specify a <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Description%2A&gt;</ph> that is displayed in a tooltip above the taskbar thumbnail.","pos":[367,508],"source":" You can also specify a <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> that is displayed in a tooltip above the taskbar thumbnail."},{"content":"The tooltip is displayed even when the thumbnail cannot be seen because of user settings.","pos":[509,598]}]},{"pos":[3000,3507],"content":"You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window. For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.","nodes":[{"content":"You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window. For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.","pos":[0,507],"nodes":[{"content":"You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window.","pos":[0,123]},{"content":"For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized.","pos":[124,302]},{"content":"Buttons in the taskbar thumbnail are represented by <ph id=\"ph1\">&lt;xref:System.Windows.Shell.ThumbButtonInfo&gt;</ph> objects and are contained in the <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A&gt;</ph> collection.","pos":[303,507],"source":" Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection."}]}]},{"pos":[3514,3624],"content":"The following illustration shows the enhanced features of the <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar.","source":"The following illustration shows the enhanced features of the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar."},{"pos":[3631,3763],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Enhanced Features","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Enhanced Features","pos":[99,132]}]}],"pos":[1287,5070],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Shell.TaskbarItemInfo\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Shell.TaskbarItemInfo\"></xref> class."}],"pos":[10382,10481],"yaml":true},{"content":"Gets or sets the text for the taskbar item tooltip.","nodes":[{"pos":[0,51],"content":"Gets or sets the text for the taskbar item tooltip.","nodes":[{"content":"Gets or sets the text for the taskbar item tooltip.","pos":[0,51]}]}],"pos":[12717,12769],"yaml":true},{"content":"The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button. If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.  \n  \n The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> tooltip.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Description","nodes":[{"pos":[0,203],"content":"The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button. If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.","nodes":[{"content":"The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button. If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.","pos":[0,203],"nodes":[{"content":"The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button.","pos":[0,103]},{"content":"If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.","pos":[104,203]}]}]},{"pos":[210,322],"content":"The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> tooltip.","nodes":[{"content":"The following illustration shows the taskbar <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Description%2A&gt;</ph> tooltip.","pos":[0,112],"source":"The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> tooltip."}]},{"pos":[329,455],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Description","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Description","pos":[99,126]}]}],"pos":[12780,13245],"yaml":true,"extradata":"MT"},{"content":"The text for the taskbar item tooltip. The default is an empty string.","nodes":[{"pos":[0,70],"content":"The text for the taskbar item tooltip. The default is an empty string.","nodes":[{"content":"The text for the taskbar item tooltip. The default is an empty string.","pos":[0,70],"nodes":[{"content":"The text for the taskbar item tooltip.","pos":[0,38]},{"content":"The default is an empty string.","pos":[39,70]}]}]}],"pos":[13809,13880],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.Description\"></xref> dependency property.","nodes":[{"pos":[0,105],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo.Description\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.Description\"></xref> dependency property."}],"pos":[14924,15030],"yaml":true},{"content":"Gets or sets the image that is displayed over the program icon in the taskbar button.","nodes":[{"pos":[0,85],"content":"Gets or sets the image that is displayed over the program icon in the taskbar button.","nodes":[{"content":"Gets or sets the image that is displayed over the program icon in the taskbar button.","pos":[0,85]}]}],"pos":[16146,16232],"yaml":true},{"content":"You can add an image to the program icon in the taskbar button to communicate application status to the user. The overlay uses a static or animated <xref:System.Windows.Media.ImageSource> that is positioned over the bottom-right corner of the icon in the taskbar button. The overlay is not displayed if the user sets the taskbar to show small icons.  \n  \n Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. In [!INCLUDE[win7](~/includes/win7-md.md)], program icons in the notification area are hidden by default, and are therefore, less useful for communicating status. You can use the taskbar button overlay in [!INCLUDE[win7](~/includes/win7-md.md)] to communicate status when the icon in the notification area is hidden. Your application can detect the version of Windows and provide notifications in a manner that is appropriate for the operating system.  \n  \n Overlay images are rendered at the appropriate size. If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used.  \n  \n The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Overlay","nodes":[{"pos":[0,349],"content":"You can add an image to the program icon in the taskbar button to communicate application status to the user. The overlay uses a static or animated <xref:System.Windows.Media.ImageSource> that is positioned over the bottom-right corner of the icon in the taskbar button. The overlay is not displayed if the user sets the taskbar to show small icons.","nodes":[{"content":"You can add an image to the program icon in the taskbar button to communicate application status to the user. The overlay uses a static or animated <xref:System.Windows.Media.ImageSource> that is positioned over the bottom-right corner of the icon in the taskbar button. The overlay is not displayed if the user sets the taskbar to show small icons.","pos":[0,349],"nodes":[{"content":"You can add an image to the program icon in the taskbar button to communicate application status to the user.","pos":[0,109]},{"content":"The overlay uses a static or animated <ph id=\"ph1\">&lt;xref:System.Windows.Media.ImageSource&gt;</ph> that is positioned over the bottom-right corner of the icon in the taskbar button.","pos":[110,270],"source":" The overlay uses a static or animated <xref:System.Windows.Media.ImageSource> that is positioned over the bottom-right corner of the icon in the taskbar button."},{"content":"The overlay is not displayed if the user sets the taskbar to show small icons.","pos":[271,349]}]}]},{"pos":[356,953],"content":"Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. In [!INCLUDE[win7](~/includes/win7-md.md)], program icons in the notification area are hidden by default, and are therefore, less useful for communicating status. You can use the taskbar button overlay in [!INCLUDE[win7](~/includes/win7-md.md)] to communicate status when the icon in the notification area is hidden. Your application can detect the version of Windows and provide notifications in a manner that is appropriate for the operating system.","nodes":[{"content":"Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user.","pos":[0,145]},{"content":"In <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>, program icons in the notification area are hidden by default, and are therefore, less useful for communicating status.","pos":[146,308],"source":" In [!INCLUDE[win7](~/includes/win7-md.md)], program icons in the notification area are hidden by default, and are therefore, less useful for communicating status."},{"content":"You can use the taskbar button overlay in <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> to communicate status when the icon in the notification area is hidden.","pos":[309,462],"source":" You can use the taskbar button overlay in [!INCLUDE[win7](~/includes/win7-md.md)] to communicate status when the icon in the notification area is hidden."},{"content":"Your application can detect the version of Windows and provide notifications in a manner that is appropriate for the operating system.","pos":[463,597]}]},{"pos":[960,1141],"content":"Overlay images are rendered at the appropriate size. If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used.","nodes":[{"content":"Overlay images are rendered at the appropriate size. If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used.","pos":[0,181],"nodes":[{"content":"Overlay images are rendered at the appropriate size.","pos":[0,52]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Media.ImageSource&gt;</ph> represents an <ph id=\"ph2\">&lt;xref:System.Drawing.Icon&gt;</ph>, the appropriate bit depth is also used.","pos":[53,181],"source":" If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used."}]}]},{"pos":[1148,1248],"content":"The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>.","nodes":[{"content":"The following illustration shows the taskbar <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A&gt;</ph>.","pos":[0,100],"source":"The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>."}]},{"pos":[1255,1377],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Overlay","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Overlay","pos":[99,122]}]}],"pos":[16243,17634],"yaml":true,"extradata":"MT"},{"content":"The image that is displayed over the program icon in the taskbar button. The default is `null`.","nodes":[{"pos":[0,95],"content":"The image that is displayed over the program icon in the taskbar button. The default is `null`.","nodes":[{"content":"The image that is displayed over the program icon in the taskbar button.","pos":[0,72]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[73,95],"source":" The default is `null`."}]}],"pos":[18644,18740],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.Overlay\"></xref> dependency property.","nodes":[{"pos":[0,101],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo.Overlay\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.Overlay\"></xref> dependency property."}],"pos":[19778,19880],"yaml":true},{"content":"Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.","nodes":[{"pos":[0,98],"content":"Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.","nodes":[{"content":"Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.","pos":[0,98]}]}],"pos":[21028,21127],"yaml":true},{"content":"You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. When the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, the indicator is green. When <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, the indicator is yellow. When <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the indicator is red. For these states, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines how much of the taskbar button is filled by the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for other values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.  \n  \n The following illustration shows the taskbar progress indicator in the <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> state.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Progress Indicator","nodes":[{"pos":[0,1247],"content":"You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. When the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, the indicator is green. When <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, the indicator is yellow. When <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the indicator is red. For these states, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines how much of the taskbar button is filled by the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for other values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.","nodes":[{"content":"You can communicate the progress of long-running tasks by displaying a progress indicator in a <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar button.","pos":[0,150],"source":"You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button."},{"content":"The color of the indicator is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> property, which contains one of the <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState&gt;</ph> enumeration values.","pos":[151,368],"source":" The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Normal&gt;</ph>, the indicator is green.","pos":[369,526],"source":" When the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, the indicator is green."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Paused&gt;</ph>, the indicator is yellow.","pos":[527,617],"source":" When <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, the indicator is yellow."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Error&gt;</ph>, the indicator is red.","pos":[618,704],"source":" When <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the indicator is red."},{"content":"For these states, the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> property determines how much of the taskbar button is filled by the progress indicator.","pos":[705,875],"source":" For these states, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines how much of the taskbar button is filled by the progress indicator."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> is ignored for other values of <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph>.","pos":[876,1029],"source":" <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for other values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate&gt;</ph> shows a pulsing green indicator across the entire taskbar button.","pos":[1030,1162],"source":" <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button."},{"content":"No indicator is shown for <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.None&gt;</ph>.","pos":[1163,1247],"source":" No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>."}]},{"pos":[1254,1391],"content":"The following illustration shows the taskbar progress indicator in the <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> state.","nodes":[{"content":"The following illustration shows the taskbar progress indicator in the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Normal&gt;</ph> state.","pos":[0,137],"source":"The following illustration shows the taskbar progress indicator in the <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> state."}]},{"pos":[1398,1531],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Progress Indicator","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Progress Indicator","pos":[99,133]}]}],"pos":[21138,22679],"yaml":true,"extradata":"MT"},{"content":"An enumeration value that indicates how the progress indicator is displayed in the taskbar button. The default is <xref href=\"System.Windows.Shell.TaskbarItemProgressState.None\"></xref>.","nodes":[{"pos":[0,186],"content":"An enumeration value that indicates how the progress indicator is displayed in the taskbar button. The default is <xref href=\"System.Windows.Shell.TaskbarItemProgressState.None\"></xref>.","nodes":[{"content":"An enumeration value that indicates how the progress indicator is displayed in the taskbar button.","pos":[0,98]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemProgressState.None\"&gt;&lt;/xref&gt;</ph>.","pos":[99,186],"source":" The default is <xref href=\"System.Windows.Shell.TaskbarItemProgressState.None\"></xref>."}]}],"pos":[23647,23834],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressState\"></xref> dependency property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressState\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressState\"></xref> dependency property."}],"pos":[24914,25022],"yaml":true},{"content":"Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.","nodes":[{"pos":[0,97],"content":"Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.","nodes":[{"content":"Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.","pos":[0,97]}]}],"pos":[26176,26274],"yaml":true},{"content":"The <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property is represented as a value between 0.0 and 1.0. Numbers smaller and larger are coerced to be within those bounds. <xref:System.Double.NaN> is coerced to 0.  \n  \n You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. If the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, or <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines the fullness of the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for some values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.  \n  \n The following illustration shows the taskbar progress indicator with a <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> of 82 percent.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Progress Indicator","nodes":[{"pos":[0,228],"content":"The <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property is represented as a value between 0.0 and 1.0. Numbers smaller and larger are coerced to be within those bounds. <xref:System.Double.NaN> is coerced to 0.","nodes":[{"content":"The <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property is represented as a value between 0.0 and 1.0. Numbers smaller and larger are coerced to be within those bounds. <xref:System.Double.NaN> is coerced to 0.","pos":[0,228],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> property is represented as a value between 0.0 and 1.0.","pos":[0,120],"source":"The <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property is represented as a value between 0.0 and 1.0."},{"content":"Numbers smaller and larger are coerced to be within those bounds.","pos":[121,186]},{"content":"<ph id=\"ph1\">&lt;xref:System.Double.NaN&gt;</ph> is coerced to 0.","pos":[187,228],"source":" <xref:System.Double.NaN> is coerced to 0."}]}]},{"pos":[235,1364],"content":"You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. If the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, or <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines the fullness of the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for some values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.","nodes":[{"content":"You can communicate the progress of long-running tasks by displaying a progress indicator in a <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar button.","pos":[0,150],"source":"You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button."},{"content":"The color of the indicator is determined by the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> property, which contains one of the <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState&gt;</ph> enumeration values.","pos":[151,368],"source":" The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Normal&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Paused&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Error&gt;</ph>, the <ph id=\"ph5\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> property determines the fullness of the progress indicator.","pos":[369,758],"source":" If the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, or <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines the fullness of the progress indicator."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> is ignored for some values of <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph>.","pos":[759,911],"source":" <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for some values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate&gt;</ph> shows a pulsing green indicator across the entire taskbar button.","pos":[912,1044],"source":" <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button."},{"content":"No indicator is shown for <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.None&gt;</ph>.","pos":[1045,1129],"source":" No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>."}]},{"pos":[1371,1517],"content":"The following illustration shows the taskbar progress indicator with a <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> of 82 percent.","nodes":[{"content":"The following illustration shows the taskbar progress indicator with a <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> of 82 percent.","pos":[0,146],"source":"The following illustration shows the taskbar progress indicator with a <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> of 82 percent."}]},{"pos":[1524,1657],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Progress Indicator","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Progress Indicator","pos":[99,133]}]}],"pos":[26285,27954],"yaml":true,"extradata":"MT"},{"content":"A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.","nodes":[{"pos":[0,102],"content":"A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.","nodes":[{"content":"A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.","pos":[0,102],"nodes":[{"content":"A value that indicates the fullness of the progress indicator in the taskbar button.","pos":[0,84]},{"content":"The default is 0.","pos":[85,102]}]}]}],"pos":[28796,28899],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressValue\"></xref> dependency property.","nodes":[{"pos":[0,107],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressValue\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressValue\"></xref> dependency property."}],"pos":[29957,30065],"yaml":true},{"content":"Gets or sets the collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>.","nodes":[{"pos":[0,169],"content":"Gets or sets the collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.ThumbButtonInfo\"&gt;&lt;/xref&gt;</ph> objects that are associated with the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Window\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>."}],"pos":[31237,31407],"yaml":true},{"content":"You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window. For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.  \n  \n The [!INCLUDE[win7](~/includes/win7-md.md)] shell allows a maximum of seven buttons in the taskbar thumbnail. If more than seven <xref:System.Windows.Shell.ThumbButtonInfo> objects are added to the <xref:System.Windows.Shell.ThumbButtonInfoCollection>, the additional objects are treated as overflow. When a button is <xref:System.Windows.Visibility.Collapsed>, it does not have any visible elements, and no space is reserved for it. In this case, additional buttons from the <xref:System.Windows.Shell.ThumbButtonInfoCollection> overflow are displayed.  \n  \n The following illustration shows the taskbar preview with a collection of two thumb buttons.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Thumb Buttons","nodes":[{"pos":[0,528],"content":"You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window. For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.","nodes":[{"content":"You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window. For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.","pos":[0,528],"nodes":[{"content":"You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window.","pos":[0,141]},{"content":"For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized.","pos":[142,323]},{"content":"Buttons in the taskbar thumbnail are represented by <ph id=\"ph1\">&lt;xref:System.Windows.Shell.ThumbButtonInfo&gt;</ph> objects and are contained in the <ph id=\"ph2\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A&gt;</ph> collection.","pos":[324,528],"source":" Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection."}]}]},{"pos":[535,1088],"content":"The [!INCLUDE[win7](~/includes/win7-md.md)] shell allows a maximum of seven buttons in the taskbar thumbnail. If more than seven <xref:System.Windows.Shell.ThumbButtonInfo> objects are added to the <xref:System.Windows.Shell.ThumbButtonInfoCollection>, the additional objects are treated as overflow. When a button is <xref:System.Windows.Visibility.Collapsed>, it does not have any visible elements, and no space is reserved for it. In this case, additional buttons from the <xref:System.Windows.Shell.ThumbButtonInfoCollection> overflow are displayed.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> shell allows a maximum of seven buttons in the taskbar thumbnail.","pos":[0,109],"source":"The [!INCLUDE[win7](~/includes/win7-md.md)] shell allows a maximum of seven buttons in the taskbar thumbnail."},{"content":"If more than seven <ph id=\"ph1\">&lt;xref:System.Windows.Shell.ThumbButtonInfo&gt;</ph> objects are added to the <ph id=\"ph2\">&lt;xref:System.Windows.Shell.ThumbButtonInfoCollection&gt;</ph>, the additional objects are treated as overflow.","pos":[110,300],"source":" If more than seven <xref:System.Windows.Shell.ThumbButtonInfo> objects are added to the <xref:System.Windows.Shell.ThumbButtonInfoCollection>, the additional objects are treated as overflow."},{"content":"When a button is <ph id=\"ph1\">&lt;xref:System.Windows.Visibility.Collapsed&gt;</ph>, it does not have any visible elements, and no space is reserved for it.","pos":[301,433],"source":" When a button is <xref:System.Windows.Visibility.Collapsed>, it does not have any visible elements, and no space is reserved for it."},{"content":"In this case, additional buttons from the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.ThumbButtonInfoCollection&gt;</ph> overflow are displayed.","pos":[434,553],"source":" In this case, additional buttons from the <xref:System.Windows.Shell.ThumbButtonInfoCollection> overflow are displayed."}]},{"pos":[1095,1187],"content":"The following illustration shows the taskbar preview with a collection of two thumb buttons.","nodes":[{"content":"The following illustration shows the taskbar preview with a collection of two thumb buttons.","pos":[0,92]}]},{"pos":[1194,1322],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Thumb Buttons","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Thumb Buttons","pos":[99,128]}]}],"pos":[31418,32752],"yaml":true,"extradata":"MT"},{"content":"The collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>. The default is an empty collection.","nodes":[{"pos":[0,192],"content":"The collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>. The default is an empty collection.","nodes":[{"content":"The collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.ThumbButtonInfo\"&gt;&lt;/xref&gt;</ph> objects that are associated with the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Window\"&gt;&lt;/xref&gt;</ph>.","pos":[0,156],"source":"The collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>."},{"content":"The default is an empty collection.","pos":[157,192]}]}],"pos":[33512,33705],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\"></xref> dependency property.","nodes":[{"pos":[0,110],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\"></xref> dependency property."}],"pos":[34806,34917],"yaml":true},{"content":"Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.","nodes":[{"pos":[0,128],"content":"Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.","nodes":[{"content":"Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.","pos":[0,128]}]}],"pos":[36110,36239],"yaml":true},{"content":"By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a scaled thumbnail of an application window's client area. You can set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property to specify a cropped area of the client window that is displayed in the thumbnail. For example, this property is useful if you want to focus the thumbnail on the window content while you exclude the application toolbars. This property cannot be used to display content in the thumbnail that is not already visible in the application window.  \n  \n You specify the area that is displayed in the thumbnail by setting the <xref:System.Windows.Thickness> of the border around the area. The border starts at the edge of the client window and extends inward by the specified amount. Content inside the border is displayed in the thumbnail.  \n  \n The following illustration shows the borders that define the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>.  \n  \n ![Thumbnail clip margin](~/add/media/wpfshell-clipmargin.png \"Thumbnail clip margin\")  \nThumbnail Clip Margin Border  \n  \n The following illustration shows the clipped thumbnail preview.  \n  \n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Thumbnail Preview","nodes":[{"pos":[0,564],"content":"By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a scaled thumbnail of an application window's client area. You can set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property to specify a cropped area of the client window that is displayed in the thumbnail. For example, this property is useful if you want to focus the thumbnail on the window content while you exclude the application toolbars. This property cannot be used to display content in the thumbnail that is not already visible in the application window.","nodes":[{"content":"By default, the <ph id=\"ph1\">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar displays a scaled thumbnail of an application window's client area.","pos":[0,131],"source":"By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a scaled thumbnail of an application window's client area."},{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A&gt;</ph> property to specify a cropped area of the client window that is displayed in the thumbnail.","pos":[132,306],"source":" You can set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property to specify a cropped area of the client window that is displayed in the thumbnail."},{"content":"For example, this property is useful if you want to focus the thumbnail on the window content while you exclude the application toolbars.","pos":[307,444]},{"content":"This property cannot be used to display content in the thumbnail that is not already visible in the application window.","pos":[445,564]}]},{"pos":[571,856],"content":"You specify the area that is displayed in the thumbnail by setting the <xref:System.Windows.Thickness> of the border around the area. The border starts at the edge of the client window and extends inward by the specified amount. Content inside the border is displayed in the thumbnail.","nodes":[{"content":"You specify the area that is displayed in the thumbnail by setting the <xref:System.Windows.Thickness> of the border around the area. The border starts at the edge of the client window and extends inward by the specified amount. Content inside the border is displayed in the thumbnail.","pos":[0,285],"nodes":[{"content":"You specify the area that is displayed in the thumbnail by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Thickness&gt;</ph> of the border around the area.","pos":[0,133],"source":"You specify the area that is displayed in the thumbnail by setting the <xref:System.Windows.Thickness> of the border around the area."},{"content":"The border starts at the edge of the client window and extends inward by the specified amount.","pos":[134,228]},{"content":"Content inside the border is displayed in the thumbnail.","pos":[229,285]}]}]},{"pos":[863,991],"content":"The following illustration shows the borders that define the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>.","nodes":[{"content":"The following illustration shows the borders that define the <ph id=\"ph1\">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A&gt;</ph>.","pos":[0,128],"source":"The following illustration shows the borders that define the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>."}]},{"pos":[998,1114],"content":"![Thumbnail clip margin](~/add/media/wpfshell-clipmargin.png \"Thumbnail clip margin\")  \nThumbnail Clip Margin Border","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Thumbnail clip margin<ept id=\"p1\">](~/add/media/wpfshell-clipmargin.png \"Thumbnail clip margin\")</ept>","pos":[0,85],"source":"![Thumbnail clip margin](~/add/media/wpfshell-clipmargin.png \"Thumbnail clip margin\")"},{"content":"Thumbnail Clip Margin Border","pos":[88,116]}]},{"pos":[1121,1184],"content":"The following illustration shows the clipped thumbnail preview.","nodes":[{"content":"The following illustration shows the clipped thumbnail preview.","pos":[0,63]}]},{"pos":[1191,1323],"content":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")  \nWindows Taskbar Thumbnail Preview","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Taskbar Item Info Sample<ept id=\"p1\">](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")</ept>","pos":[0,96],"source":"![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \"Taskbar Item Info Sample\")"},{"content":"Windows Taskbar Thumbnail Preview","pos":[99,132]}]}],"pos":[36250,37592],"yaml":true,"extradata":"MT"},{"content":"A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail. The default is an empty <xref href=\"System.Windows.Thickness\"></xref>.","nodes":[{"pos":[0,186],"content":"A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail. The default is an empty <xref href=\"System.Windows.Thickness\"></xref>.","nodes":[{"content":"A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.","pos":[0,115]},{"content":"The default is an empty <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph>.","pos":[116,186],"source":" The default is an empty <xref href=\"System.Windows.Thickness\"></xref>."}]}],"pos":[38201,38388],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\"></xref> dependency property.","nodes":[{"pos":[0,113],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\"></xref> dependency property."}],"pos":[39510,39624],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Shell.TaskbarItemInfo\n  commentId: T:System.Windows.Shell.TaskbarItemInfo\n  id: TaskbarItemInfo\n  children:\n  - System.Windows.Shell.TaskbarItemInfo.#ctor\n  - System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore\n  - System.Windows.Shell.TaskbarItemInfo.Description\n  - System.Windows.Shell.TaskbarItemInfo.DescriptionProperty\n  - System.Windows.Shell.TaskbarItemInfo.Overlay\n  - System.Windows.Shell.TaskbarItemInfo.OverlayProperty\n  - System.Windows.Shell.TaskbarItemInfo.ProgressState\n  - System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty\n  - System.Windows.Shell.TaskbarItemInfo.ProgressValue\n  - System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty\n  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\n  - System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty\n  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\n  - System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty\n  langs:\n  - csharp\n  name: TaskbarItemInfo\n  nameWithType: TaskbarItemInfo\n  fullName: System.Windows.Shell.TaskbarItemInfo\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Represents information about how the taskbar thumbnail is displayed.\n  remarks: \"The <xref:System.Windows.Shell.TaskbarItemInfo> class provides a managed wrapper for [!INCLUDE[win7](~/includes/win7-md.md)] taskbar functionality. For more information about the Windows shell and native taskbar APIs, see [Taskbar Extensions](http://go.microsoft.com/fwlink/?LinkId=178479). <xref:System.Windows.Shell.TaskbarItemInfo> is exposed as the <xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName> dependency property on a <xref:System.Windows.Window>.  \\n  \\n The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden. The functionality that is exposed by the <xref:System.Windows.Shell.TaskbarItemInfo> class is unavailable in versions of Windows earlier than [!INCLUDE[win7](~/includes/win7-md.md)]. Applications that use the <xref:System.Windows.Shell.TaskbarItemInfo> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions.  \\n  \\n In [!INCLUDE[win7](~/includes/win7-md.md)], some taskbar functionality might be unavailable, depending on the user's settings. For example, taskbar functionality is unavailable if [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] is disabled or if the application is started with elevated permissions. Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in [!INCLUDE[win7](~/includes/win7-md.md)].  \\n  \\n Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar hides program icons in the notification area. However, you can set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property to add an image to the taskbar button to communicate status, such as online status in a messaging application. The overlay image lets users see the application status even if they cannot see the program icon in the notification area. You can also display the progress of running tasks in the taskbar button by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> and <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> properties.  \\n  \\n The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button. By default the whole application window is shown. You can specify a particular part of the window to display in the thumbnail by setting the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property. You can also specify a <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> that is displayed in a tooltip above the taskbar thumbnail. The tooltip is displayed even when the thumbnail cannot be seen because of user settings.  \\n  \\n You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window. For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.  \\n  \\n The following illustration shows the enhanced features of the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Enhanced Features\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item.  \\n  \\n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  \\n  \\n The following markup and code shows the previous example in its full context. The application uses a <xref:System.ComponentModel.BackgroundWorker> to count from 0 to 100 and displays its progress in the user interface. The task can be started and stopped from the taskbar preview. The progress is displayed in the taskbar button.  \\n  \\n [!code-xml[Shell_TaskbarItemSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  \\n  \\n [!code-csharp[Shell_TaskbarItemSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]\\n [!code-vb[Shell_TaskbarItemSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]\"\n  syntax:\n    content: 'public sealed class TaskbarItemInfo : System.Windows.Freezable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.#ctor\n  commentId: M:System.Windows.Shell.TaskbarItemInfo.#ctor\n  id: '#ctor'\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: TaskbarItemInfo()\n  nameWithType: TaskbarItemInfo.TaskbarItemInfo()\n  fullName: TaskbarItemInfo.TaskbarItemInfo()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Shell.TaskbarItemInfo\"></xref> class.\n  syntax:\n    content: public TaskbarItemInfo ();\n    parameters: []\n  overload: System.Windows.Shell.TaskbarItemInfo.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore\n  commentId: M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: TaskbarItemInfo.CreateInstanceCore()\n  fullName: TaskbarItemInfo.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: ''\n  overload: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.Description\n  commentId: P:System.Windows.Shell.TaskbarItemInfo.Description\n  id: Description\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: Description\n  nameWithType: TaskbarItemInfo.Description\n  fullName: TaskbarItemInfo.Description\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Gets or sets the text for the taskbar item tooltip.\n  remarks: \"The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button. If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.  \\n  \\n The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> tooltip.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Description\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the <xref:System.Windows.Shell.TaskbarItemInfo.Description%2A> property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \\n  \\n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]\"\n  syntax:\n    content: public string Description { get; set; }\n    return:\n      type: System.String\n      description: The text for the taskbar item tooltip. The default is an empty string.\n  overload: System.Windows.Shell.TaskbarItemInfo.Description*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty\n  commentId: F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty\n  id: DescriptionProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: DescriptionProperty\n  nameWithType: TaskbarItemInfo.DescriptionProperty\n  fullName: TaskbarItemInfo.DescriptionProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.Description\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty DescriptionProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.Overlay\n  commentId: P:System.Windows.Shell.TaskbarItemInfo.Overlay\n  id: Overlay\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: Overlay\n  nameWithType: TaskbarItemInfo.Overlay\n  fullName: TaskbarItemInfo.Overlay\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Gets or sets the image that is displayed over the program icon in the taskbar button.\n  remarks: \"You can add an image to the program icon in the taskbar button to communicate application status to the user. The overlay uses a static or animated <xref:System.Windows.Media.ImageSource> that is positioned over the bottom-right corner of the icon in the taskbar button. The overlay is not displayed if the user sets the taskbar to show small icons.  \\n  \\n Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user. In [!INCLUDE[win7](~/includes/win7-md.md)], program icons in the notification area are hidden by default, and are therefore, less useful for communicating status. You can use the taskbar button overlay in [!INCLUDE[win7](~/includes/win7-md.md)] to communicate status when the icon in the notification area is hidden. Your application can detect the version of Windows and provide notifications in a manner that is appropriate for the operating system.  \\n  \\n Overlay images are rendered at the appropriate size. If the <xref:System.Windows.Media.ImageSource> represents an <xref:System.Drawing.Icon>, the appropriate bit depth is also used.  \\n  \\n The following illustration shows the taskbar <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Overlay\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \\n  \\n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  \\n  \\n The following example shows how to set the <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> property in code.  \\n  \\n [!code-csharp[Shell_TaskbarItemSample#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]\\n [!code-vb[Shell_TaskbarItemSample#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]\"\n  syntax:\n    content: public System.Windows.Media.ImageSource Overlay { get; set; }\n    return:\n      type: System.Windows.Media.ImageSource\n      description: The image that is displayed over the program icon in the taskbar button. The default is `null`.\n  overload: System.Windows.Shell.TaskbarItemInfo.Overlay*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty\n  commentId: F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty\n  id: OverlayProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: OverlayProperty\n  nameWithType: TaskbarItemInfo.OverlayProperty\n  fullName: TaskbarItemInfo.OverlayProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.Overlay\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty OverlayProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState\n  commentId: P:System.Windows.Shell.TaskbarItemInfo.ProgressState\n  id: ProgressState\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ProgressState\n  nameWithType: TaskbarItemInfo.ProgressState\n  fullName: TaskbarItemInfo.ProgressState\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.\n  remarks: \"You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. When the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, the indicator is green. When <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, the indicator is yellow. When <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the indicator is red. For these states, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines how much of the taskbar button is filled by the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for other values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.  \\n  \\n The following illustration shows the taskbar progress indicator in the <xref:System.Windows.Shell.TaskbarItemProgressState.Normal> state.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Progress Indicator\"\n  example:\n  - \"The following example shows how to set the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property in code. The state is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=fullName> event to indicate whether the background task was stopped by the user, ended with an error, or completed normally. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \\n  \\n [!code-csharp[Shell_TaskbarItemSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]\\n [!code-vb[Shell_TaskbarItemSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]\"\n  syntax:\n    content: public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }\n    return:\n      type: System.Windows.Shell.TaskbarItemProgressState\n      description: An enumeration value that indicates how the progress indicator is displayed in the taskbar button. The default is <xref href=\"System.Windows.Shell.TaskbarItemProgressState.None\"></xref>.\n  overload: System.Windows.Shell.TaskbarItemInfo.ProgressState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty\n  commentId: F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty\n  id: ProgressStateProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ProgressStateProperty\n  nameWithType: TaskbarItemInfo.ProgressStateProperty\n  fullName: TaskbarItemInfo.ProgressStateProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressState\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ProgressStateProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue\n  commentId: P:System.Windows.Shell.TaskbarItemInfo.ProgressValue\n  id: ProgressValue\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ProgressValue\n  nameWithType: TaskbarItemInfo.ProgressValue\n  fullName: TaskbarItemInfo.ProgressValue\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.\n  remarks: \"The <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property is represented as a value between 0.0 and 1.0. Numbers smaller and larger are coerced to be within those bounds. <xref:System.Double.NaN> is coerced to 0.  \\n  \\n You can communicate the progress of long-running tasks by displaying a progress indicator in a [!INCLUDE[win7](~/includes/win7-md.md)] taskbar button. The color of the indicator is determined by the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property, which contains one of the <xref:System.Windows.Shell.TaskbarItemProgressState> enumeration values. If the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> property is <xref:System.Windows.Shell.TaskbarItemProgressState.Normal>, <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>, or <xref:System.Windows.Shell.TaskbarItemProgressState.Error>, the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property determines the fullness of the progress indicator. <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> is ignored for some values of <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>. <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> shows a pulsing green indicator across the entire taskbar button. No indicator is shown for <xref:System.Windows.Shell.TaskbarItemProgressState.None>.  \\n  \\n The following illustration shows the taskbar progress indicator with a <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> of 82 percent.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Progress Indicator\"\n  example:\n  - \"The following example shows how to set the <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> property in code. The value is set in the handler of a <xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=fullName> event to indicate the current progress of the background task. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \\n  \\n [!code-csharp[Shell_TaskbarItemSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]\\n [!code-vb[Shell_TaskbarItemSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]\"\n  syntax:\n    content: public double ProgressValue { get; set; }\n    return:\n      type: System.Double\n      description: A value that indicates the fullness of the progress indicator in the taskbar button. The default is 0.\n  overload: System.Windows.Shell.TaskbarItemInfo.ProgressValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty\n  commentId: F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty\n  id: ProgressValueProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ProgressValueProperty\n  nameWithType: TaskbarItemInfo.ProgressValueProperty\n  fullName: TaskbarItemInfo.ProgressValueProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ProgressValue\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ProgressValueProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\n  commentId: P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\n  id: ThumbButtonInfos\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ThumbButtonInfos\n  nameWithType: TaskbarItemInfo.ThumbButtonInfos\n  fullName: TaskbarItemInfo.ThumbButtonInfos\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Gets or sets the collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>.\n  remarks: \"You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window. For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized. Buttons in the taskbar thumbnail are represented by <xref:System.Windows.Shell.ThumbButtonInfo> objects and are contained in the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> collection.  \\n  \\n The [!INCLUDE[win7](~/includes/win7-md.md)] shell allows a maximum of seven buttons in the taskbar thumbnail. If more than seven <xref:System.Windows.Shell.ThumbButtonInfo> objects are added to the <xref:System.Windows.Shell.ThumbButtonInfoCollection>, the additional objects are treated as overflow. When a button is <xref:System.Windows.Visibility.Collapsed>, it does not have any visible elements, and no space is reserved for it. In this case, additional buttons from the <xref:System.Windows.Shell.ThumbButtonInfoCollection> overflow are displayed.  \\n  \\n The following illustration shows the taskbar preview with a collection of two thumb buttons.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Thumb Buttons\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup. The <xref:System.Windows.Shell.TaskbarItemInfo> contains a collection of <xref:System.Windows.Shell.ThumbButtonInfo> objects that provide access to the Play and Stop commands from the taskbar item. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \\n  \\n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]\"\n  syntax:\n    content: public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }\n    return:\n      type: System.Windows.Shell.ThumbButtonInfoCollection\n      description: The collection of <xref href=\"System.Windows.Shell.ThumbButtonInfo\"></xref> objects that are associated with the <xref href=\"System.Windows.Window\"></xref>. The default is an empty collection.\n  overload: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty\n  commentId: F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty\n  id: ThumbButtonInfosProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ThumbButtonInfosProperty\n  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty\n  fullName: TaskbarItemInfo.ThumbButtonInfosProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\n  commentId: P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\n  id: ThumbnailClipMargin\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ThumbnailClipMargin\n  nameWithType: TaskbarItemInfo.ThumbnailClipMargin\n  fullName: TaskbarItemInfo.ThumbnailClipMargin\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.\n  remarks: \"By default, the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar displays a scaled thumbnail of an application window's client area. You can set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property to specify a cropped area of the client window that is displayed in the thumbnail. For example, this property is useful if you want to focus the thumbnail on the window content while you exclude the application toolbars. This property cannot be used to display content in the thumbnail that is not already visible in the application window.  \\n  \\n You specify the area that is displayed in the thumbnail by setting the <xref:System.Windows.Thickness> of the border around the area. The border starts at the edge of the client window and extends inward by the specified amount. Content inside the border is displayed in the thumbnail.  \\n  \\n The following illustration shows the borders that define the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>.  \\n  \\n ![Thumbnail clip margin](~/add/media/wpfshell-clipmargin.png \\\"Thumbnail clip margin\\\")  \\nThumbnail Clip Margin Border  \\n  \\n The following illustration shows the clipped thumbnail preview.  \\n  \\n ![Taskbar Item Info Sample](~/add/media/wpfshell-taskbariteminfo.png \\\"Taskbar Item Info Sample\\\")  \\nWindows Taskbar Thumbnail Preview\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Shell.TaskbarItemInfo> in markup and set the <xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A> property. This example is part of a larger example provided for the <xref:System.Windows.Shell.TaskbarItemInfo> class.  \\n  \\n [!code-xml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]\"\n  syntax:\n    content: public System.Windows.Thickness ThumbnailClipMargin { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail. The default is an empty <xref href=\"System.Windows.Thickness\"></xref>.\n  overload: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty\n  commentId: F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty\n  id: ThumbnailClipMarginProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  langs:\n  - csharp\n  name: ThumbnailClipMarginProperty\n  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty\n  fullName: TaskbarItemInfo.ThumbnailClipMarginProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Shell\n  summary: Identifies the <xref href=\"System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Shell.TaskbarItemInfo.#ctor\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: TaskbarItemInfo()\n  nameWithType: TaskbarItemInfo.TaskbarItemInfo()\n  fullName: TaskbarItemInfo.TaskbarItemInfo()\n- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: TaskbarItemInfo.CreateInstanceCore()\n  fullName: TaskbarItemInfo.CreateInstanceCore()\n- uid: System.Windows.Shell.TaskbarItemInfo.Description\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: Description\n  nameWithType: TaskbarItemInfo.Description\n  fullName: TaskbarItemInfo.Description\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Shell.TaskbarItemInfo.DescriptionProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: DescriptionProperty\n  nameWithType: TaskbarItemInfo.DescriptionProperty\n  fullName: TaskbarItemInfo.DescriptionProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Shell.TaskbarItemInfo.Overlay\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: Overlay\n  nameWithType: TaskbarItemInfo.Overlay\n  fullName: TaskbarItemInfo.Overlay\n- uid: System.Windows.Media.ImageSource\n  parent: System.Windows.Media\n  isExternal: false\n  name: ImageSource\n  nameWithType: ImageSource\n  fullName: System.Windows.Media.ImageSource\n- uid: System.Windows.Shell.TaskbarItemInfo.OverlayProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: OverlayProperty\n  nameWithType: TaskbarItemInfo.OverlayProperty\n  fullName: TaskbarItemInfo.OverlayProperty\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ProgressState\n  nameWithType: TaskbarItemInfo.ProgressState\n  fullName: TaskbarItemInfo.ProgressState\n- uid: System.Windows.Shell.TaskbarItemProgressState\n  parent: System.Windows.Shell\n  isExternal: false\n  name: TaskbarItemProgressState\n  nameWithType: TaskbarItemProgressState\n  fullName: System.Windows.Shell.TaskbarItemProgressState\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ProgressStateProperty\n  nameWithType: TaskbarItemInfo.ProgressStateProperty\n  fullName: TaskbarItemInfo.ProgressStateProperty\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ProgressValue\n  nameWithType: TaskbarItemInfo.ProgressValue\n  fullName: TaskbarItemInfo.ProgressValue\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ProgressValueProperty\n  nameWithType: TaskbarItemInfo.ProgressValueProperty\n  fullName: TaskbarItemInfo.ProgressValueProperty\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ThumbButtonInfos\n  nameWithType: TaskbarItemInfo.ThumbButtonInfos\n  fullName: TaskbarItemInfo.ThumbButtonInfos\n- uid: System.Windows.Shell.ThumbButtonInfoCollection\n  parent: System.Windows.Shell\n  isExternal: false\n  name: ThumbButtonInfoCollection\n  nameWithType: ThumbButtonInfoCollection\n  fullName: System.Windows.Shell.ThumbButtonInfoCollection\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ThumbButtonInfosProperty\n  nameWithType: TaskbarItemInfo.ThumbButtonInfosProperty\n  fullName: TaskbarItemInfo.ThumbButtonInfosProperty\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ThumbnailClipMargin\n  nameWithType: TaskbarItemInfo.ThumbnailClipMargin\n  fullName: TaskbarItemInfo.ThumbnailClipMargin\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ThumbnailClipMarginProperty\n  nameWithType: TaskbarItemInfo.ThumbnailClipMarginProperty\n  fullName: TaskbarItemInfo.ThumbnailClipMarginProperty\n- uid: System.Windows.Shell.TaskbarItemInfo.#ctor*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: TaskbarItemInfo\n  nameWithType: TaskbarItemInfo.TaskbarItemInfo\n  fullName: TaskbarItemInfo.TaskbarItemInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: TaskbarItemInfo.CreateInstanceCore\n  fullName: TaskbarItemInfo.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.Description*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: Description\n  nameWithType: TaskbarItemInfo.Description\n  fullName: TaskbarItemInfo.Description\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.Overlay*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: Overlay\n  nameWithType: TaskbarItemInfo.Overlay\n  fullName: TaskbarItemInfo.Overlay\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressState*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ProgressState\n  nameWithType: TaskbarItemInfo.ProgressState\n  fullName: TaskbarItemInfo.ProgressState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.ProgressValue*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ProgressValue\n  nameWithType: TaskbarItemInfo.ProgressValue\n  fullName: TaskbarItemInfo.ProgressValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ThumbButtonInfos\n  nameWithType: TaskbarItemInfo.ThumbButtonInfos\n  fullName: TaskbarItemInfo.ThumbButtonInfos\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin*\n  parent: System.Windows.Shell.TaskbarItemInfo\n  isExternal: false\n  name: ThumbnailClipMargin\n  nameWithType: TaskbarItemInfo.ThumbnailClipMargin\n  fullName: TaskbarItemInfo.ThumbnailClipMargin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Shell/TaskbarItemInfo.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.Clone\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Clone()\n  nameWithType: Freezable.Clone()\n  fullName: Freezable.Clone()\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValue\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: Freezable.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Freezable.FreezeCore(System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Freezable.FreezeCore(Boolean)\n  fullName: Freezable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n"}