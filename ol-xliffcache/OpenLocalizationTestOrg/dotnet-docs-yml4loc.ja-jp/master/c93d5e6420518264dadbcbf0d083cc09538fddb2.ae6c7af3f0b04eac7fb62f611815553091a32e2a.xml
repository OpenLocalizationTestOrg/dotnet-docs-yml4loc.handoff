{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.Input.CommandManager.Executed\"></xref> and <xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"></xref> routed events.","nodes":[{"pos":[0,179],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager.Executed\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"&gt;&lt;/xref&gt;</ph> routed events.","source":"Provides data for the <xref href=\"System.Windows.Input.CommandManager.Executed\"></xref> and <xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"></xref> routed events."}],"pos":[648,828],"yaml":true},{"content":"<xref:System.Windows.Input.ExecutedRoutedEventHandler> represents the method that implements the command logic of a <xref:System.Windows.Input.RoutedCommand>.  Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.  \n  \n This event data class is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>. But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.  \n  \n For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).","nodes":[{"pos":[0,327],"content":"<xref:System.Windows.Input.ExecutedRoutedEventHandler> represents the method that implements the command logic of a <xref:System.Windows.Input.RoutedCommand>.  Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.","nodes":[{"content":"<xref:System.Windows.Input.ExecutedRoutedEventHandler> represents the method that implements the command logic of a <xref:System.Windows.Input.RoutedCommand>.  Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.","pos":[0,327],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> represents the method that implements the command logic of a <ph id=\"ph2\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.","pos":[0,158],"source":"<xref:System.Windows.Input.ExecutedRoutedEventHandler> represents the method that implements the command logic of a <xref:System.Windows.Input.RoutedCommand>."},{"content":"Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.","pos":[160,327]}]}]},{"pos":[334,777],"content":"This event data class is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>. But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.","nodes":[{"content":"This event data class is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>. But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.","pos":[0,443],"nodes":[{"content":"This event data class is also used for <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName&gt;</ph>.","pos":[0,204],"source":"This event data class is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>."},{"content":"But most practical handlers will handle the <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.","pos":[205,443],"source":" But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level."}]}]},{"pos":[784,900],"content":"For more information on commanding, see <bpt id=\"p1\">[</bpt>Commanding Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.","source":"For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md)."}],"pos":[839,1746],"yaml":true,"extradata":"MT"},{"content":"Gets the command that was invoked.","nodes":[{"pos":[0,34],"content":"Gets the command that was invoked.","nodes":[{"content":"Gets the command that was invoked.","pos":[0,34]}]}],"pos":[4015,4050],"yaml":true},{"content":"The command associated with the event can be cast to the specific implementation of <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>, if the type is known.","nodes":[{"pos":[0,196],"content":"The command associated with the event can be cast to the specific implementation of <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>, if the type is known.","nodes":[{"content":"The command associated with the event can be cast to the specific implementation of <ph id=\"ph1\">&lt;xref:System.Windows.Input.ICommand&gt;</ph>, such as a <ph id=\"ph2\">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, if the type is known.","pos":[0,196],"source":"The command associated with the event can be cast to the specific implementation of <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>, if the type is known."}]}],"pos":[4061,4258],"yaml":true,"extradata":"MT"},{"content":"The command associated with this event.","nodes":[{"pos":[0,39],"content":"The command associated with this event.","nodes":[{"content":"The command associated with this event.","pos":[0,39]}]}],"pos":[5166,5206],"yaml":true},{"content":"Gets data parameter of the command.","nodes":[{"pos":[0,35],"content":"Gets data parameter of the command.","nodes":[{"content":"Gets data parameter of the command.","pos":[0,35]}]}],"pos":[7690,7726],"yaml":true},{"content":"This property represents a generic data parameter that is defined by the particular command.  \n  \n If this parameter is not needed, `null` can be passed.  \n  \n Normally, the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> is used to pass specific information to the command when it is executed.  The type of the data is defined by the command.","nodes":[{"pos":[0,92],"content":"This property represents a generic data parameter that is defined by the particular command.","nodes":[{"content":"This property represents a generic data parameter that is defined by the particular command.","pos":[0,92]}]},{"pos":[99,153],"content":"If this parameter is not needed, <ph id=\"ph1\">`null`</ph> can be passed.","source":"If this parameter is not needed, `null` can be passed."},{"pos":[160,360],"content":"Normally, the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> is used to pass specific information to the command when it is executed.  The type of the data is defined by the command.","nodes":[{"content":"Normally, the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> is used to pass specific information to the command when it is executed.  The type of the data is defined by the command.","pos":[0,200],"nodes":[{"content":"Normally, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> is used to pass specific information to the command when it is executed.","pos":[0,151],"source":"Normally, the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> is used to pass specific information to the command when it is executed."},{"content":"The type of the data is defined by the command.","pos":[153,200]}]}]}],"pos":[7737,8104],"yaml":true,"extradata":"MT"},{"content":"The command-specific data. The default value is `null`.","nodes":[{"pos":[0,55],"content":"The command-specific data. The default value is `null`.","nodes":[{"content":"The command-specific data.","pos":[0,26]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[27,55],"source":" The default value is `null`."}]}],"pos":[9152,9208],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ExecutedRoutedEventArgs\n  commentId: T:System.Windows.Input.ExecutedRoutedEventArgs\n  id: ExecutedRoutedEventArgs\n  children:\n  - System.Windows.Input.ExecutedRoutedEventArgs.Command\n  - System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ExecutedRoutedEventArgs.Parameter\n  langs:\n  - csharp\n  name: ExecutedRoutedEventArgs\n  nameWithType: ExecutedRoutedEventArgs\n  fullName: System.Windows.Input.ExecutedRoutedEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides data for the <xref href=\"System.Windows.Input.CommandManager.Executed\"></xref> and <xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"></xref> routed events.\n  remarks: \"<xref:System.Windows.Input.ExecutedRoutedEventHandler> represents the method that implements the command logic of a <xref:System.Windows.Input.RoutedCommand>.  Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.  \\n  \\n This event data class is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=fullName> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=fullName>. But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.  \\n  \\n For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).\"\n  example:\n  - \"The following example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that opens a <xref:System.Windows.MessageBox> when the command is executed.  \\n  \\n [!code-csharp[commandwithhandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]\\n [!code-vb[commandwithhandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]\"\n  syntax:\n    content: 'public sealed class ExecutedRoutedEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.Command\n  commentId: P:System.Windows.Input.ExecutedRoutedEventArgs.Command\n  id: Command\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  langs:\n  - csharp\n  name: Command\n  nameWithType: ExecutedRoutedEventArgs.Command\n  fullName: ExecutedRoutedEventArgs.Command\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the command that was invoked.\n  remarks: The command associated with the event can be cast to the specific implementation of <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>, if the type is known.\n  example:\n  - \"The following example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that handles multiple commands. The handler checks the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> property on the <xref:System.Windows.Input.ExecutedRoutedEventArgs> to determine which method to call.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewMultipleCmdHander](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewmultiplecmdhander)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewMultipleCmdHander](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewmultiplecmdhander)]\"\n  syntax:\n    content: public System.Windows.Input.ICommand Command { get; }\n    return:\n      type: System.Windows.Input.ICommand\n      description: The command associated with this event.\n  overload: System.Windows.Input.ExecutedRoutedEventArgs.Command*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: ExecutedRoutedEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: ExecutedRoutedEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object target);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: ''\n    - id: target\n      type: System.Object\n      description: ''\n  overload: System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.Parameter\n  commentId: P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter\n  id: Parameter\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  langs:\n  - csharp\n  name: Parameter\n  nameWithType: ExecutedRoutedEventArgs.Parameter\n  fullName: ExecutedRoutedEventArgs.Parameter\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets data parameter of the command.\n  remarks: \"This property represents a generic data parameter that is defined by the particular command.  \\n  \\n If this parameter is not needed, `null` can be passed.  \\n  \\n Normally, the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> is used to pass specific information to the command when it is executed.  The type of the data is defined by the command.\"\n  example:\n  - \"The following example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> for a custom <xref:System.Windows.Input.RoutedCommand>.  The handler updates a <xref:System.Windows.Controls.TextBox> with the current time and the <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> property of a <xref:System.Windows.Controls.Slider> control that is passed to the handler through the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A?displayProperty=fullName>.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleExecuted](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampleexecuted)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleExecuted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampleexecuted)]\"\n  syntax:\n    content: public object Parameter { get; }\n    return:\n      type: System.Object\n      description: The command-specific data. The default value is `null`.\n  overload: System.Windows.Input.ExecutedRoutedEventArgs.Parameter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.Command\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  isExternal: false\n  name: Command\n  nameWithType: ExecutedRoutedEventArgs.Command\n  fullName: ExecutedRoutedEventArgs.Command\n- uid: System.Windows.Input.ICommand\n  parent: System.Windows.Input\n  isExternal: false\n  name: ICommand\n  nameWithType: ICommand\n  fullName: System.Windows.Input.ICommand\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: ExecutedRoutedEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: ExecutedRoutedEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.Parameter\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  isExternal: false\n  name: Parameter\n  nameWithType: ExecutedRoutedEventArgs.Parameter\n  fullName: ExecutedRoutedEventArgs.Parameter\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.Command*\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  isExternal: false\n  name: Command\n  nameWithType: ExecutedRoutedEventArgs.Command\n  fullName: ExecutedRoutedEventArgs.Command\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: ExecutedRoutedEventArgs.InvokeEventHandler\n  fullName: ExecutedRoutedEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n- uid: System.Windows.Input.ExecutedRoutedEventArgs.Parameter*\n  parent: System.Windows.Input.ExecutedRoutedEventArgs\n  isExternal: false\n  name: Parameter\n  nameWithType: ExecutedRoutedEventArgs.Parameter\n  fullName: ExecutedRoutedEventArgs.Parameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ExecutedRoutedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n"}