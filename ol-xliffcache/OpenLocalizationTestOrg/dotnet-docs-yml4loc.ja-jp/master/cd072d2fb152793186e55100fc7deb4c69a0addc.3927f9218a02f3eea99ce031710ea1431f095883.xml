{"nodes":[{"content":"Defines and represents a constructor of a dynamic class.","nodes":[{"pos":[0,56],"content":"Defines and represents a constructor of a dynamic class.","nodes":[{"content":"Defines and represents a constructor of a dynamic class.","pos":[0,56]}]}],"pos":[3773,3830],"yaml":true},{"content":"<xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body. It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time. Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.  \n  \n If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.  \n  \n If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided. You have the following options for providing a default constructor in addition to the constructor you defined:  \n  \n-   If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName> method to create one (and optionally restrict access to it). Do not provide an implementation for this default constructor. If you do, an exception is thrown when you try to use the constructor. No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method is called.  \n  \n-   If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=fullName> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation.","nodes":[{"pos":[0,450],"content":"<xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body. It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time. Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.","nodes":[{"content":"<xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body. It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time. Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.","pos":[0,450],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ConstructorBuilder&gt;</ph> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body.","pos":[0,196],"source":"<xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body."},{"content":"It is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> class to create classes at run time.","pos":[197,310],"source":" It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time."},{"content":"Call <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph> to get an instance of <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.ConstructorBuilder&gt;</ph>.","pos":[311,450],"source":" Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>."}]}]},{"pos":[457,619],"content":"If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.","nodes":[{"content":"If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.","pos":[0,162]}]},{"pos":[626,882],"content":"If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided. You have the following options for providing a default constructor in addition to the constructor you defined:","nodes":[{"content":"If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided. You have the following options for providing a default constructor in addition to the constructor you defined:","pos":[0,256],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ConstructorBuilder&gt;</ph> to define a constructor for your dynamic type, a default constructor is not provided.","pos":[0,145],"source":"If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided."},{"content":"You have the following options for providing a default constructor in addition to the constructor you defined:","pos":[146,256]}]}]},{"pos":[892,1423],"content":"If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName> method to create one (and optionally restrict access to it). Do not provide an implementation for this default constructor. If you do, an exception is thrown when you try to use the constructor. No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method is called.","nodes":[{"content":"If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName> method to create one (and optionally restrict access to it). Do not provide an implementation for this default constructor. If you do, an exception is thrown when you try to use the constructor. No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method is called.","pos":[0,531],"nodes":[{"content":"If you want a default constructor that simply calls the default constructor of the base class, you can use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName&gt;</ph> method to create one (and optionally restrict access to it).","pos":[0,266],"source":"If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName> method to create one (and optionally restrict access to it)."},{"content":"Do not provide an implementation for this default constructor.","pos":[267,329]},{"content":"If you do, an exception is thrown when you try to use the constructor.","pos":[330,400]},{"content":"No exception is thrown when the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName&gt;</ph> method is called.","pos":[401,531],"source":" No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method is called."}]}]},{"pos":[1433,1856],"content":"If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=fullName> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation.","nodes":[{"content":"If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=fullName&gt;</ph> method to create a <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.ConstructorBuilder&gt;</ph>, and provide your own implementation.","pos":[0,423],"source":"If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=fullName> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation."}]}],"pos":[3841,5708],"yaml":true,"extradata":"MT"},{"content":"Adds declarative security to this constructor.","nodes":[{"pos":[0,46],"content":"Adds declarative security to this constructor.","nodes":[{"content":"Adds declarative security to this constructor.","pos":[0,46]}]}],"pos":[17781,17828],"yaml":true},{"content":"<xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to.  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format. See Emitting Declarative Security Attributes.","nodes":[{"pos":[0,241],"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A&gt;</ph> can be called several times, with each call specifying a security action (such as <ph id=\"ph2\">`Demand`</ph>, <ph id=\"ph3\">`Assert`</ph>, and <ph id=\"ph4\">`Deny`</ph>) and a set of permissions that the action applies to.","source":"<xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to."},{"pos":[249,480],"content":"[!NOTE]\n In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format. See Emitting Declarative Security Attributes.","leadings":["","> "],"nodes":[{"content":" In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format. See Emitting Declarative Security Attributes.","pos":[8,229],"nodes":[{"content":"In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format.","pos":[1,175]},{"content":"See Emitting Declarative Security Attributes.","pos":[176,221]}]}]}],"pos":[17839,18325],"yaml":true,"extradata":"MT"},{"content":"The security action to be taken, such as Demand, Assert, and so on.","nodes":[{"pos":[0,67],"content":"The security action to be taken, such as Demand, Assert, and so on.","nodes":[{"content":"The security action to be taken, such as Demand, Assert, and so on.","pos":[0,67]}]}],"pos":[19175,19243],"yaml":true},{"content":"The set of permissions the action applies to.","nodes":[{"pos":[0,45],"content":"The set of permissions the action applies to.","nodes":[{"content":"The set of permissions the action applies to.","pos":[0,45]}]}],"pos":[19319,19365],"yaml":true},{"content":"<code>action</code> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;code&gt;action&lt;/code&gt;</ph> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).","source":"<code>action</code> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid)."}],"pos":[19571,19668],"yaml":true},{"content":"The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.  \n  \n -or-  \n  \n The permission set <code>pset</code> contains an action that was added earlier by `AddDeclarativeSecurity`.","nodes":[{"pos":[0,121],"content":"The containing type has been previously created using <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph>.","source":"The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>."},{"pos":[128,132],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[139,246],"content":"The permission set <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pset</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an action that was added earlier by <ph id=\"ph2\">`AddDeclarativeSecurity`</ph>.","source":"The permission set <code>pset</code> contains an action that was added earlier by `AddDeclarativeSecurity`."}],"pos":[19778,20033],"yaml":true},{"content":"<code>pset</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;pset&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>pset</code> is `null`."}],"pos":[20135,20164],"yaml":true},{"content":"Retrieves the attributes for this constructor.","nodes":[{"pos":[0,46],"content":"Retrieves the attributes for this constructor.","nodes":[{"content":"Retrieves the attributes for this constructor.","pos":[0,46]}]}],"pos":[21232,21279],"yaml":true},{"content":"The following code sample illustrates the use of `Attributes`.  \n  \n [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]","nodes":[{"pos":[0,62],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`Attributes`</ph>.","source":"The following code sample illustrates the use of `Attributes`."},{"pos":[69,562],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_Attributes_4#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_Attributes_4#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_Attributes_4#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]"}],"pos":[21290,21859],"yaml":true,"extradata":"MT"},{"content":"Returns the attributes for this constructor.","nodes":[{"pos":[0,44],"content":"Returns the attributes for this constructor.","nodes":[{"content":"Returns the attributes for this constructor.","pos":[0,44]}]}],"pos":[22031,22076],"yaml":true},{"content":"Gets a <xref href=\"System.Reflection.CallingConventions\"></xref> value that depends on whether the declaring type is generic.","nodes":[{"pos":[0,125],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CallingConventions\"&gt;&lt;/xref&gt;</ph> value that depends on whether the declaring type is generic.","source":"Gets a <xref href=\"System.Reflection.CallingConventions\"></xref> value that depends on whether the declaring type is generic."}],"pos":[23405,23531],"yaml":true},{"content":"<xref href=\"System.Reflection.CallingConventions.HasThis\"></xref> if the declaring type is generic; otherwise, <xref href=\"System.Reflection.CallingConventions.Standard\"></xref>.","nodes":[{"pos":[0,178],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.CallingConventions.HasThis\"&gt;&lt;/xref&gt;</ph> if the declaring type is generic; otherwise, <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CallingConventions.Standard\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Reflection.CallingConventions.HasThis\"></xref> if the declaring type is generic; otherwise, <xref href=\"System.Reflection.CallingConventions.Standard\"></xref>."}],"pos":[23714,23893],"yaml":true},{"content":"Retrieves a reference to the <xref href=\"System.Type\"></xref> object for the type that declares this member.","nodes":[{"pos":[0,108],"content":"Retrieves a reference to the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object for the type that declares this member.","source":"Retrieves a reference to the <xref href=\"System.Type\"></xref> object for the type that declares this member."}],"pos":[25165,25274],"yaml":true},{"content":"A member of a class (or interface) is either declared or inherited from a base class (or interface).  \n  \n The following code sample illustrates the use of `DeclaringType`.  \n  \n [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]","nodes":[{"pos":[0,100],"content":"A member of a class (or interface) is either declared or inherited from a base class (or interface).","nodes":[{"content":"A member of a class (or interface) is either declared or inherited from a base class (or interface).","pos":[0,100]}]},{"pos":[107,172],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`DeclaringType`</ph>.","source":"The following code sample illustrates the use of `DeclaringType`."},{"pos":[179,672],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_Attributes_4#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_Attributes_4#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_Attributes_4#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]"}],"pos":[25285,25966],"yaml":true,"extradata":"MT"},{"content":"Returns the <xref href=\"System.Type\"></xref> object for the type that declares this member.","nodes":[{"pos":[0,91],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object for the type that declares this member.","source":"Returns the <xref href=\"System.Type\"></xref> object for the type that declares this member."}],"pos":[26088,26180],"yaml":true},{"content":"Defines a parameter of this constructor.","nodes":[{"pos":[0,40],"content":"Defines a parameter of this constructor.","nodes":[{"content":"Defines a parameter of this constructor.","pos":[0,40]}]}],"pos":[27804,27845],"yaml":true},{"content":"If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception. There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>.","nodes":[{"pos":[0,241],"content":"If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception. There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>.","nodes":[{"content":"If you specify 0 (zero) for <ph id=\"ph1\">`iSequence`</ph>, this method returns a <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.ParameterBuilder&gt;</ph> instead of throwing an exception.","pos":[0,143],"source":"If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception."},{"content":"There is nothing useful that you can do with this <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ParameterBuilder&gt;</ph>.","pos":[144,241],"source":" There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>."}]}],"pos":[27856,28098],"yaml":true,"extradata":"MT"},{"content":"The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.","nodes":[{"pos":[0,128],"content":"The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.","nodes":[{"content":"The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.","pos":[0,128],"nodes":[{"content":"The position of the parameter in the parameter list.","pos":[0,52]},{"content":"Parameters are indexed beginning with the number 1 for the first parameter.","pos":[53,128]}]}]}],"pos":[28352,28481],"yaml":true},{"content":"The attributes of the parameter.","nodes":[{"pos":[0,32],"content":"The attributes of the parameter.","nodes":[{"content":"The attributes of the parameter.","pos":[0,32]}]}],"pos":[28571,28604],"yaml":true},{"content":"The name of the parameter. The name can be the null string.","nodes":[{"pos":[0,59],"content":"The name of the parameter. The name can be the null string.","nodes":[{"content":"The name of the parameter. The name can be the null string.","pos":[0,59],"nodes":[{"content":"The name of the parameter.","pos":[0,26]},{"content":"The name can be the null string.","pos":[27,59]}]}]}],"pos":[28672,28732],"yaml":true},{"content":"Returns a `ParameterBuilder` object that represents the new parameter of this constructor.","nodes":[{"pos":[0,90],"content":"Returns a <ph id=\"ph1\">`ParameterBuilder`</ph> object that represents the new parameter of this constructor.","source":"Returns a `ParameterBuilder` object that represents the new parameter of this constructor."}],"pos":[28815,28906],"yaml":true},{"content":"<code>iSequence</code> is less than 0 (zero), or it is greater than the number of parameters of the constructor.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;iSequence&lt;/code&gt;</ph> is less than 0 (zero), or it is greater than the number of parameters of the constructor.","source":"<code>iSequence</code> is less than 0 (zero), or it is greater than the number of parameters of the constructor."}],"pos":[29105,29218],"yaml":true},{"content":"The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.","nodes":[{"pos":[0,110],"content":"The containing type has been created using <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph>.","source":"The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>."}],"pos":[29328,29439],"yaml":true},{"content":"Returns all the custom attributes defined for this constructor.","nodes":[{"pos":[0,63],"content":"Returns all the custom attributes defined for this constructor.","nodes":[{"content":"Returns all the custom attributes defined for this constructor.","pos":[0,63]}]}],"pos":[30770,30834],"yaml":true},{"content":"The `inherit` parameter is ignored because a class never inherits constructors from base classes.  \n  \n To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">`inherit`</ph> parameter is ignored because a class never inherits constructors from base classes.","source":"The `inherit` parameter is ignored because a class never inherits constructors from base classes."},{"pos":[104,474],"content":"To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.","nodes":[{"content":"To get the custom attributes, finish building the type by calling <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.CreateType%2A&gt;</ph>, retrieve the constructor by calling the <ph id=\"ph2\">&lt;xref:System.Type.GetConstructor%2A&gt;</ph> method on the returned type, and then call the <ph id=\"ph3\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the returned <ph id=\"ph4\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph>.","pos":[0,370],"source":"To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>."}]}],"pos":[30845,31324],"yaml":true,"extradata":"MT"},{"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","nodes":[{"pos":[0,87],"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","nodes":[{"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","pos":[0,87],"nodes":[{"content":"Controls inheritance of custom attributes from base classes.","pos":[0,60]},{"content":"This parameter is ignored.","pos":[61,87]}]}]}],"pos":[31488,31576],"yaml":true},{"content":"Returns an array of objects representing all the custom attributes of the constructor represented by this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> instance.","nodes":[{"pos":[0,178],"content":"Returns an array of objects representing all the custom attributes of the constructor represented by this <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ConstructorBuilder\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an array of objects representing all the custom attributes of the constructor represented by this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> instance."}],"pos":[31635,31814],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[32005,32045],"yaml":true},{"content":"Returns the custom attributes identified by the given type.","nodes":[{"pos":[0,59],"content":"Returns the custom attributes identified by the given type.","nodes":[{"content":"Returns the custom attributes identified by the given type.","pos":[0,59]}]}],"pos":[33326,33386],"yaml":true},{"content":"The `inherit` parameter is ignored because a class never inherits constructors from base classes.  \n  \n To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">`inherit`</ph> parameter is ignored because a class never inherits constructors from base classes.","source":"The `inherit` parameter is ignored because a class never inherits constructors from base classes."},{"pos":[104,474],"content":"To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.","nodes":[{"content":"To get the custom attributes, finish building the type by calling <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.CreateType%2A&gt;</ph>, retrieve the constructor by calling the <ph id=\"ph2\">&lt;xref:System.Type.GetConstructor%2A&gt;</ph> method on the returned type, and then call the <ph id=\"ph3\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the returned <ph id=\"ph4\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph>.","pos":[0,370],"source":"To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>."}]}],"pos":[33397,33876],"yaml":true,"extradata":"MT"},{"content":"The custom attribute type.","nodes":[{"pos":[0,26],"content":"The custom attribute type.","nodes":[{"content":"The custom attribute type.","pos":[0,26]}]}],"pos":[34063,34090],"yaml":true},{"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","nodes":[{"pos":[0,87],"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","nodes":[{"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","pos":[0,87],"nodes":[{"content":"Controls inheritance of custom attributes from base classes.","pos":[0,60]},{"content":"This parameter is ignored.","pos":[61,87]}]}]}],"pos":[34154,34242],"yaml":true},{"content":"Returns an array of type <xref href=\"System.Object\"></xref> representing the attributes of this constructor.","nodes":[{"pos":[0,108],"content":"Returns an array of type <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> representing the attributes of this constructor.","source":"Returns an array of type <xref href=\"System.Object\"></xref> representing the attributes of this constructor."}],"pos":[34301,34410],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[34601,34641],"yaml":true},{"content":"Gets an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.","nodes":[{"pos":[0,170],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ILGenerator\"&gt;&lt;/xref&gt;</ph> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.","source":"Gets an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> object, with the specified MSIL stream size, that can be used to build a method body for this constructor."}],"pos":[35826,35997],"yaml":true},{"content":"The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown.","nodes":[{"pos":[0,167],"content":"The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown.","nodes":[{"content":"The runtime generates the code for default constructors.","pos":[0,56]},{"content":"Therefore, if an attempt is made to obtain an <ph id=\"ph1\">`ILGenerator`</ph> for a default constructor, an exception is thrown.","pos":[57,167],"source":" Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown."}]}],"pos":[36008,36176],"yaml":true,"extradata":"MT"},{"content":"The size of the MSIL stream, in bytes.","nodes":[{"pos":[0,38],"content":"The size of the MSIL stream, in bytes.","nodes":[{"content":"The size of the MSIL stream, in bytes.","pos":[0,38]}]}],"pos":[36355,36394],"yaml":true},{"content":"An <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> for this constructor.","nodes":[{"pos":[0,80],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ILGenerator\"&gt;&lt;/xref&gt;</ph> for this constructor.","source":"An <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> for this constructor."}],"pos":[36472,36553],"yaml":true},{"content":"The constructor is a default constructor.  \n  \n -or-  \n  \n The constructor has <xref href=\"System.Reflection.MethodAttributes\"></xref> or <xref href=\"System.Reflection.MethodImplAttributes\"></xref> flags indicating that it should not have a method body.","nodes":[{"pos":[0,41],"content":"The constructor is a default constructor.","nodes":[{"content":"The constructor is a default constructor.","pos":[0,41]}]},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,253],"content":"The constructor has <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodAttributes\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodImplAttributes\"&gt;&lt;/xref&gt;</ph> flags indicating that it should not have a method body.","source":"The constructor has <xref href=\"System.Reflection.MethodAttributes\"></xref> or <xref href=\"System.Reflection.MethodImplAttributes\"></xref> flags indicating that it should not have a method body."}],"pos":[36747,37011],"yaml":true},{"content":"Gets an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> for this constructor.","nodes":[{"pos":[0,85],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ILGenerator\"&gt;&lt;/xref&gt;</ph> for this constructor.","source":"Gets an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> for this constructor."}],"pos":[38243,38329],"yaml":true},{"content":"The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown.","nodes":[{"pos":[0,146],"content":"The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown.","nodes":[{"content":"The runtime generates the code for default constructors.","pos":[0,56]},{"content":"Therefore, if an attempt is made to obtain an <ph id=\"ph1\">`ILGenerator`</ph>, an exception will be thrown.","pos":[57,146],"source":" Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown."}]}],"pos":[38340,38487],"yaml":true,"extradata":"MT"},{"content":"Returns an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> object for this constructor.","nodes":[{"pos":[0,95],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ILGenerator\"&gt;&lt;/xref&gt;</ph> object for this constructor.","source":"Returns an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> object for this constructor."}],"pos":[39321,39417],"yaml":true},{"content":"The constructor is a default constructor.  \n  \n -or-  \n  \n The constructor has <xref href=\"System.Reflection.MethodAttributes\"></xref> or <xref href=\"System.Reflection.MethodImplAttributes\"></xref> flags indicating that it should not have a method body.","nodes":[{"pos":[0,41],"content":"The constructor is a default constructor.","nodes":[{"content":"The constructor is a default constructor.","pos":[0,41]}]},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,253],"content":"The constructor has <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodAttributes\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodImplAttributes\"&gt;&lt;/xref&gt;</ph> flags indicating that it should not have a method body.","source":"The constructor has <xref href=\"System.Reflection.MethodAttributes\"></xref> or <xref href=\"System.Reflection.MethodImplAttributes\"></xref> flags indicating that it should not have a method body."}],"pos":[39611,39875],"yaml":true},{"content":"Returns the method implementation flags for this constructor.","nodes":[{"pos":[0,61],"content":"Returns the method implementation flags for this constructor.","nodes":[{"content":"Returns the method implementation flags for this constructor.","pos":[0,61]}]}],"pos":[41191,41253],"yaml":true},{"content":"The following code sample illustrates the use of `GetMethodImplementationFlags`.  \n  \n [!code-cpp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)]\n [!code-csharp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)]\n [!code-vb[ConstructorBuilder_GetModule_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)]","nodes":[{"pos":[0,80],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`GetMethodImplementationFlags`</ph>.","source":"The following code sample illustrates the use of `GetMethodImplementationFlags`."},{"pos":[87,571],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_GetModule_4#3<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_GetModule_4#3<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_GetModule_4#3<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)]\n [!code-csharp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)]\n [!code-vb[ConstructorBuilder_GetModule_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)]"}],"pos":[41264,41842],"yaml":true,"extradata":"MT"},{"content":"The method implementation flags for this constructor.","nodes":[{"pos":[0,53],"content":"The method implementation flags for this constructor.","nodes":[{"content":"The method implementation flags for this constructor.","pos":[0,53]}]}],"pos":[42054,42108],"yaml":true},{"content":"Returns a reference to the module that contains this constructor.","nodes":[{"pos":[0,65],"content":"Returns a reference to the module that contains this constructor.","nodes":[{"content":"Returns a reference to the module that contains this constructor.","pos":[0,65]}]}],"pos":[43280,43346],"yaml":true},{"content":"The following code sample illustrates the usage of `GetModule`.  \n  \n [!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]\n [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]\n [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]","nodes":[{"pos":[0,63],"content":"The following code sample illustrates the usage of <ph id=\"ph1\">`GetModule`</ph>.","source":"The following code sample illustrates the usage of `GetModule`."},{"pos":[70,602],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Reflection.Emit.MethodBuilder.GetModule#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.Reflection.Emit.MethodBuilder.GetModule#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Reflection.Emit.MethodBuilder.GetModule#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]\n [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]\n [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]"}],"pos":[43357,43966],"yaml":true,"extradata":"MT"},{"content":"The module that contains this constructor.","nodes":[{"pos":[0,42],"content":"The module that contains this constructor.","nodes":[{"content":"The module that contains this constructor.","pos":[0,42]}]}],"pos":[44122,44165],"yaml":true},{"content":"Returns the parameters of this constructor.","nodes":[{"pos":[0,43],"content":"Returns the parameters of this constructor.","nodes":[{"content":"Returns the parameters of this constructor.","pos":[0,43]}]}],"pos":[45337,45381],"yaml":true},{"content":"This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method has been called. In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown. In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.","nodes":[{"pos":[0,328],"content":"This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method has been called. In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown. In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.","nodes":[{"content":"This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method has been called. In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown. In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.","pos":[0,328],"nodes":[{"content":"This property is not supported until after the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName&gt;</ph> method has been called.","pos":[0,151],"source":"This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method has been called."},{"content":"In the .NET Framework versions 1.0 and 1.1, <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[152,246],"source":" In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown."},{"content":"In the .NET Framework version 2.0, <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.","pos":[247,328],"source":" In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown."}]}]}],"pos":[45392,45721],"yaml":true,"extradata":"MT"},{"content":"Returns an array of <xref href=\"System.Reflection.ParameterInfo\"></xref> objects that represent the parameters of this constructor.","nodes":[{"pos":[0,131],"content":"Returns an array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterInfo\"&gt;&lt;/xref&gt;</ph> objects that represent the parameters of this constructor.","source":"Returns an array of <xref href=\"System.Reflection.ParameterInfo\"></xref> objects that represent the parameters of this constructor."}],"pos":[46476,46608],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1."}],"pos":[46801,46960],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called on this constructor's type, in the .NET Framework version 2.0.","nodes":[{"pos":[0,149],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has not been called on this constructor's type, in the .NET Framework version 2.0.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called on this constructor's type, in the .NET Framework version 2.0."}],"pos":[47062,47212],"yaml":true},{"content":"Returns the <xref href=\"System.Reflection.Emit.MethodToken\"></xref> that represents the token for this constructor.","nodes":[{"pos":[0,115],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;&lt;/xref&gt;</ph> that represents the token for this constructor.","source":"Returns the <xref href=\"System.Reflection.Emit.MethodToken\"></xref> that represents the token for this constructor."}],"pos":[48381,48497],"yaml":true},{"content":"This code sample illustrates the use of `GetToken`.  \n  \n [!code-cpp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)]\n [!code-vb[ConstructorBuilder_GetModule_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)]","nodes":[{"pos":[0,51],"content":"This code sample illustrates the use of <ph id=\"ph1\">`GetToken`</ph>.","source":"This code sample illustrates the use of `GetToken`."},{"pos":[58,542],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_GetModule_4#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_GetModule_4#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_GetModule_4#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)]\n [!code-vb[ConstructorBuilder_GetModule_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)]"}],"pos":[48508,49057],"yaml":true,"extradata":"MT"},{"content":"Returns the <xref href=\"System.Reflection.Emit.MethodToken\"></xref> of this constructor.","nodes":[{"pos":[0,88],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;&lt;/xref&gt;</ph> of this constructor.","source":"Returns the <xref href=\"System.Reflection.Emit.MethodToken\"></xref> of this constructor."}],"pos":[49232,49321],"yaml":true},{"content":"Gets or sets whether the local variables in this constructor should be zero-initialized.","nodes":[{"pos":[0,88],"content":"Gets or sets whether the local variables in this constructor should be zero-initialized.","nodes":[{"content":"Gets or sets whether the local variables in this constructor should be zero-initialized.","pos":[0,88]}]}],"pos":[50470,50559],"yaml":true},{"content":"Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.","nodes":[{"pos":[0,100],"content":"Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.","nodes":[{"content":"Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.","pos":[0,100],"nodes":[{"content":"Read/write.","pos":[0,11]},{"content":"Gets or sets whether the local variables in this constructor should be zero-initialized.","pos":[12,100]}]}]}],"pos":[50677,50778],"yaml":true},{"content":"Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.","nodes":[{"pos":[0,170],"content":"Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.","nodes":[{"content":"Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.","pos":[0,170]}]}],"pos":[52492,52663],"yaml":true},{"content":"If the constructor has no parameters, the value of the `parameters` parameter should be `null`. Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \n  \n For example, if the constructor reflected by this instance is declared as public class taking two strings, then the `parameters` parameter should be an array of <xref:System.Object> with length 2.  \n  \n> [!NOTE]\n>  Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","nodes":[{"pos":[0,285],"content":"If the constructor has no parameters, the value of the `parameters` parameter should be `null`. Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.","nodes":[{"content":"If the constructor has no parameters, the value of the <ph id=\"ph1\">`parameters`</ph> parameter should be <ph id=\"ph2\">`null`</ph>.","pos":[0,95],"source":"If the constructor has no parameters, the value of the `parameters` parameter should be `null`."},{"content":"Otherwise, the number, type, and order of elements in the <ph id=\"ph1\">`parameters`</ph> array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.","pos":[96,285],"source":" Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance."}]},{"pos":[292,488],"content":"For example, if the constructor reflected by this instance is declared as public class taking two strings, then the <ph id=\"ph1\">`parameters`</ph> parameter should be an array of <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> with length 2.","source":"For example, if the constructor reflected by this instance is declared as public class taking two strings, then the `parameters` parameter should be an array of <xref:System.Object> with length 2."},{"pos":[496,706],"content":"[!NOTE]\n Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","leadings":["","> "],"nodes":[{"content":" Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","pos":[8,208],"nodes":[{"content":"Access restrictions are ignored for fully-trusted code.","pos":[1,56]},{"content":"That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","pos":[57,200]}]}]}],"pos":[52674,53388],"yaml":true,"extradata":"MT"},{"content":"This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>, such as InvokeMethod, NonPublic, and so on.","nodes":[{"pos":[0,125],"content":"This must be a bit flag from <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph>, such as InvokeMethod, NonPublic, and so on.","source":"This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>, such as InvokeMethod, NonPublic, and so on."}],"pos":[53681,53807],"yaml":true},{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If binder is `null`, the default binder is used. See <xref href=\"System.Reflection.Binder\"></xref>.","nodes":[{"pos":[0,242],"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If binder is `null`, the default binder is used. See <xref href=\"System.Reflection.Binder\"></xref>.","nodes":[{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <ph id=\"ph1\">`MemberInfo`</ph> objects using reflection.","pos":[0,142],"source":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection."},{"content":"If binder is <ph id=\"ph1\">`null`</ph>, the default binder is used.","pos":[143,191],"source":" If binder is `null`, the default binder is used."},{"content":"See <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Binder\"&gt;&lt;/xref&gt;</ph>.","pos":[192,242],"source":" See <xref href=\"System.Reflection.Binder\"></xref>."}]}],"pos":[53880,54123],"yaml":true},{"content":"An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters this should be `null`.","nodes":[{"pos":[0,187],"content":"An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters this should be `null`.","nodes":[{"content":"An argument list.","pos":[0,17]},{"content":"This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.","pos":[18,137]},{"content":"If there are no parameters this should be <ph id=\"ph1\">`null`</ph>.","pos":[138,187],"source":" If there are no parameters this should be `null`."}]}],"pos":[54191,54379],"yaml":true},{"content":"An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used. (For example, this is necessary to convert a <xref href=\"System.String\"></xref> that represents 1000 to a <xref href=\"System.Double\"></xref> value, since 1000 is represented differently by different cultures.)","nodes":[{"pos":[0,423],"content":"An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used. (For example, this is necessary to convert a <xref href=\"System.String\"></xref> that represents 1000 to a <xref href=\"System.Double\"></xref> value, since 1000 is represented differently by different cultures.)","nodes":[{"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.","pos":[0,106],"source":"An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types."},{"content":"If this is null, the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[107,213],"source":" If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."},{"content":"(For example, this is necessary to convert a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents 1000 to a <ph id=\"ph2\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> value, since 1000 is represented differently by different cultures.)","pos":[214,423],"source":" (For example, this is necessary to convert a <xref href=\"System.String\"></xref> that represents 1000 to a <xref href=\"System.Double\"></xref> value, since 1000 is represented differently by different cultures.)"}]}],"pos":[54461,54885],"yaml":true},{"content":"Returns an <xref href=\"System.Object\"></xref> that is the return value of the invoked constructor.","nodes":[{"pos":[0,98],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is the return value of the invoked constructor.","source":"Returns an <xref href=\"System.Object\"></xref> that is the return value of the invoked constructor."}],"pos":[54942,55041],"yaml":true},{"content":"This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.","nodes":[{"pos":[0,521],"content":"This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]},{"content":"You can retrieve the constructor using <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> and call <ph id=\"ph2\">&lt;xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> on the returned <ph id=\"ph3\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph>.","pos":[40,521],"source":" You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>."}]}],"pos":[55219,55741],"yaml":true},{"content":"Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified `Binder`.","nodes":[{"pos":[0,141],"content":"Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified <ph id=\"ph1\">`Binder`</ph>.","source":"Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified `Binder`."}],"pos":[57334,57476],"yaml":true},{"content":"The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \n  \n Before calling the constructor, `Invoke` ensures that the caller has access permission, and that the parameters are of the correct number, order and type.  \n  \n Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","nodes":[{"pos":[0,176],"content":"The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.","nodes":[{"content":"The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.","pos":[0,176]}]},{"pos":[183,337],"content":"Before calling the constructor, <ph id=\"ph1\">`Invoke`</ph> ensures that the caller has access permission, and that the parameters are of the correct number, order and type.","source":"Before calling the constructor, `Invoke` ensures that the caller has access permission, and that the parameters are of the correct number, order and type."},{"pos":[344,543],"content":"Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","nodes":[{"content":"Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","pos":[0,199],"nodes":[{"content":"Access restrictions are ignored for fully-trusted code.","pos":[0,55]},{"content":"That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.","pos":[56,199]}]}]}],"pos":[57487,58037],"yaml":true,"extradata":"MT"},{"content":"The object that needs to be reinitialized.","nodes":[{"pos":[0,42],"content":"The object that needs to be reinitialized.","nodes":[{"content":"The object that needs to be reinitialized.","pos":[0,42]}]}],"pos":[58318,58361],"yaml":true},{"content":"One of the `BindingFlags` values that specifies the type of binding that is desired.","nodes":[{"pos":[0,84],"content":"One of the <ph id=\"ph1\">`BindingFlags`</ph> values that specifies the type of binding that is desired.","source":"One of the `BindingFlags` values that specifies the type of binding that is desired."}],"pos":[58444,58529],"yaml":true},{"content":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then Binder.DefaultBinding is used.","nodes":[{"pos":[0,210],"content":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then Binder.DefaultBinding is used.","nodes":[{"content":"A <ph id=\"ph1\">`Binder`</ph> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.","pos":[0,140],"source":"A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, then Binder.DefaultBinding is used.","pos":[141,210],"source":" If <code>binder</code> is `null`, then Binder.DefaultBinding is used."}]}],"pos":[58602,58813],"yaml":true},{"content":"An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters, this should be a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,226],"content":"An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters, this should be a null reference (`Nothing` in Visual Basic).","nodes":[{"content":"An argument list.","pos":[0,17]},{"content":"This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.","pos":[18,137]},{"content":"If there are no parameters, this should be a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","pos":[138,226],"source":" If there are no parameters, this should be a null reference (`Nothing` in Visual Basic)."}]}],"pos":[58881,59108],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"pos":[0,200],"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.","pos":[0,93],"source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types."},{"content":"If this is null, the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> for the current thread is used.","pos":[94,200],"source":" If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used."}]}],"pos":[59190,59391],"yaml":true},{"content":"An instance of the class associated with the constructor.","nodes":[{"pos":[0,57],"content":"An instance of the class associated with the constructor.","nodes":[{"content":"An instance of the class associated with the constructor.","pos":[0,57]}]}],"pos":[59448,59506],"yaml":true},{"content":"This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.","nodes":[{"pos":[0,521],"content":"This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]},{"content":"You can retrieve the constructor using <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> and call <ph id=\"ph2\">&lt;xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> on the returned <ph id=\"ph3\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph>.","pos":[40,521],"source":" You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>."}]}],"pos":[59684,60206],"yaml":true},{"content":"Checks if the specified custom attribute type is defined.","nodes":[{"pos":[0,57],"content":"Checks if the specified custom attribute type is defined.","nodes":[{"content":"Checks if the specified custom attribute type is defined.","pos":[0,57]}]}],"pos":[61427,61485],"yaml":true},{"content":"See the metadata specification for details on how to format `binaryAttribute`.","nodes":[{"pos":[0,78],"content":"See the metadata specification for details on how to format <ph id=\"ph1\">`binaryAttribute`</ph>.","source":"See the metadata specification for details on how to format `binaryAttribute`."}],"pos":[61496,61575],"yaml":true,"extradata":"MT"},{"content":"A custom attribute type.","nodes":[{"pos":[0,24],"content":"A custom attribute type.","nodes":[{"content":"A custom attribute type.","pos":[0,24]}]}],"pos":[61748,61773],"yaml":true},{"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","nodes":[{"pos":[0,87],"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","nodes":[{"content":"Controls inheritance of custom attributes from base classes. This parameter is ignored.","pos":[0,87],"nodes":[{"content":"Controls inheritance of custom attributes from base classes.","pos":[0,60]},{"content":"This parameter is ignored.","pos":[61,87]}]}]}],"pos":[61837,61925],"yaml":true},{"content":"`true` if the specified custom attribute type is defined; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the specified custom attribute type is defined; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified custom attribute type is defined; otherwise, `false`."}],"pos":[61983,62063],"yaml":true},{"content":"This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.","nodes":[{"pos":[0,441],"content":"This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]},{"content":"You can retrieve the constructor using <ph id=\"ph1\">&lt;xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"&gt;&lt;/xref&gt;</ph> and call <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> on the returned <ph id=\"ph3\">&lt;xref href=\"System.Reflection.ConstructorInfo\"&gt;&lt;/xref&gt;</ph>.","pos":[40,441],"source":" You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>."}]}],"pos":[62244,62686],"yaml":true},{"content":"Retrieves the internal handle for the method. Use this handle to access the underlying metadata handle.","nodes":[{"pos":[0,103],"content":"Retrieves the internal handle for the method. Use this handle to access the underlying metadata handle.","nodes":[{"content":"Retrieves the internal handle for the method. Use this handle to access the underlying metadata handle.","pos":[0,103],"nodes":[{"content":"Retrieves the internal handle for the method.","pos":[0,45]},{"content":"Use this handle to access the underlying metadata handle.","pos":[46,103]}]}]}],"pos":[63798,63902],"yaml":true},{"content":"Returns the internal handle for the method. Use this handle to access the underlying metadata handle.","nodes":[{"pos":[0,101],"content":"Returns the internal handle for the method. Use this handle to access the underlying metadata handle.","nodes":[{"content":"Returns the internal handle for the method. Use this handle to access the underlying metadata handle.","pos":[0,101],"nodes":[{"content":"Returns the internal handle for the method.","pos":[0,43]},{"content":"Use this handle to access the underlying metadata handle.","pos":[44,101]}]}]}],"pos":[64053,64155],"yaml":true},{"content":"This property is not supported on this class.","nodes":[{"pos":[0,45],"content":"This property is not supported on this class.","nodes":[{"content":"This property is not supported on this class.","pos":[0,45]}]}],"pos":[64339,64385],"yaml":true},{"content":"Gets the dynamic module in which this constructor is defined.","nodes":[{"pos":[0,61],"content":"Gets the dynamic module in which this constructor is defined.","nodes":[{"content":"Gets the dynamic module in which this constructor is defined.","pos":[0,61]}]}],"pos":[66464,66526],"yaml":true},{"content":"This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method.","nodes":[{"pos":[0,113],"content":"This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method.","nodes":[{"content":"This property returns the same value as the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A&gt;</ph> method.","pos":[0,113],"source":"This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method."}]}],"pos":[66537,66651],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.Module\"></xref> object that represents the dynamic module in which this constructor is defined.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Module\"&gt;&lt;/xref&gt;</ph> object that represents the dynamic module in which this constructor is defined.","source":"A <xref href=\"System.Reflection.Module\"></xref> object that represents the dynamic module in which this constructor is defined."}],"pos":[66799,66927],"yaml":true},{"content":"Retrieves the name of this constructor.","nodes":[{"pos":[0,39],"content":"Retrieves the name of this constructor.","nodes":[{"content":"Retrieves the name of this constructor.","pos":[0,39]}]}],"pos":[68070,68110],"yaml":true},{"content":"The following code sample illustrates the use of `Name`.  \n  \n [!code-cpp[ConstructorBuilder_Name_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)]\n [!code-csharp[ConstructorBuilder_Name_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)]\n [!code-vb[ConstructorBuilder_Name_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)]","nodes":[{"pos":[0,56],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`Name`</ph>.","source":"The following code sample illustrates the use of `Name`."},{"pos":[63,502],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_Name_5#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_Name_5#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_Name_5#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_Name_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)]\n [!code-csharp[ConstructorBuilder_Name_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)]\n [!code-vb[ConstructorBuilder_Name_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)]"}],"pos":[68121,68630],"yaml":true,"extradata":"MT"},{"content":"Returns the name of this constructor.","nodes":[{"pos":[0,37],"content":"Returns the name of this constructor.","nodes":[{"content":"Returns the name of this constructor.","pos":[0,37]}]}],"pos":[68747,68785],"yaml":true},{"content":"Holds a reference to the <xref href=\"System.Type\"></xref> object from which this object was obtained.","nodes":[{"pos":[0,101],"content":"Holds a reference to the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object from which this object was obtained.","source":"Holds a reference to the <xref href=\"System.Type\"></xref> object from which this object was obtained."}],"pos":[70084,70186],"yaml":true},{"content":"A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class. In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried. This property holds a reference to that <xref:System.Type> object.","nodes":[{"pos":[0,340],"content":"A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class. In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried. This property holds a reference to that <xref:System.Type> object.","nodes":[{"content":"A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class. In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried. This property holds a reference to that <xref:System.Type> object.","pos":[0,340],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ConstructorBuilder&gt;</ph> object represents a constructor on a particular class.","pos":[0,105],"source":"A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class."},{"content":"In order to obtain a <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> object, the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> object that represents the class that supports the constructor is queried.","pos":[106,273],"source":" In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried."},{"content":"This property holds a reference to that <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object.","pos":[274,340],"source":" This property holds a reference to that <xref:System.Type> object."}]}]}],"pos":[70197,70538],"yaml":true,"extradata":"MT"},{"content":"Returns the `Type` object from which this object was obtained.","nodes":[{"pos":[0,62],"content":"Returns the <ph id=\"ph1\">`Type`</ph> object from which this object was obtained.","source":"Returns the `Type` object from which this object was obtained."}],"pos":[70660,70723],"yaml":true},{"content":"Gets `null`.","nodes":[{"pos":[0,12],"content":"Gets <ph id=\"ph1\">`null`</ph>.","source":"Gets `null`."}],"pos":[71882,71895],"yaml":true},{"content":"This property might be removed in a future version.","nodes":[{"pos":[0,51],"content":"This property might be removed in a future version.","nodes":[{"content":"This property might be removed in a future version.","pos":[0,51]}]}],"pos":[71906,71958],"yaml":true,"extradata":"MT"},{"content":"Returns `null`.","nodes":[{"pos":[0,15],"content":"Returns <ph id=\"ph1\">`null`</ph>.","source":"Returns `null`."}],"pos":[72102,72118],"yaml":true},{"content":"Set a custom attribute using a custom attribute builder.","nodes":[{"pos":[0,56],"content":"Set a custom attribute using a custom attribute builder.","nodes":[{"content":"Set a custom attribute using a custom attribute builder.","pos":[0,56]}]}],"pos":[73577,73634],"yaml":true},{"content":"An instance of a helper class to define the custom attribute.","nodes":[{"pos":[0,61],"content":"An instance of a helper class to define the custom attribute.","nodes":[{"content":"An instance of a helper class to define the custom attribute.","pos":[0,61]}]}],"pos":[74670,74732],"yaml":true},{"content":"<code>customBuilder</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;customBuilder&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>customBuilder</code> is `null`."}],"pos":[74922,74960],"yaml":true},{"content":"Set a custom attribute using a specified custom attribute blob.","nodes":[{"pos":[0,63],"content":"Set a custom attribute using a specified custom attribute blob.","nodes":[{"content":"Set a custom attribute using a specified custom attribute blob.","pos":[0,63]}]}],"pos":[76432,76496],"yaml":true},{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"pos":[0,414],"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format <ph id=\"ph1\">`binaryAttribute`</ph>.","pos":[0,117],"source":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[118,414],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]}],"pos":[76507,76922],"yaml":true,"extradata":"MT"},{"content":"The constructor for the custom attribute.","nodes":[{"pos":[0,41],"content":"The constructor for the custom attribute.","nodes":[{"content":"The constructor for the custom attribute.","pos":[0,41]}]}],"pos":[77947,77989],"yaml":true},{"content":"A byte blob representing the attributes.","nodes":[{"pos":[0,40],"content":"A byte blob representing the attributes.","nodes":[{"content":"A byte blob representing the attributes.","pos":[0,40]}]}],"pos":[78060,78101],"yaml":true},{"content":"<code>con</code> or <code>binaryAttribute</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binaryAttribute&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>con</code> or <code>binaryAttribute</code> is `null`."}],"pos":[78291,78351],"yaml":true},{"content":"Sets the method implementation flags for this constructor.","nodes":[{"pos":[0,58],"content":"Sets the method implementation flags for this constructor.","nodes":[{"content":"Sets the method implementation flags for this constructor.","pos":[0,58]}]}],"pos":[79886,79945],"yaml":true},{"content":"The following code sample illustrates the use of `SetImplementationFlags`.  \n  \n [!code-cpp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)]\n [!code-vb[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)]","nodes":[{"pos":[0,74],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`SetImplementationFlags`</ph>.","source":"The following code sample illustrates the use of `SetImplementationFlags`."},{"pos":[81,664],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_SetImplementationFlags#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_SetImplementationFlags#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_SetImplementationFlags#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)]\n [!code-vb[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)]"}],"pos":[79956,80627],"yaml":true,"extradata":"MT"},{"content":"The method implementation flags.","nodes":[{"pos":[0,32],"content":"The method implementation flags.","nodes":[{"content":"The method implementation flags.","pos":[0,32]}]}],"pos":[80845,80878],"yaml":true},{"content":"The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.","nodes":[{"pos":[0,110],"content":"The containing type has been created using <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph>.","source":"The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>."}],"pos":[81080,81191],"yaml":true},{"content":"Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.","nodes":[{"pos":[0,123],"content":"Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.","nodes":[{"content":"Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.","pos":[0,123]}]}],"pos":[83131,83255],"yaml":true},{"content":"An array that contains valid MSIL instructions.","nodes":[{"pos":[0,47],"content":"An array that contains valid MSIL instructions.","nodes":[{"content":"An array that contains valid MSIL instructions.","pos":[0,47]}]}],"pos":[83584,83632],"yaml":true},{"content":"The maximum stack evaluation depth.","nodes":[{"pos":[0,35],"content":"The maximum stack evaluation depth.","nodes":[{"content":"The maximum stack evaluation depth.","pos":[0,35]}]}],"pos":[83695,83731],"yaml":true},{"content":"An array of bytes that contain the serialized local variable structure. Specify `null` if the constructor has no local variables.","nodes":[{"pos":[0,129],"content":"An array of bytes that contain the serialized local variable structure. Specify `null` if the constructor has no local variables.","nodes":[{"content":"An array of bytes that contain the serialized local variable structure.","pos":[0,71]},{"content":"Specify <ph id=\"ph1\">`null`</ph> if the constructor has no local variables.","pos":[72,129],"source":" Specify `null` if the constructor has no local variables."}]}],"pos":[83801,83931],"yaml":true},{"content":"A collection that contains the exception handlers for the constructor. Specify `null` if the constructor has no exception handlers.","nodes":[{"pos":[0,131],"content":"A collection that contains the exception handlers for the constructor. Specify `null` if the constructor has no exception handlers.","nodes":[{"content":"A collection that contains the exception handlers for the constructor.","pos":[0,70]},{"content":"Specify <ph id=\"ph1\">`null`</ph> if the constructor has no exception handlers.","pos":[71,131],"source":" Specify `null` if the constructor has no exception handlers."}]}],"pos":[84070,84202],"yaml":true},{"content":"A collection of values that represent offsets in <code>il</code>, each of which specifies the beginning of a token that may be modified. Specify `null` if the constructor has no tokens that have to be modified.","nodes":[{"pos":[0,210],"content":"A collection of values that represent offsets in <code>il</code>, each of which specifies the beginning of a token that may be modified. Specify `null` if the constructor has no tokens that have to be modified.","nodes":[{"content":"A collection of values that represent offsets in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">il</ph><ept id=\"p1\">&lt;/code&gt;</ept>, each of which specifies the beginning of a token that may be modified.","pos":[0,136],"source":"A collection of values that represent offsets in <code>il</code>, each of which specifies the beginning of a token that may be modified."},{"content":"Specify <ph id=\"ph1\">`null`</ph> if the constructor has no tokens that have to be modified.","pos":[137,210],"source":" Specify `null` if the constructor has no tokens that have to be modified."}]}],"pos":[84308,84519],"yaml":true},{"content":"<code>il</code> is `null`.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;il&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>il</code> is `null`."}],"pos":[84704,84731],"yaml":true},{"content":"<code>maxStack</code> is negative.  \n  \n -or-  \n  \n One of <code>exceptionHandlers</code> specifies an offset outside of <code>il</code>.  \n  \n -or-  \n  \n One of <code>tokenFixups</code> specifies an offset that is outside the <code>il</code> array.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;maxStack&lt;/code&gt;</ph> is negative.","source":"<code>maxStack</code> is negative."},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,137],"content":"One of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exceptionHandlers</ph><ept id=\"p1\">&lt;/code&gt;</ept> specifies an offset outside of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">il</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"One of <code>exceptionHandlers</code> specifies an offset outside of <code>il</code>."},{"pos":[144,148],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[155,249],"content":"One of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">tokenFixups</ph><ept id=\"p1\">&lt;/code&gt;</ept> specifies an offset that is outside the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">il</ph><ept id=\"p2\">&lt;/code&gt;</ept> array.","source":"One of <code>tokenFixups</code> specifies an offset that is outside the <code>il</code> array."}],"pos":[84845,85105],"yaml":true},{"content":"The containing type was previously created using the <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> method.  \n  \n -or-  \n  \n This method was called previously on this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> object.","nodes":[{"pos":[0,127],"content":"The containing type was previously created using the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> method.","source":"The containing type was previously created using the <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> method."},{"pos":[134,138],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[145,257],"content":"This method was called previously on this <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ConstructorBuilder\"&gt;&lt;/xref&gt;</ph> object.","source":"This method was called previously on this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> object."}],"pos":[85215,85483],"yaml":true},{"content":"Sets this constructor's custom attribute associated with symbolic information.","nodes":[{"pos":[0,78],"content":"Sets this constructor's custom attribute associated with symbolic information.","nodes":[{"content":"Sets this constructor's custom attribute associated with symbolic information.","pos":[0,78]}]}],"pos":[86723,86802],"yaml":true},{"content":"The following code sample illustrates the use of `SetSymCustomAttributes`.  \n  \n [!code-cpp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)]\n [!code-vb[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)]","nodes":[{"pos":[0,74],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`SetSymCustomAttributes`</ph>.","source":"The following code sample illustrates the use of `SetSymCustomAttributes`."},{"pos":[81,655],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>ConstructorBuilder_SetSymCustomAttribute#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>ConstructorBuilder_SetSymCustomAttribute#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>ConstructorBuilder_SetSymCustomAttribute#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)]\n [!code-vb[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)]"}],"pos":[86813,87475],"yaml":true,"extradata":"MT"},{"content":"The name of the custom attribute.","nodes":[{"pos":[0,33],"content":"The name of the custom attribute.","nodes":[{"content":"The name of the custom attribute.","pos":[0,33]}]}],"pos":[87636,87670],"yaml":true},{"content":"The value of the custom attribute.","nodes":[{"pos":[0,34],"content":"The value of the custom attribute.","nodes":[{"content":"The value of the custom attribute.","pos":[0,34]}]}],"pos":[87730,87765],"yaml":true},{"content":"The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.  \n  \n -or-  \n  \n The module does not have a symbol writer defined. For example, the module is not a debug module.","nodes":[{"pos":[0,110],"content":"The containing type has been created using <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph>.","source":"The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>."},{"pos":[117,121],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[128,224],"content":"The module does not have a symbol writer defined. For example, the module is not a debug module.","nodes":[{"content":"The module does not have a symbol writer defined. For example, the module is not a debug module.","pos":[0,96],"nodes":[{"content":"The module does not have a symbol writer defined.","pos":[0,49]},{"content":"For example, the module is not a debug module.","pos":[50,96]}]}]}],"pos":[87966,88199],"yaml":true},{"content":"Retrieves the signature of the field in the form of a string.","nodes":[{"pos":[0,61],"content":"Retrieves the signature of the field in the form of a string.","nodes":[{"content":"Retrieves the signature of the field in the form of a string.","pos":[0,61]}]}],"pos":[89234,89296],"yaml":true},{"content":"Returns the signature of the field.","nodes":[{"pos":[0,35],"content":"Returns the signature of the field.","nodes":[{"content":"Returns the signature of the field.","pos":[0,35]}]}],"pos":[89409,89445],"yaml":true},{"content":"Returns this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> instance as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,125],"content":"Returns this <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ConstructorBuilder\"&gt;&lt;/xref&gt;</ph> instance as a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Returns this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> instance as a <xref href=\"System.String\"></xref>."}],"pos":[90587,90713],"yaml":true},{"content":"Returns a <xref href=\"System.String\"></xref> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.","nodes":[{"pos":[0,184],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.","source":"Returns a <xref href=\"System.String\"></xref> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream."}],"pos":[90848,91033],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[92818,92886],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[92897,93084],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[93296,93339],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[93404,93443],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[93505,93538],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[93598,93650],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[93714,93788],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[94028,94111],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[95584,95699],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[95710,95895],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[96075,96107],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[96167,96215],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[96278,96339],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[96577,96660],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[98034,98127],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[98138,98328],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[98492,98593],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[98836,98919],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[100677,100741],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[100752,100932],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[101207,101230],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[101288,101331],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[101391,101443],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[101504,101546],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[101613,101773],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[101839,101897],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[101963,102023],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[102087,102138],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[102371,102454],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.ConstructorBuilder\n  commentId: T:System.Reflection.Emit.ConstructorBuilder\n  id: ConstructorBuilder\n  children:\n  - System.Reflection.Emit.ConstructorBuilder.#ctor\n  - System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)\n  - System.Reflection.Emit.ConstructorBuilder.Attributes\n  - System.Reflection.Emit.ConstructorBuilder.CallingConvention\n  - System.Reflection.Emit.ConstructorBuilder.DeclaringType\n  - System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  - System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)\n  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator\n  - System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags\n  - System.Reflection.Emit.ConstructorBuilder.GetModule\n  - System.Reflection.Emit.ConstructorBuilder.GetParameters\n  - System.Reflection.Emit.ConstructorBuilder.GetToken\n  - System.Reflection.Emit.ConstructorBuilder.InitLocals\n  - System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Emit.ConstructorBuilder.MethodHandle\n  - System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags\n  - System.Reflection.Emit.ConstructorBuilder.Module\n  - System.Reflection.Emit.ConstructorBuilder.Name\n  - System.Reflection.Emit.ConstructorBuilder.ReflectedType\n  - System.Reflection.Emit.ConstructorBuilder.ReturnType\n  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  - System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  - System.Reflection.Emit.ConstructorBuilder.Signature\n  - System.Reflection.Emit.ConstructorBuilder.ToString\n  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: ConstructorBuilder\n  nameWithType: ConstructorBuilder\n  fullName: System.Reflection.Emit.ConstructorBuilder\n  type: Class\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines and represents a constructor of a dynamic class.\n  remarks: \"<xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body. It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time. Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.  \\n  \\n If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.  \\n  \\n If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided. You have the following options for providing a default constructor in addition to the constructor you defined:  \\n  \\n-   If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName> method to create one (and optionally restrict access to it). Do not provide an implementation for this default constructor. If you do, an exception is thrown when you try to use the constructor. No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method is called.  \\n  \\n-   If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=fullName> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation.\"\n  example:\n  - \"The following code sample illustrates the contextual usage of a `ConstructorBuilder`.  \\n  \\n [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ConstructorBuilder : System.Reflection.ConstructorInfo, System.Runtime.InteropServices._ConstructorBuilder\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.MethodBase\n  - System.Reflection.ConstructorInfo\n  implements:\n  - System.Runtime.InteropServices._ConstructorBuilder\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Reflection.ConstructorInfo.ConstructorName\n  - System.Reflection.ConstructorInfo.Equals(System.Object)\n  - System.Reflection.ConstructorInfo.GetHashCode\n  - System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  - System.Reflection.ConstructorInfo.MemberType\n  - System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  - System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  - System.Reflection.ConstructorInfo.TypeConstructorName\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.ContainsGenericParameters\n  - System.Reflection.MethodBase.GetCurrentMethod\n  - System.Reflection.MethodBase.GetGenericArguments\n  - System.Reflection.MethodBase.GetMethodBody\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsGenericMethod\n  - System.Reflection.MethodBase.IsGenericMethodDefinition\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsSecurityCritical\n  - System.Reflection.MethodBase.IsSecuritySafeCritical\n  - System.Reflection.MethodBase.IsSecurityTransparent\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  extensionMethods:\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.#ctor\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: ConstructorBuilder()\n  nameWithType: ConstructorBuilder.ConstructorBuilder()\n  fullName: ConstructorBuilder.ConstructorBuilder()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: protected ConstructorBuilder ();\n    parameters: []\n  overload: System.Reflection.Emit.ConstructorBuilder.#ctor*\n  exceptions: []\n  version:\n  - xamarinios-10.8\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)\n  id: AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: AddDeclarativeSecurity(SecurityAction, PermissionSet)\n  nameWithType: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)\n  fullName: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Adds declarative security to this constructor.\n  remarks: \"<xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to.  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format. See Emitting Declarative Security Attributes.\"\n  example:\n  - \"The following code sample illustrates the use of `AddDeclarativeSecurity`.  \\n  \\n [!code-cpp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#1)]\\n [!code-csharp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#1)]\\n [!code-vb[ConstructorBuilder_Attributes_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#1)]\"\n  syntax:\n    content: public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: The security action to be taken, such as Demand, Assert, and so on.\n    - id: pset\n      type: System.Security.PermissionSet\n      description: The set of permissions the action applies to.\n  overload: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>action</code> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The containing type has been previously created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\"></xref>.  \\n  \\n -or-  \\n  \\n The permission set <code>pset</code> contains an action that was added earlier by `AddDeclarativeSecurity`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pset</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.Attributes\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: ConstructorBuilder.Attributes\n  fullName: ConstructorBuilder.Attributes\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the attributes for this constructor.\n  remarks: \"The following code sample illustrates the use of `Attributes`.  \\n  \\n [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]\"\n  syntax:\n    content: public override System.Reflection.MethodAttributes Attributes { get; }\n    return:\n      type: System.Reflection.MethodAttributes\n      description: Returns the attributes for this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.Attributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.CallingConvention\n  id: CallingConvention\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: CallingConvention\n  nameWithType: ConstructorBuilder.CallingConvention\n  fullName: ConstructorBuilder.CallingConvention\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a <xref href=\"System.Reflection.CallingConventions\"></xref> value that depends on whether the declaring type is generic.\n  syntax:\n    content: public override System.Reflection.CallingConventions CallingConvention { get; }\n    return:\n      type: System.Reflection.CallingConventions\n      description: <xref href=\"System.Reflection.CallingConventions.HasThis\"></xref> if the declaring type is generic; otherwise, <xref href=\"System.Reflection.CallingConventions.Standard\"></xref>.\n  overload: System.Reflection.Emit.ConstructorBuilder.CallingConvention*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.DeclaringType\n  id: DeclaringType\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: ConstructorBuilder.DeclaringType\n  fullName: ConstructorBuilder.DeclaringType\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves a reference to the <xref href=\"System.Type\"></xref> object for the type that declares this member.\n  remarks: \"A member of a class (or interface) is either declared or inherited from a base class (or interface).  \\n  \\n The following code sample illustrates the use of `DeclaringType`.  \\n  \\n [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]\"\n  syntax:\n    content: public override Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: Returns the <xref href=\"System.Type\"></xref> object for the type that declares this member.\n  overload: System.Reflection.Emit.ConstructorBuilder.DeclaringType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: DefineParameter(Int32, ParameterAttributes, String)\n  nameWithType: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)\n  fullName: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a parameter of this constructor.\n  remarks: If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception. There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>.\n  syntax:\n    content: public System.Reflection.Emit.ParameterBuilder DefineParameter (int iSequence, System.Reflection.ParameterAttributes attributes, string strParamName);\n    parameters:\n    - id: iSequence\n      type: System.Int32\n      description: The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.\n    - id: attributes\n      type: System.Reflection.ParameterAttributes\n      description: The attributes of the parameter.\n    - id: strParamName\n      type: System.String\n      description: The name of the parameter. The name can be the null string.\n    return:\n      type: System.Reflection.Emit.ParameterBuilder\n      description: Returns a `ParameterBuilder` object that represents the new parameter of this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.DefineParameter*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>iSequence</code> is less than 0 (zero), or it is greater than the number of parameters of the constructor.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ConstructorBuilder.GetCustomAttributes(Boolean)\n  fullName: ConstructorBuilder.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Returns all the custom attributes defined for this constructor.\n  remarks: \"The `inherit` parameter is ignored because a class never inherits constructors from base classes.  \\n  \\n To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.\"\n  syntax:\n    content: public override object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.\n    return:\n      type: System.Object[]\n      description: Returns an array of objects representing all the custom attributes of the constructor represented by this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> instance.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ConstructorBuilder.GetCustomAttributes(Type, Boolean)\n  fullName: ConstructorBuilder.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Returns the custom attributes identified by the given type.\n  remarks: \"The `inherit` parameter is ignored because a class never inherits constructors from base classes.  \\n  \\n To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.\"\n  syntax:\n    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The custom attribute type.\n    - id: inherit\n      type: System.Boolean\n      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.\n    return:\n      type: System.Object[]\n      description: Returns an array of type <xref href=\"System.Object\"></xref> representing the attributes of this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)\n  id: GetILGenerator(System.Int32)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetILGenerator(Int32)\n  nameWithType: ConstructorBuilder.GetILGenerator(Int32)\n  fullName: ConstructorBuilder.GetILGenerator(Int32)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.\n  remarks: The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown.\n  syntax:\n    content: public System.Reflection.Emit.ILGenerator GetILGenerator (int streamSize);\n    parameters:\n    - id: streamSize\n      type: System.Int32\n      description: The size of the MSIL stream, in bytes.\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: An <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> for this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetILGenerator*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The constructor is a default constructor.  \\n  \\n -or-  \\n  \\n The constructor has <xref href=\\\"System.Reflection.MethodAttributes\\\"></xref> or <xref href=\\\"System.Reflection.MethodImplAttributes\\\"></xref> flags indicating that it should not have a method body.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator\n  id: GetILGenerator\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetILGenerator()\n  nameWithType: ConstructorBuilder.GetILGenerator()\n  fullName: ConstructorBuilder.GetILGenerator()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> for this constructor.\n  remarks: The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown.\n  example:\n  - \"The following code sample illustrates the use of the `GetILGenerator` method.  \\n  \\n [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.ILGenerator GetILGenerator ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.ILGenerator\n      description: Returns an <xref href=\"System.Reflection.Emit.ILGenerator\"></xref> object for this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetILGenerator*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The constructor is a default constructor.  \\n  \\n -or-  \\n  \\n The constructor has <xref href=\\\"System.Reflection.MethodAttributes\\\"></xref> or <xref href=\\\"System.Reflection.MethodImplAttributes\\\"></xref> flags indicating that it should not have a method body.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags\n  id: GetMethodImplementationFlags\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetMethodImplementationFlags()\n  nameWithType: ConstructorBuilder.GetMethodImplementationFlags()\n  fullName: ConstructorBuilder.GetMethodImplementationFlags()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Returns the method implementation flags for this constructor.\n  remarks: \"The following code sample illustrates the use of `GetMethodImplementationFlags`.  \\n  \\n [!code-cpp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)]\\n [!code-csharp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)]\\n [!code-vb[ConstructorBuilder_GetModule_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)]\"\n  syntax:\n    content: public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: The method implementation flags for this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetModule\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetModule\n  id: GetModule\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetModule()\n  nameWithType: ConstructorBuilder.GetModule()\n  fullName: ConstructorBuilder.GetModule()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a reference to the module that contains this constructor.\n  remarks: \"The following code sample illustrates the usage of `GetModule`.  \\n  \\n [!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]\\n [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Module GetModule ();\n    parameters: []\n    return:\n      type: System.Reflection.Module\n      description: The module that contains this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetModule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetParameters\n  id: GetParameters\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: ConstructorBuilder.GetParameters()\n  fullName: ConstructorBuilder.GetParameters()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the parameters of this constructor.\n  remarks: This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method has been called. In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown. In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.\n  example:\n  - \"The code sample illustrates the use of `GetParameters`.  \\n  \\n [!code-cpp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#4)]\\n [!code-csharp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#4)]\\n [!code-vb[ConstructorBuilder_GetModule_4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#4)]\"\n  syntax:\n    content: public override System.Reflection.ParameterInfo[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: Returns an array of <xref href=\"System.Reflection.ParameterInfo\"></xref> objects that represent the parameters of this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetParameters*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called on this constructor's type, in the .NET Framework version 2.0.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.GetToken\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetToken\n  id: GetToken\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: GetToken()\n  nameWithType: ConstructorBuilder.GetToken()\n  fullName: ConstructorBuilder.GetToken()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the <xref href=\"System.Reflection.Emit.MethodToken\"></xref> that represents the token for this constructor.\n  remarks: \"This code sample illustrates the use of `GetToken`.  \\n  \\n [!code-cpp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)]\\n [!code-csharp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)]\\n [!code-vb[ConstructorBuilder_GetModule_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)]\"\n  syntax:\n    content: public System.Reflection.Emit.MethodToken GetToken ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: Returns the <xref href=\"System.Reflection.Emit.MethodToken\"></xref> of this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.GetToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.InitLocals\n  id: InitLocals\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: InitLocals\n  nameWithType: ConstructorBuilder.InitLocals\n  fullName: ConstructorBuilder.InitLocals\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets or sets whether the local variables in this constructor should be zero-initialized.\n  syntax:\n    content: public bool InitLocals { get; set; }\n    return:\n      type: System.Boolean\n      description: Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.\n  overload: System.Reflection.Emit.ConstructorBuilder.InitLocals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.\n  remarks: \"If the constructor has no parameters, the value of the `parameters` parameter should be `null`. Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \\n  \\n For example, if the constructor reflected by this instance is declared as public class taking two strings, then the `parameters` parameter should be an array of <xref:System.Object> with length 2.  \\n  \\n> [!NOTE]\\n>  Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.\"\n  syntax:\n    content: public override object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>, such as InvokeMethod, NonPublic, and so on.\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If binder is `null`, the default binder is used. See <xref href=\"System.Reflection.Binder\"></xref>.\n    - id: parameters\n      type: System.Object[]\n      description: An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters this should be `null`.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An instance of <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used. (For example, this is necessary to convert a <xref href=\"System.String\"></xref> that represents 1000 to a <xref href=\"System.Double\"></xref> value, since 1000 is represented differently by different cultures.)\n    return:\n      type: System.Object\n      description: Returns an <xref href=\"System.Object\"></xref> that is the return value of the invoked constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.Invoke*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified `Binder`.\n  remarks: \"The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \\n  \\n Before calling the constructor, `Invoke` ensures that the caller has access permission, and that the parameters are of the correct number, order and type.  \\n  \\n Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.\"\n  syntax:\n    content: public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object that needs to be reinitialized.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the `BindingFlags` values that specifies the type of binding that is desired.\n    - id: binder\n      type: System.Reflection.Binder\n      description: A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then Binder.DefaultBinding is used.\n    - id: parameters\n      type: System.Object[]\n      description: An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters, this should be a null reference (`Nothing` in Visual Basic).\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> used to govern the coercion of types. If this is null, the <xref href=\"System.Globalization.CultureInfo\"></xref> for the current thread is used.\n    return:\n      type: System.Object\n      description: An instance of the class associated with the constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.Invoke*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: ConstructorBuilder.IsDefined(Type, Boolean)\n  fullName: ConstructorBuilder.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Checks if the specified custom attribute type is defined.\n  remarks: See the metadata specification for details on how to format `binaryAttribute`.\n  syntax:\n    content: public override bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: A custom attribute type.\n    - id: inherit\n      type: System.Boolean\n      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified custom attribute type is defined; otherwise, `false`.'\n  overload: System.Reflection.Emit.ConstructorBuilder.IsDefined*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported. You can retrieve the constructor using <xref href=\"System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\"></xref> and call <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> on the returned <xref href=\"System.Reflection.ConstructorInfo\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.MethodHandle\n  id: MethodHandle\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: MethodHandle\n  nameWithType: ConstructorBuilder.MethodHandle\n  fullName: ConstructorBuilder.MethodHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Retrieves the internal handle for the method. Use this handle to access the underlying metadata handle.\n  syntax:\n    content: public override RuntimeMethodHandle MethodHandle { get; }\n    return:\n      type: System.RuntimeMethodHandle\n      description: Returns the internal handle for the method. Use this handle to access the underlying metadata handle.\n  overload: System.Reflection.Emit.ConstructorBuilder.MethodHandle*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this class.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags\n  id: MethodImplementationFlags\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: MethodImplementationFlags\n  nameWithType: ConstructorBuilder.MethodImplementationFlags\n  fullName: ConstructorBuilder.MethodImplementationFlags\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  overload: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.Module\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.Module\n  id: Module\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: Module\n  nameWithType: ConstructorBuilder.Module\n  fullName: ConstructorBuilder.Module\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Gets the dynamic module in which this constructor is defined.\n  remarks: This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method.\n  syntax:\n    content: public override System.Reflection.Module Module { get; }\n    return:\n      type: System.Reflection.Module\n      description: A <xref href=\"System.Reflection.Module\"></xref> object that represents the dynamic module in which this constructor is defined.\n  overload: System.Reflection.Emit.ConstructorBuilder.Module*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.Name\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ConstructorBuilder.Name\n  fullName: ConstructorBuilder.Name\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the name of this constructor.\n  remarks: \"The following code sample illustrates the use of `Name`.  \\n  \\n [!code-cpp[ConstructorBuilder_Name_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)]\\n [!code-csharp[ConstructorBuilder_Name_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)]\\n [!code-vb[ConstructorBuilder_Name_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)]\"\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: Returns the name of this constructor.\n  overload: System.Reflection.Emit.ConstructorBuilder.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.ReflectedType\n  id: ReflectedType\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: ConstructorBuilder.ReflectedType\n  fullName: ConstructorBuilder.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: Holds a reference to the <xref href=\"System.Type\"></xref> object from which this object was obtained.\n  remarks: A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class. In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried. This property holds a reference to that <xref:System.Type> object.\n  syntax:\n    content: public override Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: Returns the `Type` object from which this object was obtained.\n  overload: System.Reflection.Emit.ConstructorBuilder.ReflectedType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.ReturnType\n  id: ReturnType\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: ReturnType\n  nameWithType: ConstructorBuilder.ReturnType\n  fullName: ConstructorBuilder.ReturnType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets `null`.\n  remarks: This property might be removed in a future version.\n  syntax:\n    content: >-\n      [System.Obsolete]\n\n      public Type ReturnType { get; }\n    return:\n      type: System.Type\n      description: Returns `null`.\n  overload: System.Reflection.Emit.ConstructorBuilder.ReturnType*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute using a custom attribute builder.\n  remarks: ''\n  example:\n  - \"The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a <xref:System.Reflection.Emit.CustomAttributeBuilder>.  \\n  \\n [!code-cpp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CPP/constructorbuilder_setcustomattribute1.cpp#1)]\\n [!code-csharp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CS/constructorbuilder_setcustomattribute1.cs#1)]\\n [!code-vb[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/VB/constructorbuilder_setcustomattribute1.vb#1)]\"\n  syntax:\n    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: An instance of a helper class to define the custom attribute.\n  overload: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>customBuilder</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute using a specified custom attribute blob.\n  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.\n  example:\n  - \"The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a byte blob.  \\n  \\n [!code-cpp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CPP/constructorbuilder_setcustomattribute2.cpp#1)]\\n [!code-csharp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CS/constructorbuilder_setcustomattribute2.cs#1)]\\n [!code-vb[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/VB/constructorbuilder_setcustomattribute2.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: The constructor for the custom attribute.\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: A byte blob representing the attributes.\n  overload: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> or <code>binaryAttribute</code> is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  id: SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: SetImplementationFlags(MethodImplAttributes)\n  nameWithType: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)\n  fullName: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the method implementation flags for this constructor.\n  remarks: \"The following code sample illustrates the use of `SetImplementationFlags`.  \\n  \\n [!code-cpp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)]\\n [!code-csharp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)]\\n [!code-vb[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)]\"\n  syntax:\n    content: public void SetImplementationFlags (System.Reflection.MethodImplAttributes attributes);\n    parameters:\n    - id: attributes\n      type: System.Reflection.MethodImplAttributes\n      description: The method implementation flags.\n  overload: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})\n  id: SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)\n  nameWithType: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)\n  fullName: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.\n  syntax:\n    content: public void SetMethodBody (byte[] il, int maxStack, byte[] localSignature, System.Collections.Generic.IEnumerable<System.Reflection.Emit.ExceptionHandler> exceptionHandlers, System.Collections.Generic.IEnumerable<int> tokenFixups);\n    parameters:\n    - id: il\n      type: System.Byte[]\n      description: An array that contains valid MSIL instructions.\n    - id: maxStack\n      type: System.Int32\n      description: The maximum stack evaluation depth.\n    - id: localSignature\n      type: System.Byte[]\n      description: An array of bytes that contain the serialized local variable structure. Specify `null` if the constructor has no local variables.\n    - id: exceptionHandlers\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler}\n      description: A collection that contains the exception handlers for the constructor. Specify `null` if the constructor has no exception handlers.\n    - id: tokenFixups\n      type: System.Collections.Generic.IEnumerable{System.Int32}\n      description: A collection of values that represent offsets in <code>il</code>, each of which specifies the beginning of a token that may be modified. Specify `null` if the constructor has no tokens that have to be modified.\n  overload: System.Reflection.Emit.ConstructorBuilder.SetMethodBody*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>il</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>maxStack</code> is negative.  \\n  \\n -or-  \\n  \\n One of <code>exceptionHandlers</code> specifies an offset outside of <code>il</code>.  \\n  \\n -or-  \\n  \\n One of <code>tokenFixups</code> specifies an offset that is outside the <code>il</code> array.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The containing type was previously created using the <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\"></xref> method.  \\n  \\n -or-  \\n  \\n This method was called previously on this <xref href=\\\"System.Reflection.Emit.ConstructorBuilder\\\"></xref> object.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  id: SetSymCustomAttribute(System.String,System.Byte[])\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: SetSymCustomAttribute(String, Byte[])\n  nameWithType: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])\n  fullName: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets this constructor's custom attribute associated with symbolic information.\n  remarks: \"The following code sample illustrates the use of `SetSymCustomAttributes`.  \\n  \\n [!code-cpp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)]\\n [!code-csharp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)]\\n [!code-vb[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)]\"\n  syntax:\n    content: public void SetSymCustomAttribute (string name, byte[] data);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the custom attribute.\n    - id: data\n      type: System.Byte[]\n      description: The value of the custom attribute.\n  overload: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The containing type has been created using <xref href=\\\"System.Reflection.Emit.TypeBuilder.CreateType\\\"></xref>.  \\n  \\n -or-  \\n  \\n The module does not have a symbol writer defined. For example, the module is not a debug module.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.Signature\n  commentId: P:System.Reflection.Emit.ConstructorBuilder.Signature\n  id: Signature\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: Signature\n  nameWithType: ConstructorBuilder.Signature\n  fullName: ConstructorBuilder.Signature\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the signature of the field in the form of a string.\n  syntax:\n    content: public string Signature { get; }\n    return:\n      type: System.String\n      description: Returns the signature of the field.\n  overload: System.Reflection.Emit.ConstructorBuilder.Signature*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.ToString\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.ToString\n  id: ToString\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ConstructorBuilder.ToString()\n  fullName: ConstructorBuilder.ToString()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> instance as a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Returns a <xref href=\"System.String\"></xref> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.\n  overload: System.Reflection.Emit.ConstructorBuilder.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: _ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: _ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: _ConstructorBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)\n  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorBuilder.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ConstructorBuilder\n  langs:\n  - csharp\n  name: _ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _ConstructorBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.Emit.ConstructorBuilder.#ctor\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ConstructorBuilder()\n  nameWithType: ConstructorBuilder.ConstructorBuilder()\n  fullName: ConstructorBuilder.ConstructorBuilder()\n- uid: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: AddDeclarativeSecurity(SecurityAction, PermissionSet)\n  nameWithType: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)\n  fullName: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Reflection.Emit.ConstructorBuilder.Attributes\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Attributes\n  nameWithType: ConstructorBuilder.Attributes\n  fullName: ConstructorBuilder.Attributes\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: CallingConvention\n  nameWithType: ConstructorBuilder.CallingConvention\n  fullName: ConstructorBuilder.CallingConvention\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: DeclaringType\n  nameWithType: ConstructorBuilder.DeclaringType\n  fullName: ConstructorBuilder.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: DefineParameter(Int32, ParameterAttributes, String)\n  nameWithType: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)\n  fullName: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)\n- uid: System.Reflection.Emit.ParameterBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterBuilder\n  nameWithType: ParameterBuilder\n  fullName: System.Reflection.Emit.ParameterBuilder\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterAttributes\n  nameWithType: ParameterAttributes\n  fullName: System.Reflection.ParameterAttributes\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ConstructorBuilder.GetCustomAttributes(Boolean)\n  fullName: ConstructorBuilder.GetCustomAttributes(Boolean)\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ConstructorBuilder.GetCustomAttributes(Type, Boolean)\n  fullName: ConstructorBuilder.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetILGenerator(Int32)\n  nameWithType: ConstructorBuilder.GetILGenerator(Int32)\n  fullName: ConstructorBuilder.GetILGenerator(Int32)\n- uid: System.Reflection.Emit.ILGenerator\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ILGenerator\n  nameWithType: ILGenerator\n  fullName: System.Reflection.Emit.ILGenerator\n- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetILGenerator()\n  nameWithType: ConstructorBuilder.GetILGenerator()\n  fullName: ConstructorBuilder.GetILGenerator()\n- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  nameWithType: ConstructorBuilder.GetMethodImplementationFlags()\n  fullName: ConstructorBuilder.GetMethodImplementationFlags()\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Reflection.Emit.ConstructorBuilder.GetModule\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetModule()\n  nameWithType: ConstructorBuilder.GetModule()\n  fullName: ConstructorBuilder.GetModule()\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetParameters()\n  nameWithType: ConstructorBuilder.GetParameters()\n  fullName: ConstructorBuilder.GetParameters()\n- uid: System.Reflection.ParameterInfo\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Reflection.ParameterInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo[]\n  nameWithType: ParameterInfo[]\n  fullName: System.Reflection.ParameterInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ConstructorBuilder.GetToken\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetToken()\n  nameWithType: ConstructorBuilder.GetToken()\n  fullName: ConstructorBuilder.GetToken()\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: InitLocals\n  nameWithType: ConstructorBuilder.InitLocals\n  fullName: ConstructorBuilder.InitLocals\n- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: ConstructorBuilder.IsDefined(Type, Boolean)\n  fullName: ConstructorBuilder.IsDefined(Type, Boolean)\n- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: MethodHandle\n  nameWithType: ConstructorBuilder.MethodHandle\n  fullName: ConstructorBuilder.MethodHandle\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: MethodImplementationFlags\n  nameWithType: ConstructorBuilder.MethodImplementationFlags\n  fullName: ConstructorBuilder.MethodImplementationFlags\n- uid: System.Reflection.Emit.ConstructorBuilder.Module\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Module\n  nameWithType: ConstructorBuilder.Module\n  fullName: ConstructorBuilder.Module\n- uid: System.Reflection.Emit.ConstructorBuilder.Name\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Name\n  nameWithType: ConstructorBuilder.Name\n  fullName: ConstructorBuilder.Name\n- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ReflectedType\n  nameWithType: ConstructorBuilder.ReflectedType\n  fullName: ConstructorBuilder.ReflectedType\n- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ReturnType\n  nameWithType: ConstructorBuilder.ReturnType\n  fullName: ConstructorBuilder.ReturnType\n- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetImplementationFlags(MethodImplAttributes)\n  nameWithType: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)\n  fullName: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)\n- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)\n  nameWithType: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)\n  fullName: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Reflection.Emit.ExceptionHandler\n  name: ExceptionHandler\n  nameWithType: ExceptionHandler\n  fullName: System.Reflection.Emit.ExceptionHandler\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ExceptionHandler>\n  nameWithType: IEnumerable<ExceptionHandler>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.ExceptionHandler>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.Emit.ExceptionHandler\n    name: ExceptionHandler\n    nameWithType: ExceptionHandler\n    fullName: System.Reflection.Emit.ExceptionHandler\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable{System.Int32}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Int32>\n  nameWithType: IEnumerable<Int32>\n  fullName: System.Collections.Generic.IEnumerable<System.Int32>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetSymCustomAttribute(String, Byte[])\n  nameWithType: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])\n  fullName: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])\n- uid: System.Reflection.Emit.ConstructorBuilder.Signature\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Signature\n  nameWithType: ConstructorBuilder.Signature\n  fullName: ConstructorBuilder.Signature\n- uid: System.Reflection.Emit.ConstructorBuilder.ToString\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ToString()\n  nameWithType: ConstructorBuilder.ToString()\n  fullName: ConstructorBuilder.ToString()\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: _ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: _ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: _ConstructorBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)\n  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: _ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.ConstructorBuilder.#ctor*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ConstructorBuilder\n  nameWithType: ConstructorBuilder.ConstructorBuilder\n  fullName: ConstructorBuilder.ConstructorBuilder\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: AddDeclarativeSecurity\n  nameWithType: ConstructorBuilder.AddDeclarativeSecurity\n  fullName: ConstructorBuilder.AddDeclarativeSecurity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.Attributes*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Attributes\n  nameWithType: ConstructorBuilder.Attributes\n  fullName: ConstructorBuilder.Attributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: CallingConvention\n  nameWithType: ConstructorBuilder.CallingConvention\n  fullName: ConstructorBuilder.CallingConvention\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: DeclaringType\n  nameWithType: ConstructorBuilder.DeclaringType\n  fullName: ConstructorBuilder.DeclaringType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: DefineParameter\n  nameWithType: ConstructorBuilder.DefineParameter\n  fullName: ConstructorBuilder.DefineParameter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: ConstructorBuilder.GetCustomAttributes\n  fullName: ConstructorBuilder.GetCustomAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetILGenerator\n  nameWithType: ConstructorBuilder.GetILGenerator\n  fullName: ConstructorBuilder.GetILGenerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetMethodImplementationFlags\n  nameWithType: ConstructorBuilder.GetMethodImplementationFlags\n  fullName: ConstructorBuilder.GetMethodImplementationFlags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.GetModule*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetModule\n  nameWithType: ConstructorBuilder.GetModule\n  fullName: ConstructorBuilder.GetModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetParameters\n  nameWithType: ConstructorBuilder.GetParameters\n  fullName: ConstructorBuilder.GetParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.GetToken*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: GetToken\n  nameWithType: ConstructorBuilder.GetToken\n  fullName: ConstructorBuilder.GetToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: InitLocals\n  nameWithType: ConstructorBuilder.InitLocals\n  fullName: ConstructorBuilder.InitLocals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.Invoke*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Invoke\n  nameWithType: ConstructorBuilder.Invoke\n  fullName: ConstructorBuilder.Invoke\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: IsDefined\n  nameWithType: ConstructorBuilder.IsDefined\n  fullName: ConstructorBuilder.IsDefined\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: MethodHandle\n  nameWithType: ConstructorBuilder.MethodHandle\n  fullName: ConstructorBuilder.MethodHandle\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: MethodImplementationFlags\n  nameWithType: ConstructorBuilder.MethodImplementationFlags\n  fullName: ConstructorBuilder.MethodImplementationFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.Module*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Module\n  nameWithType: ConstructorBuilder.Module\n  fullName: ConstructorBuilder.Module\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.Name*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Name\n  nameWithType: ConstructorBuilder.Name\n  fullName: ConstructorBuilder.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ReflectedType\n  nameWithType: ConstructorBuilder.ReflectedType\n  fullName: ConstructorBuilder.ReflectedType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ReturnType\n  nameWithType: ConstructorBuilder.ReturnType\n  fullName: ConstructorBuilder.ReturnType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetCustomAttribute\n  nameWithType: ConstructorBuilder.SetCustomAttribute\n  fullName: ConstructorBuilder.SetCustomAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetImplementationFlags\n  nameWithType: ConstructorBuilder.SetImplementationFlags\n  fullName: ConstructorBuilder.SetImplementationFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetMethodBody\n  nameWithType: ConstructorBuilder.SetMethodBody\n  fullName: ConstructorBuilder.SetMethodBody\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: SetSymCustomAttribute\n  nameWithType: ConstructorBuilder.SetSymCustomAttribute\n  fullName: ConstructorBuilder.SetSymCustomAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.Signature*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: Signature\n  nameWithType: ConstructorBuilder.Signature\n  fullName: ConstructorBuilder.Signature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.ToString*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: ToString\n  nameWithType: ConstructorBuilder.ToString\n  fullName: ConstructorBuilder.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames\n  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames\n  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo\n  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo\n  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount\n  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount\n  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke*\n  parent: System.Reflection.Emit.ConstructorBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ConstructorBuilder.Invoke\n  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.Invoke\n  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml\n- uid: System.Reflection.ConstructorInfo.Equals(System.Object)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConstructorInfo.Equals(Object)\n  fullName: ConstructorInfo.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Reflection.ConstructorInfo.GetHashCode\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConstructorInfo.GetHashCode()\n  fullName: ConstructorInfo.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  fullName: MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  fullName: MemberInfo.GetCustomAttributesData()\n- uid: System.Reflection.ConstructorInfo.MemberType\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: ConstructorInfo.MemberType\n  fullName: ConstructorInfo.MemberType\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  fullName: MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Equality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Inequality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetType()\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  fullName: MemberInfo._MemberInfo.GetType()\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  fullName: MethodBase.ContainsGenericParameters\n- uid: System.Reflection.MethodBase.GetCurrentMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetCurrentMethod()\n  nameWithType: MethodBase.GetCurrentMethod()\n  fullName: MethodBase.GetCurrentMethod()\n- uid: System.Reflection.MethodBase.GetGenericArguments\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetGenericArguments()\n  nameWithType: MethodBase.GetGenericArguments()\n  fullName: MethodBase.GetGenericArguments()\n- uid: System.Reflection.MethodBase.GetMethodBody\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodBody()\n  nameWithType: MethodBase.GetMethodBody()\n  fullName: MethodBase.GetMethodBody()\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Invoke(Object, Object[])\n  nameWithType: MethodBase.Invoke(Object, Object[])\n  fullName: MethodBase.Invoke(Object, Object[])\n- uid: System.Reflection.MethodBase.IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  fullName: MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  fullName: MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  fullName: MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamily\n  nameWithType: MethodBase.IsFamily\n  fullName: MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  fullName: MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  fullName: MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFinal\n  nameWithType: MethodBase.IsFinal\n  fullName: MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  fullName: MethodBase.IsGenericMethod\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  fullName: MethodBase.IsGenericMethodDefinition\n- uid: System.Reflection.MethodBase.IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  fullName: MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  fullName: MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPublic\n  nameWithType: MethodBase.IsPublic\n  fullName: MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.IsSecurityCritical\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecurityCritical\n  nameWithType: MethodBase.IsSecurityCritical\n  fullName: MethodBase.IsSecurityCritical\n- uid: System.Reflection.MethodBase.IsSecuritySafeCritical\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecuritySafeCritical\n  nameWithType: MethodBase.IsSecuritySafeCritical\n  fullName: MethodBase.IsSecuritySafeCritical\n- uid: System.Reflection.MethodBase.IsSecurityTransparent\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecurityTransparent\n  nameWithType: MethodBase.IsSecurityTransparent\n  fullName: MethodBase.IsSecurityTransparent\n- uid: System.Reflection.MethodBase.IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  fullName: MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsStatic\n  nameWithType: MethodBase.IsStatic\n  fullName: MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  fullName: MethodBase.IsVirtual\n- uid: System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: op_Equality(MethodBase, MethodBase)\n  nameWithType: MethodBase.op_Equality(MethodBase, MethodBase)\n  fullName: MethodBase.op_Equality(MethodBase, MethodBase)\n- uid: System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: op_Inequality(MethodBase, MethodBase)\n  nameWithType: MethodBase.op_Inequality(MethodBase, MethodBase)\n  fullName: MethodBase.op_Inequality(MethodBase, MethodBase)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetType()\n  nameWithType: MethodBase._MethodBase.GetType()\n  fullName: MethodBase._MethodBase.GetType()\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.GetTypeInfoCount(UInt32)\n  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)\n  fullName: MethodBase._MethodBase.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsAbstract\n  nameWithType: MethodBase._MethodBase.IsAbstract\n  fullName: MethodBase._MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsAssembly\n  nameWithType: MethodBase._MethodBase.IsAssembly\n  fullName: MethodBase._MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsConstructor\n  nameWithType: MethodBase._MethodBase.IsConstructor\n  fullName: MethodBase._MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFamily\n  nameWithType: MethodBase._MethodBase.IsFamily\n  fullName: MethodBase._MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly\n  fullName: MethodBase._MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly\n  fullName: MethodBase._MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsFinal\n  nameWithType: MethodBase._MethodBase.IsFinal\n  fullName: MethodBase._MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsHideBySig\n  nameWithType: MethodBase._MethodBase.IsHideBySig\n  fullName: MethodBase._MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsPrivate\n  nameWithType: MethodBase._MethodBase.IsPrivate\n  fullName: MethodBase._MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsPublic\n  nameWithType: MethodBase._MethodBase.IsPublic\n  fullName: MethodBase._MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsSpecialName\n  nameWithType: MethodBase._MethodBase.IsSpecialName\n  fullName: MethodBase._MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsStatic\n  nameWithType: MethodBase._MethodBase.IsStatic\n  fullName: MethodBase._MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: _MethodBase.IsVirtual\n  nameWithType: MethodBase._MethodBase.IsVirtual\n  fullName: MethodBase._MethodBase.IsVirtual\n- uid: System.Reflection.ConstructorInfo.ConstructorName\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: ConstructorName\n  nameWithType: ConstructorInfo.ConstructorName\n  fullName: ConstructorInfo.ConstructorName\n- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: Invoke(Object[])\n  nameWithType: ConstructorInfo.Invoke(Object[])\n  fullName: ConstructorInfo.Invoke(Object[])\n- uid: System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: op_Equality(ConstructorInfo, ConstructorInfo)\n  nameWithType: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)\n  fullName: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)\n- uid: System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: op_Inequality(ConstructorInfo, ConstructorInfo)\n  nameWithType: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)\n  fullName: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)\n- uid: System.Reflection.ConstructorInfo.TypeConstructorName\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: TypeConstructorName\n  nameWithType: ConstructorInfo.TypeConstructorName\n  fullName: ConstructorInfo.TypeConstructorName\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetType()\n  nameWithType: ConstructorInfo._ConstructorInfo.GetType()\n  fullName: ConstructorInfo._ConstructorInfo.GetType()\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.GetTypeInfoCount(UInt32)\n  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)\n  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_3(Object, Object[])\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  isExternal: false\n  name: _ConstructorInfo.Invoke_5(Object[])\n  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])\n  fullName: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: GetMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: HasMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n- uid: System.Runtime.InteropServices._ConstructorBuilder\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _ConstructorBuilder\n  nameWithType: _ConstructorBuilder\n  fullName: System.Runtime.InteropServices._ConstructorBuilder\n"}