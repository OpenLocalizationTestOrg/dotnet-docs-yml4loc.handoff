### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  commentId: T:System.ServiceModel.Security.X509CertificateRecipientClientCredential
  id: X509CertificateRecipientClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  - System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  langs:
  - csharp
  name: X509CertificateRecipientClientCredential
  nameWithType: X509CertificateRecipientClientCredential
  fullName: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Represents the settings used by the client to validate the certificate presented by the service using SSL authentication. It also contains any certificate for the service that is explicitly configured on the client to use for encrypting messages to the service using message security.
  remarks: This class is used by the <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> property in the <xref:System.ServiceModel.Description.ClientCredentials> class.
  example:
  - "This code shows one way to create an instance of this class.  \n  \n [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]\n [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]"
  syntax:
    content: public sealed class X509CertificateRecipientClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  commentId: P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  id: Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: X509CertificateRecipientClientCredential.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets the settings used to validate the service certificate obtained using SSL authentication.
  remarks: The <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> class represents the settings used by the client proxy to authenticate service certificates that are obtained using SSL/TLS negotiation.
  example:
  - "This code shows how to access this property.  \n  \n [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]"
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: The settings used to validate the service certificate obtained using SSL authentication.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  commentId: P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  id: DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: X509CertificateRecipientClientCredential.DefaultCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the default certificate to use for the service.
  remarks: For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.
  example:
  - "This code shows how to access this property.  \n  \n [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The default certificate to use for the service.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to set when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  commentId: P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  id: ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: X509CertificateRecipientClientCredential.ScopedCertificates
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets a scoped certificate to use to represent the service that the client is communicating with.
  remarks: "This property enables the client to configure the service certificate to use based on the URL of the service it communicates with. This is especially useful in issued token scenarios where a client can be communicating to multiple services (the end service as well as intermediary security token services). For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service, and is expected to be used by the service for signing replies to the client.  \n  \n If a binding requires a certificate for the service and no specific certificate for the service URL is found in the `ScopedCertificates`, the default certificate is used."
  example:
  - "This code shows how to set this property.  \n  \n [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<Uri,System.Security.Cryptography.X509Certificates.X509Certificate2> ScopedCertificates { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: A scoped certificate to use to represent the service that the client is communicating with.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to set when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  commentId: M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(String, StoreLocation, StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String, StoreLocation, StoreName)
  fullName: X509CertificateRecipientClientCredential.SetDefaultCertificate(String, StoreLocation, StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Specifies the default certificate to use for the service. For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.
  remarks: "This method gets a certificate from the store in the specified location that matches the `subjectName` parameter.  \n  \n Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).  \n  \n If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration."
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]"
  syntax:
    content: public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: The subject distinguished name.
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store that the service uses to obtain the service certificate.
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: The name of the X.509 certificate store to open.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subjectName</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to set when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  commentId: M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetDefaultCertificate(StoreLocation, StoreName, X509FindType, Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation, StoreName, X509FindType, Object)
  fullName: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation, StoreName, X509FindType, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Specifies the default certificate to use for the service. For bindings that use certificate-based message security, this certificate is used to encrypt messages to the service and is expected to be used by the service for signing replies to the client.
  remarks: "This method gets a certificate from the store in the specified location that matches the `findType` and `findValue` parameters.  \n  \n Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).  \n  \n If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  \n  \n Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  \n  \n The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> is thrown."
  example:
  - "The following code uses this method to specify an X.509 certificate to use.  \n  \n [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]"
  syntax:
    content: public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store the service uses to obtain the service certificate.
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: The name of the X.509 certificate store to open.
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: The type of X.509 search to be executed.
    - id: findValue
      type: System.Object
      description: The value to search for in the X.509 certificate store.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>findValue</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to set when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  commentId: M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  id: SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(String, StoreLocation, StoreName, Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String, StoreLocation, StoreName, Uri)
  fullName: X509CertificateRecipientClientCredential.SetScopedCertificate(String, StoreLocation, StoreName, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Sets a certificate by subject name, certificate store location, and certificate store name, and stores it in a collection to be used for the URL that sets the scope.
  remarks: "Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).  \n  \n If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration."
  example:
  - "This code shows how to call this method.  \n  \n [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]"
  syntax:
    content: public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);
    parameters:
    - id: subjectName
      type: System.String
      description: The fully qualified subject name.
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store that the service uses to obtain the service certificate.
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: The name of the X.509 certificate store to open.
    - id: targetService
      type: System.Uri
      description: The URL that sets the scope.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>targetService</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to set when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  commentId: M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  id: SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SetScopedCertificate(StoreLocation, StoreName, X509FindType, Object, Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation, StoreName, X509FindType, Object, Uri)
  fullName: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation, StoreName, X509FindType, Object, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Sets a certificate by certificate store location, certificate store name, type of X.509 search, and value to search for, and stores it in a collection to be used for the URL that sets the scope.
  remarks: "Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user (default).  \n  \n If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  \n  \n Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  \n  \n The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> will be thrown."
  example:
  - "This code shows how to call this method.  \n  \n [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]\n [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]"
  syntax:
    content: public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store that the service uses to obtain the service certificate.
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: The name of the X.509 certificate store to open.
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: The type of X.509 search to be executed.
    - id: findValue
      type: System.Object
      description: The value to search for in the X.509 certificate store.
    - id: targetService
      type: System.Uri
      description: The URL that sets the scope.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>targetService</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to set when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  commentId: P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  id: SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  langs:
  - csharp
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the SSL certificate validator to use.
  remarks: This property allows you to use WCF X509CertificateValidator to validate a server certificate on a WCF client.
  syntax:
    content: public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509ServiceCertificateAuthentication
      description: A <xref href="System.ServiceModel.Security.X509ServiceCertificateAuthentication"></xref> instance.
  overload: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: X509CertificateRecipientClientCredential.Authentication
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: X509CertificateRecipientClientCredential.DefaultCertificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: X509CertificateRecipientClientCredential.ScopedCertificates
- uid: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey,TValue>
  nameWithType: Dictionary<TKey,TValue>
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>
- uid: System.Uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.Dictionary{System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<Uri,X509Certificate2>
  nameWithType: Dictionary<Uri,X509Certificate2>
  fullName: System.Collections.Generic.Dictionary<System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(String, StoreLocation, StoreName)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(String, StoreLocation, StoreName)
  fullName: X509CertificateRecipientClientCredential.SetDefaultCertificate(String, StoreLocation, StoreName)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate(StoreLocation, StoreName, X509FindType, Object)
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation, StoreName, X509FindType, Object)
  fullName: X509CertificateRecipientClientCredential.SetDefaultCertificate(StoreLocation, StoreName, X509FindType, Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(String, StoreLocation, StoreName, Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(String, StoreLocation, StoreName, Uri)
  fullName: X509CertificateRecipientClientCredential.SetScopedCertificate(String, StoreLocation, StoreName, Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate(StoreLocation, StoreName, X509FindType, Object, Uri)
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation, StoreName, X509FindType, Object, Uri)
  fullName: X509CertificateRecipientClientCredential.SetScopedCertificate(StoreLocation, StoreName, X509FindType, Object, Uri)
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: X509CertificateRecipientClientCredential.SslCertificateAuthentication
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetDefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetDefaultCertificate
  fullName: X509CertificateRecipientClientCredential.SetDefaultCertificate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: Authentication
  nameWithType: X509CertificateRecipientClientCredential.Authentication
  fullName: X509CertificateRecipientClientCredential.Authentication
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: DefaultCertificate
  nameWithType: X509CertificateRecipientClientCredential.DefaultCertificate
  fullName: X509CertificateRecipientClientCredential.DefaultCertificate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: ScopedCertificates
  nameWithType: X509CertificateRecipientClientCredential.ScopedCertificates
  fullName: X509CertificateRecipientClientCredential.ScopedCertificates
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SetScopedCertificate
  nameWithType: X509CertificateRecipientClientCredential.SetScopedCertificate
  fullName: X509CertificateRecipientClientCredential.SetScopedCertificate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
- uid: System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication*
  parent: System.ServiceModel.Security.X509CertificateRecipientClientCredential
  isExternal: false
  name: SslCertificateAuthentication
  nameWithType: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  fullName: X509CertificateRecipientClientCredential.SslCertificateAuthentication
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateRecipientClientCredential.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
