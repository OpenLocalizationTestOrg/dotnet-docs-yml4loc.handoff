{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.Forms.DataGridView.CellValidating\"></xref> event of a <xref href=\"System.Windows.Forms.DataGridView\"></xref> control.","nodes":[{"pos":[0,166],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DataGridView.CellValidating\"&gt;&lt;/xref&gt;</ph> event of a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.DataGridView\"&gt;&lt;/xref&gt;</ph> control.","source":"Provides data for the <xref href=\"System.Windows.Forms.DataGridView.CellValidating\"></xref> event of a <xref href=\"System.Windows.Forms.DataGridView\"></xref> control."}],"pos":[728,895],"yaml":true},{"content":"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid. Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value. To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection. To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.  \n  \n When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised.","nodes":[{"pos":[0,742],"content":"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid. Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value. To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection. To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName&gt;</ph> event lets you cancel changes to the current cell when the new value is not valid.","pos":[0,167],"source":"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A&gt;</ph> property to determine the current value.","pos":[168,298],"source":" Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value."},{"content":"To determine the state of the current cell, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A&gt;</ph> properties to access the cell through the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName&gt;</ph> collection.","pos":[299,637],"source":" To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection."},{"content":"To cancel the change, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[638,742],"source":" To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`."}]},{"pos":[749,1012],"content":"When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised.","nodes":[{"content":"When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised.","pos":[0,263],"nodes":[{"content":"When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source.","pos":[0,106]},{"content":"When this event is canceled in virtual mode, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName&gt;</ph> event will not be raised.","pos":[107,263],"source":" When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised."}]}]}],"pos":[906,1923],"yaml":true,"extradata":"MT"},{"content":"Gets the column index of the cell that needs to be validated.","nodes":[{"pos":[0,61],"content":"Gets the column index of the cell that needs to be validated.","nodes":[{"content":"Gets the column index of the cell that needs to be validated.","pos":[0,61]}]}],"pos":[4417,4479],"yaml":true},{"content":"A zero-based integer that specifies the column index of the cell that needs to be validated.","nodes":[{"pos":[0,92],"content":"A zero-based integer that specifies the column index of the cell that needs to be validated.","nodes":[{"content":"A zero-based integer that specifies the column index of the cell that needs to be validated.","pos":[0,92]}]}],"pos":[5294,5387],"yaml":true},{"content":"Gets the formatted contents of the cell that needs to be validated.","nodes":[{"pos":[0,67],"content":"Gets the formatted contents of the cell that needs to be validated.","nodes":[{"content":"Gets the formatted contents of the cell that needs to be validated.","pos":[0,67]}]}],"pos":[6548,6616],"yaml":true},{"content":"The text entered by the user through the user interface (UI) becomes the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.","nodes":[{"pos":[0,314],"content":"The text entered by the user through the user interface (UI) becomes the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.","nodes":[{"content":"The text entered by the user through the user interface (UI) becomes the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.","pos":[0,314],"nodes":[{"content":"The text entered by the user through the user interface (UI) becomes the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A&gt;</ph> property value.","pos":[0,170],"source":"The text entered by the user through the user interface (UI) becomes the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property value."},{"content":"This is the value that you can validate before it is parsed into the cell <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property value.","pos":[171,314],"source":" This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value."}]}]}],"pos":[6627,6942],"yaml":true,"extradata":"MT"},{"content":"A reference to the formatted value.","nodes":[{"pos":[0,35],"content":"A reference to the formatted value.","nodes":[{"content":"A reference to the formatted value.","pos":[0,35]}]}],"pos":[7891,7927],"yaml":true},{"content":"Gets the row index of the cell that needs to be validated.","nodes":[{"pos":[0,58],"content":"Gets the row index of the cell that needs to be validated.","nodes":[{"content":"Gets the row index of the cell that needs to be validated.","pos":[0,58]}]}],"pos":[9077,9136],"yaml":true},{"content":"A zero-based integer that specifies the row index of the cell that needs to be validated.","nodes":[{"pos":[0,89],"content":"A zero-based integer that specifies the row index of the cell that needs to be validated.","nodes":[{"content":"A zero-based integer that specifies the row index of the cell that needs to be validated.","pos":[0,89]}]}],"pos":[9948,10038],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  commentId: T:System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  id: DataGridViewCellValidatingEventArgs\n  children:\n  - System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  - System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  - System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  langs:\n  - csharp\n  name: DataGridViewCellValidatingEventArgs\n  nameWithType: DataGridViewCellValidatingEventArgs\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides data for the <xref href=\"System.Windows.Forms.DataGridView.CellValidating\"></xref> event of a <xref href=\"System.Windows.Forms.DataGridView\"></xref> control.\n  remarks: \"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid. Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value. To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection. To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.  \\n  \\n When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised.\"\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.DataGridView.CellValidating> event to ensure that only positive integers are entered by the user. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \\n  \\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]\\n [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]\\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]\"\n  syntax:\n    content: 'public class DataGridViewCellValidatingEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.CancelEventArgs.Cancel\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  commentId: P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  id: ColumnIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  langs:\n  - csharp\n  name: ColumnIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.ColumnIndex\n  fullName: DataGridViewCellValidatingEventArgs.ColumnIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the column index of the cell that needs to be validated.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of this property. This example is part of a larger example available in [How to: Validate Data in the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md).  \\n  \\n [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]\\n [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]\"\n  syntax:\n    content: public int ColumnIndex { get; }\n    return:\n      type: System.Int32\n      description: A zero-based integer that specifies the column index of the cell that needs to be validated.\n  overload: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  commentId: P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  id: FormattedValue\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  langs:\n  - csharp\n  name: FormattedValue\n  nameWithType: DataGridViewCellValidatingEventArgs.FormattedValue\n  fullName: DataGridViewCellValidatingEventArgs.FormattedValue\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the formatted contents of the cell that needs to be validated.\n  remarks: The text entered by the user through the user interface (UI) becomes the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.DataGridView.CellValidating> event to ensure that only positive integers are entered by the user. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \\n  \\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]\\n [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]\\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]\"\n  syntax:\n    content: public object FormattedValue { get; }\n    return:\n      type: System.Object\n      description: A reference to the formatted value.\n  overload: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  commentId: P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  id: RowIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  langs:\n  - csharp\n  name: RowIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.RowIndex\n  fullName: DataGridViewCellValidatingEventArgs.RowIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the row index of the cell that needs to be validated.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of this property. This example is part of a larger example available in [How to: Validate Data in the Windows Forms DataGridView Control](~/docs/framework/winforms/controls/how-to-validate-data-in-the-windows-forms-datagridview-control.md).  \\n  \\n [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]\\n [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]\"\n  syntax:\n    content: public int RowIndex { get; }\n    return:\n      type: System.Int32\n      description: A zero-based integer that specifies the row index of the cell that needs to be validated.\n  overload: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: ColumnIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.ColumnIndex\n  fullName: DataGridViewCellValidatingEventArgs.ColumnIndex\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: FormattedValue\n  nameWithType: DataGridViewCellValidatingEventArgs.FormattedValue\n  fullName: DataGridViewCellValidatingEventArgs.FormattedValue\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: RowIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.RowIndex\n  fullName: DataGridViewCellValidatingEventArgs.RowIndex\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex*\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: ColumnIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.ColumnIndex\n  fullName: DataGridViewCellValidatingEventArgs.ColumnIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue*\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: FormattedValue\n  nameWithType: DataGridViewCellValidatingEventArgs.FormattedValue\n  fullName: DataGridViewCellValidatingEventArgs.FormattedValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex*\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: RowIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.RowIndex\n  fullName: DataGridViewCellValidatingEventArgs.RowIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellValidatingEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.ComponentModel.CancelEventArgs.Cancel\n  parent: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: CancelEventArgs.Cancel\n  fullName: CancelEventArgs.Cancel\n"}