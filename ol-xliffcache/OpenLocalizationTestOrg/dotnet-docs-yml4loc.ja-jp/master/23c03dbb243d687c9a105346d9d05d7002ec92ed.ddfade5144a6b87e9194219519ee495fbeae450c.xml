{"nodes":[{"content":"Holds a collection of filter/data pairs for efficient matching.","nodes":[{"pos":[0,63],"content":"Holds a collection of filter/data pairs for efficient matching.","nodes":[{"content":"Holds a collection of filter/data pairs for efficient matching.","pos":[0,63]}]}],"pos":[5455,5519],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface. This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.  \n  \n The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar. It has optimized algorithms for efficient parallel matching.","nodes":[{"pos":[0,299],"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface. This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.","nodes":[{"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface. This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.","pos":[0,299],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph> interface.","pos":[0,157],"source":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface."},{"content":"This filter table is optimized for declarative XPath filters, so the table key is a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph>.","pos":[158,299],"source":" This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>."}]}]},{"pos":[306,573],"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar. It has optimized algorithms for efficient parallel matching.","nodes":[{"content":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar. It has optimized algorithms for efficient parallel matching.","pos":[0,267],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601&gt;</ph> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar.","pos":[0,206],"source":"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar."},{"content":"It has optimized algorithms for efficient parallel matching.","pos":[207,267]}]}]}],"pos":[5530,6108],"yaml":true,"extradata":"MT"},{"content":"The type of the filter data associated with each filter in the table.","nodes":[{"pos":[0,69],"content":"The type of the filter data associated with each filter in the table.","nodes":[{"content":"The type of the filter data associated with each filter in the table.","pos":[0,69]}]}],"pos":[6744,6814],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> class.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> class."}],"pos":[35934,36053],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> class.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> class."}],"pos":[37421,37540],"yaml":true},{"content":"Initial capacity of the table.","nodes":[{"pos":[0,30],"content":"Initial capacity of the table.","nodes":[{"content":"Initial capacity of the table.","pos":[0,30]}]}],"pos":[37689,37720],"yaml":true},{"content":"Adds a filter/<code>FilterData</code> (key/value) pair to the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>.","nodes":[{"pos":[0,140],"content":"Adds a filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> (key/value) pair to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph>.","source":"Adds a filter/<code>FilterData</code> (key/value) pair to the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>."}],"pos":[39229,39370],"yaml":true},{"content":"This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class.  The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.","nodes":[{"pos":[0,458],"content":"This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class.  The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.","nodes":[{"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.ICollection%601.Add%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> class.","pos":[0,154],"source":"This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class."},{"content":"The implicit conversion of the <ph id=\"ph1\">`filter`</ph> parameter from type <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> to the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> can be avoided by using the strongly-typed overload, <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A&gt;</ph>.","pos":[156,458],"source":"  The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>."}]}],"pos":[39381,39840],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to add to the table.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> &lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to add to the table.","source":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to add to the table."}],"pos":[40145,40267],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[40457,40488],"yaml":true},{"content":"A compiler error occurred.","nodes":[{"pos":[0,26],"content":"A compiler error occurred.","nodes":[{"content":"A compiler error occurred.","pos":[0,26]}]}],"pos":[40596,40623],"yaml":true},{"content":"Adds a filter/data pair to the filter table.","nodes":[{"pos":[0,44],"content":"Adds a filter/data pair to the filter table.","nodes":[{"content":"Adds a filter/data pair to the filter table.","pos":[0,44]}]}],"pos":[41877,41922],"yaml":true},{"content":"The internal conversion of the `filter` parameter from <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.","nodes":[{"pos":[0,297],"content":"The internal conversion of the <ph id=\"ph1\">`filter`</ph> parameter from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> to the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> can be avoided by using the strongly-typed overload, <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A&gt;</ph>.","source":"The internal conversion of the `filter` parameter from <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>."}],"pos":[41933,42231],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added. Must be an instance of <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.","nodes":[{"pos":[0,199],"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added. Must be an instance of <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> used as the key of the pair added.","pos":[0,104],"source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added."},{"content":"Must be an instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph>.","pos":[105,199],"source":" Must be an instance of <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>."}]}],"pos":[42452,42652],"yaml":true},{"content":"The <code>FilterData</code> associated with the filter used as the value of the pair added.","nodes":[{"pos":[0,91],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the filter used as the value of the pair added.","source":"The <code>FilterData</code> associated with the filter used as the value of the pair added."}],"pos":[42710,42802],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[42992,43023],"yaml":true},{"content":"<code>filter</code> is not an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph>.","source":"<code>filter</code> is not an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>."}],"pos":[43123,43225],"yaml":true},{"content":"A compiler error occurred.","nodes":[{"pos":[0,26],"content":"A compiler error occurred.","nodes":[{"content":"A compiler error occurred.","pos":[0,26]}]}],"pos":[43333,43360],"yaml":true},{"content":"Adds a filter/data pair to the filter table.","nodes":[{"pos":[0,44],"content":"Adds a filter/data pair to the filter table.","nodes":[{"content":"Adds a filter/data pair to the filter table.","pos":[0,44]}]}],"pos":[44644,44689],"yaml":true},{"content":"This provides a strongly-typed overload for adding an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.","nodes":[{"pos":[0,373],"content":"This provides a strongly-typed overload for adding an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the <ph id=\"ph2\">`filter`</ph> parameter from type <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> to the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph>.","source":"This provides a strongly-typed overload for adding an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>."}],"pos":[44700,45074],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> used as the key of the pair added.","nodes":[{"pos":[0,109],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> used as the key of the pair added.","source":"The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> used as the key of the pair added."}],"pos":[45305,45415],"yaml":true},{"content":"The <code>FilterData</code> associated with the filter; used as the value of the pair added.","nodes":[{"pos":[0,92],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the filter; used as the value of the pair added.","source":"The <code>FilterData</code> associated with the filter; used as the value of the pair added."}],"pos":[45473,45566],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[45756,45787],"yaml":true},{"content":"A compiler error occurred.","nodes":[{"pos":[0,26],"content":"A compiler error occurred.","nodes":[{"content":"A compiler error occurred.","pos":[0,26]}]}],"pos":[45895,45922],"yaml":true},{"content":"Removes all filter/data pairs from the filter table.","nodes":[{"pos":[0,52],"content":"Removes all filter/data pairs from the filter table.","nodes":[{"content":"Removes all filter/data pairs from the filter table.","pos":[0,52]}]}],"pos":[46963,47016],"yaml":true},{"content":"Determines whether the filter table contains a specified filter and its associated <code>FilterData</code>.","nodes":[{"pos":[0,107],"content":"Determines whether the filter table contains a specified filter and its associated <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Determines whether the filter table contains a specified filter and its associated <code>FilterData</code>."}],"pos":[48619,48727],"yaml":true},{"content":"This method returns `false` if the filter is found but corresponds to different data.","nodes":[{"pos":[0,85],"content":"This method returns <ph id=\"ph1\">`false`</ph> if the filter is found but corresponds to different data.","source":"This method returns `false` if the filter is found but corresponds to different data."}],"pos":[48738,48824],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <<xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref>, <code>FilterData</code>> to find in the table.","nodes":[{"pos":[0,181],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\"> &lt;</ph><ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to find in the table.","source":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <<xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref>, <code>FilterData</code>> to find in the table."}],"pos":[49134,49316],"yaml":true},{"content":"`true` if the filter/*FilterData* pair is contained in the filter table; otherwise `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if the filter/<bpt id=\"p1\">*</bpt>FilterData<ept id=\"p1\">*</ept> pair is contained in the filter table; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the filter/*FilterData* pair is contained in the filter table; otherwise `false`."}],"pos":[49374,49468],"yaml":true},{"content":"Determines whether the filter table contains a specified filter.","nodes":[{"pos":[0,64],"content":"Determines whether the filter table contains a specified filter.","nodes":[{"content":"Determines whether the filter table contains a specified filter.","pos":[0,64]}]}],"pos":[50818,50883],"yaml":true},{"content":"This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.","nodes":[{"pos":[0,101],"content":"This method implements the <ph id=\"ph1\">`ContainsKey`</ph> method of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>.","source":"This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>."}],"pos":[50894,50996],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> being tested for.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> being tested for.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> being tested for."}],"pos":[51207,51295],"yaml":true},{"content":"`true` if the <code>filter</code> is contained in the filter table; otherwise `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is contained in the filter table; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>filter</code> is contained in the filter table; otherwise `false`."}],"pos":[51353,51442],"yaml":true},{"content":"Copies the filter/<code>FilterData</code> pairs to an array that starts at a specified index.","nodes":[{"pos":[0,93],"content":"Copies the filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pairs to an array that starts at a specified index.","source":"Copies the filter/<code>FilterData</code> pairs to an array that starts at a specified index."}],"pos":[53047,53141],"yaml":true},{"content":"The array of type <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to which the pairs are being copied.","nodes":[{"pos":[0,151],"content":"The array of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> &lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to which the pairs are being copied.","source":"The array of type <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to which the pairs are being copied."}],"pos":[53471,53623],"yaml":true},{"content":"The index at which to begin copying.","nodes":[{"pos":[0,36],"content":"The index at which to begin copying.","nodes":[{"content":"The index at which to begin copying.","pos":[0,36]}]}],"pos":[53688,53725],"yaml":true},{"content":"Gets the number of filter/data pairs currently in the filter table.","nodes":[{"pos":[0,67],"content":"Gets the number of filter/data pairs currently in the filter table.","nodes":[{"content":"Gets the number of filter/data pairs currently in the filter table.","pos":[0,67]}]}],"pos":[54856,54924],"yaml":true},{"content":"The number of filter/data pairs currently in the filter table.","nodes":[{"pos":[0,62],"content":"The number of filter/data pairs currently in the filter table.","nodes":[{"content":"The number of filter/data pairs currently in the filter table.","pos":[0,62]}]}],"pos":[55029,55092],"yaml":true},{"content":"Returns an enumerator that can iterate through the filter table.","nodes":[{"pos":[0,64],"content":"Returns an enumerator that can iterate through the filter table.","nodes":[{"content":"Returns an enumerator that can iterate through the filter table.","pos":[0,64]}]}],"pos":[56274,56339],"yaml":true},{"content":"This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.","nodes":[{"pos":[0,101],"content":"This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A&gt;</ph>.","pos":[0,101],"source":"This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>."}]}],"pos":[56350,56452],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, FilterData>> that can be used to iterate through the filter table.","nodes":[{"pos":[0,152],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph>&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, FilterData>> that can be used to iterate through the filter table."}],"pos":[56838,56991],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter.","nodes":[{"pos":[0,178],"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <ph id=\"ph1\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter."}],"pos":[58523,58702],"yaml":true},{"content":"Use this method when a single filter is expected to match the message and the matching filter is required.  \n  \n This method tests for a single filter match in the highest priority bucket of filters. The filters in the table are not allowed to inspect the message body.  \n  \n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"pos":[0,106],"content":"Use this method when a single filter is expected to match the message and the matching filter is required.","nodes":[{"content":"Use this method when a single filter is expected to match the message and the matching filter is required.","pos":[0,106]}]},{"pos":[113,269],"content":"This method tests for a single filter match in the highest priority bucket of filters. The filters in the table are not allowed to inspect the message body.","nodes":[{"content":"This method tests for a single filter match in the highest priority bucket of filters. The filters in the table are not allowed to inspect the message body.","pos":[0,156],"nodes":[{"content":"This method tests for a single filter match in the highest priority bucket of filters.","pos":[0,86]},{"content":"The filters in the table are not allowed to inspect the message body.","pos":[87,156]}]}]},{"pos":[276,430],"content":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"If more than one filter is expected to match the message, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,154],"source":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>."}]},{"pos":[437,543],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>."}]}],"pos":[58713,59265],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[59525,59596],"yaml":true},{"content":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"pos":[0,156],"content":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the filter that is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,89],"source":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>."},{"content":"If no filter was found, the parameter is set to its default value.","pos":[90,156]}]}],"pos":[59689,59846],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the message; or `null` if no filters are found to match.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> whose query criteria are satisfied by the message; or <ph id=\"ph2\">`null`</ph> if no filters are found to match.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the message; or `null` if no filters are found to match."}],"pos":[59904,60069],"yaml":true},{"content":"<code>message</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>message</code> is `null`."}],"pos":[60273,60305],"yaml":true},{"content":"More than one filter matches the <code>message</code>.","nodes":[{"pos":[0,54],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>message</code>."}],"pos":[60473,60528],"yaml":true},{"content":"A filter attempted to examine the contents of the message body.","nodes":[{"pos":[0,63],"content":"A filter attempted to examine the contents of the message body.","nodes":[{"content":"A filter attempted to examine the contents of the message body.","pos":[0,63]}]}],"pos":[60688,60752],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter.","nodes":[{"pos":[0,198],"content":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <ph id=\"ph1\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter."}],"pos":[62219,62418],"yaml":true},{"content":"Use this method when a single filter is expected to match the buffered message and the matching filter is required.  \n  \n The filters in the table are allowed to inspect the message body.  \n  \n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"pos":[0,115],"content":"Use this method when a single filter is expected to match the buffered message and the matching filter is required.","nodes":[{"content":"Use this method when a single filter is expected to match the buffered message and the matching filter is required.","pos":[0,115]}]},{"pos":[122,187],"content":"The filters in the table are allowed to inspect the message body.","nodes":[{"content":"The filters in the table are allowed to inspect the message body.","pos":[0,65]}]},{"pos":[194,348],"content":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"If more than one filter is expected to match the message, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,154],"source":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>."}]},{"pos":[355,461],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>."}]}],"pos":[62429,62899],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[63183,63260],"yaml":true},{"content":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"pos":[0,156],"content":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the filter that is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,89],"source":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>."},{"content":"If no filter was found, the parameter is set to its default value.","pos":[90,156]}]}],"pos":[63353,63510],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the buffered message; or `null` if no filters are found to match.","nodes":[{"pos":[0,173],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> whose query criteria are satisfied by the buffered message; or <ph id=\"ph2\">`null`</ph> if no filters are found to match.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the buffered message; or `null` if no filters are found to match."}],"pos":[63568,63742],"yaml":true},{"content":"<code>messageBuffer</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;messageBuffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>messageBuffer</code> is `null`."}],"pos":[63946,63984],"yaml":true},{"content":"More than one filter matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,60],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>messageBuffer</code>."}],"pos":[64152,64213],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter.","nodes":[{"pos":[0,266],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified message or buffered message and returns that filter in an <ph id=\"ph2\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter."}],"pos":[65740,66007],"yaml":true},{"content":"Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required.  \n  \n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"pos":[0,184],"content":"Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required.","nodes":[{"content":"Use this method when a single filter is expected to match the message specified by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator&gt;</ph> and the matching filter is required.","pos":[0,184],"source":"Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required."}]},{"pos":[191,345],"content":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"If more than one filter is expected to match the message, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,154],"source":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>."}]}],"pos":[66018,66368],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test."}],"pos":[66666,66754],"yaml":true},{"content":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"pos":[0,156],"content":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the filter that is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,89],"source":"The `out` parameter that stores the filter that is satisfied by the <code>message</code>."},{"content":"If no filter was found, the parameter is set to its default value.","pos":[90,156]}]}],"pos":[66847,67004],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the navigator; or `null` if no filters are found to match.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> whose query criteria are satisfied by the navigator; or <ph id=\"ph2\">`null`</ph> if no filters are found to match.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the navigator; or `null` if no filters are found to match."}],"pos":[67062,67229],"yaml":true},{"content":"<code>navigator</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;navigator&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>navigator</code> is `null`."}],"pos":[67433,67467],"yaml":true},{"content":"More than one filter matches the <code>navigator</code>.","nodes":[{"pos":[0,56],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>navigator</code>."}],"pos":[67635,67692],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter.","nodes":[{"pos":[0,244],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified message or buffered message and returns that filter in an <ph id=\"ph2\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter."}],"pos":[69129,69374],"yaml":true},{"content":"Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required.  \n  \n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"pos":[0,162],"content":"Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required.","nodes":[{"content":"Use this method when a single filter is expected to match the message specified by the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and the matching filter is required.","pos":[0,162],"source":"Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required."}]},{"pos":[169,323],"content":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"If more than one filter is expected to match the message, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,154],"source":"If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>."}]}],"pos":[69385,69713],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test."}],"pos":[69967,70033],"yaml":true},{"content":"The `out` parameter that stores the filter that is satisfied by the <code>navigator</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"pos":[0,158],"content":"The `out` parameter that stores the filter that is satisfied by the <code>navigator</code>. If no filter was found, the parameter is set to its default value.","nodes":[{"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the filter that is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,91],"source":"The `out` parameter that stores the filter that is satisfied by the <code>navigator</code>."},{"content":"If no filter was found, the parameter is set to its default value.","pos":[92,158]}]}],"pos":[70126,70285],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the navigator; or `null` if no filters are found to match.","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> whose query criteria are satisfied by the navigator; or <ph id=\"ph2\">`null`</ph> if no filters are found to match.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the navigator; or `null` if no filters are found to match."}],"pos":[70343,70510],"yaml":true},{"content":"<code>navigator</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;navigator&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>navigator</code> is `null`."}],"pos":[70714,70748],"yaml":true},{"content":"More than one filter matches the <code>navigator</code>.","nodes":[{"pos":[0,56],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>navigator</code>."}],"pos":[70916,70973],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.","nodes":[{"pos":[0,256],"content":"Returns a value that indicates whether the match criterion of at least one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection."}],"pos":[72662,72919],"yaml":true},{"content":"Use this method when more than one filter is expected to match the navigator and the matching filters are required.  \n  \n If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.","nodes":[{"pos":[0,115],"content":"Use this method when more than one filter is expected to match the navigator and the matching filters are required.","nodes":[{"content":"Use this method when more than one filter is expected to match the navigator and the matching filters are required.","pos":[0,115]}]},{"pos":[122,277],"content":"If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.","nodes":[{"content":"If only one filter is expected to match the message, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph> method.","pos":[0,155],"source":"If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method."}]}],"pos":[72930,73212],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test."}],"pos":[73548,73636],"yaml":true},{"content":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.","nodes":[{"pos":[0,198],"content":"The reference parameter that stores the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> objects that match in <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;Filter&gt;</ph>.","source":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>."}],"pos":[73770,73969],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied."}],"pos":[74027,74174],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[74379,74411],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.","nodes":[{"pos":[0,234],"content":"Returns a value that indicates whether the match criterion of at least one <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection."}],"pos":[76010,76245],"yaml":true},{"content":"Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required.  \n  \n If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.","nodes":[{"pos":[0,169],"content":"Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required.","nodes":[{"content":"Use this method when multiple filters can be expected to match the message specified by the <ph id=\"ph1\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and the matching filters are required.","pos":[0,169],"source":"Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required."}]},{"pos":[176,331],"content":"If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.","nodes":[{"content":"If only one filter is expected to match the message, use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph> method.","pos":[0,155],"source":"If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method."}]}],"pos":[76256,76592],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test."}],"pos":[76884,76950],"yaml":true},{"content":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.","nodes":[{"pos":[0,198],"content":"The reference parameter that stores the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> objects that match in <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;Filter&gt;</ph>.","source":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>."}],"pos":[77084,77283],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied."}],"pos":[77341,77488],"yaml":true},{"content":"<code>matches</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;matches&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>matches</code> is `null`."}],"pos":[77693,77725],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified message and adds the matching filters to a collection.","nodes":[{"pos":[0,243],"content":"Returns a value that indicates whether the match criterion of at least one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified message and adds the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified message and adds the matching filters to a collection."}],"pos":[79318,79562],"yaml":true},{"content":"Use this method when more than one filter is expected to match the message and the matching filters are required.  \n  \n The filters in the table are not allowed to inspect the message body.  \n  \n The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"pos":[0,113],"content":"Use this method when more than one filter is expected to match the message and the matching filters are required.","nodes":[{"content":"Use this method when more than one filter is expected to match the message and the matching filters are required.","pos":[0,113]}]},{"pos":[120,189],"content":"The filters in the table are not allowed to inspect the message body.","nodes":[{"content":"The filters in the table are not allowed to inspect the message body.","pos":[0,69]}]},{"pos":[196,534],"content":"The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.","nodes":[{"content":"The matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","pos":[0,169],"source":"The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."},{"content":"The <ph id=\"ph1\">`FilterData`</ph> can then be recovered from the filter table using these filters as keys with the methods provided by <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>.","pos":[170,338],"source":" The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>."}]},{"pos":[541,648],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,107],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>."}]}],"pos":[79573,80230],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[80528,80599],"yaml":true},{"content":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.","nodes":[{"pos":[0,198],"content":"The reference parameter that stores the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> objects that match in <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;Filter&gt;</ph>.","source":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>."}],"pos":[80733,80932],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied."}],"pos":[80990,81131],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[81336,81368],"yaml":true},{"content":"A filter attempted to examine the contents of the message body.","nodes":[{"pos":[0,63],"content":"A filter attempted to examine the contents of the message body.","nodes":[{"content":"A filter attempted to examine the contents of the message body.","pos":[0,63]}]}],"pos":[81528,81592],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.","nodes":[{"pos":[0,252],"content":"Returns a value that indicates whether the match criterion of at least one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection."}],"pos":[83221,83474],"yaml":true},{"content":"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.  \n  \n The filters in the table are allowed to inspect the message body.  \n  \n The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"pos":[0,122],"content":"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.","nodes":[{"content":"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.","pos":[0,122]}]},{"pos":[129,194],"content":"The filters in the table are allowed to inspect the message body.","nodes":[{"content":"The filters in the table are allowed to inspect the message body.","pos":[0,65]}]},{"pos":[201,534],"content":"The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.","nodes":[{"content":"The matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","pos":[0,164],"source":"The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."},{"content":"The <ph id=\"ph1\">`FilterData`</ph> can then be recovered from the filter table using these filters as keys with the methods provided by <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>.","pos":[165,333],"source":" The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>."}]},{"pos":[541,647],"content":"This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>."}]}],"pos":[83485,84141],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[84463,84540],"yaml":true},{"content":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.","nodes":[{"pos":[0,198],"content":"The reference parameter that stores the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> objects that match in <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph3\">&lt;Filter&gt;</ph>.","source":"The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>."}],"pos":[84674,84873],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied."}],"pos":[84931,85078],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[85283,85315],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified message and returns the matching filter data.","nodes":[{"pos":[0,233],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified message and returns the matching filter data.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified message and returns the matching filter data."}],"pos":[86608,86842],"yaml":true},{"content":"Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.","nodes":[{"pos":[0,139],"content":"Use this method when a single filter is expected to match the message and only the <ph id=\"ph1\">`FilterData`</ph> from the matching filter must be recovered.","source":"Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered."},{"pos":[146,251],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A&gt;</ph>.","pos":[0,105],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>."}]}],"pos":[86853,87109],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[87333,87404],"yaml":true},{"content":"The `out` parameter that stores the <code>FilterData</code> for the filter that matches the <code>message</code>.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> for the filter that matches the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">message</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The `out` parameter that stores the <code>FilterData</code> for the filter that matches the <code>message</code>."}],"pos":[87462,87576],"yaml":true},{"content":"`true` if the match criterion of one filter in the table is satisfied by the message; `false` if no filter is satisfied.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of one filter in the table is satisfied by the message; <ph id=\"ph2\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of one filter in the table is satisfied by the message; `false` if no filter is satisfied."}],"pos":[87634,87757],"yaml":true},{"content":"<code>message</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>message</code> is `null`."}],"pos":[87960,87992],"yaml":true},{"content":"More than one filter matches the <code>message</code>.","nodes":[{"pos":[0,54],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>message</code>."}],"pos":[88160,88215],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified buffered message and returns the matching filter data.","nodes":[{"pos":[0,242],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the specified buffered message and returns the matching filter data.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified buffered message and returns the matching filter data."}],"pos":[89544,89787],"yaml":true},{"content":"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"pos":[0,148],"content":"Use this method when a single filter is expected to match the buffered message and only the <ph id=\"ph1\">`FilterData`</ph> from the matching filter must be recovered.","source":"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered."},{"pos":[155,261],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>."}]}],"pos":[89798,90064],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[90312,90389],"yaml":true},{"content":"The `out` parameter that stores the <code>FilterData</code> for the filter that matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> for the filter that matches the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">messageBuffer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The `out` parameter that stores the <code>FilterData</code> for the filter that matches the <code>messageBuffer</code>."}],"pos":[90447,90567],"yaml":true},{"content":"`true` if the match criterion of one filter in the table is satisfied by the buffered message; `false` if no filter is satisfied.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of one filter in the table is satisfied by the buffered message; <ph id=\"ph2\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of one filter in the table is satisfied by the buffered message; `false` if no filter is satisfied."}],"pos":[90625,90757],"yaml":true},{"content":"<code>message</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>message</code> is `null`."}],"pos":[90960,90992],"yaml":true},{"content":"More than one filter matches the <code>messageBuffer</code>.","nodes":[{"pos":[0,60],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">messageBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>messageBuffer</code>."}],"pos":[91160,91221],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and returns the filter data of the matching filter in an `out` parameter.","nodes":[{"pos":[0,278],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept> and returns the filter data of the matching filter in an <ph id=\"ph3\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and returns the filter data of the matching filter in an `out` parameter."}],"pos":[92610,92889],"yaml":true},{"content":"Use this method to specify an XPath condition that the message must meet.  \n  \n This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations.","nodes":[{"pos":[0,73],"content":"Use this method to specify an XPath condition that the message must meet.","nodes":[{"content":"Use this method to specify an XPath condition that the message must meet.","pos":[0,73]}]},{"pos":[80,407],"content":"This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations.","nodes":[{"content":"This method is similar to <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A&gt;</ph>, except that it uses a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator&gt;</ph>, which extends the functionality of the <ph id=\"ph3\">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> to include methods that allow various optimizations.","pos":[0,327],"source":"This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations."}]}],"pos":[92900,93312],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test."}],"pos":[93574,93662],"yaml":true},{"content":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>navigator</code>.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> that matches the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">navigator</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>navigator</code>."}],"pos":[93720,93821],"yaml":true},{"content":"`true` if the match criterion of exactly one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of exactly one filter in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of exactly one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied."}],"pos":[93879,94025],"yaml":true},{"content":"<code>navigator</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;navigator&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>navigator</code> is `null`."}],"pos":[94228,94262],"yaml":true},{"content":"More than one filter matches the <code>navigator</code>.","nodes":[{"pos":[0,56],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>navigator</code>."}],"pos":[94430,94487],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and returns the filter data of the matching filter in an `out` parameter.","nodes":[{"pos":[0,256],"content":"Returns a value that indicates whether the match criterion of exactly one <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept> and returns the filter data of the matching filter in an <ph id=\"ph3\">`out`</ph> parameter.","source":"Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and returns the filter data of the matching filter in an `out` parameter."}],"pos":[95786,96043],"yaml":true},{"content":"Use this method to specify an XPath condition that the message must meet.","nodes":[{"pos":[0,73],"content":"Use this method to specify an XPath condition that the message must meet.","nodes":[{"content":"Use this method to specify an XPath condition that the message must meet.","pos":[0,73]}]}],"pos":[96054,96128],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test."}],"pos":[96346,96412],"yaml":true},{"content":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>navigator</code>.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">`out`</ph> parameter that stores the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> that matches the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">navigator</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The `out` parameter that stores the <code>FilterData</code> that matches the <code>navigator</code>."}],"pos":[96470,96571],"yaml":true},{"content":"`true` if the match criterion of exactly one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of exactly one filter in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of exactly one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied."}],"pos":[96629,96775],"yaml":true},{"content":"<code>navigator</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;navigator&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>navigator</code> is `null`."}],"pos":[96978,97012],"yaml":true},{"content":"More than one filter matches the <code>navigator</code>.","nodes":[{"pos":[0,56],"content":"More than one filter matches the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"More than one filter matches the <code>navigator</code>."}],"pos":[97180,97237],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.","nodes":[{"pos":[0,198],"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.","nodes":[{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.","pos":[0,198]}]}],"pos":[98692,98891],"yaml":true},{"content":"Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.  \n  \n The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"pos":[0,155],"content":"Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.","nodes":[{"content":"Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.","pos":[0,155]}]},{"pos":[162,345],"content":"The filter data of the matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."},{"pos":[352,458],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>."}]}],"pos":[98902,99367],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test."}],"pos":[99631,99702],"yaml":true},{"content":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.","nodes":[{"pos":[0,176],"content":"The reference parameter that stores the filter data of the matching filters in a generic <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;</ph><bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt;.","source":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>."}],"pos":[99803,99980],"yaml":true},{"content":"`true` if match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied."}],"pos":[100038,100175],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[100379,100411],"yaml":true},{"content":"A filter attempted to examine the contents of the message body.","nodes":[{"pos":[0,63],"content":"A filter attempted to examine the contents of the message body.","nodes":[{"content":"A filter attempted to examine the contents of the message body.","pos":[0,63]}]}],"pos":[100571,100635],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.","nodes":[{"pos":[0,207],"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.","nodes":[{"content":"Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.","pos":[0,207]}]}],"pos":[102126,102334],"yaml":true},{"content":"Use this method when more than one filter is expected to match the buffered message and only the filter data is required.  \n  \n The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.  \n  \n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"pos":[0,121],"content":"Use this method when more than one filter is expected to match the buffered message and only the filter data is required.","nodes":[{"content":"Use this method when more than one filter is expected to match the buffered message and only the filter data is required.","pos":[0,121]}]},{"pos":[128,302],"content":"The filter data of the matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph><ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>."},{"pos":[309,415],"content":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A&gt;</ph>.","pos":[0,106],"source":"This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>."}]}],"pos":[102345,102767],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test."}],"pos":[103055,103132],"yaml":true},{"content":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.","nodes":[{"pos":[0,176],"content":"The reference parameter that stores the filter data of the matching filters in a generic <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;</ph><bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt;.","source":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>."}],"pos":[103233,103410],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied."}],"pos":[103468,103609],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[103813,103845],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and adds the filter data of the matching filters to a collection.","nodes":[{"pos":[0,271],"content":"Returns a value that indicates whether the match criterion of at least one <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept> and adds the filter data of the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and adds the filter data of the matching filters to a collection."}],"pos":[105396,105668],"yaml":true},{"content":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.  \n  \n The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.","nodes":[{"pos":[0,243],"content":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.","nodes":[{"content":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator&gt;</ph> and only the filter data is required.","pos":[0,243],"source":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required."}]},{"pos":[250,438],"content":"The filter data of the matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."}],"pos":[105679,106122],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test."}],"pos":[106424,106512],"yaml":true},{"content":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.","nodes":[{"pos":[0,176],"content":"The reference parameter that stores the filter data of the matching filters in a generic <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;</ph><bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt;.","source":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>."}],"pos":[106613,106790],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied."}],"pos":[106848,106995],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[107199,107231],"yaml":true},{"content":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and adds the filter data of the matching filters to a collection.","nodes":[{"pos":[0,249],"content":"Returns a value that indicates whether the match criterion of at least one <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept> and adds the filter data of the matching filters to a collection.","source":"Returns a value that indicates whether the match criterion of at least one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and adds the filter data of the matching filters to a collection."}],"pos":[108692,108942],"yaml":true},{"content":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.  \n  \n The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.","nodes":[{"pos":[0,243],"content":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.","nodes":[{"content":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator&gt;</ph> and only the filter data is required.","pos":[0,243],"source":"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required."}]},{"pos":[250,438],"content":"The filter data of the matching <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> objects are stored in the <ph id=\"ph2\">`results`</ph> parameter of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","source":"The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>."}],"pos":[108953,109396],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XPath.XPathNavigator\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test."}],"pos":[109654,109720],"yaml":true},{"content":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.","nodes":[{"pos":[0,176],"content":"The reference parameter that stores the filter data of the matching filters in a generic <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">&lt;</ph><bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt;.","source":"The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>."}],"pos":[109821,109998],"yaml":true},{"content":"`true` if the match criterion of at least one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if the match criterion of at least one filter in the table is satisfied by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">navigator</ph><ept id=\"p1\">&lt;/code&gt;</ept>; <ph id=\"ph3\">`false`</ph> if no filter is satisfied.","source":"`true` if the match criterion of at least one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied."}],"pos":[110056,110203],"yaml":true},{"content":"<code>results</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;results&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>results</code> is `null`."}],"pos":[110407,110439],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> is not read-only.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> is not read-only.","source":"The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> is not read-only."}],"pos":[111506,111606],"yaml":true},{"content":"Always returns `false`.","nodes":[{"pos":[0,23],"content":"Always returns <ph id=\"ph1\">`false`</ph>.","source":"Always returns `false`."}],"pos":[111719,111743],"yaml":true},{"content":"Gets or sets the filter data associated with the specified <code>filter</code>.","nodes":[{"pos":[0,79],"content":"Gets or sets the filter data associated with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Gets or sets the filter data associated with the specified <code>filter</code>."}],"pos":[113055,113135],"yaml":true},{"content":"The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.  \n  \n```csharp  \nmyFilters[filter]  \n```  \n  \n```vb  \nmyFilters(filter)  \n```  \n  \n You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table. However if `filter` is already in the table, setting the `Item` property overwrites the old value. In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.  \n  \n The dictionary `Item` is a `filter`/filter data pair in the case of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.","nodes":[{"pos":[0,177],"content":"The <ph id=\"ph1\">`Item`</ph> property (the indexer in C#) provides the ability to access the filter data associated with a <ph id=\"ph2\">`filter`</ph> in the table's filter collection by using the following syntax.","source":"The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax."},{"pos":[262,672],"content":"You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table. However if `filter` is already in the table, setting the `Item` property overwrites the old value. In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.","nodes":[{"content":"You can also use the <ph id=\"ph1\">`Item`</ph> property to add new elements by setting the values of a <ph id=\"ph2\">`filter`</ph>/filter data pair that does not exist in the action filter table.","pos":[0,157],"source":"You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table."},{"content":"However if <ph id=\"ph1\">`filter`</ph> is already in the table, setting the <ph id=\"ph2\">`Item`</ph> property overwrites the old value.","pos":[158,256],"source":" However if `filter` is already in the table, setting the `Item` property overwrites the old value."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A&gt;</ph> method does not modify the filter data of an existing <ph id=\"ph2\">`filter`</ph>.","pos":[257,410],"source":" In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`."}]},{"pos":[679,813],"content":"The dictionary <ph id=\"ph1\">`Item`</ph> is a <ph id=\"ph2\">`filter`</ph>/filter data pair in the case of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601&gt;</ph>.","source":"The dictionary `Item` is a `filter`/filter data pair in the case of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>."}],"pos":[113146,113974],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> associated with the filter data to get or set.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> associated with the filter data to get or set.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> associated with the filter data to get or set."}],"pos":[114197,114314],"yaml":true},{"content":"The filter data associated with the <code>filter</code>. If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref> and a set operation creates a new filter data element with the specified <code>filter</code> as key.","nodes":[{"pos":[0,302],"content":"The filter data associated with the <code>filter</code>. If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref> and a set operation creates a new filter data element with the specified <code>filter</code> as key.","nodes":[{"content":"The filter data associated with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,56],"source":"The filter data associated with the <code>filter</code>."},{"content":"If the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not found, a get operation throws a <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.KeyNotFoundException\"&gt;&lt;/xref&gt;</ph> and a set operation creates a new filter data element with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">filter</ph><ept id=\"p2\">&lt;/code&gt;</ept> as key.","pos":[57,302],"source":" If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref> and a set operation creates a new filter data element with the specified <code>filter</code> as key."}]}],"pos":[114369,114672],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[114863,114894],"yaml":true},{"content":"A compiler error occurred.","nodes":[{"pos":[0,26],"content":"A compiler error occurred.","nodes":[{"content":"A compiler error occurred.","pos":[0,26]}]}],"pos":[115002,115029],"yaml":true},{"content":"The property is retrieved and the <code>filter</code> is not in the table.","nodes":[{"pos":[0,74],"content":"The property is retrieved and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not in the table.","source":"The property is retrieved and the <code>filter</code> is not in the table."}],"pos":[115169,115244],"yaml":true},{"content":"Gets a collection of all the filters contained in the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>.","nodes":[{"pos":[0,132],"content":"Gets a collection of all the filters contained in the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a collection of all the filters contained in the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>."}],"pos":[116275,116408],"yaml":true},{"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>. The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \n  \n The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> property.","nodes":[{"pos":[0,289],"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>. The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.","nodes":[{"content":"This property implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph>.","pos":[0,83],"source":"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> that the filter table implements uses the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> as the key and the <ph id=\"ph3\">`FilterData`</ph> as the value of the pair.","pos":[84,289],"source":" The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair."}]},{"pos":[296,559],"content":"The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding <ph id=\"ph1\">`FilterData`</ph> in the collection returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A&gt;</ph> property.","source":"The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> property."}],"pos":[116419,116983],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>s contained in the filter table.","nodes":[{"pos":[0,178],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of all the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph>s contained in the filter table.","source":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>s contained in the filter table."}],"pos":[117240,117419],"yaml":true},{"content":"Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a `Match` method. This value applies for each filter.","nodes":[{"pos":[0,178],"content":"Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a `Match` method. This value applies for each filter.","nodes":[{"content":"Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a <ph id=\"ph1\">`Match`</ph> method.","pos":[0,142],"source":"Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a `Match` method."},{"content":"This value applies for each filter.","pos":[143,178]}]}],"pos":[118572,118751],"yaml":true},{"content":"This property can be used to alleviate a security threat. Some filters can be extremely expensive to evaluate or are very long-running. <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious. Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.","nodes":[{"pos":[0,516],"content":"This property can be used to alleviate a security threat. Some filters can be extremely expensive to evaluate or are very long-running. <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious. Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.","nodes":[{"content":"This property can be used to alleviate a security threat. Some filters can be extremely expensive to evaluate or are very long-running. <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious. Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.","pos":[0,516],"nodes":[{"content":"This property can be used to alleviate a security threat.","pos":[0,57]},{"content":"Some filters can be extremely expensive to evaluate or are very long-running.","pos":[58,135]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious.","pos":[136,315],"source":" <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious."},{"content":"Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.","pos":[316,516]}]}]}],"pos":[118762,119279],"yaml":true,"extradata":"MT"},{"content":"The number of nodes that can be examined.","nodes":[{"pos":[0,41],"content":"The number of nodes that can be examined.","nodes":[{"content":"The number of nodes that can be examined.","pos":[0,41]}]}],"pos":[119451,119493],"yaml":true},{"content":"Removes a filter and its associated filter data from the filter table.","nodes":[{"pos":[0,70],"content":"Removes a filter and its associated filter data from the filter table.","nodes":[{"content":"Removes a filter and its associated filter data from the filter table.","pos":[0,70]}]}],"pos":[121097,121168],"yaml":true},{"content":"If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.","nodes":[{"pos":[0,165],"content":"If the filter key of the <ph id=\"ph1\">`item`</ph> is present but is associated with data that differs from the <ph id=\"ph2\">`FilterData`</ph>, the method fails to remove the filter and returns <ph id=\"ph3\">`false`</ph>.","source":"If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`."}],"pos":[121179,121345],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to remove from the table.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> &lt;Filter, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>&gt; to remove from the table.","source":"The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to remove from the table."}],"pos":[121653,121780],"yaml":true},{"content":"`true` if the filter/<code>FilterData</code> pair was found and removed; `false` if it was not found.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the filter/<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> pair was found and removed; <ph id=\"ph3\">`false`</ph> if it was not found.","source":"`true` if the filter/<code>FilterData</code> pair was found and removed; `false` if it was not found."}],"pos":[121838,121942],"yaml":true},{"content":"Removes a filter and its associated filter data from the filter table.","nodes":[{"pos":[0,70],"content":"Removes a filter and its associated filter data from the filter table.","nodes":[{"content":"Removes a filter and its associated filter data from the filter table.","pos":[0,70]}]}],"pos":[123260,123331],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to remove.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to remove."}],"pos":[123537,123618],"yaml":true},{"content":"`true` if the filter was found and removed; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the filter was found and removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the filter was found and removed; otherwise, `false`."}],"pos":[123676,123742],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[123935,123966],"yaml":true},{"content":"<code>filter</code> is not a <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph>.","source":"<code>filter</code> is not a <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>."}],"pos":[124066,124167],"yaml":true},{"content":"Removes an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> and its associated filter data from the filter table.","nodes":[{"pos":[0,135],"content":"Removes an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> and its associated filter data from the filter table.","source":"Removes an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> and its associated filter data from the filter table."}],"pos":[125421,125557],"yaml":true},{"content":"This method does not throw an exception if the specified filter does not exist in the filter table.","nodes":[{"pos":[0,99],"content":"This method does not throw an exception if the specified filter does not exist in the filter table.","nodes":[{"content":"This method does not throw an exception if the specified filter does not exist in the filter table.","pos":[0,99]}]}],"pos":[125568,125668],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> to remove.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> to remove."}],"pos":[125884,125970],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> was found and removed; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph> was found and removed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> was found and removed; otherwise, `false`."}],"pos":[126028,126158],"yaml":true},{"content":"<code>filter</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>filter</code> is `null`."}],"pos":[126351,126382],"yaml":true},{"content":"<code>filter</code> is not an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;filter&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"&gt;&lt;/xref&gt;</ph>.","source":"<code>filter</code> is not an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>."}],"pos":[126482,126584],"yaml":true},{"content":"Compacts the filter table, purging any excess allocations or buffers.","nodes":[{"pos":[0,69],"content":"Compacts the filter table, purging any excess allocations or buffers.","nodes":[{"content":"Compacts the filter table, purging any excess allocations or buffers.","pos":[0,69]}]}],"pos":[127655,127725],"yaml":true},{"content":"This method is conceptually equivalent to setting a collection's capacity to its count.","nodes":[{"pos":[0,87],"content":"This method is conceptually equivalent to setting a collection's capacity to its count.","nodes":[{"content":"This method is conceptually equivalent to setting a collection's capacity to its count.","pos":[0,87]}]}],"pos":[127736,127824],"yaml":true,"extradata":"MT"},{"content":"Checks whether a filter is stored in the filter table.","nodes":[{"pos":[0,54],"content":"Checks whether a filter is stored in the filter table.","nodes":[{"content":"Checks whether a filter is stored in the filter table.","pos":[0,54]}]}],"pos":[129296,129351],"yaml":true},{"content":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception. If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown.","nodes":[{"pos":[0,312],"content":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception. If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown.","nodes":[{"content":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns <ph id=\"ph1\">`false`</ph> instead of throwing an exception.","pos":[0,172],"source":"This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception."},{"content":"If you try to retrieve the filter from the table using its <ph id=\"ph1\">`Item`</ph> property (the indexer in C#) and it is not there, an exception is thrown.","pos":[173,312],"source":" If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown."}]}],"pos":[129362,129675],"yaml":true,"extradata":"MT"},{"content":"A key to retrieve the data.","nodes":[{"pos":[0,27],"content":"A key to retrieve the data.","nodes":[{"content":"A key to retrieve the data.","pos":[0,27]}]}],"pos":[129908,129936],"yaml":true},{"content":"The <code>data</code> associated with the <code>filter</code> when this method returns `true`; otherwise, the default value for the type of the <code>data</code> parameter.","nodes":[{"pos":[0,172],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> associated with the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">filter</ph><ept id=\"p2\">&lt;/code&gt;</ept> when this method returns <ph id=\"ph3\">`true`</ph>; otherwise, the default value for the type of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">data</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The <code>data</code> associated with the <code>filter</code> when this method returns `true`; otherwise, the default value for the type of the <code>data</code> parameter."}],"pos":[129994,130167],"yaml":true},{"content":"`true` if the <code>filter</code> is present in the filter table; `false` otherwise.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filter</ph><ept id=\"p1\">&lt;/code&gt;</ept> is present in the filter table; <ph id=\"ph3\">`false`</ph> otherwise.","source":"`true` if the <code>filter</code> is present in the filter table; `false` otherwise."}],"pos":[130225,130312],"yaml":true},{"content":"Gets a collection of all the <code>FilterData</code> contained in the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>.","nodes":[{"pos":[0,148],"content":"Gets a collection of all the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> contained in the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a collection of all the <code>FilterData</code> contained in the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>."}],"pos":[131454,131603],"yaml":true},{"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \n  \n The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> property.","nodes":[{"pos":[0,313],"content":"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.","nodes":[{"content":"This property implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph>.","pos":[0,85],"source":"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>&lt;Filter, <ph id=\"ph2\">`FilterData`</ph>&gt; that the filter table implements uses the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> as the key and the <ph id=\"ph4\">`FilterData`</ph> as the value of the pair.","pos":[86,313],"source":" The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair."}]},{"pos":[320,581],"content":"The order of the <ph id=\"ph1\">`FilterData`</ph> returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A&gt;</ph> property.","source":"The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> property."}],"pos":[131614,132200],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <code>FilterData</code> contained in the filter table.","nodes":[{"pos":[0,130],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> of all the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> contained in the filter table.","source":"An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <code>FilterData</code> contained in the filter table."}],"pos":[132393,132524],"yaml":true},{"content":"Returns an enumerator that can iterate through the filter table.","nodes":[{"pos":[0,64],"content":"Returns an enumerator that can iterate through the filter table.","nodes":[{"content":"Returns an enumerator that can iterate through the filter table.","pos":[0,64]}]}],"pos":[133850,133915],"yaml":true},{"content":"This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.","nodes":[{"pos":[0,101],"content":"This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.","nodes":[{"content":"This method implements <ph id=\"ph1\">&lt;xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A&gt;</ph>.","pos":[0,101],"source":"This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>."}]}],"pos":[133926,134028],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, FilterData>> that can be used to iterate through the filter table.","nodes":[{"pos":[0,152],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph>&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, FilterData>> that can be used to iterate through the filter table."}],"pos":[134205,134358],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  commentId: T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  id: XPathMessageFilterTable`1\n  children:\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: XPathMessageFilterTable<TFilterData>\n  nameWithType: XPathMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Holds a collection of filter/data pairs for efficient matching.\n  remarks: \"The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface. This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar. It has optimized algorithms for efficient parallel matching.\"\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public class XPathMessageFilterTable<TFilterData> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n    typeParameters:\n    - id: TFilterData\n      description: The type of the filter data associated with each filter in the table.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  - System.Collections.Generic.IDictionary{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  - System.ServiceModel.Dispatcher.IMessageFilterTable{TFilterData}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)\n  - System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes:\n  - type: System.Runtime.Serialization.DataContractAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: XPathMessageFilterTable<TFilterData>()\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>()\n  fullName: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> class.\n  syntax:\n    content: public XPathMessageFilterTable ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: XPathMessageFilterTable<TFilterData>(Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>(Int32)\n  fullName: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>(Int32)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> class.\n  syntax:\n    content: public XPathMessageFilterTable (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Initial capacity of the table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Adds a filter/<code>FilterData</code> (key/value) pair to the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>.\n  remarks: This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class.  The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to add to the table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: A compiler error occurred.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  id: Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(MessageFilter, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Adds a filter/data pair to the filter table.\n  remarks: The internal conversion of the `filter` parameter from <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> used as the key of the pair added. Must be an instance of <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.\n    - id: data\n      type: TFilterData\n      description: The <code>FilterData</code> associated with the filter used as the value of the pair added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>filter</code> is not an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: A compiler error occurred.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  id: Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(XPathMessageFilter, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Adds a filter/data pair to the filter table.\n  remarks: This provides a strongly-typed overload for adding an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.XPathMessageFilter filter, TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.XPathMessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> used as the key of the pair added.\n    - id: data\n      type: TFilterData\n      description: The <code>FilterData</code> associated with the filter; used as the value of the pair added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: A compiler error occurred.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  id: Clear\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: XPathMessageFilterTable<TFilterData>.Clear()\n  fullName: XPathMessageFilterTable<TFilterData>.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes all filter/data pairs from the filter table.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Determines whether the filter table contains a specified filter and its associated <code>FilterData</code>.\n  remarks: This method returns `false` if the filter is found but corresponds to different data.\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <<xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref>, <code>FilterData</code>> to find in the table.\n    return:\n      type: System.Boolean\n      description: '`true` if the filter/*FilterData* pair is contained in the filter table; otherwise `false`.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  id: ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: ContainsKey(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Determines whether the filter table contains a specified filter.\n  remarks: This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.\n  syntax:\n    content: public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> being tested for.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>filter</code> is contained in the filter table; otherwise `false`.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  fullName: XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Copies the filter/<code>FilterData</code> pairs to an array that starts at a specified index.\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n      description: The array of type <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to which the pairs are being copied.\n    - id: arrayIndex\n      type: System.Int32\n      description: The index at which to begin copying.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  commentId: P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  id: Count\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: XPathMessageFilterTable<TFilterData>.Count\n  fullName: XPathMessageFilterTable<TFilterData>.Count\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the number of filter/data pairs currently in the filter table.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of filter/data pairs currently in the filter table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: XPathMessageFilterTable<TFilterData>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns an enumerator that can iterate through the filter table.\n  remarks: This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, FilterData>> that can be used to iterate through the filter table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(Message, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an `out` parameter.\n  remarks: \"Use this method when a single filter is expected to match the message and the matching filter is required.  \\n  \\n This method tests for a single filter match in the highest priority bucket of filters. The filters in the table are not allowed to inspect the message body.  \\n  \\n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.\n    return:\n      type: System.Boolean\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the message; or `null` if no filters are found to match.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>message</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>message</code>.\n  - type: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    commentId: T:System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    description: A filter attempted to examine the contents of the message body.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(MessageBuffer, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter.\n  remarks: \"Use this method when a single filter is expected to match the buffered message and the matching filter is required.  \\n  \\n The filters in the table are allowed to inspect the message body.  \\n  \\n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.\n    return:\n      type: System.Boolean\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the buffered message; or `null` if no filters are found to match.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>messageBuffer</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>messageBuffer</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(SeekableXPathNavigator, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator, MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter.\n  remarks: \"Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required.  \\n  \\n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The `out` parameter that stores the filter that is satisfied by the <code>message</code>. If no filter was found, the parameter is set to its default value.\n    return:\n      type: System.Boolean\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the navigator; or `null` if no filters are found to match.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>navigator</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>navigator</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(XPathNavigator, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator, MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the specified message or buffered message and returns that filter in an `out` parameter.\n  remarks: \"Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required.  \\n  \\n If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilter (System.Xml.XPath.XPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The `out` parameter that stores the filter that is satisfied by the <code>navigator</code>. If no filter was found, the parameter is set to its default value.\n    return:\n      type: System.Boolean\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> whose query criteria are satisfied by the navigator; or `null` if no filters are found to match.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>navigator</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>navigator</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(SeekableXPathNavigator, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator, ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the navigator and the matching filters are required.  \\n  \\n If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.\"\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(XPathNavigator, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator, ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.\n  remarks: \"Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required.  \\n  \\n If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.\"\n  syntax:\n    content: public bool GetMatchingFilters (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>matches</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(Message, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified message and adds the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the message and the matching filters are required.  \\n  \\n The filters in the table are not allowed to inspect the message body.  \\n  \\n The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    commentId: T:System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    description: A filter attempted to examine the contents of the message body.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the buffered message and the matching filters are required.  \\n  \\n The filters in the table are allowed to inspect the message body.  \\n  \\n The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>. The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.\"\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: The reference parameter that stores the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> objects that match in <xref href=\"System.Collections.Generic.ICollection`1\"></xref><Filter>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by <code>messageBuffer</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(Message, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified message and returns the matching filter data.\n  remarks: \"Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.\"\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: data\n      type: TFilterData\n      description: The `out` parameter that stores the <code>FilterData</code> for the filter that matches the <code>message</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of one filter in the table is satisfied by the message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>message</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>message</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(MessageBuffer, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> in the table is satisfied by the specified buffered message and returns the matching filter data.\n  remarks: \"Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.\"\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData data);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: data\n      type: TFilterData\n      description: The `out` parameter that stores the <code>FilterData</code> for the filter that matches the <code>messageBuffer</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of one filter in the table is satisfied by the buffered message; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>message</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>messageBuffer</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  id: GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(SeekableXPathNavigator, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and returns the filter data of the matching filter in an `out` parameter.\n  remarks: \"Use this method to specify an XPath condition that the message must meet.  \\n  \\n This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations.\"\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out TFilterData data);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.\n    - id: data\n      type: TFilterData\n      description: The `out` parameter that stores the <code>FilterData</code> that matches the <code>navigator</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of exactly one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>navigator</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>navigator</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  id: GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(XPathNavigator, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of exactly one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and returns the filter data of the matching filter in an `out` parameter.\n  remarks: Use this method to specify an XPath condition that the message must meet.\n  syntax:\n    content: public bool GetMatchingValue (System.Xml.XPath.XPathNavigator navigator, out TFilterData data);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.\n    - id: data\n      type: TFilterData\n      description: The `out` parameter that stores the <code>FilterData</code> that matches the <code>navigator</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of exactly one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>navigator</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    commentId: T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n    description: More than one filter matches the <code>navigator</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(Message, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.  \\n  \\n The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.\"\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.\n    return:\n      type: System.Boolean\n      description: '`true` if match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  - type: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    commentId: T:System.ServiceModel.Dispatcher.InvalidBodyAccessException\n    description: A filter attempted to examine the contents of the message body.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the buffered message and only the filter data is required.  \\n  \\n The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.  \\n  \\n This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.\"\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by <code>message</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(SeekableXPathNavigator, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator, ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and adds the filter data of the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.  \\n  \\n The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.\"\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: The <xref href=\"System.ServiceModel.Dispatcher.SeekableXPathNavigator\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(XPathNavigator, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator, ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a value that indicates whether the match criterion of at least one <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> in the table is satisfied by the <code>navigator</code> and adds the filter data of the matching filters to a collection.\n  remarks: \"Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.  \\n  \\n The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.\"\n  syntax:\n    content: public bool GetMatchingValues (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: The <xref href=\"System.Xml.XPath.XPathNavigator\"></xref> to test.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: The reference parameter that stores the filter data of the matching filters in a generic <xref href=\"System.Collections.Generic.ICollection`1\"></xref><<code>FilterData</code>>.\n    return:\n      type: System.Boolean\n      description: '`true` if the match criterion of at least one filter in the table is satisfied by the <code>navigator</code>; `false` if no filter is satisfied.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>results</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  commentId: P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  fullName: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref> is not read-only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Always returns `false`.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Item(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the filter data associated with the specified <code>filter</code>.\n  remarks: \"The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.  \\n  \\n```csharp  \\nmyFilters[filter]  \\n```  \\n  \\n```vb  \\nmyFilters(filter)  \\n```  \\n  \\n You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table. However if `filter` is already in the table, setting the `Item` property overwrites the old value. In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.  \\n  \\n The dictionary `Item` is a `filter`/filter data pair in the case of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.\"\n  syntax:\n    content: public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> associated with the filter data to get or set.\n    return:\n      type: TFilterData\n      description: The filter data associated with the <code>filter</code>. If the specified <code>filter</code> is not found, a get operation throws a <xref href=\"System.Collections.Generic.KeyNotFoundException\"></xref> and a set operation creates a new filter data element with the specified <code>filter</code> as key.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: A compiler error occurred.\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: The property is retrieved and the <code>filter</code> is not in the table.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  commentId: P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  id: Keys\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: XPathMessageFilterTable<TFilterData>.Keys\n  fullName: XPathMessageFilterTable<TFilterData>.Keys\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a collection of all the filters contained in the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>.\n  remarks: \"This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>. The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \\n  \\n The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> property.\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>s contained in the filter table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  commentId: P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  id: NodeQuota\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: NodeQuota\n  nameWithType: XPathMessageFilterTable<TFilterData>.NodeQuota\n  fullName: XPathMessageFilterTable<TFilterData>.NodeQuota\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a `Match` method. This value applies for each filter.\n  remarks: This property can be used to alleviate a security threat. Some filters can be extremely expensive to evaluate or are very long-running. <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious. Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataMember]\n\n      public int NodeQuota { get; set; }\n    return:\n      type: System.Int32\n      description: The number of nodes that can be examined.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.Serialization.DataMemberAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes a filter and its associated filter data from the filter table.\n  remarks: If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: The <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> <Filter, <code>FilterData</code>> to remove from the table.\n    return:\n      type: System.Boolean\n      description: '`true` if the filter/<code>FilterData</code> pair was found and removed; `false` if it was not found.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes a filter and its associated filter data from the filter table.\n  syntax:\n    content: public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the filter was found and removed; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>filter</code> is not a <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  id: Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(XPathMessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Removes an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> and its associated filter data from the filter table.\n  remarks: This method does not throw an exception if the specified filter does not exist in the filter table.\n  syntax:\n    content: public bool Remove (System.ServiceModel.Dispatcher.XPathMessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.XPathMessageFilter\n      description: The <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref> was found and removed; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filter</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: <code>filter</code> is not an <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilter\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  id: TrimToSize\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: TrimToSize()\n  nameWithType: XPathMessageFilterTable<TFilterData>.TrimToSize()\n  fullName: XPathMessageFilterTable<TFilterData>.TrimToSize()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Compacts the filter table, purging any excess allocations or buffers.\n  remarks: This method is conceptually equivalent to setting a collection's capacity to its count.\n  syntax:\n    content: public void TrimToSize ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  id: TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: TryGetValue(MessageFilter, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Checks whether a filter is stored in the filter table.\n  remarks: This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception. If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown.\n  syntax:\n    content: public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: A key to retrieve the data.\n    - id: data\n      type: TFilterData\n      description: The <code>data</code> associated with the <code>filter</code> when this method returns `true`; otherwise, the default value for the type of the <code>data</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>filter</code> is present in the filter table; `false` otherwise.'\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  commentId: P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  id: Values\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Values\n  nameWithType: XPathMessageFilterTable<TFilterData>.Values\n  fullName: XPathMessageFilterTable<TFilterData>.Values\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a collection of all the <code>FilterData</code> contained in the <xref href=\"System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\"></xref>.\n  remarks: \"This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>. The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.  \\n  \\n The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> property.\"\n  syntax:\n    content: public System.Collections.Generic.ICollection<TFilterData> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: An <xref href=\"System.Collections.Generic.ICollection`1\"></xref> of all the <code>FilterData</code> contained in the filter table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n  fullName: XPathMessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns an enumerator that can iterate through the filter table.\n  remarks: This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref><KeyValuePair<Filter, FilterData>> that can be used to iterate through the filter table.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xml.XPath.XPathException\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathException\n  nameWithType: XPathException\n  fullName: System.Xml.XPath.XPathException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MultipleFilterMatchesException\n  nameWithType: MultipleFilterMatchesException\n  fullName: System.ServiceModel.Dispatcher.MultipleFilterMatchesException\n- uid: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: InvalidBodyAccessException\n  nameWithType: InvalidBodyAccessException\n  fullName: System.ServiceModel.Dispatcher.InvalidBodyAccessException\n- uid: System.Collections.Generic.KeyNotFoundException\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: XPathMessageFilterTable<TFilterData>()\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>()\n  fullName: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>()\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: XPathMessageFilterTable<TFilterData>(Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>(Int32)\n  fullName: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n- uid: TFilterData\n  name: TFilterData\n  nameWithType: TFilterData\n  fullName: TFilterData\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<MessageFilter,TFilterData>\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add(MessageFilter, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.Add(MessageFilter, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add(XPathMessageFilter, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: XPathMessageFilter\n  nameWithType: XPathMessageFilter\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilter\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Clear()\n  nameWithType: XPathMessageFilterTable<TFilterData>.Clear()\n  fullName: XPathMessageFilterTable<TFilterData>.Clear()\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: ContainsKey(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n  fullName: XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>[], Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<MessageFilter,TFilterData>[]\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>[]\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: XPathMessageFilterTable<TFilterData>.Count\n  fullName: XPathMessageFilterTable<TFilterData>.Count\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: XPathMessageFilterTable<TFilterData>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(Message, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message, MessageFilter)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(MessageBuffer, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer, MessageFilter)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(SeekableXPathNavigator, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator, MessageFilter)\n- uid: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: SeekableXPathNavigator\n  nameWithType: SeekableXPathNavigator\n  fullName: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(XPathNavigator, MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator, MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator, MessageFilter)\n- uid: System.Xml.XPath.XPathNavigator\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator\n  nameWithType: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(SeekableXPathNavigator, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator, ICollection<MessageFilter>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<MessageFilter>\n  nameWithType: ICollection<MessageFilter>\n  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(XPathNavigator, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator, ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(Message, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message, ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer, ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(Message, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(MessageBuffer, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(SeekableXPathNavigator, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(XPathNavigator, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(Message, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message, ICollection<TFilterData>)\n- uid: System.Collections.Generic.ICollection{TFilterData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TFilterData>\n  nameWithType: ICollection<TFilterData>\n  fullName: System.Collections.Generic.ICollection<TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer, ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(SeekableXPathNavigator, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator, ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(XPathNavigator, ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator, ICollection<TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator, ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  fullName: XPathMessageFilterTable<TFilterData>.IsReadOnly\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Item(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: XPathMessageFilterTable<TFilterData>.Keys\n  fullName: XPathMessageFilterTable<TFilterData>.Keys\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: NodeQuota\n  nameWithType: XPathMessageFilterTable<TFilterData>.NodeQuota\n  fullName: XPathMessageFilterTable<TFilterData>.NodeQuota\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove(XPathMessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n  fullName: XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TrimToSize()\n  nameWithType: XPathMessageFilterTable<TFilterData>.TrimToSize()\n  fullName: XPathMessageFilterTable<TFilterData>.TrimToSize()\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TryGetValue(MessageFilter, TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n  fullName: XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter, TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: XPathMessageFilterTable<TFilterData>.Values\n  fullName: XPathMessageFilterTable<TFilterData>.Values\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n  fullName: XPathMessageFilterTable<TFilterData>.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingFilters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues\n  fullName: XPathMessageFilterTable<TFilterData>.GetMatchingValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: XPathMessageFilterTable<TFilterData>\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>\n  fullName: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add\n  fullName: XPathMessageFilterTable<TFilterData>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Clear\n  nameWithType: XPathMessageFilterTable<TFilterData>.Clear\n  fullName: XPathMessageFilterTable<TFilterData>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Contains\n  nameWithType: XPathMessageFilterTable<TFilterData>.Contains\n  fullName: XPathMessageFilterTable<TFilterData>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: ContainsKey\n  nameWithType: XPathMessageFilterTable<TFilterData>.ContainsKey\n  fullName: XPathMessageFilterTable<TFilterData>.ContainsKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: XPathMessageFilterTable<TFilterData>.CopyTo\n  fullName: XPathMessageFilterTable<TFilterData>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: XPathMessageFilterTable<TFilterData>.Count\n  fullName: XPathMessageFilterTable<TFilterData>.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetEnumerator\n  fullName: XPathMessageFilterTable<TFilterData>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  fullName: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Item\n  nameWithType: XPathMessageFilterTable<TFilterData>.Item\n  fullName: XPathMessageFilterTable<TFilterData>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: XPathMessageFilterTable<TFilterData>.Keys\n  fullName: XPathMessageFilterTable<TFilterData>.Keys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: NodeQuota\n  nameWithType: XPathMessageFilterTable<TFilterData>.NodeQuota\n  fullName: XPathMessageFilterTable<TFilterData>.NodeQuota\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove\n  fullName: XPathMessageFilterTable<TFilterData>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TrimToSize\n  nameWithType: XPathMessageFilterTable<TFilterData>.TrimToSize\n  fullName: XPathMessageFilterTable<TFilterData>.TrimToSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TryGetValue\n  nameWithType: XPathMessageFilterTable<TFilterData>.TryGetValue\n  fullName: XPathMessageFilterTable<TFilterData>.TryGetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: XPathMessageFilterTable<TFilterData>.Values\n  fullName: XPathMessageFilterTable<TFilterData>.Values\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator\n  fullName: XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/XPathMessageFilterTable`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)\n  parent: System.Collections.Generic.CollectionExtensions\n  isExternal: false\n  name: Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  nameWithType: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  fullName: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n- uid: System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)\n  parent: System.Collections.Generic.CollectionExtensions\n  isExternal: false\n  name: TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  nameWithType: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n  fullName: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: ICollection<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<MessageFilter,TFilterData>\n  nameWithType: IDictionary<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: IEnumerable<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: System.ServiceModel.Dispatcher.MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: IMessageFilterTable<TFilterData>\n  nameWithType: IMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n"}