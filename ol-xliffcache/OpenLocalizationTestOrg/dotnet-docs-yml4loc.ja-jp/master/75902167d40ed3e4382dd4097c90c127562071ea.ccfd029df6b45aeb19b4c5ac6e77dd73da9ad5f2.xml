{"nodes":[{"content":"Represents an import that is required by a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> object and that can specify both a contract name and metadata.","nodes":[{"pos":[0,186],"content":"Represents an import that is required by a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"&gt;&lt;/xref&gt;</ph> object and that can specify both a contract name and metadata.","source":"Represents an import that is required by a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> object and that can specify both a contract name and metadata."}],"pos":[2103,2290],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class."}],"pos":[4534,4671],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.","nodes":[{"pos":[0,325],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite."}],"pos":[7358,7684],"yaml":true},{"content":"The contract name of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object required by the import definition.","nodes":[{"pos":[0,139],"content":"The contract name of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;&lt;/xref&gt;</ph> object required by the import definition.","source":"The contract name of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object required by the import definition."}],"pos":[8182,8322],"yaml":true},{"content":"The type identity of the export type expected. Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type. If no specific type is required, use `null`.","nodes":[{"pos":[0,260],"content":"The type identity of the export type expected. Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type. If no specific type is required, use `null`.","nodes":[{"content":"The type identity of the export type expected.","pos":[0,46]},{"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"&gt;&lt;/xref&gt;</ph> method to generate a type identity for a given type.","pos":[47,215],"source":" Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type."},{"content":"If no specific type is required, use <ph id=\"ph1\">`null`</ph>.","pos":[216,260],"source":" If no specific type is required, use `null`."}]}],"pos":[8398,8659],"yaml":true},{"content":"A collection of key/value pairs that contain the metadata names and types required by the import definition; or `null` to set the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"></xref> property to an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.","nodes":[{"pos":[0,337],"content":"A collection of key/value pairs that contain the metadata names and types required by the import definition; or <ph id=\"ph1\">`null`</ph> to set the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"&gt;&lt;/xref&gt;</ph> property to an empty <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"A collection of key/value pairs that contain the metadata names and types required by the import definition; or `null` to set the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"></xref> property to an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection."}],"pos":[8824,9162],"yaml":true},{"content":"One of the enumeration values that indicates the cardinality of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the import definition.","nodes":[{"pos":[0,183],"content":"One of the enumeration values that indicates the cardinality of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;&lt;/xref&gt;</ph> objects required by the import definition.","source":"One of the enumeration values that indicates the cardinality of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the import definition."}],"pos":[9278,9462],"yaml":true},{"content":"`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,207],"content":"<ph id=\"ph1\">`true`</ph> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref>; otherwise, `false`."}],"pos":[9533,9743],"yaml":true},{"content":"`true` to specify that the import definition is required to be satisfied before a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> can start producing exported objects; otherwise, `false`.","nodes":[{"pos":[0,220],"content":"<ph id=\"ph1\">`true`</ph> to specify that the import definition is required to be satisfied before a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"&gt;&lt;/xref&gt;</ph> can start producing exported objects; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to specify that the import definition is required to be satisfied before a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> can start producing exported objects; otherwise, `false`."}],"pos":[9814,10037],"yaml":true},{"content":"A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import. If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>.","nodes":[{"pos":[0,253],"content":"A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import. If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>.","nodes":[{"content":"A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.","pos":[0,121]},{"content":"If no specific creation policy is needed, the default is <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"&gt;&lt;/xref&gt;</ph>.","pos":[122,253],"source":" If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>."}]}],"pos":[10150,10404],"yaml":true},{"content":"<code>contractName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>contractName</code> is `null`."}],"pos":[10614,10651],"yaml":true},{"content":"<code>contractName</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>requiredMetadata</code> contains an element that is `null`.  \n  \n -or-  \n  \n <code>cardinality</code> is not one of the <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> values.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>contractName</code> is an empty string (\"\")."},{"pos":[57,61],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[68,133],"content":"<ph id=\"ph1\">&lt;code&gt;requiredMetadata&lt;/code&gt;</ph> contains an element that is <ph id=\"ph2\">`null`</ph>.","source":"<code>requiredMetadata</code> contains an element that is `null`."},{"pos":[140,144],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[151,285],"content":"<ph id=\"ph1\">&lt;code&gt;cardinality&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>cardinality</code> is not one of the <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> values."}],"pos":[10745,11045],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.","nodes":[{"pos":[0,338],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite."}],"pos":[13823,14162],"yaml":true},{"content":"The contract name of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object required by the import definition.","nodes":[{"pos":[0,139],"content":"The contract name of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;&lt;/xref&gt;</ph> object required by the import definition.","source":"The contract name of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object required by the import definition."}],"pos":[14724,14864],"yaml":true},{"content":"The type identity of the export type expected. Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type. If no specific type is required, use `null`.","nodes":[{"pos":[0,260],"content":"The type identity of the export type expected. Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type. If no specific type is required, use `null`.","nodes":[{"content":"The type identity of the export type expected.","pos":[0,46]},{"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"&gt;&lt;/xref&gt;</ph> method to generate a type identity for a given type.","pos":[47,215],"source":" Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type."},{"content":"If no specific type is required, use <ph id=\"ph1\">`null`</ph>.","pos":[216,260],"source":" If no specific type is required, use `null`."}]}],"pos":[14940,15201],"yaml":true},{"content":"A collection of key/value pairs that contain the metadata names and types required by the import definition; or `null` to set the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"></xref> property to an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.","nodes":[{"pos":[0,337],"content":"A collection of key/value pairs that contain the metadata names and types required by the import definition; or <ph id=\"ph1\">`null`</ph> to set the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"&gt;&lt;/xref&gt;</ph> property to an empty <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"A collection of key/value pairs that contain the metadata names and types required by the import definition; or `null` to set the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"></xref> property to an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection."}],"pos":[15366,15704],"yaml":true},{"content":"One of the enumeration values that indicates the cardinality of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the import definition.","nodes":[{"pos":[0,183],"content":"One of the enumeration values that indicates the cardinality of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;&lt;/xref&gt;</ph> objects required by the import definition.","source":"One of the enumeration values that indicates the cardinality of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the import definition."}],"pos":[15820,16004],"yaml":true},{"content":"`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,207],"content":"<ph id=\"ph1\">`true`</ph> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref>; otherwise, `false`."}],"pos":[16075,16285],"yaml":true},{"content":"`true` to specify that the import definition is required to be satisfied before a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> can start producing exported objects; otherwise, `false`.","nodes":[{"pos":[0,220],"content":"<ph id=\"ph1\">`true`</ph> to specify that the import definition is required to be satisfied before a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"&gt;&lt;/xref&gt;</ph> can start producing exported objects; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to specify that the import definition is required to be satisfied before a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> can start producing exported objects; otherwise, `false`."}],"pos":[16356,16579],"yaml":true},{"content":"A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import. If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>.","nodes":[{"pos":[0,253],"content":"A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import. If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>.","nodes":[{"content":"A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.","pos":[0,121]},{"content":"If no specific creation policy is needed, the default is <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"&gt;&lt;/xref&gt;</ph>.","pos":[122,253],"source":" If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>."}]}],"pos":[16692,16946],"yaml":true},{"content":"The metadata associated with this import.","nodes":[{"pos":[0,41],"content":"The metadata associated with this import.","nodes":[{"content":"The metadata associated with this import.","pos":[0,41]}]}],"pos":[17064,17106],"yaml":true},{"content":"<code>contractName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>contractName</code> is `null`."}],"pos":[17316,17353],"yaml":true},{"content":"<code>contractName</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>requiredMetadata</code> contains an element that is `null`.  \n  \n -or-  \n  \n <code>cardinality</code> is not one of the <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> values.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;contractName&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>contractName</code> is an empty string (\"\")."},{"pos":[57,61],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[68,133],"content":"<ph id=\"ph1\">&lt;code&gt;requiredMetadata&lt;/code&gt;</ph> contains an element that is <ph id=\"ph2\">`null`</ph>.","source":"<code>requiredMetadata</code> contains an element that is `null`."},{"pos":[140,144],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[151,285],"content":"<ph id=\"ph1\">&lt;code&gt;cardinality&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>cardinality</code> is not one of the <xref href=\"System.ComponentModel.Composition.Primitives.ImportCardinality\"></xref> values."}],"pos":[17447,17747],"yaml":true},{"content":"Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.","nodes":[{"pos":[0,122],"content":"Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.","nodes":[{"content":"Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.","pos":[0,122]}]}],"pos":[19029,19152],"yaml":true},{"content":"An expression that contains a <xref href=\"System.Func`2\"></xref> object that defines the conditions that must be matched for the <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref> to be satisfied by an <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref>.","nodes":[{"pos":[0,307],"content":"An expression that contains a <ph id=\"ph1\">&lt;xref href=\"System.Func`2\"&gt;&lt;/xref&gt;</ph> object that defines the conditions that must be matched for the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"&gt;&lt;/xref&gt;</ph> to be satisfied by an <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;&lt;/xref&gt;</ph>.","source":"An expression that contains a <xref href=\"System.Func`2\"></xref> object that defines the conditions that must be matched for the <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref> to be satisfied by an <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref>."}],"pos":[19489,19797],"yaml":true},{"content":"Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.","nodes":[{"pos":[0,147],"content":"Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.","nodes":[{"content":"Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.","pos":[0,147]}]}],"pos":[21514,21662],"yaml":true},{"content":"The export definition to test.","nodes":[{"pos":[0,30],"content":"The export definition to test.","nodes":[{"content":"The export definition to test.","pos":[0,30]}]}],"pos":[21948,21979],"yaml":true},{"content":"`true` if the constraint is satisfied; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the constraint is satisfied; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the constraint is satisfied; otherwise, `false`."}],"pos":[22037,22098],"yaml":true},{"content":"Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import.","nodes":[{"pos":[0,188],"content":"Gets or sets a value that indicates that the importer requires a specific <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;&lt;/xref&gt;</ph> for the exports used to satisfy this import.","source":"Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import."}],"pos":[23581,23770],"yaml":true},{"content":"One of the following values:  \n  \n <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>.  \n  \n <xref href=\"System.ComponentModel.Composition.CreationPolicy.Shared\"></xref> to require that all exports used should be shared by all importers in the container.  \n  \n <xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"></xref> to require that all exports used should be non-shared in the container. In this case, each importer receives a separate instance.","nodes":[{"pos":[0,28],"content":"One of the following values:","nodes":[{"content":"One of the following values:","pos":[0,28]}]},{"pos":[35,224],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"&gt;&lt;/xref&gt;</ph>, if the importer does not require a specific <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>, if the importer does not require a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref>."},{"pos":[231,392],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.Shared\"&gt;&lt;/xref&gt;</ph> to require that all exports used should be shared by all importers in the container.","source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.Shared\"></xref> to require that all exports used should be shared by all importers in the container."},{"pos":[399,608],"content":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"></xref> to require that all exports used should be non-shared in the container. In this case, each importer receives a separate instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"&gt;&lt;/xref&gt;</ph> to require that all exports used should be non-shared in the container.","pos":[0,151],"source":"<xref href=\"System.ComponentModel.Composition.CreationPolicy.NonShared\"></xref> to require that all exports used should be non-shared in the container."},{"content":"In this case, each importer receives a separate instance.","pos":[152,209]}]}],"pos":[23981,24606],"yaml":true},{"content":"Gets the metadata names of the export required by the import definition.","nodes":[{"pos":[0,72],"content":"Gets the metadata names of the export required by the import definition.","nodes":[{"content":"Gets the metadata names of the export required by the import definition.","pos":[0,72]}]}],"pos":[26052,26125],"yaml":true},{"content":"Overrides of this property should never return `null` or return an <xref:System.Collections.Generic.IEnumerable%601> collection that contains an element that is `null`. If the definition does not contain required metadata, return an empty <xref:System.Collections.Generic.IEnumerable%601> collection instead.","nodes":[{"pos":[0,308],"content":"Overrides of this property should never return `null` or return an <xref:System.Collections.Generic.IEnumerable%601> collection that contains an element that is `null`. If the definition does not contain required metadata, return an empty <xref:System.Collections.Generic.IEnumerable%601> collection instead.","nodes":[{"content":"Overrides of this property should never return <ph id=\"ph1\">`null`</ph> or return an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection that contains an element that is <ph id=\"ph3\">`null`</ph>.","pos":[0,168],"source":"Overrides of this property should never return `null` or return an <xref:System.Collections.Generic.IEnumerable%601> collection that contains an element that is `null`."},{"content":"If the definition does not contain required metadata, return an empty <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection instead.","pos":[169,308],"source":" If the definition does not contain required metadata, return an empty <xref:System.Collections.Generic.IEnumerable%601> collection instead."}]}],"pos":[26136,26445],"yaml":true,"extradata":"MT"},{"content":"A collection of <xref href=\"System.String\"></xref> objects that contain the metadata names of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>. The default is an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.","nodes":[{"pos":[0,389],"content":"A collection of <xref href=\"System.String\"></xref> objects that contain the metadata names of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>. The default is an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> objects that contain the metadata names of the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.Export\"&gt;&lt;/xref&gt;</ph> objects required by the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph>.","pos":[0,291],"source":"A collection of <xref href=\"System.String\"></xref> objects that contain the metadata names of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>."},{"content":"The default is an empty <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> collection.","pos":[292,389],"source":" The default is an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection."}]}],"pos":[26752,27142],"yaml":true},{"content":"Gets the expected type of the export that matches this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>.","nodes":[{"pos":[0,151],"content":"Gets the expected type of the export that matches this <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the expected type of the export that matches this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>."}],"pos":[28606,28758],"yaml":true},{"content":"A string that is generated by calling the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method on the type that this import expects. If the value is `null`, this import does not expect a particular type.","nodes":[{"pos":[0,265],"content":"A string that is generated by calling the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method on the type that this import expects. If the value is `null`, this import does not expect a particular type.","nodes":[{"content":"A string that is generated by calling the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"&gt;&lt;/xref&gt;</ph> method on the type that this import expects.","pos":[0,194],"source":"A string that is generated by calling the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method on the type that this import expects."},{"content":"If the value is <ph id=\"ph1\">`null`</ph>, this import does not expect a particular type.","pos":[195,265],"source":" If the value is `null`, this import does not expect a particular type."}]}],"pos":[28890,29156],"yaml":true},{"content":"Returns the string representation of this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> object.","nodes":[{"pos":[0,145],"content":"Returns the string representation of this <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the string representation of this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> object."}],"pos":[30556,30702],"yaml":true},{"content":"The string representation of this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> object.","nodes":[{"pos":[0,137],"content":"The string representation of this <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"&gt;&lt;/xref&gt;</ph> object.","source":"The string representation of this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> object."}],"pos":[30837,30975],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  commentId: T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  id: ContractBasedImportDefinition\n  children:\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity\n  - System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString\n  langs:\n  - csharp\n  name: ContractBasedImportDefinition\n  nameWithType: ContractBasedImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Represents an import that is required by a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> object and that can specify both a contract name and metadata.\n  syntax:\n    content: 'public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.Composition.Primitives.ImportDefinition\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n  - System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor\n  commentId: M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: ContractBasedImportDefinition()\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class.\n  syntax:\n    content: protected ContractBasedImportDefinition ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)\n  commentId: M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)\n  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)'\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy)\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy)\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.\n  syntax:\n    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object required by the import definition.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The type identity of the export type expected. Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type. If no specific type is required, use `null`.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: A collection of key/value pairs that contain the metadata names and types required by the import definition; or `null` to set the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"></xref> property to an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: One of the enumeration values that indicates the cardinality of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the import definition.\n    - id: isRecomposable\n      type: System.Boolean\n      description: '`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref>; otherwise, `false`.'\n    - id: isPrerequisite\n      type: System.Boolean\n      description: '`true` to specify that the import definition is required to be satisfied before a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> can start producing exported objects; otherwise, `false`.'\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import. If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>.\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>contractName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>contractName</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>requiredMetadata</code> contains an element that is `null`.  \\n  \\n -or-  \\n  \\n <code>cardinality</code> is not one of the <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> values.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})\n  commentId: M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})\n  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})'\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>)\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>)\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.\n  syntax:\n    content: public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata);\n    parameters:\n    - id: contractName\n      type: System.String\n      description: The contract name of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> object required by the import definition.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The type identity of the export type expected. Use the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method to generate a type identity for a given type. If no specific type is required, use `null`.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: A collection of key/value pairs that contain the metadata names and types required by the import definition; or `null` to set the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\"></xref> property to an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: One of the enumeration values that indicates the cardinality of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the import definition.\n    - id: isRecomposable\n      type: System.Boolean\n      description: '`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref>; otherwise, `false`.'\n    - id: isPrerequisite\n      type: System.Boolean\n      description: '`true` to specify that the import definition is required to be satisfied before a <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePart\"></xref> can start producing exported objects; otherwise, `false`.'\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import. If no specific creation policy is needed, the default is <xref href=\"System.ComponentModel.Composition.CreationPolicy.Any\"></xref>.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The metadata associated with this import.\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>contractName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>contractName</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>requiredMetadata</code> contains an element that is `null`.  \\n  \\n -or-  \\n  \\n <code>cardinality</code> is not one of the <xref href=\\\"System.ComponentModel.Composition.Primitives.ImportCardinality\\\"></xref> values.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint\n  commentId: P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint\n  id: Constraint\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: Constraint\n  nameWithType: ContractBasedImportDefinition.Constraint\n  fullName: ContractBasedImportDefinition.Constraint\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.\n  syntax:\n    content: public override System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Primitives.ExportDefinition,bool>> Constraint { get; }\n    return:\n      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n      description: An expression that contains a <xref href=\"System.Func`2\"></xref> object that defines the conditions that must be matched for the <xref href=\"System.ComponentModel.Composition.Primitives.ImportDefinition\"></xref> to be satisfied by an <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref>.\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  commentId: M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  id: IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: IsConstraintSatisfiedBy(ExportDefinition)\n  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n  fullName: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.\n  syntax:\n    content: public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);\n    parameters:\n    - id: exportDefinition\n      type: System.ComponentModel.Composition.Primitives.ExportDefinition\n      description: The export definition to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the constraint is satisfied; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy\n  commentId: P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy\n  id: RequiredCreationPolicy\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: RequiredCreationPolicy\n  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy\n  fullName: ContractBasedImportDefinition.RequiredCreationPolicy\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Gets or sets a value that indicates that the importer requires a specific <xref href=\"System.ComponentModel.Composition.CreationPolicy\"></xref> for the exports used to satisfy this import.\n  syntax:\n    content: public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }\n    return:\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: \"One of the following values:  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy.Any\\\"></xref>, if the importer does not require a specific <xref href=\\\"System.ComponentModel.Composition.CreationPolicy\\\"></xref>.  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy.Shared\\\"></xref> to require that all exports used should be shared by all importers in the container.  \\n  \\n <xref href=\\\"System.ComponentModel.Composition.CreationPolicy.NonShared\\\"></xref> to require that all exports used should be non-shared in the container. In this case, each importer receives a separate instance.\"\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\n  commentId: P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\n  id: RequiredMetadata\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: RequiredMetadata\n  nameWithType: ContractBasedImportDefinition.RequiredMetadata\n  fullName: ContractBasedImportDefinition.RequiredMetadata\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Gets the metadata names of the export required by the import definition.\n  remarks: Overrides of this property should never return `null` or return an <xref:System.Collections.Generic.IEnumerable%601> collection that contains an element that is `null`. If the definition does not contain required metadata, return an empty <xref:System.Collections.Generic.IEnumerable%601> collection instead.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> RequiredMetadata { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: A collection of <xref href=\"System.String\"></xref> objects that contain the metadata names of the <xref href=\"System.ComponentModel.Composition.Primitives.Export\"></xref> objects required by the <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>. The default is an empty <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection.\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity\n  commentId: P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity\n  id: RequiredTypeIdentity\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: RequiredTypeIdentity\n  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity\n  fullName: ContractBasedImportDefinition.RequiredTypeIdentity\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Gets the expected type of the export that matches this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref>.\n  syntax:\n    content: public virtual string RequiredTypeIdentity { get; }\n    return:\n      type: System.String\n      description: A string that is generated by calling the <xref href=\"System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\"></xref> method on the type that this import expects. If the value is `null`, this import does not expect a particular type.\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString\n  commentId: M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString\n  id: ToString\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ContractBasedImportDefinition.ToString()\n  fullName: ContractBasedImportDefinition.ToString()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Primitives\n  summary: Returns the string representation of this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this <xref href=\"System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\"></xref> object.\n  overload: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: ContractBasedImportDefinition()\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition()\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition()\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy)\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy)\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,Type>>\n  nameWithType: IEnumerable<KeyValuePair<String,Type>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>)\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>)\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition(String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: Constraint\n  nameWithType: ContractBasedImportDefinition.Constraint\n  fullName: ContractBasedImportDefinition.Constraint\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n  name: ExportDefinition\n  nameWithType: ExportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition\n- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ExportDefinition,Boolean>>\n  nameWithType: Expression<Func<ExportDefinition,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n    name: ExportDefinition\n    nameWithType: ExportDefinition\n    fullName: System.ComponentModel.Composition.Primitives.ExportDefinition\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: IsConstraintSatisfiedBy(ExportDefinition)\n  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n  fullName: ContractBasedImportDefinition.IsConstraintSatisfiedBy(ExportDefinition)\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy\n  fullName: ContractBasedImportDefinition.RequiredCreationPolicy\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: RequiredMetadata\n  nameWithType: ContractBasedImportDefinition.RequiredMetadata\n  fullName: ContractBasedImportDefinition.RequiredMetadata\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: RequiredTypeIdentity\n  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity\n  fullName: ContractBasedImportDefinition.RequiredTypeIdentity\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: ToString()\n  nameWithType: ContractBasedImportDefinition.ToString()\n  fullName: ContractBasedImportDefinition.ToString()\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: ContractBasedImportDefinition\n  nameWithType: ContractBasedImportDefinition.ContractBasedImportDefinition\n  fullName: ContractBasedImportDefinition.ContractBasedImportDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: Constraint\n  nameWithType: ContractBasedImportDefinition.Constraint\n  fullName: ContractBasedImportDefinition.Constraint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: IsConstraintSatisfiedBy\n  nameWithType: ContractBasedImportDefinition.IsConstraintSatisfiedBy\n  fullName: ContractBasedImportDefinition.IsConstraintSatisfiedBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: RequiredCreationPolicy\n  nameWithType: ContractBasedImportDefinition.RequiredCreationPolicy\n  fullName: ContractBasedImportDefinition.RequiredCreationPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: RequiredMetadata\n  nameWithType: ContractBasedImportDefinition.RequiredMetadata\n  fullName: ContractBasedImportDefinition.RequiredMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: RequiredTypeIdentity\n  nameWithType: ContractBasedImportDefinition.RequiredTypeIdentity\n  fullName: ContractBasedImportDefinition.RequiredTypeIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString*\n  parent: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  isExternal: false\n  name: ToString\n  nameWithType: ContractBasedImportDefinition.ToString\n  fullName: ContractBasedImportDefinition.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Primitives/ContractBasedImportDefinition.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: Cardinality\n  nameWithType: ImportDefinition.Cardinality\n  fullName: ImportDefinition.Cardinality\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: ContractName\n  nameWithType: ImportDefinition.ContractName\n  fullName: ImportDefinition.ContractName\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: IsPrerequisite\n  nameWithType: ImportDefinition.IsPrerequisite\n  fullName: ImportDefinition.IsPrerequisite\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: IsRecomposable\n  nameWithType: ImportDefinition.IsRecomposable\n  fullName: ImportDefinition.IsRecomposable\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata\n  parent: System.ComponentModel.Composition.Primitives.ImportDefinition\n  isExternal: false\n  name: Metadata\n  nameWithType: ImportDefinition.Metadata\n  fullName: ImportDefinition.Metadata\n"}