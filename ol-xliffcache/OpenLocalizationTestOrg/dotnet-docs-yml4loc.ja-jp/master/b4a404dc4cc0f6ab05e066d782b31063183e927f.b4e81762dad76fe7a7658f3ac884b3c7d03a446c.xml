{"nodes":[{"content":"An observer that implements ASP.NET's default reaction to <xref href=\"System.Web.Hosting.RecycleLimitInfo\"></xref> events raised by the application's recycle limit monitor.","nodes":[{"pos":[0,172],"content":"An observer that implements ASP.NET's default reaction to <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.RecycleLimitInfo\"&gt;&lt;/xref&gt;</ph> events raised by the application's recycle limit monitor.","source":"An observer that implements ASP.NET's default reaction to <xref href=\"System.Web.Hosting.RecycleLimitInfo\"></xref> events raised by the application's recycle limit monitor."}],"pos":[665,838],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.RecycleLimitObserver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class."}],"pos":[2055,2157],"yaml":true},{"content":"Has no effect in the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class.","nodes":[{"pos":[0,88],"content":"Has no effect in the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.RecycleLimitObserver\"&gt;&lt;/xref&gt;</ph> class.","source":"Has no effect in the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class."}],"pos":[3001,3090],"yaml":true},{"content":"Has no effect in the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class.","nodes":[{"pos":[0,88],"content":"Has no effect in the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.RecycleLimitObserver\"&gt;&lt;/xref&gt;</ph> class.","source":"Has no effect in the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class."}],"pos":[3993,4082],"yaml":true},{"content":"Provides the observer with new data.","nodes":[{"pos":[0,36],"content":"Provides the observer with new data.","nodes":[{"content":"Provides the observer with new data.","pos":[0,36]}]}],"pos":[5128,5165],"yaml":true},{"content":"The recycle limit information.","nodes":[{"pos":[0,30],"content":"The recycle limit information.","nodes":[{"content":"The recycle limit information.","pos":[0,30]}]}],"pos":[5373,5404],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.RecycleLimitObserver\n  commentId: T:System.Web.Hosting.RecycleLimitObserver\n  id: RecycleLimitObserver\n  children:\n  - System.Web.Hosting.RecycleLimitObserver.#ctor\n  - System.Web.Hosting.RecycleLimitObserver.OnCompleted\n  - System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)\n  - System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)\n  langs:\n  - csharp\n  name: RecycleLimitObserver\n  nameWithType: RecycleLimitObserver\n  fullName: System.Web.Hosting.RecycleLimitObserver\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: An observer that implements ASP.NET's default reaction to <xref href=\"System.Web.Hosting.RecycleLimitInfo\"></xref> events raised by the application's recycle limit monitor.\n  syntax:\n    content: 'public class RecycleLimitObserver : IObserver<System.Web.Hosting.RecycleLimitInfo>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IObserver{System.Web.Hosting.RecycleLimitInfo}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitObserver.#ctor\n  commentId: M:System.Web.Hosting.RecycleLimitObserver.#ctor\n  id: '#ctor'\n  parent: System.Web.Hosting.RecycleLimitObserver\n  langs:\n  - csharp\n  name: RecycleLimitObserver()\n  nameWithType: RecycleLimitObserver.RecycleLimitObserver()\n  fullName: RecycleLimitObserver.RecycleLimitObserver()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class.\n  syntax:\n    content: public RecycleLimitObserver ();\n    parameters: []\n  overload: System.Web.Hosting.RecycleLimitObserver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitObserver.OnCompleted\n  commentId: M:System.Web.Hosting.RecycleLimitObserver.OnCompleted\n  id: OnCompleted\n  parent: System.Web.Hosting.RecycleLimitObserver\n  langs:\n  - csharp\n  name: OnCompleted()\n  nameWithType: RecycleLimitObserver.OnCompleted()\n  fullName: RecycleLimitObserver.OnCompleted()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Has no effect in the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class.\n  syntax:\n    content: public void OnCompleted ();\n    parameters: []\n  overload: System.Web.Hosting.RecycleLimitObserver.OnCompleted*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)\n  commentId: M:System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)\n  id: OnError(System.Exception)\n  parent: System.Web.Hosting.RecycleLimitObserver\n  langs:\n  - csharp\n  name: OnError(Exception)\n  nameWithType: RecycleLimitObserver.OnError(Exception)\n  fullName: RecycleLimitObserver.OnError(Exception)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Has no effect in the <xref href=\"System.Web.Hosting.RecycleLimitObserver\"></xref> class.\n  syntax:\n    content: public void OnError (Exception error);\n    parameters:\n    - id: error\n      type: System.Exception\n      description: ''\n  overload: System.Web.Hosting.RecycleLimitObserver.OnError*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)\n  commentId: M:System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)\n  id: OnNext(System.Web.Hosting.RecycleLimitInfo)\n  parent: System.Web.Hosting.RecycleLimitObserver\n  langs:\n  - csharp\n  name: OnNext(RecycleLimitInfo)\n  nameWithType: RecycleLimitObserver.OnNext(RecycleLimitInfo)\n  fullName: RecycleLimitObserver.OnNext(RecycleLimitInfo)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Provides the observer with new data.\n  syntax:\n    content: public void OnNext (System.Web.Hosting.RecycleLimitInfo recycleLimitInfo);\n    parameters:\n    - id: recycleLimitInfo\n      type: System.Web.Hosting.RecycleLimitInfo\n      description: The recycle limit information.\n  overload: System.Web.Hosting.RecycleLimitObserver.OnNext*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.RecycleLimitObserver.#ctor\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: RecycleLimitObserver()\n  nameWithType: RecycleLimitObserver.RecycleLimitObserver()\n  fullName: RecycleLimitObserver.RecycleLimitObserver()\n- uid: System.Web.Hosting.RecycleLimitObserver.OnCompleted\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: OnCompleted()\n  nameWithType: RecycleLimitObserver.OnCompleted()\n  fullName: RecycleLimitObserver.OnCompleted()\n- uid: System.Web.Hosting.RecycleLimitObserver.OnError(System.Exception)\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: OnError(Exception)\n  nameWithType: RecycleLimitObserver.OnError(Exception)\n  fullName: RecycleLimitObserver.OnError(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.Hosting.RecycleLimitObserver.OnNext(System.Web.Hosting.RecycleLimitInfo)\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: OnNext(RecycleLimitInfo)\n  nameWithType: RecycleLimitObserver.OnNext(RecycleLimitInfo)\n  fullName: RecycleLimitObserver.OnNext(RecycleLimitInfo)\n- uid: System.Web.Hosting.RecycleLimitInfo\n  parent: System.Web.Hosting\n  isExternal: false\n  name: RecycleLimitInfo\n  nameWithType: RecycleLimitInfo\n  fullName: System.Web.Hosting.RecycleLimitInfo\n- uid: System.Web.Hosting.RecycleLimitObserver.#ctor*\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: RecycleLimitObserver\n  nameWithType: RecycleLimitObserver.RecycleLimitObserver\n  fullName: RecycleLimitObserver.RecycleLimitObserver\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n- uid: System.Web.Hosting.RecycleLimitObserver.OnCompleted*\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: OnCompleted\n  nameWithType: RecycleLimitObserver.OnCompleted\n  fullName: RecycleLimitObserver.OnCompleted\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n- uid: System.Web.Hosting.RecycleLimitObserver.OnError*\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: OnError\n  nameWithType: RecycleLimitObserver.OnError\n  fullName: RecycleLimitObserver.OnError\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n- uid: System.Web.Hosting.RecycleLimitObserver.OnNext*\n  parent: System.Web.Hosting.RecycleLimitObserver\n  isExternal: false\n  name: OnNext\n  nameWithType: RecycleLimitObserver.OnNext\n  fullName: RecycleLimitObserver.OnNext\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/RecycleLimitObserver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IObserver`1\n  name: IObserver<T>\n  nameWithType: IObserver<T>\n  fullName: System.IObserver<T>\n- uid: System.IObserver{System.Web.Hosting.RecycleLimitInfo}\n  parent: System\n  isExternal: false\n  name: IObserver<RecycleLimitInfo>\n  nameWithType: IObserver<RecycleLimitInfo>\n  fullName: System.IObserver<System.Web.Hosting.RecycleLimitInfo>\n  spec.csharp:\n  - uid: System.IObserver`1\n    name: IObserver\n    nameWithType: IObserver\n    fullName: System.IObserver\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.Hosting.RecycleLimitInfo\n    name: RecycleLimitInfo\n    nameWithType: RecycleLimitInfo\n    fullName: System.Web.Hosting.RecycleLimitInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}