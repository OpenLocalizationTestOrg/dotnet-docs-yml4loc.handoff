{"nodes":[{"content":"Represents a Discretionary Access Control List (DACL).","nodes":[{"pos":[0,54],"content":"Represents a Discretionary Access Control List (DACL).","nodes":[{"content":"Represents a Discretionary Access Control List (DACL).","pos":[0,54]}]}],"pos":[4014,4069],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values."}],"pos":[7645,7780],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object is a container.","source":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container."}],"pos":[7956,8067],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object is a directory object Access Control List (ACL).","source":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL)."}],"pos":[8128,8272],"yaml":true},{"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","nodes":[{"pos":[0,178],"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","nodes":[{"content":"The number of Access Control Entries (ACEs) this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object can contain.","pos":[0,136],"source":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain."},{"content":"This number is to be used only as a hint.","pos":[137,178]}]}],"pos":[8335,8514],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.","nodes":[{"pos":[0,218],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> class with the specified values from the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object."}],"pos":[10118,10337],"yaml":true},{"content":"The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned.","nodes":[{"pos":[0,103],"content":"The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned.","nodes":[{"content":"The Access Control Entries (ACEs) in the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.RawAcl&gt;</ph> object are cloned.","pos":[0,103],"source":"The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned."}]}],"pos":[10348,10452],"yaml":true,"extradata":"MT"},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object is a container.","source":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container."}],"pos":[10659,10770],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object is a directory object Access Control List (ACL).","source":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL)."}],"pos":[10831,10975],"yaml":true},{"content":"The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Specify `null` to create an empty ACL.","nodes":[{"pos":[0,206],"content":"The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Specify `null` to create an empty ACL.","nodes":[{"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.RawAcl\"&gt;&lt;/xref&gt;</ph> object for the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,167],"source":"The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Specify <ph id=\"ph1\">`null`</ph> to create an empty ACL.","pos":[168,206],"source":" Specify `null` to create an empty ACL."}]}],"pos":[11060,11267],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values."}],"pos":[12850,12985],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object is a container.","source":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container."}],"pos":[13176,13287],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object is a directory object Access Control List (ACL).","source":"`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL)."}],"pos":[13348,13492],"yaml":true},{"content":"The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,105],"content":"The revision level of the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[13554,13660],"yaml":true},{"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","nodes":[{"pos":[0,178],"content":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.","nodes":[{"content":"The number of Access Control Entries (ACEs) this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object can contain.","pos":[0,136],"source":"The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain."},{"content":"This number is to be used only as a hint.","pos":[137,178]}]}],"pos":[13723,13902],"yaml":true},{"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,153],"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[15802,15956],"yaml":true},{"content":"The type of access control (allow or deny) to add.","nodes":[{"pos":[0,50],"content":"The type of access control (allow or deny) to add.","nodes":[{"content":"The type of access control (allow or deny) to add.","pos":[0,50]}]}],"pos":[16282,16333],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to add an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE."}],"pos":[16423,16518],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for the new access.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;&lt;/xref&gt;</ph> for the new access.","source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for the new access."}],"pos":[16611,16703],"yaml":true},{"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,153],"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[18728,18882],"yaml":true},{"content":"This method can cause existing ACEs to be merged.","nodes":[{"pos":[0,49],"content":"This method can cause existing ACEs to be merged.","nodes":[{"content":"This method can cause existing ACEs to be merged.","pos":[0,49]}]}],"pos":[18893,18943],"yaml":true,"extradata":"MT"},{"content":"The type of access control (allow or deny) to add.","nodes":[{"pos":[0,50],"content":"The type of access control (allow or deny) to add.","nodes":[{"content":"The type of access control (allow or deny) to add.","pos":[0,50]}]}],"pos":[19362,19413],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to add an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE."}],"pos":[19503,19598],"yaml":true},{"content":"The access rule for the new ACE.","nodes":[{"pos":[0,32],"content":"The access rule for the new ACE.","nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]}],"pos":[19663,19696],"yaml":true},{"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"pos":[0,61],"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]}],"pos":[19801,19863],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"pos":[0,74],"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]}],"pos":[19968,20043],"yaml":true},{"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.","nodes":[{"pos":[0,296],"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.","nodes":[{"content":"Adds an Access Control Entry (ACE) with the specified settings to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,153],"source":"Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.","pos":[154,296]}]}],"pos":[22493,22790],"yaml":true},{"content":"This method can cause existing ACEs to be merged.","nodes":[{"pos":[0,49],"content":"This method can cause existing ACEs to be merged.","nodes":[{"content":"This method can cause existing ACEs to be merged.","pos":[0,49]}]}],"pos":[22801,22851],"yaml":true,"extradata":"MT"},{"content":"The type of access control (allow or deny) to add.","nodes":[{"pos":[0,50],"content":"The type of access control (allow or deny) to add.","nodes":[{"content":"The type of access control (allow or deny) to add.","pos":[0,50]}]}],"pos":[23371,23422],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to add an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE."}],"pos":[23512,23607],"yaml":true},{"content":"The access rule for the new ACE.","nodes":[{"pos":[0,32],"content":"The access rule for the new ACE.","nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]}],"pos":[23672,23705],"yaml":true},{"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"pos":[0,61],"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]}],"pos":[23810,23872],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"pos":[0,74],"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]}],"pos":[23977,24052],"yaml":true},{"content":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.","nodes":[{"pos":[0,124],"content":"Flags that specify if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritedObjectType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters contain non-<ph id=\"ph3\">`null`</ph> values.","source":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values."}],"pos":[24150,24275],"yaml":true},{"content":"The identity of the class of objects to which the new ACE applies.","nodes":[{"pos":[0,66],"content":"The identity of the class of objects to which the new ACE applies.","nodes":[{"content":"The identity of the class of objects to which the new ACE applies.","pos":[0,66]}]}],"pos":[24339,24406],"yaml":true},{"content":"The identity of the class of child objects which can inherit the new ACE.","nodes":[{"pos":[0,73],"content":"The identity of the class of child objects which can inherit the new ACE.","nodes":[{"content":"The identity of the class of child objects which can inherit the new ACE.","pos":[0,73]}]}],"pos":[24479,24553],"yaml":true},{"content":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,134],"content":"Removes the specified access control rule from the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[26475,26610],"yaml":true},{"content":"The type of access control (allow or deny) to remove.","nodes":[{"pos":[0,53],"content":"The type of access control (allow or deny) to remove.","nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]}],"pos":[26939,26993],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to remove an access control rule.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule."}],"pos":[27083,27197],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;&lt;/xref&gt;</ph> for which to remove access.","source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access."}],"pos":[27290,27390],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref>.","nodes":[{"pos":[0,44],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>."}],"pos":[27448,27493],"yaml":true},{"content":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,134],"content":"Removes the specified access control rule from the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[29539,29674],"yaml":true},{"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","nodes":[{"pos":[0,134],"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","pos":[0,134]}]}],"pos":[29685,29820],"yaml":true,"extradata":"MT"},{"content":"The type of access control (allow or deny) to remove.","nodes":[{"pos":[0,53],"content":"The type of access control (allow or deny) to remove.","nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]}],"pos":[30242,30296],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to remove an access control rule.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule."}],"pos":[30386,30500],"yaml":true},{"content":"The access mask for the rule to be removed.","nodes":[{"pos":[0,43],"content":"The access mask for the rule to be removed.","nodes":[{"content":"The access mask for the rule to be removed.","pos":[0,43]}]}],"pos":[30565,30609],"yaml":true},{"content":"Flags that specify the inheritance properties of the rule to be removed.","nodes":[{"pos":[0,72],"content":"Flags that specify the inheritance properties of the rule to be removed.","nodes":[{"content":"Flags that specify the inheritance properties of the rule to be removed.","pos":[0,72]}]}],"pos":[30714,30787],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the rule to be removed.","nodes":[{"pos":[0,85],"content":"Flags that specify the inheritance propagation properties for the rule to be removed.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the rule to be removed.","pos":[0,85]}]}],"pos":[30892,30978],"yaml":true},{"content":"`true` if this method successfully removes the specified access; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if this method successfully removes the specified access; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method successfully removes the specified access; otherwise, `false`."}],"pos":[31036,31123],"yaml":true},{"content":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.","nodes":[{"pos":[0,261],"content":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.","nodes":[{"content":"Removes the specified access control rule from the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,134],"source":"Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.","pos":[135,261]}]}],"pos":[33594,33856],"yaml":true},{"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","nodes":[{"pos":[0,134],"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.","pos":[0,134]}]}],"pos":[33867,34002],"yaml":true,"extradata":"MT"},{"content":"The type of access control (allow or deny) to remove.","nodes":[{"pos":[0,53],"content":"The type of access control (allow or deny) to remove.","nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]}],"pos":[34525,34579],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to remove an access control rule.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule."}],"pos":[34669,34783],"yaml":true},{"content":"The access mask for the access control rule to be removed.","nodes":[{"pos":[0,58],"content":"The access mask for the access control rule to be removed.","nodes":[{"content":"The access mask for the access control rule to be removed.","pos":[0,58]}]}],"pos":[34848,34907],"yaml":true},{"content":"Flags that specify the inheritance properties of the access control rule to be removed.","nodes":[{"pos":[0,87],"content":"Flags that specify the inheritance properties of the access control rule to be removed.","nodes":[{"content":"Flags that specify the inheritance properties of the access control rule to be removed.","pos":[0,87]}]}],"pos":[35012,35100],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the access control rule to be removed.","nodes":[{"pos":[0,100],"content":"Flags that specify the inheritance propagation properties for the access control rule to be removed.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the access control rule to be removed.","pos":[0,100]}]}],"pos":[35205,35306],"yaml":true},{"content":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.","nodes":[{"pos":[0,124],"content":"Flags that specify if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritedObjectType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters contain non-<ph id=\"ph3\">`null`</ph> values.","source":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values."}],"pos":[35404,35529],"yaml":true},{"content":"The identity of the class of objects to which the removed access control rule applies.","nodes":[{"pos":[0,86],"content":"The identity of the class of objects to which the removed access control rule applies.","nodes":[{"content":"The identity of the class of objects to which the removed access control rule applies.","pos":[0,86]}]}],"pos":[35593,35680],"yaml":true},{"content":"The identity of the class of child objects which can inherit the removed access control rule.","nodes":[{"pos":[0,93],"content":"The identity of the class of child objects which can inherit the removed access control rule.","nodes":[{"content":"The identity of the class of child objects which can inherit the removed access control rule.","pos":[0,93]}]}],"pos":[35753,35847],"yaml":true},{"content":"`true` if this method successfully removes the specified access; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if this method successfully removes the specified access; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this method successfully removes the specified access; otherwise, `false`."}],"pos":[35905,35992],"yaml":true},{"content":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,141],"content":"Removes the specified Access Control Entry (ACE) from the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[37965,38107],"yaml":true},{"content":"The type of access control (allow or deny) to remove.","nodes":[{"pos":[0,53],"content":"The type of access control (allow or deny) to remove.","nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]}],"pos":[38444,38498],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to remove an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE."}],"pos":[38588,38686],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;&lt;/xref&gt;</ph> for which to remove access.","source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access."}],"pos":[38779,38879],"yaml":true},{"content":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.","nodes":[{"pos":[0,141],"content":"Removes the specified Access Control Entry (ACE) from the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."}],"pos":[40981,41123],"yaml":true},{"content":"The type of access control (allow or deny) to remove.","nodes":[{"pos":[0,53],"content":"The type of access control (allow or deny) to remove.","nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]}],"pos":[41553,41607],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to remove an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE."}],"pos":[41697,41795],"yaml":true},{"content":"The access mask for the ACE to be removed.","nodes":[{"pos":[0,42],"content":"The access mask for the ACE to be removed.","nodes":[{"content":"The access mask for the ACE to be removed.","pos":[0,42]}]}],"pos":[41860,41903],"yaml":true},{"content":"Flags that specify the inheritance properties of the ACE to be removed.","nodes":[{"pos":[0,71],"content":"Flags that specify the inheritance properties of the ACE to be removed.","nodes":[{"content":"Flags that specify the inheritance properties of the ACE to be removed.","pos":[0,71]}]}],"pos":[42008,42080],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","nodes":[{"pos":[0,84],"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","pos":[0,84]}]}],"pos":[42185,42270],"yaml":true},{"content":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.","nodes":[{"pos":[0,294],"content":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.","nodes":[{"content":"Removes the specified Access Control Entry (ACE) from the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.DiscretionaryAcl\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,141],"source":"Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object."},{"content":"Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.","pos":[142,294]}]}],"pos":[44797,45092],"yaml":true},{"content":"The type of access control (allow or deny) to remove.","nodes":[{"pos":[0,53],"content":"The type of access control (allow or deny) to remove.","nodes":[{"content":"The type of access control (allow or deny) to remove.","pos":[0,53]}]}],"pos":[45623,45677],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to remove an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE."}],"pos":[45767,45865],"yaml":true},{"content":"The access mask for the ACE to be removed.","nodes":[{"pos":[0,42],"content":"The access mask for the ACE to be removed.","nodes":[{"content":"The access mask for the ACE to be removed.","pos":[0,42]}]}],"pos":[45930,45973],"yaml":true},{"content":"Flags that specify the inheritance properties of the ACE to be removed.","nodes":[{"pos":[0,71],"content":"Flags that specify the inheritance properties of the ACE to be removed.","nodes":[{"content":"Flags that specify the inheritance properties of the ACE to be removed.","pos":[0,71]}]}],"pos":[46078,46150],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","nodes":[{"pos":[0,84],"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the ACE to be removed.","pos":[0,84]}]}],"pos":[46255,46340],"yaml":true},{"content":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.","nodes":[{"pos":[0,124],"content":"Flags that specify if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritedObjectType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters contain non-<ph id=\"ph3\">`null`</ph> values.","source":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values."}],"pos":[46438,46563],"yaml":true},{"content":"The identity of the class of objects to which the removed ACE applies.","nodes":[{"pos":[0,70],"content":"The identity of the class of objects to which the removed ACE applies.","nodes":[{"content":"The identity of the class of objects to which the removed ACE applies.","pos":[0,70]}]}],"pos":[46627,46698],"yaml":true},{"content":"The identity of the class of child objects which can inherit the removed ACE.","nodes":[{"pos":[0,77],"content":"The identity of the class of child objects which can inherit the removed ACE.","nodes":[{"content":"The identity of the class of child objects which can inherit the removed ACE.","pos":[0,77]}]}],"pos":[46771,46849],"yaml":true},{"content":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,125],"content":"Sets the specified access control for the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}],"pos":[48764,48890],"yaml":true},{"content":"The type of access control (allow or deny) to set.","nodes":[{"pos":[0,50],"content":"The type of access control (allow or deny) to set.","nodes":[{"content":"The type of access control (allow or deny) to set.","pos":[0,50]}]}],"pos":[49216,49267],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to set an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE."}],"pos":[49357,49452],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to set access.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectAccessRule\"&gt;&lt;/xref&gt;</ph> for which to set access.","source":"The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to set access."}],"pos":[49545,49642],"yaml":true},{"content":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,125],"content":"Sets the specified access control for the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}],"pos":[51667,51793],"yaml":true},{"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).","nodes":[{"pos":[0,199],"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).","nodes":[{"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <ph id=\"ph1\">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> object and the specified access qualifier (allow or deny).","pos":[0,199],"source":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny)."}]}],"pos":[51804,52004],"yaml":true,"extradata":"MT"},{"content":"The type of access control (allow or deny) to set.","nodes":[{"pos":[0,50],"content":"The type of access control (allow or deny) to set.","nodes":[{"content":"The type of access control (allow or deny) to set.","pos":[0,50]}]}],"pos":[52423,52474],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to set an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE."}],"pos":[52564,52659],"yaml":true},{"content":"The access rule for the new ACE.","nodes":[{"pos":[0,32],"content":"The access rule for the new ACE.","nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]}],"pos":[52724,52757],"yaml":true},{"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"pos":[0,61],"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]}],"pos":[52862,52924],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"pos":[0,74],"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]}],"pos":[53029,53104],"yaml":true},{"content":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,125],"content":"Sets the specified access control for the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}],"pos":[55554,55680],"yaml":true},{"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).","nodes":[{"pos":[0,199],"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).","nodes":[{"content":"This method removes all existing Access Control Entries (ACEs) that match both specified <ph id=\"ph1\">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> object and the specified access qualifier (allow or deny).","pos":[0,199],"source":"This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny)."}]}],"pos":[55691,55891],"yaml":true,"extradata":"MT"},{"content":"The type of access control (allow or deny) to set.","nodes":[{"pos":[0,50],"content":"The type of access control (allow or deny) to set.","nodes":[{"content":"The type of access control (allow or deny) to set.","pos":[0,50]}]}],"pos":[56411,56462],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> for which to set an ACE.","source":"The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE."}],"pos":[56552,56647],"yaml":true},{"content":"The access rule for the new ACE.","nodes":[{"pos":[0,32],"content":"The access rule for the new ACE.","nodes":[{"content":"The access rule for the new ACE.","pos":[0,32]}]}],"pos":[56712,56745],"yaml":true},{"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"pos":[0,61],"content":"Flags that specify the inheritance properties of the new ACE.","nodes":[{"content":"Flags that specify the inheritance properties of the new ACE.","pos":[0,61]}]}],"pos":[56850,56912],"yaml":true},{"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"pos":[0,74],"content":"Flags that specify the inheritance propagation properties for the new ACE.","nodes":[{"content":"Flags that specify the inheritance propagation properties for the new ACE.","pos":[0,74]}]}],"pos":[57017,57092],"yaml":true},{"content":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.","nodes":[{"pos":[0,124],"content":"Flags that specify if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritedObjectType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters contain non-<ph id=\"ph3\">`null`</ph> values.","source":"Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values."}],"pos":[57190,57315],"yaml":true},{"content":"The identity of the class of objects to which the new ACE applies.","nodes":[{"pos":[0,66],"content":"The identity of the class of objects to which the new ACE applies.","nodes":[{"content":"The identity of the class of objects to which the new ACE applies.","pos":[0,66]}]}],"pos":[57379,57446],"yaml":true},{"content":"The identity of the class of child objects which can inherit the new ACE.","nodes":[{"pos":[0,73],"content":"The identity of the class of child objects which can inherit the new ACE.","nodes":[{"content":"The identity of the class of child objects which can inherit the new ACE.","pos":[0,73]}]}],"pos":[57519,57593],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.DiscretionaryAcl\n  commentId: T:System.Security.AccessControl.DiscretionaryAcl\n  id: DiscretionaryAcl\n  children:\n  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  - System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  langs:\n  - csharp\n  name: DiscretionaryAcl\n  nameWithType: DiscretionaryAcl\n  fullName: System.Security.AccessControl.DiscretionaryAcl\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents a Discretionary Access Control List (DACL).\n  syntax:\n    content: 'public sealed class DiscretionaryAcl : System.Security.AccessControl.CommonAcl'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAcl\n  - System.Security.AccessControl.CommonAcl\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.CommonAcl.BinaryLength\n  - System.Security.AccessControl.CommonAcl.Count\n  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.CommonAcl.IsCanonical\n  - System.Security.AccessControl.CommonAcl.IsContainer\n  - System.Security.AccessControl.CommonAcl.IsDS\n  - System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  - System.Security.AccessControl.CommonAcl.Revision\n  - System.Security.AccessControl.GenericAcl.AclRevision\n  - System.Security.AccessControl.GenericAcl.AclRevisionDS\n  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  - System.Security.AccessControl.GenericAcl.GetEnumerator\n  - System.Security.AccessControl.GenericAcl.IsSynchronized\n  - System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  - System.Security.AccessControl.GenericAcl.SyncRoot\n  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: DiscretionaryAcl(Boolean, Boolean, Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Int32)\n  fullName: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Int32)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values.\n  syntax:\n    content: public DiscretionaryAcl (bool isContainer, bool isDS, int capacity);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.'\n    - id: isDS\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).'\n    - id: capacity\n      type: System.Int32\n      description: The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.\n  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: DiscretionaryAcl(Boolean, Boolean, RawAcl)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, RawAcl)\n  fullName: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, RawAcl)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object.\n  remarks: The Access Control Entries (ACEs) in the <xref:System.Security.AccessControl.RawAcl> object are cloned.\n  syntax:\n    content: public DiscretionaryAcl (bool isContainer, bool isDS, System.Security.AccessControl.RawAcl rawAcl);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.'\n    - id: isDS\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).'\n    - id: rawAcl\n      type: System.Security.AccessControl.RawAcl\n      description: The underlying <xref href=\"System.Security.AccessControl.RawAcl\"></xref> object for the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Specify `null` to create an empty ACL.\n  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: DiscretionaryAcl(Boolean, Boolean, Byte, Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Byte, Int32)\n  fullName: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Byte, Int32)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> class with the specified values.\n  syntax:\n    content: public DiscretionaryAcl (bool isContainer, bool isDS, byte revision, int capacity);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a container.'\n    - id: isDS\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object is a directory object Access Control List (ACL).'\n    - id: revision\n      type: System.Byte\n      description: The revision level of the new <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n    - id: capacity\n      type: System.Int32\n      description: The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object can contain. This number is to be used only as a hint.\n  overload: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to add.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for the new access.\n  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  remarks: This method can cause existing ACEs to be merged.\n  syntax:\n    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to add.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds an Access Control Entry (ACE) with the specified settings to the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.\n  remarks: This method can cause existing ACEs to be merged.\n  syntax:\n    content: public void AddAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to add.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to add an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new ACE applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access.\n    return:\n      type: System.Boolean\n      description: Returns <xref href=\"System.Boolean\"></xref>.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  remarks: Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.\n  syntax:\n    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the rule to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the rule to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the rule to be removed.\n    return:\n      type: System.Boolean\n      description: '`true` if this method successfully removes the specified access; otherwise, `false`.'\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified access control rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.\n  remarks: Access removal is accomplished by using a complex algorithm that might add Access Control Entries (ACEs) in addition to removing them.\n  syntax:\n    content: public bool RemoveAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an access control rule.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the access control rule to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the access control rule to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the access control rule to be removed.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the removed access control rule applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the removed access control rule.\n    return:\n      type: System.Boolean\n      description: '`true` if this method successfully removes the specified access; otherwise, `false`.'\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to remove access.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object.\n  syntax:\n    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the ACE to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the ACE to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the ACE to be removed.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes the specified Access Control Entry (ACE) from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.\n  syntax:\n    content: public void RemoveAccessSpecific (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to remove.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to remove an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask for the ACE to be removed.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the ACE to be removed.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the ACE to be removed.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the removed ACE applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the removed ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAccessRule rule);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to set.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: The <xref href=\"System.Security.AccessControl.ObjectAccessRule\"></xref> for which to set access.\n  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  remarks: This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).\n  syntax:\n    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to set.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  id: SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  langs:\n  - csharp\n  name: SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified access control for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  remarks: This method removes all existing Access Control Entries (ACEs) that match both specified <xref:System.Security.Principal.SecurityIdentifier> object and the specified access qualifier (allow or deny).\n  syntax:\n    content: public void SetAccess (System.Security.AccessControl.AccessControlType accessType, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType);\n    parameters:\n    - id: accessType\n      type: System.Security.AccessControl.AccessControlType\n      description: The type of access control (allow or deny) to set.\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: The <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> for which to set an ACE.\n    - id: accessMask\n      type: System.Int32\n      description: The access rule for the new ACE.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of the new ACE.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties for the new ACE.\n    - id: objectFlags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Flags that specify if the <code>objectType</code> and <code>inheritedObjectType</code> parameters contain non-`null` values.\n    - id: objectType\n      type: System.Guid\n      description: The identity of the class of objects to which the new ACE applies.\n    - id: inheritedObjectType\n      type: System.Guid\n      description: The identity of the class of child objects which can inherit the new ACE.\n  overload: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.CommonAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonAcl\n  nameWithType: CommonAcl\n  fullName: System.Security.AccessControl.CommonAcl\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl(Boolean, Boolean, Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Int32)\n  fullName: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl(Boolean, Boolean, RawAcl)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, RawAcl)\n  fullName: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, RawAcl)\n- uid: System.Security.AccessControl.RawAcl\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: RawAcl\n  nameWithType: RawAcl\n  fullName: System.Security.AccessControl.RawAcl\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl(Boolean, Boolean, Byte, Int32)\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Byte, Int32)\n  fullName: DiscretionaryAcl.DiscretionaryAcl(Boolean, Boolean, Byte, Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.ObjectAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAccessRule\n  nameWithType: ObjectAccessRule\n  fullName: System.Security.AccessControl.ObjectAccessRule\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.ObjectAceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAceFlags\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n  fullName: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule)\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n  fullName: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  nameWithType: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n  fullName: DiscretionaryAcl.SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccess*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccess\n  nameWithType: DiscretionaryAcl.RemoveAccess\n  fullName: DiscretionaryAcl.RemoveAccess\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n- uid: System.Security.AccessControl.DiscretionaryAcl.SetAccess*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: SetAccess\n  nameWithType: DiscretionaryAcl.SetAccess\n  fullName: DiscretionaryAcl.SetAccess\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n- uid: System.Security.AccessControl.DiscretionaryAcl.#ctor*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: DiscretionaryAcl\n  nameWithType: DiscretionaryAcl.DiscretionaryAcl\n  fullName: DiscretionaryAcl.DiscretionaryAcl\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n- uid: System.Security.AccessControl.DiscretionaryAcl.AddAccess*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: AddAccess\n  nameWithType: DiscretionaryAcl.AddAccess\n  fullName: DiscretionaryAcl.AddAccess\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n- uid: System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific*\n  parent: System.Security.AccessControl.DiscretionaryAcl\n  isExternal: false\n  name: RemoveAccessSpecific\n  nameWithType: DiscretionaryAcl.RemoveAccessSpecific\n  fullName: DiscretionaryAcl.RemoveAccessSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/DiscretionaryAcl.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.GenericAcl.AclRevision\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevision\n  nameWithType: GenericAcl.AclRevision\n  fullName: GenericAcl.AclRevision\n- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevisionDS\n  nameWithType: GenericAcl.AclRevisionDS\n  fullName: GenericAcl.AclRevisionDS\n- uid: System.Security.AccessControl.CommonAcl.BinaryLength\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CommonAcl.BinaryLength\n  fullName: CommonAcl.BinaryLength\n- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: CopyTo(GenericAce[], Int32)\n  nameWithType: GenericAcl.CopyTo(GenericAce[], Int32)\n  fullName: GenericAcl.CopyTo(GenericAce[], Int32)\n- uid: System.Security.AccessControl.CommonAcl.Count\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: Count\n  nameWithType: CommonAcl.Count\n  fullName: CommonAcl.Count\n- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: CommonAcl.GetBinaryForm(Byte[], Int32)\n  fullName: CommonAcl.GetBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: GenericAcl.GetEnumerator()\n  fullName: GenericAcl.GetEnumerator()\n- uid: System.Security.AccessControl.GenericAcl.IsSynchronized\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: GenericAcl.IsSynchronized\n  fullName: GenericAcl.IsSynchronized\n- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: CommonAcl.Item(Int32)\n  fullName: CommonAcl.Item(Int32)\n- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: MaxBinaryLength\n  nameWithType: GenericAcl.MaxBinaryLength\n  fullName: GenericAcl.MaxBinaryLength\n- uid: System.Security.AccessControl.CommonAcl.Revision\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: Revision\n  nameWithType: CommonAcl.Revision\n  fullName: CommonAcl.Revision\n- uid: System.Security.AccessControl.GenericAcl.SyncRoot\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: SyncRoot\n  nameWithType: GenericAcl.SyncRoot\n  fullName: GenericAcl.SyncRoot\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: GenericAcl.ICollection.CopyTo(Array, Int32)\n  fullName: GenericAcl.ICollection.CopyTo(Array, Int32)\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: GenericAcl.IEnumerable.GetEnumerator()\n  fullName: GenericAcl.IEnumerable.GetEnumerator()\n- uid: System.Security.AccessControl.CommonAcl.IsCanonical\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: IsCanonical\n  nameWithType: CommonAcl.IsCanonical\n  fullName: CommonAcl.IsCanonical\n- uid: System.Security.AccessControl.CommonAcl.IsContainer\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: IsContainer\n  nameWithType: CommonAcl.IsContainer\n  fullName: CommonAcl.IsContainer\n- uid: System.Security.AccessControl.CommonAcl.IsDS\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: IsDS\n  nameWithType: CommonAcl.IsDS\n  fullName: CommonAcl.IsDS\n- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: Purge(SecurityIdentifier)\n  nameWithType: CommonAcl.Purge(SecurityIdentifier)\n  fullName: CommonAcl.Purge(SecurityIdentifier)\n- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces\n  parent: System.Security.AccessControl.CommonAcl\n  isExternal: false\n  name: RemoveInheritedAces()\n  nameWithType: CommonAcl.RemoveInheritedAces()\n  fullName: CommonAcl.RemoveInheritedAces()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}