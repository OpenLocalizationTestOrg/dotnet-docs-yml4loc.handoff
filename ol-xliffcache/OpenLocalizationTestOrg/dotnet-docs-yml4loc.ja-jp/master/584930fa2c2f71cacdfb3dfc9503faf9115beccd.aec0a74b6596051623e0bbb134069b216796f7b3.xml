{"nodes":[{"content":"Contains the properties of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> instance.","nodes":[{"pos":[0,97],"content":"Contains the properties of a <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.SearchResult\"&gt;&lt;/xref&gt;</ph> instance.","source":"Contains the properties of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> instance."}],"pos":[876,974],"yaml":true},{"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","nodes":[{"pos":[0,705],"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","nodes":[{"content":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.","pos":[0,705],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DirectoryServices.SearchResult&gt;</ph> instances are similar to <ph id=\"ph2\">&lt;xref:System.DirectoryServices.DirectoryEntry&gt;</ph> instances.","pos":[0,127],"source":"<xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances."},{"content":"The notable difference is that the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.DirectoryEntry&gt;</ph> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <ph id=\"ph2\">&lt;xref:System.DirectoryServices.SearchResult&gt;</ph> is already available in the <ph id=\"ph3\">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> that a <ph id=\"ph4\">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;</ph> query returns.","pos":[128,548],"source":" The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns."},{"content":"If you try to get a <ph id=\"ph1\">&lt;xref:System.DirectoryServices.SearchResult&gt;</ph> property that your query did not specify for retrieval, the property will not be available.","pos":[549,705],"source":" If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available."}]}]}],"pos":[985,1691],"yaml":true,"extradata":"MT"},{"content":"Determines whether the property that has the specified name belongs to this collection.","nodes":[{"pos":[0,87],"content":"Determines whether the property that has the specified name belongs to this collection.","nodes":[{"content":"Determines whether the property that has the specified name belongs to this collection.","pos":[0,87]}]}],"pos":[5549,5637],"yaml":true},{"content":"The name of the property to find.","nodes":[{"pos":[0,33],"content":"The name of the property to find.","nodes":[{"content":"The name of the property to find.","pos":[0,33]}]}],"pos":[5788,5822],"yaml":true},{"content":"The return value is `true` if the specified property belongs to this collection; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"The return value is <ph id=\"ph1\">`true`</ph> if the specified property belongs to this collection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"The return value is `true` if the specified property belongs to this collection; otherwise, `false`."}],"pos":[5880,5981],"yaml":true},{"content":"Copies the properties from this collection to an array, starting at a particular index of the array.","nodes":[{"pos":[0,100],"content":"Copies the properties from this collection to an array, starting at a particular index of the array.","nodes":[{"content":"Copies the properties from this collection to an array, starting at a particular index of the array.","pos":[0,100]}]}],"pos":[7397,7498],"yaml":true},{"content":"An array of type <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that receives this collection's properties.","nodes":[{"pos":[0,136],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"&gt;&lt;/xref&gt;</ph> that receives this collection's properties.","source":"An array of type <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that receives this collection's properties."}],"pos":[7737,7874],"yaml":true},{"content":"The zero-based array index at which to begin copying the properties.","nodes":[{"pos":[0,68],"content":"The zero-based array index at which to begin copying the properties.","nodes":[{"content":"The zero-based array index at which to begin copying the properties.","pos":[0,68]}]}],"pos":[7934,8003],"yaml":true},{"content":"Gets the property from this collection that has the specified name.","nodes":[{"pos":[0,67],"content":"Gets the property from this collection that has the specified name.","nodes":[{"content":"Gets the property from this collection that has the specified name.","pos":[0,67]}]}],"pos":[9143,9211],"yaml":true},{"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.  \n  \n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","nodes":[{"pos":[0,112],"content":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.","nodes":[{"content":"In C#, this property is the indexer for the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ResultPropertyValueCollection&gt;</ph> class.","pos":[0,112],"source":"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class."}]},{"pos":[119,405],"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","nodes":[{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.","pos":[0,286],"nodes":[{"content":"In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.","pos":[0,116]},{"content":"However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <ph id=\"ph1\">&lt;xref:System.String&gt;</ph>.","pos":[117,286],"source":" However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>."}]}]}],"pos":[9222,9632],"yaml":true,"extradata":"MT"},{"content":"The name of the property to retrieve.","nodes":[{"pos":[0,37],"content":"The name of the property to retrieve.","nodes":[{"content":"The name of the property to retrieve.","pos":[0,37]}]}],"pos":[9820,9858],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that has the specified name.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"&gt;&lt;/xref&gt;</ph> that has the specified name.","source":"A <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that has the specified name."}],"pos":[9956,10063],"yaml":true},{"content":"Gets the names of the properties in this collection.","nodes":[{"pos":[0,52],"content":"Gets the names of the properties in this collection.","nodes":[{"content":"Gets the names of the properties in this collection.","pos":[0,52]}]}],"pos":[11186,11239],"yaml":true},{"content":"An <xref href=\"System.Collections.ICollection\"></xref> that contains the names of the properties in this collection.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> that contains the names of the properties in this collection.","source":"An <xref href=\"System.Collections.ICollection\"></xref> that contains the names of the properties in this collection."}],"pos":[11397,11514],"yaml":true},{"content":"Gets the values of the properties in this collection.","nodes":[{"pos":[0,53],"content":"Gets the values of the properties in this collection.","nodes":[{"content":"Gets the values of the properties in this collection.","pos":[0,53]}]}],"pos":[12604,12658],"yaml":true},{"content":"An <xref href=\"System.Collections.ICollection\"></xref> that contains the values of the properties in this collection.","nodes":[{"pos":[0,117],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> that contains the values of the properties in this collection.","source":"An <xref href=\"System.Collections.ICollection\"></xref> that contains the values of the properties in this collection."}],"pos":[12809,12927],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ResultPropertyCollection\n  commentId: T:System.DirectoryServices.ResultPropertyCollection\n  id: ResultPropertyCollection\n  children:\n  - System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  - System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  - System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  - System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  - System.DirectoryServices.ResultPropertyCollection.Values\n  langs:\n  - csharp\n  name: ResultPropertyCollection\n  nameWithType: ResultPropertyCollection\n  fullName: System.DirectoryServices.ResultPropertyCollection\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Contains the properties of a <xref href=\"System.DirectoryServices.SearchResult\"></xref> instance.\n  remarks: <xref:System.DirectoryServices.SearchResult> instances are similar to <xref:System.DirectoryServices.DirectoryEntry> instances. The notable difference is that the <xref:System.DirectoryServices.DirectoryEntry> retrieves its information from the Active Directory Domain Services hierarchy each time a new object is accessed, whereas the data for the <xref:System.DirectoryServices.SearchResult> is already available in the <xref:System.DirectoryServices.SearchResultCollection> that a <xref:System.DirectoryServices.DirectorySearcher> query returns. If you try to get a <xref:System.DirectoryServices.SearchResult> property that your query did not specify for retrieval, the property will not be available.\n  syntax:\n    content: 'public class ResultPropertyCollection : System.Collections.DictionaryBase'\n  inheritance:\n  - System.Object\n  - System.Collections.DictionaryBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.DictionaryBase.Clear\n  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)\n  - System.Collections.DictionaryBase.Count\n  - System.Collections.DictionaryBase.Dictionary\n  - System.Collections.DictionaryBase.GetEnumerator\n  - System.Collections.DictionaryBase.InnerHashtable\n  - System.Collections.DictionaryBase.OnClear\n  - System.Collections.DictionaryBase.OnClearComplete\n  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)\n  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)\n  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values\n  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  commentId: M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: ResultPropertyCollection.Contains(String)\n  fullName: ResultPropertyCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Determines whether the property that has the specified name belongs to this collection.\n  syntax:\n    content: public bool Contains (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property to find.\n    return:\n      type: System.Boolean\n      description: The return value is `true` if the specified property belongs to this collection; otherwise, `false`.\n  overload: System.DirectoryServices.ResultPropertyCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  commentId: M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  id: CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: CopyTo(ResultPropertyValueCollection[], Int32)\n  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[], Int32)\n  fullName: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[], Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Copies the properties from this collection to an array, starting at a particular index of the array.\n  syntax:\n    content: public void CopyTo (System.DirectoryServices.ResultPropertyValueCollection[] array, int index);\n    parameters:\n    - id: array\n      type: System.DirectoryServices.ResultPropertyValueCollection[]\n      description: An array of type <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that receives this collection's properties.\n    - id: index\n      type: System.Int32\n      description: The zero-based array index at which to begin copying the properties.\n  overload: System.DirectoryServices.ResultPropertyCollection.CopyTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  commentId: P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ResultPropertyCollection.Item(String)\n  fullName: ResultPropertyCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the property from this collection that has the specified name.\n  remarks: \"In C#, this property is the indexer for the <xref:System.DirectoryServices.ResultPropertyValueCollection> class.  \\n  \\n In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <xref:System.String>.\"\n  syntax:\n    content: public System.DirectoryServices.ResultPropertyValueCollection this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to retrieve.\n    return:\n      type: System.DirectoryServices.ResultPropertyValueCollection\n      description: A <xref href=\"System.DirectoryServices.ResultPropertyValueCollection\"></xref> that has the specified name.\n  overload: System.DirectoryServices.ResultPropertyCollection.Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  commentId: P:System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  id: PropertyNames\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: PropertyNames\n  nameWithType: ResultPropertyCollection.PropertyNames\n  fullName: ResultPropertyCollection.PropertyNames\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the names of the properties in this collection.\n  syntax:\n    content: public System.Collections.ICollection PropertyNames { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref href=\"System.Collections.ICollection\"></xref> that contains the names of the properties in this collection.\n  overload: System.DirectoryServices.ResultPropertyCollection.PropertyNames*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ResultPropertyCollection.Values\n  commentId: P:System.DirectoryServices.ResultPropertyCollection.Values\n  id: Values\n  parent: System.DirectoryServices.ResultPropertyCollection\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ResultPropertyCollection.Values\n  fullName: ResultPropertyCollection.Values\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  summary: Gets the values of the properties in this collection.\n  syntax:\n    content: public System.Collections.ICollection Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref href=\"System.Collections.ICollection\"></xref> that contains the values of the properties in this collection.\n  overload: System.DirectoryServices.ResultPropertyCollection.Values*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Collections.DictionaryBase\n  parent: System.Collections\n  isExternal: false\n  name: DictionaryBase\n  nameWithType: DictionaryBase\n  fullName: System.Collections.DictionaryBase\n- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: ResultPropertyCollection.Contains(String)\n  fullName: ResultPropertyCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: CopyTo(ResultPropertyValueCollection[], Int32)\n  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[], Int32)\n  fullName: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[], Int32)\n- uid: System.DirectoryServices.ResultPropertyValueCollection\n  name: ResultPropertyValueCollection\n  nameWithType: ResultPropertyValueCollection\n  fullName: System.DirectoryServices.ResultPropertyValueCollection\n- uid: System.DirectoryServices.ResultPropertyValueCollection[]\n  parent: System.DirectoryServices\n  isExternal: false\n  name: ResultPropertyValueCollection[]\n  nameWithType: ResultPropertyValueCollection[]\n  fullName: System.DirectoryServices.ResultPropertyValueCollection[]\n  spec.csharp:\n  - uid: System.DirectoryServices.ResultPropertyValueCollection\n    name: ResultPropertyValueCollection\n    nameWithType: ResultPropertyValueCollection\n    fullName: System.DirectoryServices.ResultPropertyValueCollection\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ResultPropertyCollection.Item(String)\n  fullName: ResultPropertyCollection.Item(String)\n- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: PropertyNames\n  nameWithType: ResultPropertyCollection.PropertyNames\n  fullName: ResultPropertyCollection.PropertyNames\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.DirectoryServices.ResultPropertyCollection.Values\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Values\n  nameWithType: ResultPropertyCollection.Values\n  fullName: ResultPropertyCollection.Values\n- uid: System.DirectoryServices.ResultPropertyCollection.Contains*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ResultPropertyCollection.Contains\n  fullName: ResultPropertyCollection.Contains\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ResultPropertyCollection.CopyTo\n  fullName: ResultPropertyCollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n- uid: System.DirectoryServices.ResultPropertyCollection.Item*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Item\n  nameWithType: ResultPropertyCollection.Item\n  fullName: ResultPropertyCollection.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: PropertyNames\n  nameWithType: ResultPropertyCollection.PropertyNames\n  fullName: ResultPropertyCollection.PropertyNames\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n- uid: System.DirectoryServices.ResultPropertyCollection.Values*\n  parent: System.DirectoryServices.ResultPropertyCollection\n  isExternal: false\n  name: Values\n  nameWithType: ResultPropertyCollection.Values\n  fullName: ResultPropertyCollection.Values\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices/ResultPropertyCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.DictionaryBase.Clear\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Clear()\n  nameWithType: DictionaryBase.Clear()\n  fullName: DictionaryBase.Clear()\n- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: DictionaryBase.CopyTo(Array, Int32)\n  fullName: DictionaryBase.CopyTo(Array, Int32)\n- uid: System.Collections.DictionaryBase.Count\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Count\n  nameWithType: DictionaryBase.Count\n  fullName: DictionaryBase.Count\n- uid: System.Collections.DictionaryBase.Dictionary\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: Dictionary\n  nameWithType: DictionaryBase.Dictionary\n  fullName: DictionaryBase.Dictionary\n- uid: System.Collections.DictionaryBase.GetEnumerator\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DictionaryBase.GetEnumerator()\n  fullName: DictionaryBase.GetEnumerator()\n- uid: System.Collections.DictionaryBase.InnerHashtable\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: InnerHashtable\n  nameWithType: DictionaryBase.InnerHashtable\n  fullName: DictionaryBase.InnerHashtable\n- uid: System.Collections.DictionaryBase.OnClear\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnClear()\n  nameWithType: DictionaryBase.OnClear()\n  fullName: DictionaryBase.OnClear()\n- uid: System.Collections.DictionaryBase.OnClearComplete\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnClearComplete()\n  nameWithType: DictionaryBase.OnClearComplete()\n  fullName: DictionaryBase.OnClearComplete()\n- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnGet(Object, Object)\n  nameWithType: DictionaryBase.OnGet(Object, Object)\n  fullName: DictionaryBase.OnGet(Object, Object)\n- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnInsert(Object, Object)\n  nameWithType: DictionaryBase.OnInsert(Object, Object)\n  fullName: DictionaryBase.OnInsert(Object, Object)\n- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnInsertComplete(Object, Object)\n  nameWithType: DictionaryBase.OnInsertComplete(Object, Object)\n  fullName: DictionaryBase.OnInsertComplete(Object, Object)\n- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnRemove(Object, Object)\n  nameWithType: DictionaryBase.OnRemove(Object, Object)\n  fullName: DictionaryBase.OnRemove(Object, Object)\n- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnRemoveComplete(Object, Object)\n  nameWithType: DictionaryBase.OnRemoveComplete(Object, Object)\n  fullName: DictionaryBase.OnRemoveComplete(Object, Object)\n- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnSet(Object, Object, Object)\n  nameWithType: DictionaryBase.OnSet(Object, Object, Object)\n  fullName: DictionaryBase.OnSet(Object, Object, Object)\n- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnSetComplete(Object, Object, Object)\n  nameWithType: DictionaryBase.OnSetComplete(Object, Object, Object)\n  fullName: DictionaryBase.OnSetComplete(Object, Object, Object)\n- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: OnValidate(Object, Object)\n  nameWithType: DictionaryBase.OnValidate(Object, Object)\n  fullName: DictionaryBase.OnValidate(Object, Object)\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: DictionaryBase.ICollection.IsSynchronized\n  fullName: DictionaryBase.ICollection.IsSynchronized\n- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: DictionaryBase.ICollection.SyncRoot\n  fullName: DictionaryBase.ICollection.SyncRoot\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.Add(Object, Object)\n  nameWithType: DictionaryBase.IDictionary.Add(Object, Object)\n  fullName: DictionaryBase.IDictionary.Add(Object, Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.Contains(Object)\n  nameWithType: DictionaryBase.IDictionary.Contains(Object)\n  fullName: DictionaryBase.IDictionary.Contains(Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.IsFixedSize\n  nameWithType: DictionaryBase.IDictionary.IsFixedSize\n  fullName: DictionaryBase.IDictionary.IsFixedSize\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.IsReadOnly\n  nameWithType: DictionaryBase.IDictionary.IsReadOnly\n  fullName: DictionaryBase.IDictionary.IsReadOnly\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.Item(Object)\n  nameWithType: DictionaryBase.IDictionary.Item(Object)\n  fullName: DictionaryBase.IDictionary.Item(Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.Keys\n  nameWithType: DictionaryBase.IDictionary.Keys\n  fullName: DictionaryBase.IDictionary.Keys\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.Remove(Object)\n  nameWithType: DictionaryBase.IDictionary.Remove(Object)\n  fullName: DictionaryBase.IDictionary.Remove(Object)\n- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IDictionary.Values\n  nameWithType: DictionaryBase.IDictionary.Values\n  fullName: DictionaryBase.IDictionary.Values\n- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.DictionaryBase\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: DictionaryBase.IEnumerable.GetEnumerator()\n  fullName: DictionaryBase.IEnumerable.GetEnumerator()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}