{"nodes":[{"content":"Represents a set of command-related properties that are used to fill the <xref href=\"System.Data.DataSet\"></xref> and update a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"pos":[0,225],"content":"Represents a set of command-related properties that are used to fill the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataSet\"&gt;&lt;/xref&gt;</ph> and update a data source, and is implemented by .NET Framework data providers that access relational databases.","source":"Represents a set of command-related properties that are used to fill the <xref href=\"System.Data.DataSet\"></xref> and update a data source, and is implemented by .NET Framework data providers that access relational databases."}],"pos":[561,787],"yaml":true},{"content":"The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \n  \n An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.  \n  \n Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.","nodes":[{"pos":[0,836],"content":"The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface inherits from the <ph id=\"ph2\">&lt;xref:System.Data.IDataAdapter&gt;</ph> interface and allows an object to create a DataAdapter designed for use with a relational database.","pos":[0,197],"source":"The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface and, optionally, the utility class, <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <ph id=\"ph3\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[198,466],"source":" The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>."},{"content":"For more information about DataAdapter classes, see <bpt id=\"p1\">[</bpt>Populating a DataSet from a DataAdapter<ept id=\"p1\">](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)</ept>.","pos":[467,634],"source":" For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)."},{"content":"For more information about implementing .NET Framework data providers, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconimplementingnetdataprovider&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852)</ept>.","pos":[635,836],"source":" For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852)."}]},{"pos":[843,1074],"content":"An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.","nodes":[{"content":"An application does not create an instance of the <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id=\"ph2\">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.","pos":[0,231],"source":"An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>."}]},{"pos":[1081,1914],"content":"Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.","nodes":[{"content":"Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.","pos":[0,833],"nodes":[{"content":"Classes that inherit <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.","pos":[0,172],"source":"Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface defines the <ph id=\"ph2\">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property, and the <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> interface defines a <ph id=\"ph4\">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method that takes a <ph id=\"ph5\">&lt;xref:System.Data.DataTable&gt;</ph> as a parameter.","pos":[173,479],"source":" For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter."},{"content":"In turn, the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class inherits the <ph id=\"ph2\">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property and the <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method, and also defines two additional overloads of the <ph id=\"ph4\">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> method that take an ADO Recordset object as a parameter.","pos":[480,833],"source":" In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter."}]}]}],"pos":[798,2720],"yaml":true,"extradata":"MT"},{"content":"Gets or sets an SQL statement for deleting records from the data set.","nodes":[{"pos":[0,69],"content":"Gets or sets an SQL statement for deleting records from the data set.","nodes":[{"content":"Gets or sets an SQL statement for deleting records from the data set.","pos":[0,69]}]}],"pos":[4821,4891],"yaml":true},{"content":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  \n  \n When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","nodes":[{"pos":[0,653],"content":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"content":"During <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id=\"ph4\">`SelectCommand`</ph> property of a .NET Framework data provider.","pos":[0,320],"source":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider."},{"content":"Then, any additional commands that you do not set are generated by the CommandBuilder.","pos":[321,407]},{"content":"This generation logic requires key column information to be present in the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[408,510],"source":" This generation logic requires key column information to be present in the <xref:System.Data.DataSet>."},{"content":"For more information see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","pos":[511,653],"source":" For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}]},{"pos":[660,972],"content":"When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","nodes":[{"content":"When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","pos":[0,312],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.","pos":[0,171],"source":"When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph> object.","pos":[172,312],"source":" The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object."}]}]}],"pos":[4902,5879],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to delete records in the data source for deleted rows in the data set.","nodes":[{"pos":[0,211],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.IDbCommand\"&gt;&lt;/xref&gt;</ph> used during <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"&gt;&lt;/xref&gt;</ph> to delete records in the data source for deleted rows in the data set.","source":"An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to delete records in the data source for deleted rows in the data set."}],"pos":[6765,6977],"yaml":true},{"content":"Gets or sets an SQL statement used to insert new records into the data source.","nodes":[{"pos":[0,78],"content":"Gets or sets an SQL statement used to insert new records into the data source.","nodes":[{"content":"Gets or sets an SQL statement used to insert new records into the data source.","pos":[0,78]}]}],"pos":[8183,8262],"yaml":true},{"content":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  \n  \n When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.  \n  \n> [!NOTE]\n>  If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.","nodes":[{"pos":[0,653],"content":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"content":"During <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id=\"ph4\">`SelectCommand`</ph> property of a .NET Framework data provider.","pos":[0,320],"source":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider."},{"content":"Then, any additional commands that you do not set are generated by the CommandBuilder.","pos":[321,407]},{"content":"This generation logic requires key column information to be present in the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[408,510],"source":" This generation logic requires key column information to be present in the <xref:System.Data.DataSet>."},{"content":"For more information see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","pos":[511,653],"source":" For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}]},{"pos":[660,972],"content":"When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","nodes":[{"content":"When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","pos":[0,312],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.","pos":[0,171],"source":"When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph> object.","pos":[172,312],"source":" The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object."}]}]},{"pos":[980,1224],"content":"[!NOTE]\n If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.","leadings":["","> "],"nodes":[{"content":"If execution of this command returns rows, these rows may be added to the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Data.IDbCommand&gt;</ph> object.","pos":[9,242],"source":" If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object."}]}],"pos":[8273,9505],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to insert records in the data source for new rows in the data set.","nodes":[{"pos":[0,207],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.IDbCommand\"&gt;&lt;/xref&gt;</ph> used during <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"&gt;&lt;/xref&gt;</ph> to insert records in the data source for new rows in the data set.","source":"An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to insert records in the data source for new rows in the data set."}],"pos":[10391,10599],"yaml":true},{"content":"Gets or sets an SQL statement used to select records in the data source.","nodes":[{"pos":[0,72],"content":"Gets or sets an SQL statement used to select records in the data source.","nodes":[{"content":"Gets or sets an SQL statement used to select records in the data source.","pos":[0,72]}]}],"pos":[11805,11878],"yaml":true},{"content":"When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.  \n  \n If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.","nodes":[{"pos":[0,312],"content":"When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","nodes":[{"content":"When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","pos":[0,312],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.","pos":[0,171],"source":"When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph> object.","pos":[172,312],"source":" The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object."}]}]},{"pos":[319,485],"content":"If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> does not return any rows, no tables are added to the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.","pos":[0,166],"source":"If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised."}]}],"pos":[11889,12379],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.IDbCommand\"></xref> that is used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to select records from data source for placement in the data set.","nodes":[{"pos":[0,214],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.IDbCommand\"&gt;&lt;/xref&gt;</ph> that is used during <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"&gt;&lt;/xref&gt;</ph> to select records from data source for placement in the data set.","source":"An <xref href=\"System.Data.IDbCommand\"></xref> that is used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to select records from data source for placement in the data set."}],"pos":[13265,13480],"yaml":true},{"content":"Gets or sets an SQL statement used to update records in the data source.","nodes":[{"pos":[0,72],"content":"Gets or sets an SQL statement used to update records in the data source.","nodes":[{"content":"Gets or sets an SQL statement used to update records in the data source.","pos":[0,72]}]}],"pos":[14686,14759],"yaml":true},{"content":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  \n  \n When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.  \n  \n> [!NOTE]\n>  If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.","nodes":[{"pos":[0,653],"content":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).","nodes":[{"content":"During <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id=\"ph4\">`SelectCommand`</ph> property of a .NET Framework data provider.","pos":[0,320],"source":"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider."},{"content":"Then, any additional commands that you do not set are generated by the CommandBuilder.","pos":[321,407]},{"content":"This generation logic requires key column information to be present in the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[408,510],"source":" This generation logic requires key column information to be present in the <xref:System.Data.DataSet>."},{"content":"For more information see <bpt id=\"p1\">[</bpt>Generating Commands with CommandBuilders<ept id=\"p1\">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.","pos":[511,653],"source":" For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)."}]},{"pos":[660,972],"content":"When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","nodes":[{"content":"When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.","pos":[0,312],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.IDbCommand&gt;</ph> is not cloned.","pos":[0,171],"source":"When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand&gt;</ph> object.","pos":[172,312],"source":" The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object."}]}]},{"pos":[980,1089],"content":"[!NOTE]\n If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.","leadings":["","> "],"nodes":[{"content":"If execution of this command returns rows, these rows are added to the <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph>.","pos":[9,107],"source":" If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>."}]}],"pos":[14770,15867],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to update records in the data source for modified rows in the data set.","nodes":[{"pos":[0,212],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.IDbCommand\"&gt;&lt;/xref&gt;</ph> used during <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"&gt;&lt;/xref&gt;</ph> to update records in the data source for modified rows in the data set.","source":"An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to update records in the data source for modified rows in the data set."}],"pos":[16765,16978],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.IDbDataAdapter\n  commentId: T:System.Data.IDbDataAdapter\n  id: IDbDataAdapter\n  children:\n  - System.Data.IDbDataAdapter.DeleteCommand\n  - System.Data.IDbDataAdapter.InsertCommand\n  - System.Data.IDbDataAdapter.SelectCommand\n  - System.Data.IDbDataAdapter.UpdateCommand\n  langs:\n  - csharp\n  name: IDbDataAdapter\n  nameWithType: IDbDataAdapter\n  fullName: System.Data.IDbDataAdapter\n  type: Interface\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Represents a set of command-related properties that are used to fill the <xref href=\"System.Data.DataSet\"></xref> and update a data source, and is implemented by .NET Framework data providers that access relational databases.\n  remarks: \"The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). For more information about implementing .NET Framework data providers, see [&#91;\\\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \\n  \\n An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.  \\n  \\n Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.\"\n  example:\n  - \"The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \\n  \\n [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public interface IDbDataAdapter : System.Data.IDataAdapter'\n  derivedClasses:\n  - System.Data.Common.DbDataAdapter\n  implements:\n  - System.Data.IDataAdapter\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbDataAdapter.DeleteCommand\n  commentId: P:System.Data.IDbDataAdapter.DeleteCommand\n  id: DeleteCommand\n  parent: System.Data.IDbDataAdapter\n  langs:\n  - csharp\n  name: DeleteCommand\n  nameWithType: IDbDataAdapter.DeleteCommand\n  fullName: IDbDataAdapter.DeleteCommand\n  type: Property\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Gets or sets an SQL statement for deleting records from the data set.\n  remarks: \"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  \\n  \\n When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.\"\n  example:\n  - \"The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \\n  \\n [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.IDbCommand DeleteCommand { get; set; }\n    return:\n      type: System.Data.IDbCommand\n      description: An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to delete records in the data source for deleted rows in the data set.\n  overload: System.Data.IDbDataAdapter.DeleteCommand*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbDataAdapter.InsertCommand\n  commentId: P:System.Data.IDbDataAdapter.InsertCommand\n  id: InsertCommand\n  parent: System.Data.IDbDataAdapter\n  langs:\n  - csharp\n  name: InsertCommand\n  nameWithType: IDbDataAdapter.InsertCommand\n  fullName: IDbDataAdapter.InsertCommand\n  type: Property\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Gets or sets an SQL statement used to insert new records into the data source.\n  remarks: \"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  \\n  \\n When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.  \\n  \\n> [!NOTE]\\n>  If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.\"\n  example:\n  - \"The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \\n  \\n [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.IDbCommand InsertCommand { get; set; }\n    return:\n      type: System.Data.IDbCommand\n      description: An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to insert records in the data source for new rows in the data set.\n  overload: System.Data.IDbDataAdapter.InsertCommand*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbDataAdapter.SelectCommand\n  commentId: P:System.Data.IDbDataAdapter.SelectCommand\n  id: SelectCommand\n  parent: System.Data.IDbDataAdapter\n  langs:\n  - csharp\n  name: SelectCommand\n  nameWithType: IDbDataAdapter.SelectCommand\n  fullName: IDbDataAdapter.SelectCommand\n  type: Property\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Gets or sets an SQL statement used to select records in the data source.\n  remarks: \"When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.  \\n  \\n If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.\"\n  example:\n  - \"The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \\n  \\n [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.IDbCommand SelectCommand { get; set; }\n    return:\n      type: System.Data.IDbCommand\n      description: An <xref href=\"System.Data.IDbCommand\"></xref> that is used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to select records from data source for placement in the data set.\n  overload: System.Data.IDbDataAdapter.SelectCommand*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbDataAdapter.UpdateCommand\n  commentId: P:System.Data.IDbDataAdapter.UpdateCommand\n  id: UpdateCommand\n  parent: System.Data.IDbDataAdapter\n  langs:\n  - csharp\n  name: UpdateCommand\n  nameWithType: IDbDataAdapter.UpdateCommand\n  fullName: IDbDataAdapter.UpdateCommand\n  type: Property\n  assemblies:\n  - System.Data\n  - netstandard\n  - System.Data.Common\n  namespace: System.Data\n  summary: Gets or sets an SQL statement used to update records in the data source.\n  remarks: \"During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <xref:System.Data.DataSet>. For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  \\n  \\n When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned. The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.  \\n  \\n> [!NOTE]\\n>  If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.\"\n  example:\n  - \"The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \\n  \\n [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.IDbCommand UpdateCommand { get; set; }\n    return:\n      type: System.Data.IDbCommand\n      description: An <xref href=\"System.Data.IDbCommand\"></xref> used during <xref href=\"System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)\"></xref> to update records in the data source for modified rows in the data set.\n  overload: System.Data.IDbDataAdapter.UpdateCommand*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.IDbDataAdapter.DeleteCommand\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: DeleteCommand\n  nameWithType: IDbDataAdapter.DeleteCommand\n  fullName: IDbDataAdapter.DeleteCommand\n- uid: System.Data.IDbCommand\n  parent: System.Data\n  isExternal: false\n  name: IDbCommand\n  nameWithType: IDbCommand\n  fullName: System.Data.IDbCommand\n- uid: System.Data.IDbDataAdapter.InsertCommand\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: InsertCommand\n  nameWithType: IDbDataAdapter.InsertCommand\n  fullName: IDbDataAdapter.InsertCommand\n- uid: System.Data.IDbDataAdapter.SelectCommand\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: SelectCommand\n  nameWithType: IDbDataAdapter.SelectCommand\n  fullName: IDbDataAdapter.SelectCommand\n- uid: System.Data.IDbDataAdapter.UpdateCommand\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: UpdateCommand\n  nameWithType: IDbDataAdapter.UpdateCommand\n  fullName: IDbDataAdapter.UpdateCommand\n- uid: System.Data.IDbDataAdapter.DeleteCommand*\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: DeleteCommand\n  nameWithType: IDbDataAdapter.DeleteCommand\n  fullName: IDbDataAdapter.DeleteCommand\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n- uid: System.Data.IDbDataAdapter.InsertCommand*\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: InsertCommand\n  nameWithType: IDbDataAdapter.InsertCommand\n  fullName: IDbDataAdapter.InsertCommand\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n- uid: System.Data.IDbDataAdapter.SelectCommand*\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: SelectCommand\n  nameWithType: IDbDataAdapter.SelectCommand\n  fullName: IDbDataAdapter.SelectCommand\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n- uid: System.Data.IDbDataAdapter.UpdateCommand*\n  parent: System.Data.IDbDataAdapter\n  isExternal: false\n  name: UpdateCommand\n  nameWithType: IDbDataAdapter.UpdateCommand\n  fullName: IDbDataAdapter.UpdateCommand\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbDataAdapter.xml\n- uid: System.Data.IDataAdapter\n  parent: System.Data\n  isExternal: false\n  name: IDataAdapter\n  nameWithType: IDataAdapter\n  fullName: System.Data.IDataAdapter\n"}