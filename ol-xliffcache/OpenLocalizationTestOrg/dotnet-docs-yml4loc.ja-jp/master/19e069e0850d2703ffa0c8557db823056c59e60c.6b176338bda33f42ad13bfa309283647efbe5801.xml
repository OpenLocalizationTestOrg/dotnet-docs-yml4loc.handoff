{"nodes":[{"content":"Identifies the nature of the code in an executable file.","nodes":[{"pos":[0,56],"content":"Identifies the nature of the code in an executable file.","nodes":[{"content":"Identifies the nature of the code in an executable file.","pos":[0,56]}]}],"pos":[811,868],"yaml":true},{"content":"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method.  \n  \n> [!NOTE]\n>  This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function.","nodes":[{"pos":[0,120],"content":"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method.","nodes":[{"content":"To obtain this value for a module, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,120],"source":"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method."}]},{"pos":[128,288],"content":"[!NOTE]\n This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function.","leadings":["","> "],"nodes":[{"content":"This enumeration corresponds to the <ph id=\"ph1\">`CorPEKind`</ph> enumeration in the unmanaged reflection API, which is accessed by the unmanaged <ph id=\"ph2\">`GetPEKind`</ph> function.","pos":[9,158],"source":" This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function."}]}],"pos":[879,1173],"yaml":true,"extradata":"MT"},{"content":"The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.","nodes":[{"pos":[0,137],"content":"The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.","nodes":[{"content":"The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.","pos":[0,137]}]}],"pos":[2663,2801],"yaml":true},{"content":"The file is not in portable executable (PE) file format.","nodes":[{"pos":[0,56],"content":"The file is not in portable executable (PE) file format.","nodes":[{"content":"The file is not in portable executable (PE) file format.","pos":[0,56]}]}],"pos":[4131,4188],"yaml":true},{"content":"The executable requires a 64-bit platform.","nodes":[{"pos":[0,42],"content":"The executable requires a 64-bit platform.","nodes":[{"content":"The executable requires a 64-bit platform.","pos":[0,42]}]}],"pos":[5425,5468],"yaml":true},{"content":"The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.","nodes":[{"pos":[0,93],"content":"The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.","nodes":[{"content":"The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.","pos":[0,93]}]}],"pos":[6722,6816],"yaml":true},{"content":"The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.","nodes":[{"pos":[0,123],"content":"The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.","nodes":[{"content":"The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.","pos":[0,123]}]}],"pos":[8070,8194],"yaml":true},{"content":"The executable contains pure unmanaged code.","nodes":[{"pos":[0,44],"content":"The executable contains pure unmanaged code.","nodes":[{"content":"The executable contains pure unmanaged code.","pos":[0,44]}]}],"pos":[9453,9498],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.PortableExecutableKinds\n  commentId: T:System.Reflection.PortableExecutableKinds\n  id: PortableExecutableKinds\n  children:\n  - System.Reflection.PortableExecutableKinds.ILOnly\n  - System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  - System.Reflection.PortableExecutableKinds.PE32Plus\n  - System.Reflection.PortableExecutableKinds.Preferred32Bit\n  - System.Reflection.PortableExecutableKinds.Required32Bit\n  - System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  langs:\n  - csharp\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n  type: Enum\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Identifies the nature of the code in an executable file.\n  remarks: \"To obtain this value for a module, use the <xref:System.Reflection.Module.GetPEKind%2A?displayProperty=fullName> method.  \\n  \\n> [!NOTE]\\n>  This enumeration corresponds to the `CorPEKind` enumeration in the unmanaged reflection API, which is accessed by the unmanaged `GetPEKind` function.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum PortableExecutableKinds\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.PortableExecutableKinds.ILOnly\n  commentId: F:System.Reflection.PortableExecutableKinds.ILOnly\n  id: ILOnly\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: ILOnly\n  nameWithType: PortableExecutableKinds.ILOnly\n  fullName: PortableExecutableKinds.ILOnly\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The executable contains only Microsoft intermediate language (MSIL), and is therefore neutral with respect to 32-bit or 64-bit platforms.\n  syntax:\n    content: ILOnly\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\n- uid: System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  commentId: F:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  id: NotAPortableExecutableImage\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: NotAPortableExecutableImage\n  nameWithType: PortableExecutableKinds.NotAPortableExecutableImage\n  fullName: PortableExecutableKinds.NotAPortableExecutableImage\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The file is not in portable executable (PE) file format.\n  syntax:\n    content: NotAPortableExecutableImage\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\n- uid: System.Reflection.PortableExecutableKinds.PE32Plus\n  commentId: F:System.Reflection.PortableExecutableKinds.PE32Plus\n  id: PE32Plus\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: PE32Plus\n  nameWithType: PortableExecutableKinds.PE32Plus\n  fullName: PortableExecutableKinds.PE32Plus\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The executable requires a 64-bit platform.\n  syntax:\n    content: PE32Plus\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\n- uid: System.Reflection.PortableExecutableKinds.Preferred32Bit\n  commentId: F:System.Reflection.PortableExecutableKinds.Preferred32Bit\n  id: Preferred32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: Preferred32Bit\n  nameWithType: PortableExecutableKinds.Preferred32Bit\n  fullName: PortableExecutableKinds.Preferred32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The executable is platform-agnostic but should be run on a 32-bit platform whenever possible.\n  syntax:\n    content: Preferred32Bit\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\n- uid: System.Reflection.PortableExecutableKinds.Required32Bit\n  commentId: F:System.Reflection.PortableExecutableKinds.Required32Bit\n  id: Required32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: Required32Bit\n  nameWithType: PortableExecutableKinds.Required32Bit\n  fullName: PortableExecutableKinds.Required32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The executable can be run on a 32-bit platform, or in the 32-bit Windows on Windows (WOW) environment on a 64-bit platform.\n  syntax:\n    content: Required32Bit\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\n- uid: System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  commentId: F:System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  id: Unmanaged32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  langs:\n  - csharp\n  name: Unmanaged32Bit\n  nameWithType: PortableExecutableKinds.Unmanaged32Bit\n  fullName: PortableExecutableKinds.Unmanaged32Bit\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The executable contains pure unmanaged code.\n  syntax:\n    content: Unmanaged32Bit\n    return:\n      type: System.Reflection.PortableExecutableKinds\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/PortableExecutableKinds.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Reflection.PortableExecutableKinds.ILOnly\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: ILOnly\n  nameWithType: PortableExecutableKinds.ILOnly\n  fullName: PortableExecutableKinds.ILOnly\n- uid: System.Reflection.PortableExecutableKinds\n  parent: System.Reflection\n  isExternal: false\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n- uid: System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: NotAPortableExecutableImage\n  nameWithType: PortableExecutableKinds.NotAPortableExecutableImage\n  fullName: PortableExecutableKinds.NotAPortableExecutableImage\n- uid: System.Reflection.PortableExecutableKinds.PE32Plus\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: PE32Plus\n  nameWithType: PortableExecutableKinds.PE32Plus\n  fullName: PortableExecutableKinds.PE32Plus\n- uid: System.Reflection.PortableExecutableKinds.Preferred32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: Preferred32Bit\n  nameWithType: PortableExecutableKinds.Preferred32Bit\n  fullName: PortableExecutableKinds.Preferred32Bit\n- uid: System.Reflection.PortableExecutableKinds.Required32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: Required32Bit\n  nameWithType: PortableExecutableKinds.Required32Bit\n  fullName: PortableExecutableKinds.Required32Bit\n- uid: System.Reflection.PortableExecutableKinds.Unmanaged32Bit\n  parent: System.Reflection.PortableExecutableKinds\n  isExternal: false\n  name: Unmanaged32Bit\n  nameWithType: PortableExecutableKinds.Unmanaged32Bit\n  fullName: PortableExecutableKinds.Unmanaged32Bit\n"}