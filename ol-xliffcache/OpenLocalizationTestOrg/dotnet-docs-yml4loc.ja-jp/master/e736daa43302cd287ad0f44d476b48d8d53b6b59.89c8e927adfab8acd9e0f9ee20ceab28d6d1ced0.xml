{"nodes":[{"content":"The exception that is thrown when part of a file or directory cannot be found.","nodes":[{"pos":[0,78],"content":"The exception that is thrown when part of a file or directory cannot be found.","nodes":[{"content":"The exception that is thrown when part of a file or directory cannot be found.","pos":[0,78]}]}],"pos":[763,842],"yaml":true},{"content":"`DirectoryNotFoundException` uses the HRESULT COR_E_DIRECTORYNOTFOUND which has the value 0x80070003. Note that `DirectoryNotFoundException` is also thrown when COM interop programs see the HRESULT STG_E_PATHNOTFOUND, which has the value 0x80030003.  \n  \n If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.","nodes":[{"pos":[0,249],"content":"`DirectoryNotFoundException` uses the HRESULT COR_E_DIRECTORYNOTFOUND which has the value 0x80070003. Note that `DirectoryNotFoundException` is also thrown when COM interop programs see the HRESULT STG_E_PATHNOTFOUND, which has the value 0x80030003.","nodes":[{"content":"<ph id=\"ph1\">`DirectoryNotFoundException`</ph> uses the HRESULT COR_E_DIRECTORYNOTFOUND which has the value 0x80070003.","pos":[0,101],"source":"`DirectoryNotFoundException` uses the HRESULT COR_E_DIRECTORYNOTFOUND which has the value 0x80070003."},{"content":"Note that <ph id=\"ph1\">`DirectoryNotFoundException`</ph> is also thrown when COM interop programs see the HRESULT STG_E_PATHNOTFOUND, which has the value 0x80030003.","pos":[102,249],"source":" Note that `DirectoryNotFoundException` is also thrown when COM interop programs see the HRESULT STG_E_PATHNOTFOUND, which has the value 0x80030003."}]},{"pos":[256,484],"content":"If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.","nodes":[{"content":"If your code does not have <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A&gt;</ph> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.","pos":[0,228],"source":"If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths."}]}],"pos":[853,1342],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DirectoryNotFoundException\"&gt;&lt;/xref&gt;</ph> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.","source":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND."}],"pos":[4268,4471],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message takes into account the current system culture.  \n  \n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.","nodes":[{"pos":[0,286],"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message takes into account the current system culture.","pos":[0,286],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\"","pos":[0,226],"source":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\""},{"content":"This message takes into account the current system culture.","pos":[227,286]}]}]},{"pos":[293,418],"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;</ph> property of the new instance is initialized to <ph id=\"ph2\">`null`</ph>.","source":"The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`."}],"pos":[4482,4907],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with its message string set to <code>message</code> and its HRESULT set to COR_E_DIRECTORYNOTFOUND.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DirectoryNotFoundException\"&gt;&lt;/xref&gt;</ph> class with its message string set to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> and its HRESULT set to COR_E_DIRECTORYNOTFOUND.","source":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with its message string set to <code>message</code> and its HRESULT set to COR_E_DIRECTORYNOTFOUND."}],"pos":[6992,7190],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using `message`.  \n  \n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.","nodes":[{"pos":[0,138],"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property of the new instance using <ph id=\"ph2\">`message`</ph>.","source":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using `message`."},{"pos":[145,270],"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;</ph> property of the new instance is initialized to <ph id=\"ph2\">`null`</ph>.","source":"The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`."}],"pos":[7201,7476],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"pos":[0,259],"content":"A <xref href=\"System.String\"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that describes the error.","pos":[0,62],"source":"A <xref href=\"System.String\"></xref> that describes the error."},{"content":"The content of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> is intended to be understood by humans.","pos":[63,138],"source":" The content of <code>message</code> is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[139,259]}]}],"pos":[7630,7890],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with the specified serialization and context information.","nodes":[{"pos":[0,155],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DirectoryNotFoundException\"&gt;&lt;/xref&gt;</ph> class with the specified serialization and context information.","source":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with the specified serialization and context information."}],"pos":[9786,9942],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[10221,10365],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[10460,10601],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,204],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DirectoryNotFoundException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[12033,12238],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,551],"content":"The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph>.","pos":[0,117],"source":"The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>."}]},{"pos":[558,566],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[567,572],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[608,649],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[650,680],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[685,719],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[720,745],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[12249,13005],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[13185,13247],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,202],"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,202],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[13320,13523],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.DirectoryNotFoundException\n  commentId: T:System.IO.DirectoryNotFoundException\n  id: DirectoryNotFoundException\n  children:\n  - System.IO.DirectoryNotFoundException.#ctor\n  - System.IO.DirectoryNotFoundException.#ctor(System.String)\n  - System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: The exception that is thrown when part of a file or directory cannot be found.\n  remarks: \"`DirectoryNotFoundException` uses the HRESULT COR_E_DIRECTORYNOTFOUND which has the value 0x80070003. Note that `DirectoryNotFoundException` is also thrown when COM interop programs see the HRESULT STG_E_PATHNOTFOUND, which has the value 0x80030003.  \\n  \\n If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.\"\n  example:\n  - \"The following example shows how to force and recover from a <xref:System.IO.DirectoryNotFoundException>.  \\n  \\n [!code-csharp[DirectoryNotFoundException#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryNotFoundException/cs/program.cs#1)]\\n [!code-vb[DirectoryNotFoundException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryNotFoundException/VB/DirectoryNotFoundexception.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DirectoryNotFoundException : System.IO.IOException\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.IO.IOException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DirectoryNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DirectoryNotFoundException.#ctor\n  commentId: M:System.IO.DirectoryNotFoundException.#ctor\n  id: '#ctor'\n  parent: System.IO.DirectoryNotFoundException\n  langs:\n  - csharp\n  name: DirectoryNotFoundException()\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException()\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \\\"Could not find the specified directory.\\\" This message takes into account the current system culture.  \\n  \\n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.\"\n  example:\n  - \"The following code example demonstrates how to call the <xref:System.IO.DirectoryNotFoundException.%23ctor%2A> constructor.  \\n  \\n [!code-csharp[DirectoryNotFoundException#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryNotFoundException/cs/program.cs#1)]\\n [!code-vb[DirectoryNotFoundException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryNotFoundException/VB/DirectoryNotFoundexception.vb#1)]\"\n  syntax:\n    content: public DirectoryNotFoundException ();\n    parameters: []\n  overload: System.IO.DirectoryNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DirectoryNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DirectoryNotFoundException.#ctor(System.String)\n  commentId: M:System.IO.DirectoryNotFoundException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.DirectoryNotFoundException\n  langs:\n  - csharp\n  name: DirectoryNotFoundException(String)\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String)\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with its message string set to <code>message</code> and its HRESULT set to COR_E_DIRECTORYNOTFOUND.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using `message`.  \\n  \\n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.\"\n  syntax:\n    content: public DirectoryNotFoundException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that describes the error. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n  overload: System.IO.DirectoryNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DirectoryNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.IO.DirectoryNotFoundException\n  langs:\n  - csharp\n  name: DirectoryNotFoundException(SerializationInfo, StreamingContext)\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo, StreamingContext)\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with the specified serialization and context information.\n  syntax:\n    content: protected DirectoryNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.IO.DirectoryNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DirectoryNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)\n  commentId: M:System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.IO.DirectoryNotFoundException\n  langs:\n  - csharp\n  name: DirectoryNotFoundException(String, Exception)\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String, Exception)\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DirectoryNotFoundException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public DirectoryNotFoundException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.IO.DirectoryNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DirectoryNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.IO.DirectoryNotFoundException.#ctor\n  parent: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException()\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException()\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException()\n- uid: System.IO.DirectoryNotFoundException.#ctor(System.String)\n  parent: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException(String)\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String)\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException(SerializationInfo, StreamingContext)\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo, StreamingContext)\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)\n  parent: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException(String, Exception)\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String, Exception)\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.IO.DirectoryNotFoundException.#ctor*\n  parent: System.IO.DirectoryNotFoundException\n  isExternal: false\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException\n  fullName: DirectoryNotFoundException.DirectoryNotFoundException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DirectoryNotFoundException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}