{"nodes":[{"content":"Maps a XAML element name to the appropriate CLR <xref href=\"System.Type\"></xref> in assemblies.","nodes":[{"pos":[0,95],"content":"Maps a XAML element name to the appropriate CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> in assemblies.","source":"Maps a XAML element name to the appropriate CLR <xref href=\"System.Type\"></xref> in assemblies."}],"pos":[965,1061],"yaml":true},{"content":"<xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>. For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>.  \n  \n <xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code. This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.  \n  \n You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>. The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>call.  \n  \n## Default Mapper  \n You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property. The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.  \n  \n<a name=\"xamlTextUsage_XamlTypeMapper\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,442],"content":"<xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>. For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> is part of an advanced WPF scenario that supplies alternate context for <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph>.","pos":[0,200],"source":"<xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>."},{"content":"For <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> WPF applications, you should consider overriding <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> for this scenario, rather than attempting to use <ph id=\"ph3\">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>.","pos":[201,442],"source":" For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>."}]},{"pos":[449,958],"content":"<xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code. This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.","nodes":[{"content":"<xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code. This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.","pos":[0,509],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> values on the assembly code.","pos":[0,253],"source":"<xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code."},{"content":"This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> attributing.","pos":[254,509],"source":" This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing."}]}]},{"pos":[965,1413],"content":"You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>. The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>call.","nodes":[{"content":"You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>. The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>call.","pos":[0,448],"nodes":[{"content":"You typically create a <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> instance in order to specify the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;</ph> property value for a <ph id=\"ph3\">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph>.","pos":[0,225],"source":"You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> in turn can be used as the context for a <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName&gt;</ph>call.","pos":[226,448],"source":" The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>call."}]}]},{"pos":[1422,1436],"content":"Default Mapper","linkify":"Default Mapper","nodes":[{"content":"Default Mapper","pos":[0,14]}]},{"pos":[1440,1745],"content":"You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property. The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.","nodes":[{"content":"You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property. The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.","pos":[0,305],"nodes":[{"content":"You can obtain a default mapper using the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;</ph> static property.","pos":[0,119],"source":"You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property."},{"content":"The default mapper only works on a default assembly list.","pos":[120,177]},{"content":"No specific information about assemblies (as is specified in <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> constructors) is used.","pos":[178,305],"source":" No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used."}]}]},{"pos":[1801,1816],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[1072,2903],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> class by specifying an array of assembly names that the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.","nodes":[{"pos":[0,217],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> class by specifying an array of assembly names that the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> should use.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> class by specifying an array of assembly names that the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use."}],"pos":[4277,4495],"yaml":true},{"content":"The array of assembly names the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.","nodes":[{"pos":[0,101],"content":"The array of assembly names the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> should use.","source":"The array of assembly names the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use."}],"pos":[4653,4755],"yaml":true},{"content":"<code>assemblyNames</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyNames&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyNames</code> is `null`."}],"pos":[4927,4965],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> class, using the specified array of assembly names and the specified namespace maps.","nodes":[{"pos":[0,176],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> class, using the specified array of assembly names and the specified namespace maps.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> class, using the specified array of assembly names and the specified namespace maps."}],"pos":[6133,6310],"yaml":true},{"content":"The array of assembly names the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.","nodes":[{"pos":[0,101],"content":"The array of assembly names the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> should use.","source":"The array of assembly names the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use."}],"pos":[6525,6627],"yaml":true},{"content":"The array of namespace maps the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.","nodes":[{"pos":[0,101],"content":"The array of namespace maps the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> should use.","source":"The array of namespace maps the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use."}],"pos":[6724,6826],"yaml":true},{"content":"<code>assemblyNames</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyNames&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyNames</code> is `null`."}],"pos":[6998,7036],"yaml":true},{"content":"Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> information.","nodes":[{"pos":[0,169],"content":"Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> information.","source":"Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> information."}],"pos":[8257,8427],"yaml":true},{"content":"<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.  For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  \n  \n```  \n<Window xmlns:SDK=\"clr-namespace:Samples;assembly=SDKSamples\">  \n...  \n```  \n  \n The `xmlNamespace` is `SDK`, the `clrNamespace` is `Samples`, and the `assemblyName` is `SDKSamples`.","nodes":[{"pos":[0,310],"content":"<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.  For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:","nodes":[{"content":"<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.  For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:","pos":[0,310],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph> is a programmatic way to add a mapping.","pos":[0,118],"source":"<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping."},{"content":"For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph>:","pos":[120,310],"source":"  For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:"}]}]},{"pos":[403,504],"content":"The <ph id=\"ph1\">`xmlNamespace`</ph> is <ph id=\"ph2\">`SDK`</ph>, the <ph id=\"ph3\">`clrNamespace`</ph> is <ph id=\"ph4\">`Samples`</ph>, and the <ph id=\"ph5\">`assemblyName`</ph> is <ph id=\"ph6\">`SDKSamples`</ph>.","source":"The `xmlNamespace` is `SDK`, the `clrNamespace` is `Samples`, and the `assemblyName` is `SDKSamples`."}],"pos":[8438,8954],"yaml":true,"extradata":"MT"},{"content":"The prefix for the XML namespace..","nodes":[{"pos":[0,34],"content":"The prefix for the XML namespace..","nodes":[{"content":"The prefix for the XML namespace..","pos":[0,34]}]}],"pos":[9170,9205],"yaml":true},{"content":"The CLR  namespace that contains the types to map.","nodes":[{"pos":[0,50],"content":"The CLR  namespace that contains the types to map.","nodes":[{"content":"The CLR  namespace that contains the types to map.","pos":[0,50]}]}],"pos":[9273,9324],"yaml":true},{"content":"The assembly that contains the CLR  namespace.","nodes":[{"pos":[0,46],"content":"The assembly that contains the CLR  namespace.","nodes":[{"content":"The assembly that contains the CLR  namespace.","pos":[0,46]}]}],"pos":[9392,9439],"yaml":true},{"content":"<code>xmlNamespace</code> is `null`  \n  \n -or-  \n  \n <code>clrNamespace</code> is `null`  \n  \n -or-  \n  \n <code>assemblyName</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;xmlNamespace&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>xmlNamespace</code> is `null`"},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,88],"content":"<ph id=\"ph1\">&lt;code&gt;clrNamespace&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>clrNamespace</code> is `null`"},{"pos":[95,99],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[106,142],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyName</code> is `null`."}],"pos":[9637,9790],"yaml":true},{"content":"Requests permission for a <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> derived type that is called under full trust to access a specific internal type.","nodes":[{"pos":[0,164],"content":"Requests permission for a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> derived type that is called under full trust to access a specific internal type.","source":"Requests permission for a <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> derived type that is called under full trust to access a specific internal type."}],"pos":[10783,10948],"yaml":true},{"content":"If not overridden by a subclass, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> always returns `false`.  \n  \n When overridden by a subclass, the behavior should be that <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> should return `true` if the internal type can be accessed; otherwise, `false`.","nodes":[{"pos":[0,121],"content":"If not overridden by a subclass, <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> always returns <ph id=\"ph2\">`false`</ph>.","source":"If not overridden by a subclass, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> always returns `false`."},{"pos":[128,330],"content":"When overridden by a subclass, the behavior should be that <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> should return <ph id=\"ph2\">`true`</ph> if the internal type can be accessed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"When overridden by a subclass, the behavior should be that <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> should return `true` if the internal type can be accessed; otherwise, `false`."}],"pos":[10959,11294],"yaml":true,"extradata":"MT"},{"content":"The type to access.","nodes":[{"pos":[0,19],"content":"The type to access.","nodes":[{"content":"The type to access.","pos":[0,19]}]}],"pos":[11445,11465],"yaml":true},{"content":"`true` if the internal type can be accessed; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the internal type can be accessed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the internal type can be accessed; otherwise, `false`."}],"pos":[11523,11590],"yaml":true},{"content":"Gets an instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> to use if one has not been specified.","nodes":[{"pos":[0,119],"content":"Gets an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlTypeMapper\"&gt;&lt;/xref&gt;</ph> to use if one has not been specified.","source":"Gets an instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> to use if one has not been specified."}],"pos":[12589,12709],"yaml":true},{"content":"The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used. In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`.  \n  \n Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all. It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API. For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).","nodes":[{"pos":[0,305],"content":"The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used. In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`.","nodes":[{"content":"The default mapper only works on a default assembly list.","pos":[0,57]},{"content":"No specific information about assemblies (as is specified in <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> constructors) is used.","pos":[58,185],"source":" No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used."},{"content":"In the current implementation the default assembly list is: <ph id=\"ph1\">`WindowsBase`</ph>, <ph id=\"ph2\">`PresentationCore`</ph>, <ph id=\"ph3\">`PresentationFramework`</ph>.","pos":[186,305],"source":" In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`."}]},{"pos":[312,824],"content":"Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all. It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API. For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).","nodes":[{"content":"Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.","pos":[0,98]},{"content":"It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as <ph id=\"ph1\">`xmlns`</ph> attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.","pos":[99,347],"source":" It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.","pos":[348,512],"source":" For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)."}]}],"pos":[12720,13549],"yaml":true,"extradata":"MT"},{"content":"The default type mapper.","nodes":[{"pos":[0,24],"content":"The default type mapper.","nodes":[{"content":"The default type mapper.","pos":[0,24]}]}],"pos":[13726,13751],"yaml":true},{"content":"Gets the CLR <xref href=\"System.Type\"></xref> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.","nodes":[{"pos":[0,144],"content":"Gets the CLR <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.","source":"Gets the CLR <xref href=\"System.Type\"></xref> that a given XAML element is mapped to, using the specified XML namespace prefix and element name."}],"pos":[14843,14988],"yaml":true},{"content":"If a type cannot be found that maps to the provided information, `null` is returned.  \n  \n Do not include the prefix as part of `localName`. For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call.","nodes":[{"pos":[0,84],"content":"If a type cannot be found that maps to the provided information, <ph id=\"ph1\">`null`</ph> is returned.","source":"If a type cannot be found that maps to the provided information, `null` is returned."},{"pos":[91,261],"content":"Do not include the prefix as part of `localName`. For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call.","nodes":[{"content":"Do not include the prefix as part of <ph id=\"ph1\">`localName`</ph>.","pos":[0,49],"source":"Do not include the prefix as part of `localName`."},{"content":"For any prefixed XAML element information, separate it into <ph id=\"ph1\">`xmlNamespace`</ph> and <ph id=\"ph2\">`localName`</ph> components for this API call.","pos":[50,170],"source":" For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call."}]}],"pos":[14999,15265],"yaml":true,"extradata":"MT"},{"content":"The specified XML namespace prefix.","nodes":[{"pos":[0,35],"content":"The specified XML namespace prefix.","nodes":[{"content":"The specified XML namespace prefix.","pos":[0,35]}]}],"pos":[15433,15469],"yaml":true},{"content":"The \"local\" name of the XAML element to obtain the mapped <xref href=\"System.Type\"></xref> for. Local in this context means as mapped versus the provided <code>xmlNamespace</code>.","nodes":[{"pos":[0,180],"content":"The \"local\" name of the XAML element to obtain the mapped <xref href=\"System.Type\"></xref> for. Local in this context means as mapped versus the provided <code>xmlNamespace</code>.","nodes":[{"content":"The \"local\" name of the XAML element to obtain the mapped <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> for.","pos":[0,95],"source":"The \"local\" name of the XAML element to obtain the mapped <xref href=\"System.Type\"></xref> for."},{"content":"Local in this context means as mapped versus the provided <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xmlNamespace</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[96,180],"source":" Local in this context means as mapped versus the provided <code>xmlNamespace</code>."}]}],"pos":[15534,15715],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> for the object, or `null` if no mapping could be resolved.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> for the object, or <ph id=\"ph2\">`null`</ph> if no mapping could be resolved.","source":"The <xref href=\"System.Type\"></xref> for the object, or `null` if no mapping could be resolved."}],"pos":[15770,15866],"yaml":true},{"content":"<code>xmlNamespace</code> is `null`  \n  \n -or-  \n  \n <code>localName</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;xmlNamespace&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>xmlNamespace</code> is `null`"},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,86],"content":"<ph id=\"ph1\">&lt;code&gt;localName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>localName</code> is `null`."}],"pos":[16040,16133],"yaml":true},{"content":"Specifies the path to use when loading an assembly.","nodes":[{"pos":[0,51],"content":"Specifies the path to use when loading an assembly.","nodes":[{"content":"Specifies the path to use when loading an assembly.","pos":[0,51]}]}],"pos":[17192,17244],"yaml":true},{"content":"The short name of the assembly without an extension or path specified (equivalent to <xref href=\"System.Reflection.AssemblyName.Name\"></xref>).","nodes":[{"pos":[0,143],"content":"The short name of the assembly without an extension or path specified (equivalent to <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName.Name\"&gt;&lt;/xref&gt;</ph>).","source":"The short name of the assembly without an extension or path specified (equivalent to <xref href=\"System.Reflection.AssemblyName.Name\"></xref>)."}],"pos":[17423,17567],"yaml":true},{"content":"The file path of the assembly. The assembly path must be a full file path containing a file extension.","nodes":[{"pos":[0,102],"content":"The file path of the assembly. The assembly path must be a full file path containing a file extension.","nodes":[{"content":"The file path of the assembly. The assembly path must be a full file path containing a file extension.","pos":[0,102],"nodes":[{"content":"The file path of the assembly.","pos":[0,30]},{"content":"The assembly path must be a full file path containing a file extension.","pos":[31,102]}]}]}],"pos":[17635,17738],"yaml":true},{"content":"<code>assemblyName</code> is `null`  \n  \n -or-  \n  \n <code>assemblyPath</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>assemblyName</code> is `null`"},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,89],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyPath</code> is `null`."}],"pos":[17920,18016],"yaml":true},{"content":"<code>assemblyName</code> is <xref href=\"System.String.Empty\"></xref>  \n  \n -or-  \n  \n <code>assemblyPath</code> is <xref href=\"System.String.Empty\"></xref>  \n  \n -or-  \n  \n <code>assemblyPath</code> is not a full file path containing a file extension.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>","source":"<code>assemblyName</code> is <xref href=\"System.String.Empty\"></xref>"},{"pos":[76,80],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[87,156],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>","source":"<code>assemblyPath</code> is <xref href=\"System.String.Empty\"></xref>"},{"pos":[163,167],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[174,252],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyPath&lt;/code&gt;</ph> is not a full file path containing a file extension.","source":"<code>assemblyPath</code> is not a full file path containing a file extension."}],"pos":[18142,18409],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.XamlTypeMapper\n  commentId: T:System.Windows.Markup.XamlTypeMapper\n  id: XamlTypeMapper\n  children:\n  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])\n  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])\n  - System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)\n  - System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)\n  - System.Windows.Markup.XamlTypeMapper.DefaultMapper\n  - System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)\n  - System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)\n  langs:\n  - csharp\n  name: XamlTypeMapper\n  nameWithType: XamlTypeMapper\n  fullName: System.Windows.Markup.XamlTypeMapper\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Maps a XAML element name to the appropriate CLR <xref href=\"System.Type\"></xref> in assemblies.\n  remarks: \"<xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>. For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>.  \\n  \\n <xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code. This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.  \\n  \\n You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>. The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>call.  \\n  \\n## Default Mapper  \\n You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property. The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.  \\n  \\n<a name=\\\"xamlTextUsage_XamlTypeMapper\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: public class XamlTypeMapper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])\n  commentId: M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])\n  id: '#ctor(System.String[])'\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: XamlTypeMapper(String[])\n  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])\n  fullName: XamlTypeMapper.XamlTypeMapper(String[])\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> class by specifying an array of assembly names that the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.\n  syntax:\n    content: public XamlTypeMapper (string[] assemblyNames);\n    parameters:\n    - id: assemblyNames\n      type: System.String[]\n      description: The array of assembly names the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.\n  overload: System.Windows.Markup.XamlTypeMapper.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyNames</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])\n  commentId: M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])\n  id: '#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])'\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: XamlTypeMapper(String[], NamespaceMapEntry[])\n  nameWithType: XamlTypeMapper.XamlTypeMapper(String[], NamespaceMapEntry[])\n  fullName: XamlTypeMapper.XamlTypeMapper(String[], NamespaceMapEntry[])\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> class, using the specified array of assembly names and the specified namespace maps.\n  syntax:\n    content: public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);\n    parameters:\n    - id: assemblyNames\n      type: System.String[]\n      description: The array of assembly names the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.\n    - id: namespaceMaps\n      type: System.Windows.Markup.NamespaceMapEntry[]\n      description: The array of namespace maps the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> should use.\n  overload: System.Windows.Markup.XamlTypeMapper.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyNames</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)\n  commentId: M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)\n  id: AddMappingProcessingInstruction(System.String,System.String,System.String)\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: AddMappingProcessingInstruction(String, String, String)\n  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String, String, String)\n  fullName: XamlTypeMapper.AddMappingProcessingInstruction(String, String, String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> information.\n  remarks: \"<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.  For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  \\n  \\n```  \\n<Window xmlns:SDK=\\\"clr-namespace:Samples;assembly=SDKSamples\\\">  \\n...  \\n```  \\n  \\n The `xmlNamespace` is `SDK`, the `clrNamespace` is `Samples`, and the `assemblyName` is `SDKSamples`.\"\n  syntax:\n    content: public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);\n    parameters:\n    - id: xmlNamespace\n      type: System.String\n      description: The prefix for the XML namespace..\n    - id: clrNamespace\n      type: System.String\n      description: The CLR  namespace that contains the types to map.\n    - id: assemblyName\n      type: System.String\n      description: The assembly that contains the CLR  namespace.\n  overload: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>xmlNamespace</code> is `null`  \\n  \\n -or-  \\n  \\n <code>clrNamespace</code> is `null`  \\n  \\n -or-  \\n  \\n <code>assemblyName</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)\n  commentId: M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)\n  id: AllowInternalType(System.Type)\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: AllowInternalType(Type)\n  nameWithType: XamlTypeMapper.AllowInternalType(Type)\n  fullName: XamlTypeMapper.AllowInternalType(Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Requests permission for a <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> derived type that is called under full trust to access a specific internal type.\n  remarks: \"If not overridden by a subclass, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> always returns `false`.  \\n  \\n When overridden by a subclass, the behavior should be that <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> should return `true` if the internal type can be accessed; otherwise, `false`.\"\n  syntax:\n    content: protected virtual bool AllowInternalType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to access.\n    return:\n      type: System.Boolean\n      description: '`true` if the internal type can be accessed; otherwise, `false`.'\n  overload: System.Windows.Markup.XamlTypeMapper.AllowInternalType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper\n  commentId: P:System.Windows.Markup.XamlTypeMapper.DefaultMapper\n  id: DefaultMapper\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: DefaultMapper\n  nameWithType: XamlTypeMapper.DefaultMapper\n  fullName: XamlTypeMapper.DefaultMapper\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Gets an instance of the <xref href=\"System.Windows.Markup.XamlTypeMapper\"></xref> to use if one has not been specified.\n  remarks: \"The default mapper only works on a default assembly list. No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used. In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`.  \\n  \\n Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all. It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API. For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).\"\n  syntax:\n    content: public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }\n    return:\n      type: System.Windows.Markup.XamlTypeMapper\n      description: The default type mapper.\n  overload: System.Windows.Markup.XamlTypeMapper.DefaultMapper*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)\n  commentId: M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)\n  id: GetType(System.String,System.String)\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: GetType(String, String)\n  nameWithType: XamlTypeMapper.GetType(String, String)\n  fullName: XamlTypeMapper.GetType(String, String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Gets the CLR <xref href=\"System.Type\"></xref> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.\n  remarks: \"If a type cannot be found that maps to the provided information, `null` is returned.  \\n  \\n Do not include the prefix as part of `localName`. For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call.\"\n  syntax:\n    content: public Type GetType (string xmlNamespace, string localName);\n    parameters:\n    - id: xmlNamespace\n      type: System.String\n      description: The specified XML namespace prefix.\n    - id: localName\n      type: System.String\n      description: The \"local\" name of the XAML element to obtain the mapped <xref href=\"System.Type\"></xref> for. Local in this context means as mapped versus the provided <code>xmlNamespace</code>.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> for the object, or `null` if no mapping could be resolved.\n  overload: System.Windows.Markup.XamlTypeMapper.GetType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>xmlNamespace</code> is `null`  \\n  \\n -or-  \\n  \\n <code>localName</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)\n  commentId: M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)\n  id: SetAssemblyPath(System.String,System.String)\n  parent: System.Windows.Markup.XamlTypeMapper\n  langs:\n  - csharp\n  name: SetAssemblyPath(String, String)\n  nameWithType: XamlTypeMapper.SetAssemblyPath(String, String)\n  fullName: XamlTypeMapper.SetAssemblyPath(String, String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Markup\n  summary: Specifies the path to use when loading an assembly.\n  syntax:\n    content: public void SetAssemblyPath (string assemblyName, string assemblyPath);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: The short name of the assembly without an extension or path specified (equivalent to <xref href=\"System.Reflection.AssemblyName.Name\"></xref>).\n    - id: assemblyPath\n      type: System.String\n      description: The file path of the assembly. The assembly path must be a full file path containing a file extension.\n  overload: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>assemblyName</code> is `null`  \\n  \\n -or-  \\n  \\n <code>assemblyPath</code> is `null`.\"\n  - type: System.Windows.Markup.XamlParseException\n    commentId: T:System.Windows.Markup.XamlParseException\n    description: \"<code>assemblyName</code> is <xref href=\\\"System.String.Empty\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>assemblyPath</code> is <xref href=\\\"System.String.Empty\\\"></xref>  \\n  \\n -or-  \\n  \\n <code>assemblyPath</code> is not a full file path containing a file extension.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Markup.XamlParseException\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XamlParseException\n  nameWithType: XamlParseException\n  fullName: System.Windows.Markup.XamlParseException\n- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: XamlTypeMapper(String[])\n  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])\n  fullName: XamlTypeMapper.XamlTypeMapper(String[])\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: XamlTypeMapper(String[], NamespaceMapEntry[])\n  nameWithType: XamlTypeMapper.XamlTypeMapper(String[], NamespaceMapEntry[])\n  fullName: XamlTypeMapper.XamlTypeMapper(String[], NamespaceMapEntry[])\n- uid: System.Windows.Markup.NamespaceMapEntry\n  name: NamespaceMapEntry\n  nameWithType: NamespaceMapEntry\n  fullName: System.Windows.Markup.NamespaceMapEntry\n- uid: System.Windows.Markup.NamespaceMapEntry[]\n  parent: System.Windows.Markup\n  isExternal: false\n  name: NamespaceMapEntry[]\n  nameWithType: NamespaceMapEntry[]\n  fullName: System.Windows.Markup.NamespaceMapEntry[]\n  spec.csharp:\n  - uid: System.Windows.Markup.NamespaceMapEntry\n    name: NamespaceMapEntry\n    nameWithType: NamespaceMapEntry\n    fullName: System.Windows.Markup.NamespaceMapEntry\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: AddMappingProcessingInstruction(String, String, String)\n  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String, String, String)\n  fullName: XamlTypeMapper.AddMappingProcessingInstruction(String, String, String)\n- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: AllowInternalType(Type)\n  nameWithType: XamlTypeMapper.AllowInternalType(Type)\n  fullName: XamlTypeMapper.AllowInternalType(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: DefaultMapper\n  nameWithType: XamlTypeMapper.DefaultMapper\n  fullName: XamlTypeMapper.DefaultMapper\n- uid: System.Windows.Markup.XamlTypeMapper\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XamlTypeMapper\n  nameWithType: XamlTypeMapper\n  fullName: System.Windows.Markup.XamlTypeMapper\n- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: GetType(String, String)\n  nameWithType: XamlTypeMapper.GetType(String, String)\n  fullName: XamlTypeMapper.GetType(String, String)\n- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: SetAssemblyPath(String, String)\n  nameWithType: XamlTypeMapper.SetAssemblyPath(String, String)\n  fullName: XamlTypeMapper.SetAssemblyPath(String, String)\n- uid: System.Windows.Markup.XamlTypeMapper.#ctor*\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: XamlTypeMapper\n  nameWithType: XamlTypeMapper.XamlTypeMapper\n  fullName: XamlTypeMapper.XamlTypeMapper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: AddMappingProcessingInstruction\n  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction\n  fullName: XamlTypeMapper.AddMappingProcessingInstruction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType*\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: AllowInternalType\n  nameWithType: XamlTypeMapper.AllowInternalType\n  fullName: XamlTypeMapper.AllowInternalType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper*\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: DefaultMapper\n  nameWithType: XamlTypeMapper.DefaultMapper\n  fullName: XamlTypeMapper.DefaultMapper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n- uid: System.Windows.Markup.XamlTypeMapper.GetType*\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: GetType\n  nameWithType: XamlTypeMapper.GetType\n  fullName: XamlTypeMapper.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*\n  parent: System.Windows.Markup.XamlTypeMapper\n  isExternal: false\n  name: SetAssemblyPath\n  nameWithType: XamlTypeMapper.SetAssemblyPath\n  fullName: XamlTypeMapper.SetAssemblyPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/XamlTypeMapper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}