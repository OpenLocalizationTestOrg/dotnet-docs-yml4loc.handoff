{"nodes":[{"content":"Defines an abstract base class for a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes security tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.","nodes":[{"pos":[0,217],"content":"Defines an abstract base class for a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> that processes security tokens of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"Defines an abstract base class for a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes security tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."}],"pos":[1194,1412],"yaml":true},{"content":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"></xref> class.","nodes":[{"pos":[0,146],"content":"Called from constructors in derived classes to initialize the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class.","source":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"></xref> class."}],"pos":[5144,5291],"yaml":true},{"content":"Indicates whether the current XML element can be read as a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.","nodes":[{"pos":[0,130],"content":"Indicates whether the current XML element can be read as a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates whether the current XML element can be read as a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."}],"pos":[6613,6744],"yaml":true},{"content":"An XML reader positioned at a start element. The reader should not be advanced.","nodes":[{"pos":[0,79],"content":"An XML reader positioned at a start element. The reader should not be advanced.","nodes":[{"content":"An XML reader positioned at a start element. The reader should not be advanced.","pos":[0,79],"nodes":[{"content":"An XML reader positioned at a start element.","pos":[0,44]},{"content":"The reader should not be advanced.","pos":[45,79]}]}]}],"pos":[6917,6997],"yaml":true},{"content":"`true` if the reader is pointing to a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the reader is pointing to a <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the reader is pointing to a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`."}],"pos":[7055,7187],"yaml":true},{"content":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.","nodes":[{"pos":[0,145],"content":"Gets a value that indicates whether this handler can write tokens of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."}],"pos":[8340,8486],"yaml":true},{"content":"`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`. Always `true`.","nodes":[{"pos":[0,153],"content":"`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`. Always `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the handler can write tokens of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,138],"source":"`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`."},{"content":"Always <ph id=\"ph1\">`true`</ph>.","pos":[139,153],"source":" Always `true`."}]}],"pos":[8611,8767],"yaml":true},{"content":"Returns the URIs used in requests to identify a token of the type that can be processed by this handler.","nodes":[{"pos":[0,104],"content":"Returns the URIs used in requests to identify a token of the type that can be processed by this handler.","nodes":[{"content":"Returns the URIs used in requests to identify a token of the type that can be processed by this handler.","pos":[0,104]}]}],"pos":[9985,10090],"yaml":true},{"content":"The set of URIs that identify the token type that this handler supports.","nodes":[{"pos":[0,72],"content":"The set of URIs that identify the token type that this handler supports.","nodes":[{"content":"The set of URIs that identify the token type that this handler supports.","pos":[0,72]}]}],"pos":[10244,10317],"yaml":true},{"content":"Reads a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> from the specified reader.","nodes":[{"pos":[0,105],"content":"Reads a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> from the specified reader.","source":"Reads a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> from the specified reader."}],"pos":[11554,11660],"yaml":true},{"content":"An XML reader positioned at the start element of the token.","nodes":[{"pos":[0,59],"content":"An XML reader positioned at the start element of the token.","nodes":[{"content":"An XML reader positioned at the start element of the token.","pos":[0,59]}]}],"pos":[11867,11927],"yaml":true},{"content":"The username security token that was deserialized from the XML.","nodes":[{"pos":[0,63],"content":"The username security token that was deserialized from the XML.","nodes":[{"content":"The username security token that was deserialized from the XML.","pos":[0,63]}]}],"pos":[12012,12076],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[12272,12303],"yaml":true},{"content":"The token cannot be read.","nodes":[{"pos":[0,25],"content":"The token cannot be read.","nodes":[{"content":"The token cannot be read.","pos":[0,25]}]}],"pos":[12395,12421],"yaml":true},{"content":"The password was not in plain text format.","nodes":[{"pos":[0,42],"content":"The password was not in plain text format.","nodes":[{"content":"The password was not in plain text format.","pos":[0,42]}]}],"pos":[12523,12566],"yaml":true},{"content":"An unknown element was found in the security token or the username was not specified.","nodes":[{"pos":[0,85],"content":"An unknown element was found in the security token or the username was not specified.","nodes":[{"content":"An unknown element was found in the security token or the username was not specified.","pos":[0,85]}]}],"pos":[12676,12762],"yaml":true},{"content":"Gets or sets a value that specifies whether the password will be retained in the bootstrap token that is attached to the <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that is returned by the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\"></xref> method.","nodes":[{"pos":[0,345],"content":"Gets or sets a value that specifies whether the password will be retained in the bootstrap token that is attached to the <ph id=\"ph1\">&lt;xref href=\"System.Security.Claims.ClaimsIdentity\"&gt;&lt;/xref&gt;</ph> that is returned by the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\"&gt;&lt;/xref&gt;</ph> method.","source":"Gets or sets a value that specifies whether the password will be retained in the bootstrap token that is attached to the <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that is returned by the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\"></xref> method."}],"pos":[13821,14167],"yaml":true},{"content":"`true` if the password should be retained in the bootstrap token; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,109],"content":"`true` if the password should be retained in the bootstrap token; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the password should be retained in the bootstrap token; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,85],"source":"`true` if the password should be retained in the bootstrap token; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[86,109],"source":" The default is `false`."}]}],"pos":[14297,14409],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the tokens that this handler processes.","nodes":[{"pos":[0,84],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the tokens that this handler processes.","source":"Gets the <xref href=\"System.Type\"></xref> of the tokens that this handler processes."}],"pos":[15540,15625],"yaml":true},{"content":"The type of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.","nodes":[{"pos":[0,83],"content":"The type of <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"The type of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."}],"pos":[15743,15827],"yaml":true},{"content":"Serializes the specified <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> to XML.","nodes":[{"pos":[0,103],"content":"Serializes the specified <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> to XML.","source":"Serializes the specified <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> to XML."}],"pos":[17227,17331],"yaml":true},{"content":"The XML writer to use to serialize the token.","nodes":[{"pos":[0,45],"content":"The XML writer to use to serialize the token.","nodes":[{"content":"The XML writer to use to serialize the token.","pos":[0,45]}]}],"pos":[17551,17597],"yaml":true},{"content":"The token to serialize.","nodes":[{"pos":[0,23],"content":"The token to serialize.","nodes":[{"content":"The token to serialize.","pos":[0,23]}]}],"pos":[17686,17710],"yaml":true},{"content":"<code>writer</code> is `null`.  \n  \n -or-  \n  \n <code>token</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."},{"pos":[37,41],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[48,77],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>token</code> is `null`."}],"pos":[17907,17991],"yaml":true},{"content":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>."}],"pos":[18101,18215],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  commentId: T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  id: UserNameSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: UserNameSecurityTokenHandler\n  nameWithType: UserNameSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Defines an abstract base class for a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes security tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  syntax:\n    content: 'public abstract class UserNameSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  derivedClasses:\n  - System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler\n  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor\n  commentId: M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: UserNameSecurityTokenHandler()\n  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()\n  fullName: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.UserNameSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: protected UserNameSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: UserNameSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: UserNameSecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Indicates whether the current XML element can be read as a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at a start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: '`true` if the reader is pointing to a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken\n  commentId: P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: UserNameSecurityTokenHandler.CanWriteToken\n  fullName: UserNameSecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>; otherwise, `false`. Always `true`.'\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  commentId: M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns the URIs used in requests to identify a token of the type that can be processed by this handler.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The set of URIs that identify the token type that this handler supports.\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: UserNameSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: UserNameSecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Reads a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> from the specified reader.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The username security token that was deserialized from the XML.\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: The token cannot be read.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The password was not in plain text format.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An unknown element was found in the security token or the username was not specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword\n  commentId: P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword\n  id: RetainPassword\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: RetainPassword\n  nameWithType: UserNameSecurityTokenHandler.RetainPassword\n  fullName: UserNameSecurityTokenHandler.RetainPassword\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets a value that specifies whether the password will be retained in the bootstrap token that is attached to the <xref href=\"System.Security.Claims.ClaimsIdentity\"></xref> that is returned by the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\"></xref> method.\n  syntax:\n    content: public virtual bool RetainPassword { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the password should be retained in the bootstrap token; otherwise, `false`. The default is `false`.'\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType\n  commentId: P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: UserNameSecurityTokenHandler.TokenType\n  fullName: UserNameSecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the <xref href=\"System.Type\"></xref> of the tokens that this handler processes.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: The type of <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: UserNameSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: UserNameSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> to XML.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to use to serialize the token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to serialize.\n  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>writer</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>token</code> is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandler\n  nameWithType: SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xml.XmlException\n  parent: System.Xml\n  isExternal: false\n  name: XmlException\n  nameWithType: XmlException\n  fullName: System.Xml.XmlException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: UserNameSecurityTokenHandler()\n  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()\n  fullName: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: UserNameSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: UserNameSecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: UserNameSecurityTokenHandler.CanWriteToken\n  fullName: UserNameSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: UserNameSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: UserNameSecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: RetainPassword\n  nameWithType: UserNameSecurityTokenHandler.RetainPassword\n  fullName: UserNameSecurityTokenHandler.RetainPassword\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: UserNameSecurityTokenHandler.TokenType\n  fullName: UserNameSecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: UserNameSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: UserNameSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: UserNameSecurityTokenHandler\n  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler\n  fullName: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: UserNameSecurityTokenHandler.CanReadToken\n  fullName: UserNameSecurityTokenHandler.CanReadToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: UserNameSecurityTokenHandler.CanWriteToken\n  fullName: UserNameSecurityTokenHandler.CanWriteToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  fullName: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: UserNameSecurityTokenHandler.ReadToken\n  fullName: UserNameSecurityTokenHandler.ReadToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: RetainPassword\n  nameWithType: UserNameSecurityTokenHandler.RetainPassword\n  fullName: UserNameSecurityTokenHandler.RetainPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: UserNameSecurityTokenHandler.TokenType\n  fullName: UserNameSecurityTokenHandler.TokenType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: UserNameSecurityTokenHandler.WriteToken\n  fullName: UserNameSecurityTokenHandler.WriteToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/UserNameSecurityTokenHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(String)\n  nameWithType: SecurityTokenHandler.CanReadToken(String)\n  fullName: SecurityTokenHandler.CanReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SecurityTokenHandler.CanValidateToken\n  fullName: SecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: Configuration\n  nameWithType: SecurityTokenHandler.Configuration\n  fullName: SecurityTokenHandler.Configuration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ContainingCollection\n  nameWithType: SecurityTokenHandler.ContainingCollection\n  fullName: SecurityTokenHandler.ContainingCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateSecurityTokenReference(SecurityToken, Boolean)\n  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n  fullName: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  fullName: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: DetectReplayedToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n  fullName: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(String)\n  nameWithType: SecurityTokenHandler.ReadToken(String)\n  fullName: SecurityTokenHandler.ReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader, SecurityTokenResolver)\n  nameWithType: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n  fullName: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationFailure(SecurityToken, String)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n  fullName: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationSuccess(SecurityToken)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n  fullName: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: SecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  fullName: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)\n  fullName: SecurityTokenHandler.WriteToken(SecurityToken)\n"}