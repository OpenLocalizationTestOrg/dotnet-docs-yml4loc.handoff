{"nodes":[{"content":"A factory that provides instances of <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.","nodes":[{"pos":[0,209],"content":"A factory that provides instances of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;&lt;/xref&gt;</ph> in managed hosting environments where the host instance is created dynamically in response to incoming messages.","source":"A factory that provides instances of <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages."}],"pos":[632,842],"yaml":true},{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \n  \n If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.WebServiceHostFactory> class.","nodes":[{"pos":[0,150],"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).","nodes":[{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).","pos":[0,150]}]},{"pos":[157,376],"content":"If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.WebServiceHostFactory> class.","nodes":[{"content":"If you have implemented a custom derivative of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>, consider also implementing a factory that derives from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activation.WebServiceHostFactory&gt;</ph> class.","pos":[0,219],"source":"If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.WebServiceHostFactory> class."}]}],"pos":[853,1234],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"></xref> class."}],"pos":[3392,3507],"yaml":true},{"content":"This method is not called directly. It is called when a service is being dynamically activated.","nodes":[{"pos":[0,95],"content":"This method is not called directly. It is called when a service is being dynamically activated.","nodes":[{"content":"This method is not called directly. It is called when a service is being dynamically activated.","pos":[0,95],"nodes":[{"content":"This method is not called directly.","pos":[0,35]},{"content":"It is called when a service is being dynamically activated.","pos":[36,95]}]}]}],"pos":[3518,3614],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the specified <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> derived class with the specified base addresses.","nodes":[{"pos":[0,145],"content":"Creates an instance of the specified <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;&lt;/xref&gt;</ph> derived class with the specified base addresses.","source":"Creates an instance of the specified <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> derived class with the specified base addresses."}],"pos":[4960,5106],"yaml":true},{"content":"Override this method to create the required service host type and perform any needed processing.","nodes":[{"pos":[0,96],"content":"Override this method to create the required service host type and perform any needed processing.","nodes":[{"content":"Override this method to create the required service host type and perform any needed processing.","pos":[0,96]}]}],"pos":[5117,5214],"yaml":true,"extradata":"MT"},{"content":"The type of service host to create.","nodes":[{"pos":[0,35],"content":"The type of service host to create.","nodes":[{"content":"The type of service host to create.","pos":[0,35]}]}],"pos":[5510,5546],"yaml":true},{"content":"An array of base addresses for the service.","nodes":[{"pos":[0,43],"content":"An array of base addresses for the service.","nodes":[{"content":"An array of base addresses for the service.","pos":[0,43]}]}],"pos":[5614,5658],"yaml":true},{"content":"An instance of a <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class.","nodes":[{"pos":[0,84],"content":"An instance of a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> derived class.","source":"An instance of a <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class."}],"pos":[5733,5818],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.WebServiceHostFactory\n  commentId: T:System.ServiceModel.Activation.WebServiceHostFactory\n  id: WebServiceHostFactory\n  children:\n  - System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  - System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  langs:\n  - csharp\n  name: WebServiceHostFactory\n  nameWithType: WebServiceHostFactory\n  fullName: System.ServiceModel.Activation.WebServiceHostFactory\n  type: Class\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Activation\n  summary: A factory that provides instances of <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.\n  remarks: \"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \\n  \\n If you have implemented a custom derivative of <xref:System.ServiceModel.Web.WebServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.WebServiceHostFactory> class.\"\n  example:\n  - \"The following example shows how to derive a class from <xref:System.ServiceModel.Activation.WebServiceHostFactory>.  \\n  \\n  \\n  \\n To have your derived Web service host factory used, specify it in a .SVC file. The following example shows the syntax used in a .svc file.  \\n  \\n```  \\n<%@ServiceHost language=c# Service=\\\"Microsoft.Samples.MyWCFService\\\" Factory=\\\"Microsoft.Samples.MyWebServiceHostFactory\\\" %>  \\n```\"\n  syntax:\n    content: 'public class WebServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Activation.ServiceHostFactoryBase\n  - System.ServiceModel.Activation.ServiceHostFactory\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/WebServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  commentId: M:System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  langs:\n  - csharp\n  name: WebServiceHostFactory()\n  nameWithType: WebServiceHostFactory.WebServiceHostFactory()\n  fullName: WebServiceHostFactory.WebServiceHostFactory()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Activation\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.WebServiceHostFactory\"></xref> class.\n  remarks: This method is not called directly. It is called when a service is being dynamically activated.\n  syntax:\n    content: public WebServiceHostFactory ();\n    parameters: []\n  overload: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/WebServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  commentId: M:System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  id: CreateServiceHost(System.Type,System.Uri[])\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  langs:\n  - csharp\n  name: CreateServiceHost(Type, Uri[])\n  nameWithType: WebServiceHostFactory.CreateServiceHost(Type, Uri[])\n  fullName: WebServiceHostFactory.CreateServiceHost(Type, Uri[])\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Activation\n  summary: Creates an instance of the specified <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> derived class with the specified base addresses.\n  remarks: Override this method to create the required service host type and perform any needed processing.\n  example:\n  - The following example shows a basic implementation of this method.\n  syntax:\n    content: protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service host to create.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An array of base addresses for the service.\n    return:\n      type: System.ServiceModel.ServiceHost\n      description: An instance of a <xref href=\"System.ServiceModel.ServiceHost\"></xref> derived class.\n  overload: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/WebServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Activation.ServiceHostFactory\n  parent: System.ServiceModel.Activation\n  isExternal: false\n  name: ServiceHostFactory\n  nameWithType: ServiceHostFactory\n  fullName: System.ServiceModel.Activation.ServiceHostFactory\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: WebServiceHostFactory()\n  nameWithType: WebServiceHostFactory.WebServiceHostFactory()\n  fullName: WebServiceHostFactory.WebServiceHostFactory()\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost(Type, Uri[])\n  nameWithType: WebServiceHostFactory.CreateServiceHost(Type, Uri[])\n  fullName: WebServiceHostFactory.CreateServiceHost(Type, Uri[])\n- uid: System.ServiceModel.ServiceHost\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHost\n  nameWithType: ServiceHost\n  fullName: System.ServiceModel.ServiceHost\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: WebServiceHostFactory\n  nameWithType: WebServiceHostFactory.WebServiceHostFactory\n  fullName: WebServiceHostFactory.WebServiceHostFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/WebServiceHostFactory.xml\n- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*\n  parent: System.ServiceModel.Activation.WebServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost\n  nameWithType: WebServiceHostFactory.CreateServiceHost\n  fullName: WebServiceHostFactory.CreateServiceHost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/WebServiceHostFactory.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost(String, Uri[])\n  nameWithType: ServiceHostFactory.CreateServiceHost(String, Uri[])\n  fullName: ServiceHostFactory.CreateServiceHost(String, Uri[])\n"}