{"nodes":[{"content":"Defines the interface that must be implemented by channel listeners to accept type-specific channels.","nodes":[{"pos":[0,101],"content":"Defines the interface that must be implemented by channel listeners to accept type-specific channels.","nodes":[{"content":"Defines the interface that must be implemented by channel listeners to accept type-specific channels.","pos":[0,101]}]}],"pos":[935,1037],"yaml":true},{"content":"Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.  \n  \n Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods. If users want to accept different channel types, they can create additional channel listeners for each type of channel required.","nodes":[{"pos":[0,301],"content":"Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.","nodes":[{"content":"Listener factories that implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601&gt;</ph> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.","pos":[0,301],"source":"Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service."}]},{"pos":[308,910],"content":"Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods. If users want to accept different channel types, they can create additional channel listeners for each type of channel required.","nodes":[{"content":"Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods. If users want to accept different channel types, they can create additional channel listeners for each type of channel required.","pos":[0,602],"nodes":[{"content":"Implementing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601&gt;</ph> contract allows users to accept multiple channels of a given type without having to specify the channel type each time.","pos":[0,193],"source":"Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time."},{"content":"In other words, defining the channel type as a generic parameter for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601&gt;</ph> interface means that it is not necessary to pass the type into the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A&gt;</ph> methods.","pos":[194,473],"source":" In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods."},{"content":"If users want to accept different channel types, they can create additional channel listeners for each type of channel required.","pos":[474,602]}]}]}],"pos":[1048,1963],"yaml":true,"extradata":"MT"},{"content":"The type of channel that the channel listener accepts.","nodes":[{"pos":[0,54],"content":"The type of channel that the channel listener accepts.","nodes":[{"content":"The type of channel that the channel listener accepts.","pos":[0,54]}]}],"pos":[2171,2226],"yaml":true},{"content":"Accepts a channel of a specified type for communication with a client.","nodes":[{"pos":[0,70],"content":"Accepts a channel of a specified type for communication with a client.","nodes":[{"content":"Accepts a channel of a specified type for communication with a client.","pos":[0,70]}]}],"pos":[3432,3503],"yaml":true},{"content":"It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.","nodes":[{"pos":[0,268],"content":"It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.","nodes":[{"content":"It is recommended that the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29&gt;</ph> overload with the explicit timeout be used.","pos":[0,162],"source":"It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used."},{"content":"The <ph id=\"ph1\">`timeout`</ph> specified for that method overrides any default timeouts set by the system for the service.","pos":[163,268],"source":" The `timeout` specified for that method overrides any default timeouts set by the system for the service."}]}],"pos":[3514,3783],"yaml":true,"extradata":"MT"},{"content":"A channel of type <code>TChannel</code> accepted by the listener.","nodes":[{"pos":[0,65],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> accepted by the listener.","source":"A channel of type <code>TChannel</code> accepted by the listener."}],"pos":[3911,3977],"yaml":true},{"content":"Accepts a channel of a specified type for communication with a client within a specified interval of time.","nodes":[{"pos":[0,106],"content":"Accepts a channel of a specified type for communication with a client within a specified interval of time.","nodes":[{"content":"Accepts a channel of a specified type for communication with a client within a specified interval of time.","pos":[0,106]}]}],"pos":[5213,5320],"yaml":true},{"content":"It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.","nodes":[{"pos":[0,263],"content":"It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.","nodes":[{"content":"It is recommended that this overload with an explicit timeout be used rather than the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel&gt;</ph>.","pos":[0,157],"source":"It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>."},{"content":"The <ph id=\"ph1\">`timeout`</ph> specified for this method overrides any default timeouts set by the system for the service.","pos":[158,263],"source":" The `timeout` specified for this method overrides any default timeouts set by the system for the service."}]}],"pos":[5331,5595],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out."}],"pos":[5749,5882],"yaml":true},{"content":"A channel of type <code>TChannel</code> accepted by the listener.","nodes":[{"pos":[0,65],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> accepted by the listener.","source":"A channel of type <code>TChannel</code> accepted by the listener."}],"pos":[5934,6000],"yaml":true},{"content":"Begins an asynchronous operation to accept a channel.","nodes":[{"pos":[0,53],"content":"Begins an asynchronous operation to accept a channel.","nodes":[{"content":"Begins an asynchronous operation to accept a channel.","pos":[0,53]}]}],"pos":[7362,7416],"yaml":true},{"content":"It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.","nodes":[{"pos":[0,312],"content":"It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.","nodes":[{"content":"It is recommended that the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> overload with the explicit timeout be used.","pos":[0,206],"source":"It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used."},{"content":"The <ph id=\"ph1\">`timeout`</ph> specified for that method overrides any default timeouts set by the system for the service.","pos":[207,312],"source":" The `timeout` specified for that method overrides any default timeouts set by the system for the service."}]}],"pos":[7427,7740],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation."}],"pos":[7929,8085],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.","nodes":[{"pos":[0,137],"content":"An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.","pos":[0,137]}]}],"pos":[8146,8284],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous acceptance of a channel operation.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous acceptance of a channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous acceptance of a channel operation."}],"pos":[8347,8460],"yaml":true},{"content":"Begins an asynchronous operation to accept a channel within a specified interval of time.","nodes":[{"pos":[0,89],"content":"Begins an asynchronous operation to accept a channel within a specified interval of time.","nodes":[{"content":"Begins an asynchronous operation to accept a channel within a specified interval of time.","pos":[0,89]}]}],"pos":[9905,9995],"yaml":true},{"content":"It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.","nodes":[{"pos":[0,328],"content":"It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.","nodes":[{"content":"It is recommended that this overload with an explicit timeout be used rather than the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>.","pos":[0,222],"source":"It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>."},{"content":"The <ph id=\"ph1\">`timeout`</ph> specified for this method overrides any default timeouts set by the system for the service.","pos":[223,328],"source":" The `timeout` specified for this method overrides any default timeouts set by the system for the service."}]}],"pos":[10006,10335],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out."}],"pos":[10536,10669],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation."}],"pos":[10740,10896],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.","nodes":[{"pos":[0,137],"content":"An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.","pos":[0,137]}]}],"pos":[10957,11095],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous acceptance of a channel operation.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous acceptance of a channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous acceptance of a channel operation."}],"pos":[11158,11271],"yaml":true},{"content":"Completes an asynchronous operation to accept a channel.","nodes":[{"pos":[0,56],"content":"Completes an asynchronous operation to accept a channel.","nodes":[{"content":"Completes an asynchronous operation to accept a channel.","pos":[0,56]}]}],"pos":[12554,12611],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\"></xref> method.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\"></xref> method."}],"pos":[12774,12942],"yaml":true},{"content":"A channel of type <code>TChannel</code> accepted by the listener.","nodes":[{"pos":[0,65],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> accepted by the listener.","source":"A channel of type <code>TChannel</code> accepted by the listener."}],"pos":[12994,13060],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  commentId: T:System.ServiceModel.Channels.IChannelListener`1\n  id: IChannelListener`1\n  children:\n  - System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  - System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  langs:\n  - csharp\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Defines the interface that must be implemented by channel listeners to accept type-specific channels.\n  remarks: \"Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.  \\n  \\n Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods. If users want to accept different channel types, they can create additional channel listeners for each type of channel required.\"\n  syntax:\n    content: 'public interface IChannelListener<TChannel> : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel that the channel listener accepts.\n  derivedClasses:\n  - System.ServiceModel.Channels.ChannelListenerBase`1\n  implements:\n  - System.ServiceModel.Channels.IChannelListener\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  commentId: M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  id: AcceptChannel\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: AcceptChannel()\n  nameWithType: IChannelListener<TChannel>.AcceptChannel()\n  fullName: IChannelListener<TChannel>.AcceptChannel()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Accepts a channel of a specified type for communication with a client.\n  remarks: It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.\n  syntax:\n    content: public TChannel AcceptChannel ();\n    parameters: []\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> accepted by the listener.\n  overload: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  id: AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: AcceptChannel(TimeSpan)\n  nameWithType: IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n  fullName: IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Accepts a channel of a specified type for communication with a client within a specified interval of time.\n  remarks: It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.\n  syntax:\n    content: public TChannel AcceptChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> accepted by the listener.\n  overload: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(AsyncCallback, Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n  fullName: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Begins an asynchronous operation to accept a channel.\n  remarks: It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used. The `timeout` specified for that method overrides any default timeouts set by the system for the service.\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous acceptance of a channel operation.\n  overload: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  fullName: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Begins an asynchronous operation to accept a channel within a specified interval of time.\n  remarks: It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>. The `timeout` specified for this method overrides any default timeouts set by the system for the service.\n  syntax:\n    content: public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous acceptance of a channel operation.\n  overload: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  id: EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  langs:\n  - csharp\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Completes an asynchronous operation to accept a channel.\n  syntax:\n    content: public TChannel EndAcceptChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\"></xref> method.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> accepted by the listener.\n  overload: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: AcceptChannel()\n  nameWithType: IChannelListener<TChannel>.AcceptChannel()\n  fullName: IChannelListener<TChannel>.AcceptChannel()\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: AcceptChannel(TimeSpan)\n  nameWithType: IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n  fullName: IChannelListener<TChannel>.AcceptChannel(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: BeginAcceptChannel(AsyncCallback, Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n  fullName: IChannelListener<TChannel>.BeginAcceptChannel(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n  fullName: IChannelListener<TChannel>.BeginAcceptChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: EndAcceptChannel(IAsyncResult)\n  nameWithType: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n  fullName: IChannelListener<TChannel>.EndAcceptChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.IChannelListener`1.AcceptChannel*\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: AcceptChannel\n  nameWithType: IChannelListener<TChannel>.AcceptChannel\n  fullName: IChannelListener<TChannel>.AcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n- uid: System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel*\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: BeginAcceptChannel\n  nameWithType: IChannelListener<TChannel>.BeginAcceptChannel\n  fullName: IChannelListener<TChannel>.BeginAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n- uid: System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel*\n  parent: System.ServiceModel.Channels.IChannelListener`1\n  isExternal: false\n  name: EndAcceptChannel\n  nameWithType: IChannelListener<TChannel>.EndAcceptChannel\n  fullName: IChannelListener<TChannel>.EndAcceptChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener`1.xml\n- uid: System.ServiceModel.Channels.IChannelListener\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n"}