{"nodes":[{"content":"Represents the types of handles the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> class can allocate.","nodes":[{"pos":[0,116],"content":"Represents the types of handles the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> class can allocate.","source":"Represents the types of handles the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> class can allocate."}],"pos":[682,799],"yaml":true},{"content":"This handle type represents an opaque handle, meaning you cannot resolve the address of the pinned object through the handle. You can use this type to track an object and prevent its collection by the garbage collector. This enumeration member is useful when an unmanaged client holds the only reference, which is undetectable from the garbage collector, to a managed object.","nodes":[{"pos":[0,375],"content":"This handle type represents an opaque handle, meaning you cannot resolve the address of the pinned object through the handle. You can use this type to track an object and prevent its collection by the garbage collector. This enumeration member is useful when an unmanaged client holds the only reference, which is undetectable from the garbage collector, to a managed object.","nodes":[{"content":"This handle type represents an opaque handle, meaning you cannot resolve the address of the pinned object through the handle. You can use this type to track an object and prevent its collection by the garbage collector. This enumeration member is useful when an unmanaged client holds the only reference, which is undetectable from the garbage collector, to a managed object.","pos":[0,375],"nodes":[{"content":"This handle type represents an opaque handle, meaning you cannot resolve the address of the pinned object through the handle.","pos":[0,125]},{"content":"You can use this type to track an object and prevent its collection by the garbage collector.","pos":[126,219]},{"content":"This enumeration member is useful when an unmanaged client holds the only reference, which is undetectable from the garbage collector, to a managed object.","pos":[220,375]}]}]}],"pos":[2543,2919],"yaml":true},{"content":"This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref>, but allows the address of the pinned object to be taken. This prevents the garbage collector from moving the object and hence undermines the efficiency of the garbage collector. Use the <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> method to free the allocated handle as soon as possible.","nodes":[{"pos":[0,412],"content":"This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref>, but allows the address of the pinned object to be taken. This prevents the garbage collector from moving the object and hence undermines the efficiency of the garbage collector. Use the <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> method to free the allocated handle as soon as possible.","nodes":[{"content":"This handle type is similar to <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"&gt;&lt;/xref&gt;</ph>, but allows the address of the pinned object to be taken.","pos":[0,160],"source":"This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref>, but allows the address of the pinned object to be taken."},{"content":"This prevents the garbage collector from moving the object and hence undermines the efficiency of the garbage collector.","pos":[161,281]},{"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle.Free\"&gt;&lt;/xref&gt;</ph> method to free the allocated handle as soon as possible.","pos":[282,412],"source":" Use the <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> method to free the allocated handle as soon as possible."}]}],"pos":[4444,4857],"yaml":true},{"content":"This handle type is used to track an object, but allow it to be collected. When an object is collected, the contents of the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> are zeroed. `Weak` references are zeroed before the finalizer runs, so even if the finalizer resurrects the object, the `Weak` reference is still zeroed.","nodes":[{"pos":[0,338],"content":"This handle type is used to track an object, but allow it to be collected. When an object is collected, the contents of the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> are zeroed. `Weak` references are zeroed before the finalizer runs, so even if the finalizer resurrects the object, the `Weak` reference is still zeroed.","nodes":[{"content":"This handle type is used to track an object, but allow it to be collected.","pos":[0,74]},{"content":"When an object is collected, the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> are zeroed.","pos":[75,196],"source":" When an object is collected, the contents of the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> are zeroed."},{"content":"<ph id=\"ph1\">`Weak`</ph> references are zeroed before the finalizer runs, so even if the finalizer resurrects the object, the <ph id=\"ph2\">`Weak`</ph> reference is still zeroed.","pos":[197,338],"source":"`Weak` references are zeroed before the finalizer runs, so even if the finalizer resurrects the object, the `Weak` reference is still zeroed."}]}],"pos":[6370,6709],"yaml":true},{"content":"This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Weak\"></xref>, but the handle is not zeroed if the object is resurrected during finalization.","nodes":[{"pos":[0,180],"content":"This handle type is similar to <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandleType.Weak\"&gt;&lt;/xref&gt;</ph>, but the handle is not zeroed if the object is resurrected during finalization.","source":"This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Weak\"></xref>, but the handle is not zeroed if the object is resurrected during finalization."}],"pos":[8322,8503],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.GCHandleType\n  commentId: T:System.Runtime.InteropServices.GCHandleType\n  id: GCHandleType\n  children:\n  - System.Runtime.InteropServices.GCHandleType.Normal\n  - System.Runtime.InteropServices.GCHandleType.Pinned\n  - System.Runtime.InteropServices.GCHandleType.Weak\n  - System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection\n  langs:\n  - csharp\n  name: GCHandleType\n  nameWithType: GCHandleType\n  fullName: System.Runtime.InteropServices.GCHandleType\n  type: Enum\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Represents the types of handles the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> class can allocate.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum GCHandleType\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandleType.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandleType.Normal\n  commentId: F:System.Runtime.InteropServices.GCHandleType.Normal\n  id: Normal\n  parent: System.Runtime.InteropServices.GCHandleType\n  langs:\n  - csharp\n  name: Normal\n  nameWithType: GCHandleType.Normal\n  fullName: GCHandleType.Normal\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: This handle type represents an opaque handle, meaning you cannot resolve the address of the pinned object through the handle. You can use this type to track an object and prevent its collection by the garbage collector. This enumeration member is useful when an unmanaged client holds the only reference, which is undetectable from the garbage collector, to a managed object.\n  syntax:\n    content: Normal\n    return:\n      type: System.Runtime.InteropServices.GCHandleType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandleType.xml\n- uid: System.Runtime.InteropServices.GCHandleType.Pinned\n  commentId: F:System.Runtime.InteropServices.GCHandleType.Pinned\n  id: Pinned\n  parent: System.Runtime.InteropServices.GCHandleType\n  langs:\n  - csharp\n  name: Pinned\n  nameWithType: GCHandleType.Pinned\n  fullName: GCHandleType.Pinned\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref>, but allows the address of the pinned object to be taken. This prevents the garbage collector from moving the object and hence undermines the efficiency of the garbage collector. Use the <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> method to free the allocated handle as soon as possible.\n  syntax:\n    content: Pinned\n    return:\n      type: System.Runtime.InteropServices.GCHandleType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandleType.xml\n- uid: System.Runtime.InteropServices.GCHandleType.Weak\n  commentId: F:System.Runtime.InteropServices.GCHandleType.Weak\n  id: Weak\n  parent: System.Runtime.InteropServices.GCHandleType\n  langs:\n  - csharp\n  name: Weak\n  nameWithType: GCHandleType.Weak\n  fullName: GCHandleType.Weak\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: This handle type is used to track an object, but allow it to be collected. When an object is collected, the contents of the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> are zeroed. `Weak` references are zeroed before the finalizer runs, so even if the finalizer resurrects the object, the `Weak` reference is still zeroed.\n  syntax:\n    content: Weak\n    return:\n      type: System.Runtime.InteropServices.GCHandleType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandleType.xml\n- uid: System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection\n  commentId: F:System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection\n  id: WeakTrackResurrection\n  parent: System.Runtime.InteropServices.GCHandleType\n  langs:\n  - csharp\n  name: WeakTrackResurrection\n  nameWithType: GCHandleType.WeakTrackResurrection\n  fullName: GCHandleType.WeakTrackResurrection\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: This handle type is similar to <xref href=\"System.Runtime.InteropServices.GCHandleType.Weak\"></xref>, but the handle is not zeroed if the object is resurrected during finalization.\n  syntax:\n    content: WeakTrackResurrection\n    return:\n      type: System.Runtime.InteropServices.GCHandleType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandleType.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Runtime.InteropServices.GCHandleType.Normal\n  parent: System.Runtime.InteropServices.GCHandleType\n  isExternal: false\n  name: Normal\n  nameWithType: GCHandleType.Normal\n  fullName: GCHandleType.Normal\n- uid: System.Runtime.InteropServices.GCHandleType\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandleType\n  nameWithType: GCHandleType\n  fullName: System.Runtime.InteropServices.GCHandleType\n- uid: System.Runtime.InteropServices.GCHandleType.Pinned\n  parent: System.Runtime.InteropServices.GCHandleType\n  isExternal: false\n  name: Pinned\n  nameWithType: GCHandleType.Pinned\n  fullName: GCHandleType.Pinned\n- uid: System.Runtime.InteropServices.GCHandleType.Weak\n  parent: System.Runtime.InteropServices.GCHandleType\n  isExternal: false\n  name: Weak\n  nameWithType: GCHandleType.Weak\n  fullName: GCHandleType.Weak\n- uid: System.Runtime.InteropServices.GCHandleType.WeakTrackResurrection\n  parent: System.Runtime.InteropServices.GCHandleType\n  isExternal: false\n  name: WeakTrackResurrection\n  nameWithType: GCHandleType.WeakTrackResurrection\n  fullName: GCHandleType.WeakTrackResurrection\n"}