{"nodes":[{"content":"Provides the features required to support both complex and simple scenarios when binding to a data source.","nodes":[{"pos":[0,106],"content":"Provides the features required to support both complex and simple scenarios when binding to a data source.","nodes":[{"content":"Provides the features required to support both complex and simple scenarios when binding to a data source.","pos":[0,106]}]}],"pos":[1461,1568],"yaml":true},{"content":"This interface is implemented by the <xref:System.Data.DataView> class. Implementation of a method should exhibit the same behavior as the implementation of that method in the <xref:System.Data.DataView> class.  \n  \n When you call the <xref:System.ComponentModel.IBindingList.ApplySort%2A> or <xref:System.ComponentModel.IBindingList.RemoveSort%2A> methods, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration.  \n  \n When you call the <xref:System.ComponentModel.IBindingList.AddNew%2A> method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where pressing the ESC on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a row not in the \"new\" state.  \n  \n When you remove an item or call the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method on a new row (if that row implements <xref:System.ComponentModel.IEditableObject>), you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemDeleted> enumeration carrying the appropriate index.","nodes":[{"pos":[0,210],"content":"This interface is implemented by the <xref:System.Data.DataView> class. Implementation of a method should exhibit the same behavior as the implementation of that method in the <xref:System.Data.DataView> class.","nodes":[{"content":"This interface is implemented by the <xref:System.Data.DataView> class. Implementation of a method should exhibit the same behavior as the implementation of that method in the <xref:System.Data.DataView> class.","pos":[0,210],"nodes":[{"content":"This interface is implemented by the <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> class.","pos":[0,71],"source":"This interface is implemented by the <xref:System.Data.DataView> class."},{"content":"Implementation of a method should exhibit the same behavior as the implementation of that method in the <ph id=\"ph1\">&lt;xref:System.Data.DataView&gt;</ph> class.","pos":[72,210],"source":" Implementation of a method should exhibit the same behavior as the implementation of that method in the <xref:System.Data.DataView> class."}]}]},{"pos":[217,509],"content":"When you call the <xref:System.ComponentModel.IBindingList.ApplySort%2A> or <xref:System.ComponentModel.IBindingList.RemoveSort%2A> methods, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration.","nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.ApplySort%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A&gt;</ph> methods, you should raise a <ph id=\"ph3\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph4\">&lt;xref:System.ComponentModel.ListChangedType.Reset&gt;</ph> enumeration.","pos":[0,292],"source":"When you call the <xref:System.ComponentModel.IBindingList.ApplySort%2A> or <xref:System.ComponentModel.IBindingList.RemoveSort%2A> methods, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration."}]},{"pos":[516,1144],"content":"When you call the <xref:System.ComponentModel.IBindingList.AddNew%2A> method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where pressing the ESC on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a row not in the \"new\" state.","nodes":[{"content":"When you call the <xref:System.ComponentModel.IBindingList.AddNew%2A> method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where pressing the ESC on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a row not in the \"new\" state.","pos":[0,628],"nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> method, you should raise a <ph id=\"ph2\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph3\">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration carrying the appropriate index.","pos":[0,264],"source":"When you call the <xref:System.ComponentModel.IBindingList.AddNew%2A> method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index."},{"content":"The added row is in a state where pressing the ESC on a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control can remove the new row.","pos":[265,393],"source":" The added row is in a state where pressing the ESC on a <xref:System.Windows.Forms.DataGridView> control can remove the new row."},{"content":"Raising the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration a second time on this row indicates that the item is now a row not in the \"new\" state.","pos":[394,628],"source":" Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a row not in the \"new\" state."}]}]},{"pos":[1151,1525],"content":"When you remove an item or call the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method on a new row (if that row implements <xref:System.ComponentModel.IEditableObject>), you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemDeleted> enumeration carrying the appropriate index.","nodes":[{"content":"When you remove an item or call the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A&gt;</ph> method on a new row (if that row implements <ph id=\"ph2\">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>), you should raise a <ph id=\"ph3\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph4\">&lt;xref:System.ComponentModel.ListChangedType.ItemDeleted&gt;</ph> enumeration carrying the appropriate index.","pos":[0,374],"source":"When you remove an item or call the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method on a new row (if that row implements <xref:System.ComponentModel.IEditableObject>), you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemDeleted> enumeration carrying the appropriate index."}]}],"pos":[1579,3115],"yaml":true,"extradata":"MT"},{"content":"Adds the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to the indexes used for searching.","nodes":[{"pos":[0,105],"content":"Adds the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> to the indexes used for searching.","source":"Adds the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to the indexes used for searching."}],"pos":[5747,5853],"yaml":true},{"content":"The list must support this method. However, support for this method can be a nonoperation.","nodes":[{"pos":[0,90],"content":"The list must support this method. However, support for this method can be a nonoperation.","nodes":[{"content":"The list must support this method. However, support for this method can be a nonoperation.","pos":[0,90],"nodes":[{"content":"The list must support this method.","pos":[0,34]},{"content":"However, support for this method can be a nonoperation.","pos":[35,90]}]}]}],"pos":[5864,5955],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to add to the indexes used for searching.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> to add to the indexes used for searching.","source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to add to the indexes used for searching."}],"pos":[6159,6267],"yaml":true},{"content":"Adds a new item to the list.","nodes":[{"pos":[0,28],"content":"Adds a new item to the list.","nodes":[{"content":"Adds a new item to the list.","pos":[0,28]}]}],"pos":[7486,7515],"yaml":true},{"content":"This method is supported only if <xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`; otherwise, a <xref:System.NotSupportedException> is thrown.  \n  \n Implementing this method means that the <xref:System.ComponentModel.IBindingList> list must understand the type of objects to add to the list and must understand how to create a new instance of that type. For example, if you have a collection of `myCustomer` objects, the <xref:System.ComponentModel.IBindingList.AddNew%2A> method should add a new `myCustomer` object to the list.  \n  \n> [!NOTE]\n>  If the objects in this list implement the <xref:System.ComponentModel.IEditableObject> interface, calling the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method should discard an object, not add it to the list, when the object was created using the <xref:System.ComponentModel.IBindingList.AddNew%2A> method. The object should only be added to the list when the <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> method is called. Therefore, you must sychronize the object and the list carefully.  \n  \n When this method is called, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where hitting Esc on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a normal row (not in new state).","nodes":[{"pos":[0,157],"content":"This method is supported only if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>; otherwise, a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.","source":"This method is supported only if <xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`; otherwise, a <xref:System.NotSupportedException> is thrown."},{"pos":[164,544],"content":"Implementing this method means that the <xref:System.ComponentModel.IBindingList> list must understand the type of objects to add to the list and must understand how to create a new instance of that type. For example, if you have a collection of `myCustomer` objects, the <xref:System.ComponentModel.IBindingList.AddNew%2A> method should add a new `myCustomer` object to the list.","nodes":[{"content":"Implementing this method means that the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> list must understand the type of objects to add to the list and must understand how to create a new instance of that type.","pos":[0,204],"source":"Implementing this method means that the <xref:System.ComponentModel.IBindingList> list must understand the type of objects to add to the list and must understand how to create a new instance of that type."},{"content":"For example, if you have a collection of <ph id=\"ph1\">`myCustomer`</ph> objects, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> method should add a new <ph id=\"ph3\">`myCustomer`</ph> object to the list.","pos":[205,380],"source":" For example, if you have a collection of `myCustomer` objects, the <xref:System.ComponentModel.IBindingList.AddNew%2A> method should add a new `myCustomer` object to the list."}]},{"pos":[552,1104],"content":"[!NOTE]\n If the objects in this list implement the <xref:System.ComponentModel.IEditableObject> interface, calling the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method should discard an object, not add it to the list, when the object was created using the <xref:System.ComponentModel.IBindingList.AddNew%2A> method. The object should only be added to the list when the <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> method is called. Therefore, you must sychronize the object and the list carefully.","leadings":["","> "],"nodes":[{"content":" If the objects in this list implement the <xref:System.ComponentModel.IEditableObject> interface, calling the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method should discard an object, not add it to the list, when the object was created using the <xref:System.ComponentModel.IBindingList.AddNew%2A> method. The object should only be added to the list when the <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> method is called. Therefore, you must sychronize the object and the list carefully.","pos":[8,550],"nodes":[{"content":"If the objects in this list implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface, calling the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A&gt;</ph> method should discard an object, not add it to the list, when the object was created using the <ph id=\"ph3\">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A&gt;</ph> method.","pos":[1,324],"source":" If the objects in this list implement the <xref:System.ComponentModel.IEditableObject> interface, calling the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method should discard an object, not add it to the list, when the object was created using the <xref:System.ComponentModel.IBindingList.AddNew%2A> method."},{"content":"The object should only be added to the list when the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName&gt;</ph> method is called.","pos":[325,476],"source":" The object should only be added to the list when the <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> method is called."},{"content":"Therefore, you must sychronize the object and the list carefully.","pos":[477,542]}]}]},{"pos":[1111,1687],"content":"When this method is called, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where hitting Esc on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a normal row (not in new state).","nodes":[{"content":"When this method is called, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where hitting Esc on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a normal row (not in new state).","pos":[0,576],"nodes":[{"content":"When this method is called, you should raise a <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration carrying the appropriate index.","pos":[0,214],"source":"When this method is called, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index."},{"content":"The added row is in a state where hitting Esc on a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control can remove the new row.","pos":[215,338],"source":" The added row is in a state where hitting Esc on a <xref:System.Windows.Forms.DataGridView> control can remove the new row."},{"content":"Raising the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ListChangedType.ItemAdded&gt;</ph> enumeration a second time on this row indicates that the item is now a normal row (not in new state).","pos":[339,576],"source":" Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a normal row (not in new state)."}]}]}],"pos":[7526,9223],"yaml":true,"extradata":"MT"},{"content":"The item added to the list.","nodes":[{"pos":[0,27],"content":"The item added to the list.","nodes":[{"content":"The item added to the list.","pos":[0,27]}]}],"pos":[9347,9375],"yaml":true},{"content":"<xref href=\"System.ComponentModel.IBindingList.AllowNew\"></xref> is `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.AllowNew\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.AllowNew\"></xref> is `false`."}],"pos":[9546,9623],"yaml":true},{"content":"Gets whether you can update items in the list.","nodes":[{"pos":[0,46],"content":"Gets whether you can update items in the list.","nodes":[{"content":"Gets whether you can update items in the list.","pos":[0,46]}]}],"pos":[10782,10829],"yaml":true},{"content":"`true` if you can update the items in the list; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if you can update the items in the list; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if you can update the items in the list; otherwise, `false`."}],"pos":[10941,11011],"yaml":true},{"content":"Gets whether you can add items to the list using <xref href=\"System.ComponentModel.IBindingList.AddNew\"></xref>.","nodes":[{"pos":[0,112],"content":"Gets whether you can add items to the list using <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.AddNew\"&gt;&lt;/xref&gt;</ph>.","source":"Gets whether you can add items to the list using <xref href=\"System.ComponentModel.IBindingList.AddNew\"></xref>."}],"pos":[12239,12352],"yaml":true},{"content":"If <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> or <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> is `true`, this property returns `false`.","nodes":[{"pos":[0,190],"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">`true`</ph>, this property returns <ph id=\"ph4\">`false`</ph>.","source":"If <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> or <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> is `true`, this property returns `false`."}],"pos":[12363,12554],"yaml":true,"extradata":"MT"},{"content":"`true` if you can add items to the list using <xref href=\"System.ComponentModel.IBindingList.AddNew\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if you can add items to the list using <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.IBindingList.AddNew\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if you can add items to the list using <xref href=\"System.ComponentModel.IBindingList.AddNew\"></xref>; otherwise, `false`."}],"pos":[12665,12797],"yaml":true},{"content":"Gets whether you can remove items from the list, using <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref> or <xref href=\"System.Collections.IList.RemoveAt(System.Int32)\"></xref>.","nodes":[{"pos":[0,195],"content":"Gets whether you can remove items from the list, using <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Remove(System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList.RemoveAt(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","source":"Gets whether you can remove items from the list, using <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref> or <xref href=\"System.Collections.IList.RemoveAt(System.Int32)\"></xref>."}],"pos":[14042,14238],"yaml":true},{"content":"If <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> or <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> is `true`, this property returns `false`.  \n  \n> [!NOTE]\n>  If <xref:System.ComponentModel.IBindingList.AllowRemove%2A> returns `false`, <xref:System.Collections.IList.Remove%2A?displayProperty=fullName> and <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> throw a <xref:System.NotSupportedException>.","nodes":[{"pos":[0,190],"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">`true`</ph>, this property returns <ph id=\"ph4\">`false`</ph>.","source":"If <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> or <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> is `true`, this property returns `false`."},{"pos":[198,470],"content":"[!NOTE]\n If <xref:System.ComponentModel.IBindingList.AllowRemove%2A> returns `false`, <xref:System.Collections.IList.Remove%2A?displayProperty=fullName> and <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> throw a <xref:System.NotSupportedException>.","leadings":["","> "],"nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;</ph> throw a <ph id=\"ph5\">&lt;xref:System.NotSupportedException&gt;</ph>.","pos":[9,270],"source":" If <xref:System.ComponentModel.IBindingList.AllowRemove%2A> returns `false`, <xref:System.Collections.IList.Remove%2A?displayProperty=fullName> and <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> throw a <xref:System.NotSupportedException>."}]}],"pos":[14249,14725],"yaml":true,"extradata":"MT"},{"content":"`true` if you can remove items from the list; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if you can remove items from the list; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if you can remove items from the list; otherwise, `false`."}],"pos":[14839,14907],"yaml":true},{"content":"Sorts the list based on a <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> and a <xref href=\"System.ComponentModel.ListSortDirection\"></xref>.","nodes":[{"pos":[0,155],"content":"Sorts the list based on a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> and a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.ListSortDirection\"&gt;&lt;/xref&gt;</ph>.","source":"Sorts the list based on a <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> and a <xref href=\"System.ComponentModel.ListSortDirection\"></xref>."}],"pos":[16504,16660],"yaml":true},{"content":"If items are added or removed, these items are placed in the order of the sort.  \n  \n This method is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this method throws a <xref:System.NotSupportedException>.","nodes":[{"pos":[0,79],"content":"If items are added or removed, these items are placed in the order of the sort.","nodes":[{"content":"If items are added or removed, these items are placed in the order of the sort.","pos":[0,79]}]},{"pos":[86,254],"content":"This method is supported if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>; otherwise, this method throws a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph>.","source":"This method is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this method throws a <xref:System.NotSupportedException>."}],"pos":[16671,16930],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to sort by.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> to sort by.","source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to sort by."}],"pos":[17186,17264],"yaml":true},{"content":"One of the <xref href=\"System.ComponentModel.ListSortDirection\"></xref> values.","nodes":[{"pos":[0,79],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ListSortDirection\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.ComponentModel.ListSortDirection\"></xref> values."}],"pos":[17355,17435],"yaml":true},{"content":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`."}],"pos":[17609,17693],"yaml":true},{"content":"Returns the index of the row that has the given <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.","nodes":[{"pos":[0,110],"content":"Returns the index of the row that has the given <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the index of the row that has the given <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>."}],"pos":[19072,19183],"yaml":true},{"content":"This method will select the first row where the value of the `property` parameter equals the value of the `key` parameter.  \n  \n This method is supported if <xref:System.ComponentModel.IBindingList.SupportsSearching%2A> is `true`, otherwise this method throws a <xref:System.NotSupportedException>.","nodes":[{"pos":[0,122],"content":"This method will select the first row where the value of the <ph id=\"ph1\">`property`</ph> parameter equals the value of the <ph id=\"ph2\">`key`</ph> parameter.","source":"This method will select the first row where the value of the `property` parameter equals the value of the `key` parameter."},{"pos":[129,298],"content":"This method is supported if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, otherwise this method throws a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph>.","source":"This method is supported if <xref:System.ComponentModel.IBindingList.SupportsSearching%2A> is `true`, otherwise this method throws a <xref:System.NotSupportedException>."}],"pos":[19194,19497],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to search on.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> to search on.","source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to search on."}],"pos":[20223,20303],"yaml":true},{"content":"The value of the <code>property</code> parameter to search for.","nodes":[{"pos":[0,63],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">property</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to search for.","source":"The value of the <code>property</code> parameter to search for."}],"pos":[20362,20426],"yaml":true},{"content":"The index of the row that has the given <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.","nodes":[{"pos":[0,102],"content":"The index of the row that has the given <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"The index of the row that has the given <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>."}],"pos":[20482,20585],"yaml":true},{"content":"<xref href=\"System.ComponentModel.IBindingList.SupportsSearching\"></xref> is `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.SupportsSearching\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.SupportsSearching\"></xref> is `false`."}],"pos":[20754,20840],"yaml":true},{"content":"Gets whether the items in the list are sorted.","nodes":[{"pos":[0,46],"content":"Gets whether the items in the list are sorted.","nodes":[{"content":"Gets whether the items in the list are sorted.","pos":[0,46]}]}],"pos":[21993,22040],"yaml":true},{"content":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.  \n  \n If <xref:System.ComponentModel.IBindingList.IsSorted%2A> returns `true`, items are added or removed in the order of the sort.","nodes":[{"pos":[0,172],"content":"This property is supported if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>; otherwise, this property throws a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph>.","source":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>."},{"pos":[179,304],"content":"If <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.IsSorted%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph>, items are added or removed in the order of the sort.","source":"If <xref:System.ComponentModel.IBindingList.IsSorted%2A> returns `true`, items are added or removed in the order of the sort."}],"pos":[22051,22360],"yaml":true,"extradata":"MT"},{"content":"`true` if <xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"></xref> has been called and <xref href=\"System.ComponentModel.IBindingList.RemoveSort\"></xref> has not been called; otherwise, `false`.","nodes":[{"pos":[0,285],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"&gt;&lt;/xref&gt;</ph> has been called and <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.IBindingList.RemoveSort\"&gt;&lt;/xref&gt;</ph> has not been called; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"></xref> has been called and <xref href=\"System.ComponentModel.IBindingList.RemoveSort\"></xref> has not been called; otherwise, `false`."}],"pos":[22471,22759],"yaml":true},{"content":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`."}],"pos":[22932,23016],"yaml":true},{"content":"Occurs when the list changes or an item in the list changes.","nodes":[{"pos":[0,60],"content":"Occurs when the list changes or an item in the list changes.","nodes":[{"content":"Occurs when the list changes or an item in the list changes.","pos":[0,60]}]}],"pos":[24184,24245],"yaml":true},{"content":"This event is raised only if the <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A> property is `true`.","nodes":[{"pos":[0,124],"content":"This event is raised only if the <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"This event is raised only if the <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A> property is `true`."}],"pos":[24256,24381],"yaml":true,"extradata":"MT"},{"content":"Removes the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> from the indexes used for searching.","nodes":[{"pos":[0,110],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> from the indexes used for searching.","source":"Removes the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> from the indexes used for searching."}],"pos":[25940,26051],"yaml":true},{"content":"The list must support this method. However, support for this method can be a nonoperation.","nodes":[{"pos":[0,90],"content":"The list must support this method. However, support for this method can be a nonoperation.","nodes":[{"content":"The list must support this method. However, support for this method can be a nonoperation.","pos":[0,90],"nodes":[{"content":"The list must support this method.","pos":[0,34]},{"content":"However, support for this method can be a nonoperation.","pos":[35,90]}]}]}],"pos":[26062,26153],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to remove from the indexes used for searching.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> to remove from the indexes used for searching.","source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to remove from the indexes used for searching."}],"pos":[26360,26473],"yaml":true},{"content":"Removes any sort applied using <xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"></xref>.","nodes":[{"pos":[0,179],"content":"Removes any sort applied using <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"&gt;&lt;/xref&gt;</ph>.","source":"Removes any sort applied using <xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"></xref>."}],"pos":[27719,27899],"yaml":true},{"content":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.  \n  \n When you call this method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration.","nodes":[{"pos":[0,172],"content":"This property is supported if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>; otherwise, this property throws a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph>.","source":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>."},{"pos":[179,357],"content":"When you call this method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration.","nodes":[{"content":"When you call this method, you should raise a <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ListChangedType.Reset&gt;</ph> enumeration.","pos":[0,178],"source":"When you call this method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration."}]}],"pos":[27910,28272],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`."}],"pos":[28516,28600],"yaml":true},{"content":"Gets the direction of the sort.","nodes":[{"pos":[0,31],"content":"Gets the direction of the sort.","nodes":[{"content":"Gets the direction of the sort.","pos":[0,31]}]}],"pos":[29783,29815],"yaml":true},{"content":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.","nodes":[{"pos":[0,172],"content":"This property is supported if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>; otherwise, this property throws a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph>.","source":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>."}],"pos":[29826,29999],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.ComponentModel.ListSortDirection\"></xref> values.","nodes":[{"pos":[0,79],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ListSortDirection\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.ComponentModel.ListSortDirection\"></xref> values."}],"pos":[30175,30255],"yaml":true},{"content":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`."}],"pos":[30433,30517],"yaml":true},{"content":"Gets the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is being used for sorting.","nodes":[{"pos":[0,102],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> that is being used for sorting.","source":"Gets the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is being used for sorting."}],"pos":[31694,31797],"yaml":true},{"content":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.","nodes":[{"pos":[0,172],"content":"This property is supported if <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>; otherwise, this property throws a <ph id=\"ph3\">&lt;xref:System.NotSupportedException&gt;</ph>.","source":"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>."}],"pos":[31808,31981],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is being used for sorting.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> that is being used for sorting.","source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is being used for sorting."}],"pos":[32158,32256],"yaml":true},{"content":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"<xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`."}],"pos":[32433,32517],"yaml":true},{"content":"Gets whether a <xref href=\"System.ComponentModel.IBindingList.ListChanged\"></xref> event is raised when the list changes or an item in the list changes.","nodes":[{"pos":[0,152],"content":"Gets whether a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.ListChanged\"&gt;&lt;/xref&gt;</ph> event is raised when the list changes or an item in the list changes.","source":"Gets whether a <xref href=\"System.ComponentModel.IBindingList.ListChanged\"></xref> event is raised when the list changes or an item in the list changes."}],"pos":[33778,33931],"yaml":true},{"content":"Objects in the list must notify the list when they change, so the list can raise a <xref:System.ComponentModel.IBindingList.ListChanged> event.","nodes":[{"pos":[0,143],"content":"Objects in the list must notify the list when they change, so the list can raise a <xref:System.ComponentModel.IBindingList.ListChanged> event.","nodes":[{"content":"Objects in the list must notify the list when they change, so the list can raise a <ph id=\"ph1\">&lt;xref:System.ComponentModel.IBindingList.ListChanged&gt;</ph> event.","pos":[0,143],"source":"Objects in the list must notify the list when they change, so the list can raise a <xref:System.ComponentModel.IBindingList.ListChanged> event."}]}],"pos":[33942,34086],"yaml":true,"extradata":"MT"},{"content":"`true` if a <xref href=\"System.ComponentModel.IBindingList.ListChanged\"></xref> event is raised when the list changes or when an item changes; otherwise, `false`.","nodes":[{"pos":[0,162],"content":"<ph id=\"ph1\">`true`</ph> if a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.IBindingList.ListChanged\"&gt;&lt;/xref&gt;</ph> event is raised when the list changes or when an item changes; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if a <xref href=\"System.ComponentModel.IBindingList.ListChanged\"></xref> event is raised when the list changes or when an item changes; otherwise, `false`."}],"pos":[34215,34380],"yaml":true},{"content":"Gets whether the list supports searching using the <xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"></xref> method.","nodes":[{"pos":[0,175],"content":"Gets whether the list supports searching using the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Gets whether the list supports searching using the <xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"></xref> method."}],"pos":[35679,35855],"yaml":true},{"content":"`true` if the list supports searching using the <xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"></xref> method; otherwise, `false`.","nodes":[{"pos":[0,192],"content":"<ph id=\"ph1\">`true`</ph> if the list supports searching using the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"&gt;&lt;/xref&gt;</ph> method; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the list supports searching using the <xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"></xref> method; otherwise, `false`."}],"pos":[36519,36714],"yaml":true},{"content":"Gets whether the list supports sorting.","nodes":[{"pos":[0,39],"content":"Gets whether the list supports sorting.","nodes":[{"content":"Gets whether the list supports sorting.","pos":[0,39]}]}],"pos":[37992,38032],"yaml":true},{"content":"If this property is `true`, then <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, and <xref:System.ComponentModel.IBindingList.RemoveSort%2A> are supported.","nodes":[{"pos":[0,337],"content":"If this property is <ph id=\"ph1\">`true`</ph>, then <ph id=\"ph2\">&lt;xref:System.ComponentModel.IBindingList.IsSorted%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.IBindingList.SortProperty%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ComponentModel.IBindingList.SortDirection%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.ComponentModel.IBindingList.ApplySort%2A&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A&gt;</ph> are supported.","source":"If this property is `true`, then <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, and <xref:System.ComponentModel.IBindingList.RemoveSort%2A> are supported."}],"pos":[38043,38381],"yaml":true,"extradata":"MT"},{"content":"`true` if the list supports sorting; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the list supports sorting; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the list supports sorting; otherwise, `false`."}],"pos":[38499,38558],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.IBindingList\n  commentId: T:System.ComponentModel.IBindingList\n  id: IBindingList\n  children:\n  - System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)\n  - System.ComponentModel.IBindingList.AddNew\n  - System.ComponentModel.IBindingList.AllowEdit\n  - System.ComponentModel.IBindingList.AllowNew\n  - System.ComponentModel.IBindingList.AllowRemove\n  - System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\n  - System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\n  - System.ComponentModel.IBindingList.IsSorted\n  - System.ComponentModel.IBindingList.ListChanged\n  - System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)\n  - System.ComponentModel.IBindingList.RemoveSort\n  - System.ComponentModel.IBindingList.SortDirection\n  - System.ComponentModel.IBindingList.SortProperty\n  - System.ComponentModel.IBindingList.SupportsChangeNotification\n  - System.ComponentModel.IBindingList.SupportsSearching\n  - System.ComponentModel.IBindingList.SupportsSorting\n  langs:\n  - csharp\n  name: IBindingList\n  nameWithType: IBindingList\n  fullName: System.ComponentModel.IBindingList\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Provides the features required to support both complex and simple scenarios when binding to a data source.\n  remarks: \"This interface is implemented by the <xref:System.Data.DataView> class. Implementation of a method should exhibit the same behavior as the implementation of that method in the <xref:System.Data.DataView> class.  \\n  \\n When you call the <xref:System.ComponentModel.IBindingList.ApplySort%2A> or <xref:System.ComponentModel.IBindingList.RemoveSort%2A> methods, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration.  \\n  \\n When you call the <xref:System.ComponentModel.IBindingList.AddNew%2A> method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where pressing the ESC on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a row not in the \\\"new\\\" state.  \\n  \\n When you remove an item or call the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method on a new row (if that row implements <xref:System.ComponentModel.IEditableObject>), you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemDeleted> enumeration carrying the appropriate index.\"\n  example:\n  - \"The following example provides a simple implementation of the <xref:System.ComponentModel.IBindingList> interface. The `CustomerList` class stores customer information in a list. This example assumes that you have used the `Customer` class that can be found in the example in the <xref:System.ComponentModel.IEditableObject> class.  \\n  \\n [!code-cpp[Binding_Editable#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Binding_Editable/CPP/binding_editable.cpp#2)]\\n [!code-csharp[Binding_Editable#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Binding_Editable/CS/binding_editable.cs#2)]\\n [!code-vb[Binding_Editable#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Binding_Editable/VB/binding_editable.vb#2)]\"\n  syntax:\n    content: 'public interface IBindingList : System.Collections.IList'\n  derivedClasses:\n  - System.ComponentModel.BindingList`1\n  - System.ComponentModel.IBindingListView\n  - System.Data.DataViewManager\n  implements:\n  - System.Collections.IList\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)\n  commentId: M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)\n  id: AddIndex(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: AddIndex(PropertyDescriptor)\n  nameWithType: IBindingList.AddIndex(PropertyDescriptor)\n  fullName: IBindingList.AddIndex(PropertyDescriptor)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Adds the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to the indexes used for searching.\n  remarks: The list must support this method. However, support for this method can be a nonoperation.\n  syntax:\n    content: public void AddIndex (System.ComponentModel.PropertyDescriptor property);\n    parameters:\n    - id: property\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to add to the indexes used for searching.\n  overload: System.ComponentModel.IBindingList.AddIndex*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.AddNew\n  commentId: M:System.ComponentModel.IBindingList.AddNew\n  id: AddNew\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: AddNew()\n  nameWithType: IBindingList.AddNew()\n  fullName: IBindingList.AddNew()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Adds a new item to the list.\n  remarks: \"This method is supported only if <xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`; otherwise, a <xref:System.NotSupportedException> is thrown.  \\n  \\n Implementing this method means that the <xref:System.ComponentModel.IBindingList> list must understand the type of objects to add to the list and must understand how to create a new instance of that type. For example, if you have a collection of `myCustomer` objects, the <xref:System.ComponentModel.IBindingList.AddNew%2A> method should add a new `myCustomer` object to the list.  \\n  \\n> [!NOTE]\\n>  If the objects in this list implement the <xref:System.ComponentModel.IEditableObject> interface, calling the <xref:System.ComponentModel.IEditableObject.CancelEdit%2A> method should discard an object, not add it to the list, when the object was created using the <xref:System.ComponentModel.IBindingList.AddNew%2A> method. The object should only be added to the list when the <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> method is called. Therefore, you must sychronize the object and the list carefully.  \\n  \\n When this method is called, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration carrying the appropriate index. The added row is in a state where hitting Esc on a <xref:System.Windows.Forms.DataGridView> control can remove the new row. Raising the <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.ItemAdded> enumeration a second time on this row indicates that the item is now a normal row (not in new state).\"\n  syntax:\n    content: public object AddNew ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The item added to the list.\n  overload: System.ComponentModel.IBindingList.AddNew*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.AllowNew\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.AllowEdit\n  commentId: P:System.ComponentModel.IBindingList.AllowEdit\n  id: AllowEdit\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: AllowEdit\n  nameWithType: IBindingList.AllowEdit\n  fullName: IBindingList.AllowEdit\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether you can update items in the list.\n  syntax:\n    content: public bool AllowEdit { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if you can update the items in the list; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.AllowEdit*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.AllowNew\n  commentId: P:System.ComponentModel.IBindingList.AllowNew\n  id: AllowNew\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: AllowNew\n  nameWithType: IBindingList.AllowNew\n  fullName: IBindingList.AllowNew\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether you can add items to the list using <xref href=\"System.ComponentModel.IBindingList.AddNew\"></xref>.\n  remarks: If <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> or <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> is `true`, this property returns `false`.\n  syntax:\n    content: public bool AllowNew { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if you can add items to the list using <xref href=\"System.ComponentModel.IBindingList.AddNew\"></xref>; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.AllowNew*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.AllowRemove\n  commentId: P:System.ComponentModel.IBindingList.AllowRemove\n  id: AllowRemove\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: AllowRemove\n  nameWithType: IBindingList.AllowRemove\n  fullName: IBindingList.AllowRemove\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether you can remove items from the list, using <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref> or <xref href=\"System.Collections.IList.RemoveAt(System.Int32)\"></xref>.\n  remarks: \"If <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> or <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> is `true`, this property returns `false`.  \\n  \\n> [!NOTE]\\n>  If <xref:System.ComponentModel.IBindingList.AllowRemove%2A> returns `false`, <xref:System.Collections.IList.Remove%2A?displayProperty=fullName> and <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> throw a <xref:System.NotSupportedException>.\"\n  syntax:\n    content: public bool AllowRemove { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if you can remove items from the list; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.AllowRemove*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\n  commentId: M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\n  id: ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: ApplySort(PropertyDescriptor, ListSortDirection)\n  nameWithType: IBindingList.ApplySort(PropertyDescriptor, ListSortDirection)\n  fullName: IBindingList.ApplySort(PropertyDescriptor, ListSortDirection)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Sorts the list based on a <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> and a <xref href=\"System.ComponentModel.ListSortDirection\"></xref>.\n  remarks: \"If items are added or removed, these items are placed in the order of the sort.  \\n  \\n This method is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this method throws a <xref:System.NotSupportedException>.\"\n  syntax:\n    content: public void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);\n    parameters:\n    - id: property\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to sort by.\n    - id: direction\n      type: System.ComponentModel.ListSortDirection\n      description: One of the <xref href=\"System.ComponentModel.ListSortDirection\"></xref> values.\n  overload: System.ComponentModel.IBindingList.ApplySort*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\n  commentId: M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\n  id: Find(System.ComponentModel.PropertyDescriptor,System.Object)\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: Find(PropertyDescriptor, Object)\n  nameWithType: IBindingList.Find(PropertyDescriptor, Object)\n  fullName: IBindingList.Find(PropertyDescriptor, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the index of the row that has the given <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.\n  remarks: \"This method will select the first row where the value of the `property` parameter equals the value of the `key` parameter.  \\n  \\n This method is supported if <xref:System.ComponentModel.IBindingList.SupportsSearching%2A> is `true`, otherwise this method throws a <xref:System.NotSupportedException>.\"\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IBindingList.Find%2A> method.  \\n  \\n [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#3)]\\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#3)]\"\n  syntax:\n    content: public int Find (System.ComponentModel.PropertyDescriptor property, object key);\n    parameters:\n    - id: property\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to search on.\n    - id: key\n      type: System.Object\n      description: The value of the <code>property</code> parameter to search for.\n    return:\n      type: System.Int32\n      description: The index of the row that has the given <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.\n  overload: System.ComponentModel.IBindingList.Find*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.SupportsSearching\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.IsSorted\n  commentId: P:System.ComponentModel.IBindingList.IsSorted\n  id: IsSorted\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: IsSorted\n  nameWithType: IBindingList.IsSorted\n  fullName: IBindingList.IsSorted\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether the items in the list are sorted.\n  remarks: \"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.  \\n  \\n If <xref:System.ComponentModel.IBindingList.IsSorted%2A> returns `true`, items are added or removed in the order of the sort.\"\n  syntax:\n    content: public bool IsSorted { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"></xref> has been called and <xref href=\"System.ComponentModel.IBindingList.RemoveSort\"></xref> has not been called; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.IsSorted*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.ListChanged\n  commentId: E:System.ComponentModel.IBindingList.ListChanged\n  id: ListChanged\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: ListChanged\n  nameWithType: IBindingList.ListChanged\n  fullName: IBindingList.ListChanged\n  type: Event\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Occurs when the list changes or an item in the list changes.\n  remarks: This event is raised only if the <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A> property is `true`.\n  syntax:\n    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;\n    return:\n      type: System.ComponentModel.ListChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)\n  commentId: M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)\n  id: RemoveIndex(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: RemoveIndex(PropertyDescriptor)\n  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)\n  fullName: IBindingList.RemoveIndex(PropertyDescriptor)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> from the indexes used for searching.\n  remarks: The list must support this method. However, support for this method can be a nonoperation.\n  syntax:\n    content: public void RemoveIndex (System.ComponentModel.PropertyDescriptor property);\n    parameters:\n    - id: property\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to remove from the indexes used for searching.\n  overload: System.ComponentModel.IBindingList.RemoveIndex*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.RemoveSort\n  commentId: M:System.ComponentModel.IBindingList.RemoveSort\n  id: RemoveSort\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: RemoveSort()\n  nameWithType: IBindingList.RemoveSort()\n  fullName: IBindingList.RemoveSort()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes any sort applied using <xref href=\"System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\"></xref>.\n  remarks: \"This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.  \\n  \\n When you call this method, you should raise a <xref:System.ComponentModel.IBindingList.ListChanged> event with the <xref:System.ComponentModel.ListChangedType.Reset> enumeration.\"\n  syntax:\n    content: public void RemoveSort ();\n    parameters: []\n  overload: System.ComponentModel.IBindingList.RemoveSort*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.SortDirection\n  commentId: P:System.ComponentModel.IBindingList.SortDirection\n  id: SortDirection\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: SortDirection\n  nameWithType: IBindingList.SortDirection\n  fullName: IBindingList.SortDirection\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the direction of the sort.\n  remarks: This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.\n  syntax:\n    content: public System.ComponentModel.ListSortDirection SortDirection { get; }\n    return:\n      type: System.ComponentModel.ListSortDirection\n      description: One of the <xref href=\"System.ComponentModel.ListSortDirection\"></xref> values.\n  overload: System.ComponentModel.IBindingList.SortDirection*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.SortProperty\n  commentId: P:System.ComponentModel.IBindingList.SortProperty\n  id: SortProperty\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: SortProperty\n  nameWithType: IBindingList.SortProperty\n  fullName: IBindingList.SortProperty\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is being used for sorting.\n  remarks: This property is supported if <xref:System.ComponentModel.IBindingList.SupportsSorting%2A> is `true`; otherwise, this property throws a <xref:System.NotSupportedException>.\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptor SortProperty { get; }\n    return:\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that is being used for sorting.\n  overload: System.ComponentModel.IBindingList.SortProperty*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.ComponentModel.IBindingList.SupportsSorting\"></xref> is `false`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.SupportsChangeNotification\n  commentId: P:System.ComponentModel.IBindingList.SupportsChangeNotification\n  id: SupportsChangeNotification\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: SupportsChangeNotification\n  nameWithType: IBindingList.SupportsChangeNotification\n  fullName: IBindingList.SupportsChangeNotification\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether a <xref href=\"System.ComponentModel.IBindingList.ListChanged\"></xref> event is raised when the list changes or an item in the list changes.\n  remarks: Objects in the list must notify the list when they change, so the list can raise a <xref:System.ComponentModel.IBindingList.ListChanged> event.\n  syntax:\n    content: public bool SupportsChangeNotification { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a <xref href=\"System.ComponentModel.IBindingList.ListChanged\"></xref> event is raised when the list changes or when an item changes; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.SupportsChangeNotification*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.SupportsSearching\n  commentId: P:System.ComponentModel.IBindingList.SupportsSearching\n  id: SupportsSearching\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: SupportsSearching\n  nameWithType: IBindingList.SupportsSearching\n  fullName: IBindingList.SupportsSearching\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether the list supports searching using the <xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"></xref> method.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IBindingList.SupportsSearching%2A> property.  \\n  \\n [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#3)]\\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#3)]\"\n  syntax:\n    content: public bool SupportsSearching { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the list supports searching using the <xref href=\"System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\"></xref> method; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.SupportsSearching*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IBindingList.SupportsSorting\n  commentId: P:System.ComponentModel.IBindingList.SupportsSorting\n  id: SupportsSorting\n  parent: System.ComponentModel.IBindingList\n  langs:\n  - csharp\n  name: SupportsSorting\n  nameWithType: IBindingList.SupportsSorting\n  fullName: IBindingList.SupportsSorting\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets whether the list supports sorting.\n  remarks: If this property is `true`, then <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, and <xref:System.ComponentModel.IBindingList.RemoveSort%2A> are supported.\n  syntax:\n    content: public bool SupportsSorting { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the list supports sorting; otherwise, `false`.'\n  overload: System.ComponentModel.IBindingList.SupportsSorting*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AddIndex(PropertyDescriptor)\n  nameWithType: IBindingList.AddIndex(PropertyDescriptor)\n  fullName: IBindingList.AddIndex(PropertyDescriptor)\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.IBindingList.AddNew\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AddNew()\n  nameWithType: IBindingList.AddNew()\n  fullName: IBindingList.AddNew()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.IBindingList.AllowEdit\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AllowEdit\n  nameWithType: IBindingList.AllowEdit\n  fullName: IBindingList.AllowEdit\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.IBindingList.AllowNew\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AllowNew\n  nameWithType: IBindingList.AllowNew\n  fullName: IBindingList.AllowNew\n- uid: System.ComponentModel.IBindingList.AllowRemove\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AllowRemove\n  nameWithType: IBindingList.AllowRemove\n  fullName: IBindingList.AllowRemove\n- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: ApplySort(PropertyDescriptor, ListSortDirection)\n  nameWithType: IBindingList.ApplySort(PropertyDescriptor, ListSortDirection)\n  fullName: IBindingList.ApplySort(PropertyDescriptor, ListSortDirection)\n- uid: System.ComponentModel.ListSortDirection\n  parent: System.ComponentModel\n  isExternal: false\n  name: ListSortDirection\n  nameWithType: ListSortDirection\n  fullName: System.ComponentModel.ListSortDirection\n- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: Find(PropertyDescriptor, Object)\n  nameWithType: IBindingList.Find(PropertyDescriptor, Object)\n  fullName: IBindingList.Find(PropertyDescriptor, Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.IBindingList.IsSorted\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: IsSorted\n  nameWithType: IBindingList.IsSorted\n  fullName: IBindingList.IsSorted\n- uid: System.ComponentModel.IBindingList.ListChanged\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: ListChanged\n  nameWithType: IBindingList.ListChanged\n  fullName: IBindingList.ListChanged\n- uid: System.ComponentModel.ListChangedEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: ListChangedEventHandler\n  nameWithType: ListChangedEventHandler\n  fullName: System.ComponentModel.ListChangedEventHandler\n- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: RemoveIndex(PropertyDescriptor)\n  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)\n  fullName: IBindingList.RemoveIndex(PropertyDescriptor)\n- uid: System.ComponentModel.IBindingList.RemoveSort\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: RemoveSort()\n  nameWithType: IBindingList.RemoveSort()\n  fullName: IBindingList.RemoveSort()\n- uid: System.ComponentModel.IBindingList.SortDirection\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SortDirection\n  nameWithType: IBindingList.SortDirection\n  fullName: IBindingList.SortDirection\n- uid: System.ComponentModel.IBindingList.SortProperty\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SortProperty\n  nameWithType: IBindingList.SortProperty\n  fullName: IBindingList.SortProperty\n- uid: System.ComponentModel.IBindingList.SupportsChangeNotification\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SupportsChangeNotification\n  nameWithType: IBindingList.SupportsChangeNotification\n  fullName: IBindingList.SupportsChangeNotification\n- uid: System.ComponentModel.IBindingList.SupportsSearching\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SupportsSearching\n  nameWithType: IBindingList.SupportsSearching\n  fullName: IBindingList.SupportsSearching\n- uid: System.ComponentModel.IBindingList.SupportsSorting\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SupportsSorting\n  nameWithType: IBindingList.SupportsSorting\n  fullName: IBindingList.SupportsSorting\n- uid: System.ComponentModel.IBindingList.AddIndex*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AddIndex\n  nameWithType: IBindingList.AddIndex\n  fullName: IBindingList.AddIndex\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.AddNew*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AddNew\n  nameWithType: IBindingList.AddNew\n  fullName: IBindingList.AddNew\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.AllowEdit*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AllowEdit\n  nameWithType: IBindingList.AllowEdit\n  fullName: IBindingList.AllowEdit\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.AllowNew*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AllowNew\n  nameWithType: IBindingList.AllowNew\n  fullName: IBindingList.AllowNew\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.AllowRemove*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: AllowRemove\n  nameWithType: IBindingList.AllowRemove\n  fullName: IBindingList.AllowRemove\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.ApplySort*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: ApplySort\n  nameWithType: IBindingList.ApplySort\n  fullName: IBindingList.ApplySort\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.Find*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: Find\n  nameWithType: IBindingList.Find\n  fullName: IBindingList.Find\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.IsSorted*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: IsSorted\n  nameWithType: IBindingList.IsSorted\n  fullName: IBindingList.IsSorted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.RemoveIndex*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: RemoveIndex\n  nameWithType: IBindingList.RemoveIndex\n  fullName: IBindingList.RemoveIndex\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.RemoveSort*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: RemoveSort\n  nameWithType: IBindingList.RemoveSort\n  fullName: IBindingList.RemoveSort\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.SortDirection*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SortDirection\n  nameWithType: IBindingList.SortDirection\n  fullName: IBindingList.SortDirection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.SortProperty*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SortProperty\n  nameWithType: IBindingList.SortProperty\n  fullName: IBindingList.SortProperty\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.SupportsChangeNotification*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SupportsChangeNotification\n  nameWithType: IBindingList.SupportsChangeNotification\n  fullName: IBindingList.SupportsChangeNotification\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.SupportsSearching*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SupportsSearching\n  nameWithType: IBindingList.SupportsSearching\n  fullName: IBindingList.SupportsSearching\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.ComponentModel.IBindingList.SupportsSorting*\n  parent: System.ComponentModel.IBindingList\n  isExternal: false\n  name: SupportsSorting\n  nameWithType: IBindingList.SupportsSorting\n  fullName: IBindingList.SupportsSorting\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IBindingList.xml\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n"}