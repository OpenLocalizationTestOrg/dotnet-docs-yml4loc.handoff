{"nodes":[{"content":"Provides support for design-time license context serialization.","nodes":[{"pos":[0,63],"content":"Provides support for design-time license context serialization.","nodes":[{"content":"Provides support for design-time license context serialization.","pos":[0,63]}]}],"pos":[741,805],"yaml":true},{"content":"This class provides a serialization method that can serialize a specified design-time license context.  \n  \n> [!IMPORTANT]\n>  Using an instance of this object with untrusted data is a security risk. Use this class only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","nodes":[{"pos":[0,102],"content":"This class provides a serialization method that can serialize a specified design-time license context.","nodes":[{"content":"This class provides a serialization method that can serialize a specified design-time license context.","pos":[0,102]}]},{"pos":[110,343],"content":"[!IMPORTANT]\n Using an instance of this object with untrusted data is a security risk. Use this class only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","leadings":["","> "],"nodes":[{"content":" Using an instance of this object with untrusted data is a security risk. Use this class only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","pos":[13,231],"nodes":[{"content":"Using an instance of this object with untrusted data is a security risk.","pos":[1,73]},{"content":"Use this class only with trusted data.","pos":[74,112]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Untrusted Data Security Risks<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.","pos":[113,218],"source":" For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)."}]}]}],"pos":[816,1165],"yaml":true,"extradata":"MT"},{"content":"Serializes the licenses within the specified design-time license context using the specified key and output stream.","nodes":[{"pos":[0,115],"content":"Serializes the licenses within the specified design-time license context using the specified key and output stream.","nodes":[{"content":"Serializes the licenses within the specified design-time license context using the specified key and output stream.","pos":[0,115]}]}],"pos":[3288,3404],"yaml":true},{"content":"The stream to output to.","nodes":[{"pos":[0,24],"content":"The stream to output to.","nodes":[{"content":"The stream to output to.","pos":[0,24]}]}],"pos":[3635,3660],"yaml":true},{"content":"The key to use for encryption.","nodes":[{"pos":[0,30],"content":"The key to use for encryption.","nodes":[{"content":"The key to use for encryption.","pos":[0,30]}]}],"pos":[3725,3756],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.Design.DesigntimeLicenseContext\"></xref> indicating the license context.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesigntimeLicenseContext\"&gt;&lt;/xref&gt;</ph> indicating the license context.","source":"A <xref href=\"System.ComponentModel.Design.DesigntimeLicenseContext\"></xref> indicating the license context."}],"pos":[3859,3968],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.DesigntimeLicenseContextSerializer\n  commentId: T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer\n  id: DesigntimeLicenseContextSerializer\n  children:\n  - System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)\n  langs:\n  - csharp\n  name: DesigntimeLicenseContextSerializer\n  nameWithType: DesigntimeLicenseContextSerializer\n  fullName: System.ComponentModel.Design.DesigntimeLicenseContextSerializer\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides support for design-time license context serialization.\n  remarks: \"This class provides a serialization method that can serialize a specified design-time license context.  \\n  \\n> [!IMPORTANT]\\n>  Using an instance of this object with untrusted data is a security risk. Use this class only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\"\n  syntax:\n    content: public class DesigntimeLicenseContextSerializer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesigntimeLicenseContextSerializer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)\n  commentId: M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)\n  id: Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)\n  parent: System.ComponentModel.Design.DesigntimeLicenseContextSerializer\n  langs:\n  - csharp\n  name: Serialize(Stream, String, DesigntimeLicenseContext)\n  nameWithType: DesigntimeLicenseContextSerializer.Serialize(Stream, String, DesigntimeLicenseContext)\n  fullName: DesigntimeLicenseContextSerializer.Serialize(Stream, String, DesigntimeLicenseContext)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Serializes the licenses within the specified design-time license context using the specified key and output stream.\n  syntax:\n    content: public static void Serialize (System.IO.Stream o, string cryptoKey, System.ComponentModel.Design.DesigntimeLicenseContext context);\n    parameters:\n    - id: o\n      type: System.IO.Stream\n      description: The stream to output to.\n    - id: cryptoKey\n      type: System.String\n      description: The key to use for encryption.\n    - id: context\n      type: System.ComponentModel.Design.DesigntimeLicenseContext\n      description: A <xref href=\"System.ComponentModel.Design.DesigntimeLicenseContext\"></xref> indicating the license context.\n  overload: System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesigntimeLicenseContextSerializer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)\n  parent: System.ComponentModel.Design.DesigntimeLicenseContextSerializer\n  isExternal: false\n  name: Serialize(Stream, String, DesigntimeLicenseContext)\n  nameWithType: DesigntimeLicenseContextSerializer.Serialize(Stream, String, DesigntimeLicenseContext)\n  fullName: DesigntimeLicenseContextSerializer.Serialize(Stream, String, DesigntimeLicenseContext)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.DesigntimeLicenseContext\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesigntimeLicenseContext\n  nameWithType: DesigntimeLicenseContext\n  fullName: System.ComponentModel.Design.DesigntimeLicenseContext\n- uid: System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize*\n  parent: System.ComponentModel.Design.DesigntimeLicenseContextSerializer\n  isExternal: false\n  name: Serialize\n  nameWithType: DesigntimeLicenseContextSerializer.Serialize\n  fullName: DesigntimeLicenseContextSerializer.Serialize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesigntimeLicenseContextSerializer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}