{"nodes":[{"content":"Abstract base class for custom activities that implement execution logic using the <xref href=\"System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)\"></xref> method, which has full access to the runtime’s features.","nodes":[{"pos":[0,245],"content":"Abstract base class for custom activities that implement execution logic using the <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)\"&gt;&lt;/xref&gt;</ph> method, which has full access to the runtime’s features.","source":"Abstract base class for custom activities that implement execution logic using the <xref href=\"System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)\"></xref> method, which has full access to the runtime’s features."}],"pos":[1420,1666],"yaml":true},{"content":"When implemented in a derived class, creates a new instance of the derived class.","nodes":[{"pos":[0,81],"content":"When implemented in a derived class, creates a new instance of the derived class.","nodes":[{"content":"When implemented in a derived class, creates a new instance of the derived class.","pos":[0,81]}]}],"pos":[8174,8256],"yaml":true},{"content":"When implemented in a derived class, takes actions in response to the activity being aborted.","nodes":[{"pos":[0,93],"content":"When implemented in a derived class, takes actions in response to the activity being aborted.","nodes":[{"content":"When implemented in a derived class, takes actions in response to the activity being aborted.","pos":[0,93]}]}],"pos":[9975,10069],"yaml":true},{"content":"The execution context in which the activity executes.","nodes":[{"pos":[0,53],"content":"The execution context in which the activity executes.","nodes":[{"content":"The execution context in which the activity executes.","pos":[0,53]}]}],"pos":[10287,10341],"yaml":true},{"content":"Not implemented. Use the <xref href=\"System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\"></xref> method instead.","nodes":[{"pos":[0,150],"content":"Not implemented. Use the <xref href=\"System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\"></xref> method instead.","nodes":[{"content":"Not implemented.","pos":[0,16]},{"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\"&gt;&lt;/xref&gt;</ph> method instead.","pos":[17,150],"source":" Use the <xref href=\"System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\"></xref> method instead."}]}],"pos":[11500,11651],"yaml":true},{"content":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","nodes":[{"pos":[0,423],"content":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","nodes":[{"content":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","pos":[0,423],"nodes":[{"content":"Custom activity authors can provide validation logic in an activity's <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> override.","pos":[0,136],"source":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override."},{"content":"Any exceptions that are thrown from <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> are not treated as validation errors.","pos":[137,267],"source":" Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors."},{"content":"These exceptions will escape from the call to <ph id=\"ph1\">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> and must be handled by the caller.","pos":[268,423],"source":" These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller."}]}]}],"pos":[11662,12086],"yaml":true,"extradata":"MT"},{"content":"Not implemented.","nodes":[{"pos":[0,16],"content":"Not implemented.","nodes":[{"content":"Not implemented.","pos":[0,16]}]}],"pos":[12302,12319],"yaml":true},{"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","nodes":[{"pos":[0,117],"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","nodes":[{"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,117]}]}],"pos":[13522,13640],"yaml":true},{"content":"The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>>, <xref:System.Activities.Activity>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>>, or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","nodes":[{"pos":[0,1184],"content":"The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>>, <xref:System.Activities.Activity>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>>, or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","nodes":[{"content":"The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>>, <xref:System.Activities.Activity>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>>, or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","pos":[0,1184],"nodes":[{"content":"The workflow runtime uses the default implementation of <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules.","pos":[0,221],"source":"The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules."},{"content":"The default implementation of <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> examines the public members of the activity type using the type’s <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.","pos":[222,419],"source":" The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>."},{"content":"These public members are of type <ph id=\"ph1\">&lt;xref:System.Activities.Argument&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Activities.Variable&gt;</ph>, &lt;xref:T:System.Collections.Generic.IEnumerable<ph id=\"ph3\">\\&lt;</ph>T:System.Activities.Variable&gt;&gt;, <ph id=\"ph4\">&lt;xref:System.Activities.Activity&gt;</ph>, &lt;xref:T:System.Collections.Generic.IEnumerable<ph id=\"ph5\">\\&lt;</ph>T:System.Activities.Activity&gt;&gt;, or <ph id=\"ph6\">&lt;xref:System.Activities.ActivityDelegate&gt;</ph>.","pos":[420,763],"source":" These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>>, <xref:System.Activities.Activity>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>>, or <xref:System.Activities.ActivityDelegate>."},{"content":"You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.","pos":[764,897]},{"content":"Any exceptions that are thrown from <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt;</ph> are not treated as validation errors.","pos":[898,1028],"source":" Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors."},{"content":"These exceptions will escape from the call to <ph id=\"ph1\">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> and must be handled by the caller.","pos":[1029,1184],"source":" These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller."}]}]}],"pos":[13651,14836],"yaml":true,"extradata":"MT"},{"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","nodes":[{"pos":[0,120],"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","nodes":[{"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,120]}]}],"pos":[15533,15654],"yaml":true},{"content":"When implemented in a derived class, runs logic to cause graceful early completion of the activity.","nodes":[{"pos":[0,99],"content":"When implemented in a derived class, runs logic to cause graceful early completion of the activity.","nodes":[{"content":"When implemented in a derived class, runs logic to cause graceful early completion of the activity.","pos":[0,99]}]}],"pos":[16809,16909],"yaml":true},{"content":"The execution context in which the activity executes.","nodes":[{"pos":[0,53],"content":"The execution context in which the activity executes.","nodes":[{"content":"The execution context in which the activity executes.","pos":[0,53]}]}],"pos":[17577,17631],"yaml":true},{"content":"Gets or sets a value that indicates whether the activity can cause the workflow to become idle.","nodes":[{"pos":[0,95],"content":"Gets or sets a value that indicates whether the activity can cause the workflow to become idle.","nodes":[{"content":"Gets or sets a value that indicates whether the activity can cause the workflow to become idle.","pos":[0,95]}]}],"pos":[18631,18727],"yaml":true},{"content":"`true` if the activity can cause the workflow to become idle. This value is `false` by default.","nodes":[{"pos":[0,95],"content":"`true` if the activity can cause the workflow to become idle. This value is `false` by default.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the activity can cause the workflow to become idle.","pos":[0,61],"source":"`true` if the activity can cause the workflow to become idle."},{"content":"This value is <ph id=\"ph1\">`false`</ph> by default.","pos":[62,95],"source":" This value is `false` by default."}]}],"pos":[18854,18952],"yaml":true},{"content":"When implemented in a derived class, runs the activity’s execution logic.","nodes":[{"pos":[0,73],"content":"When implemented in a derived class, runs the activity’s execution logic.","nodes":[{"content":"When implemented in a derived class, runs the activity’s execution logic.","pos":[0,73]}]}],"pos":[20113,20187],"yaml":true},{"content":"The execution context in which the activity executes.","nodes":[{"pos":[0,53],"content":"The execution context in which the activity executes.","nodes":[{"content":"The execution context in which the activity executes.","pos":[0,53]}]}],"pos":[20857,20911],"yaml":true},{"content":"The execution logic of the activity.","nodes":[{"pos":[0,36],"content":"The execution logic of the activity.","nodes":[{"content":"The execution logic of the activity.","pos":[0,36]}]}],"pos":[21918,21955],"yaml":true},{"content":"The execution logic.","nodes":[{"pos":[0,20],"content":"The execution logic.","nodes":[{"content":"The execution logic.","pos":[0,20]}]}],"pos":[22213,22234],"yaml":true},{"content":"Gets or sets the implementation version of the activity.","nodes":[{"pos":[0,56],"content":"Gets or sets the implementation version of the activity.","nodes":[{"content":"Gets or sets the implementation version of the activity.","pos":[0,56]}]}],"pos":[23369,23426],"yaml":true},{"content":"The implementation version of the activity.","nodes":[{"pos":[0,43],"content":"The implementation version of the activity.","nodes":[{"content":"The implementation version of the activity.","pos":[0,43]}]}],"pos":[23577,23621],"yaml":true},{"content":"Raises an event when creating a map for the dynamic update.","nodes":[{"pos":[0,59],"content":"Raises an event when creating a map for the dynamic update.","nodes":[{"content":"Raises an event when creating a map for the dynamic update.","pos":[0,59]}]}],"pos":[25105,25165],"yaml":true},{"content":"The metadata.","nodes":[{"pos":[0,13],"content":"The metadata.","nodes":[{"content":"The metadata.","pos":[0,13]}]}],"pos":[25487,25501],"yaml":true},{"content":"The original activity.","nodes":[{"pos":[0,22],"content":"The original activity.","nodes":[{"content":"The original activity.","pos":[0,22]}]}],"pos":[25586,25609],"yaml":true},{"content":"Raises an event when creating a map for the dynamic update.","nodes":[{"pos":[0,59],"content":"Raises an event when creating a map for the dynamic update.","nodes":[{"content":"Raises an event when creating a map for the dynamic update.","pos":[0,59]}]}],"pos":[27012,27072],"yaml":true},{"content":"The metadata.","nodes":[{"pos":[0,13],"content":"The metadata.","nodes":[{"content":"The metadata.","pos":[0,13]}]}],"pos":[27374,27388],"yaml":true},{"content":"The original activity.","nodes":[{"pos":[0,22],"content":"The original activity.","nodes":[{"content":"The original activity.","pos":[0,22]}]}],"pos":[27473,27496],"yaml":true},{"content":"Updates the instance of <xref href=\"System.Activities.NativeActivity\"></xref>.","nodes":[{"pos":[0,78],"content":"Updates the instance of <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Updates the instance of <xref href=\"System.Activities.NativeActivity\"></xref>."}],"pos":[28788,28867],"yaml":true},{"content":"The update context.","nodes":[{"pos":[0,19],"content":"The update context.","nodes":[{"content":"The update context.","pos":[0,19]}]}],"pos":[29136,29156],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.NativeActivity\n  commentId: T:System.Activities.NativeActivity\n  id: NativeActivity\n  children:\n  - System.Activities.NativeActivity.#ctor\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  langs:\n  - csharp\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Abstract base class for custom activities that implement execution logic using the <xref href=\"System.Activities.NativeActivity.Execute(System.Activities.ActivityExecutionContext)\"></xref> method, which has full access to the runtime’s features.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.  \\n  \\n```  \\npublic sealed class MySequence : NativeActivity  \\n{  \\n    Collection<Activity> children;  \\n    Collection<Variable> variables;  \\n    Variable<int> currentIndex;  \\n    CompletionCallback onChildComplete;  \\n  \\n    public MySequence()  \\n        : base()  \\n    {  \\n        this.children = new Collection<Activity>();  \\n        this.variables = new Collection<Variable>();  \\n        this.currentIndex = new Variable<int>();  \\n    }  \\n  \\n    public Collection<Activity> Activities  \\n    {  \\n        get  \\n        {  \\n            return this.children;  \\n        }  \\n    }  \\n    public Collection<Variable> Variables  \\n    {  \\n        get  \\n        {  \\n            return this.variables;  \\n        }  \\n    }  \\n    protected override void CacheMetadata(NativeActivityMetadata metadata)  \\n    {  \\n        //call base.CacheMetadata to add the Activities and Variables to this activity's metadata  \\n        base.CacheMetadata(metadata);  \\n        //add the private implementation variable: currentIndex   \\n        metadata.AddImplementationVariable(this.currentIndex);  \\n    }                     \\n  \\n    protected override void Execute(NativeActivityContext context)  \\n    {  \\n        InternalExecute(context, null);  \\n    }  \\n    void InternalExecute(NativeActivityContext context, ActivityInstance instance)  \\n    {  \\n        //grab the index of the current Activity  \\n        int currentActivityIndex = this.currentIndex.Get(context);  \\n        if (currentActivityIndex == Activities.Count)  \\n        {  \\n            //if the currentActivityIndex is equal to the count of MySequence's Activities  \\n            //MySequence is complete  \\n            return;  \\n        }  \\n  \\n        if (this.onChildComplete == null)  \\n        {  \\n            //on completion of the current child, have the runtime call back on this method  \\n            this.onChildComplete = new CompletionCallback(InternalExecute);  \\n        }  \\n        //grab the next Activity in MySequence.Activities and schedule it  \\n        Activity nextChild = Activities[currentActivityIndex];  \\n        context.ScheduleActivity(nextChild, this.onChildComplete);  \\n  \\n        //increment the currentIndex  \\n        this.currentIndex.Set(context, ++currentActivityIndex);  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: 'public abstract class NativeActivity : System.Activities.Activity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  derivedClasses:\n  - System.Activities.Statements.CancellationScope\n  - System.Activities.Statements.Compensate\n  - System.Activities.Statements.Confirm\n  - System.Activities.Statements.Delay\n  - System.Activities.Statements.DeleteBookmarkScope\n  - System.Activities.Statements.DoWhile\n  - System.Activities.Statements.Flowchart\n  - System.Activities.Statements.ForEach`1\n  - System.Activities.Statements.HandleScope`1\n  - System.Activities.Statements.If\n  - System.Activities.Statements.Interop\n  - System.Activities.Statements.InvokeAction\n  - System.Activities.Statements.InvokeAction`1\n  - System.Activities.Statements.InvokeAction`10\n  - System.Activities.Statements.InvokeAction`11\n  - System.Activities.Statements.InvokeAction`12\n  - System.Activities.Statements.InvokeAction`13\n  - System.Activities.Statements.InvokeAction`14\n  - System.Activities.Statements.InvokeAction`15\n  - System.Activities.Statements.InvokeAction`16\n  - System.Activities.Statements.InvokeAction`2\n  - System.Activities.Statements.InvokeAction`3\n  - System.Activities.Statements.InvokeAction`4\n  - System.Activities.Statements.InvokeAction`5\n  - System.Activities.Statements.InvokeAction`6\n  - System.Activities.Statements.InvokeAction`7\n  - System.Activities.Statements.InvokeAction`8\n  - System.Activities.Statements.InvokeAction`9\n  - System.Activities.Statements.InvokeDelegate\n  - System.Activities.Statements.NoPersistScope\n  - System.Activities.Statements.Parallel\n  - System.Activities.Statements.ParallelForEach`1\n  - System.Activities.Statements.Persist\n  - System.Activities.Statements.Pick\n  - System.Activities.Statements.Rethrow\n  - System.Activities.Statements.Sequence\n  - System.Activities.Statements.StateMachine\n  - System.Activities.Statements.Switch`1\n  - System.Activities.Statements.TerminateWorkflow\n  - System.Activities.Statements.TransactionScope\n  - System.Activities.Statements.TryCatch\n  - System.Activities.Statements.While\n  - System.Activities.Validation.AddValidationError\n  - System.Activities.Validation.AssertValidation\n  - System.Activities.Validation.Constraint\n  - System.ServiceModel.Activities.CorrelationScope\n  - System.ServiceModel.Activities.InitializeCorrelation\n  - System.ServiceModel.Activities.TransactedReceiveScope\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.#ctor\n  commentId: M:System.Activities.NativeActivity.#ctor\n  id: '#ctor'\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: NativeActivity()\n  nameWithType: NativeActivity.NativeActivity()\n  fullName: NativeActivity.NativeActivity()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, creates a new instance of the derived class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.  \\n  \\n [!code-csharp[wfs_CustomCompositeNativeActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#1)]\"\n  syntax:\n    content: protected NativeActivity ();\n    parameters: []\n  overload: System.Activities.NativeActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  commentId: M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  id: Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, takes actions in response to the activity being aborted.\n  syntax:\n    content: protected virtual void Abort (System.Activities.NativeActivityAbortContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityAbortContext\n      description: The execution context in which the activity executes.\n  overload: System.Activities.NativeActivity.Abort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  commentId: M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  id: CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Not implemented. Use the <xref href=\"System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\"></xref> method instead.\n  remarks: Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.\n  syntax:\n    content: protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.ActivityMetadata\n      description: Not implemented.\n  overload: System.Activities.NativeActivity.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.\n  remarks: The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>>, <xref:System.Activities.Activity>, <xref:T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>>, or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.\n  example:\n  - \"The following code sample demonstrates using CacheMetadata in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.  \\n  \\n [!code-csharp[wfs_CustomCompositeNativeActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#2)]\"\n  syntax:\n    content: protected virtual void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.\n  overload: System.Activities.NativeActivity.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, runs logic to cause graceful early completion of the activity.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.  \\n  \\n [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]\"\n  syntax:\n    content: protected virtual void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The execution context in which the activity executes.\n  overload: System.Activities.NativeActivity.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  commentId: P:System.Activities.NativeActivity.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets a value that indicates whether the activity can cause the workflow to become idle.\n  syntax:\n    content: protected virtual bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the activity can cause the workflow to become idle. This value is `false` by default.'\n  overload: System.Activities.NativeActivity.CanInduceIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: NativeActivity.Execute(NativeActivityContext)\n  fullName: NativeActivity.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, runs the activity’s execution logic.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.  \\n  \\n [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]\"\n  syntax:\n    content: protected abstract void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The execution context in which the activity executes.\n  overload: System.Activities.NativeActivity.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.Implementation\n  commentId: P:System.Activities.NativeActivity.Implementation\n  id: Implementation\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: The execution logic of the activity.\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.IgnoreDataMember]\n\n      protected override sealed Func<System.Activities.Activity> Implementation { get; set; }\n    return:\n      type: System.Func{System.Activities.Activity}\n      description: The execution logic.\n  overload: System.Activities.NativeActivity.Implementation*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  commentId: P:System.Activities.NativeActivity.ImplementationVersion\n  id: ImplementationVersion\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the implementation version of the activity.\n  syntax:\n    content: protected override sealed Version ImplementationVersion { get; set; }\n    return:\n      type: System.Version\n      description: The implementation version of the activity.\n  overload: System.Activities.NativeActivity.ImplementationVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Raises an event when creating a map for the dynamic update.\n  syntax:\n    content: protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: The metadata.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: The original activity.\n  overload: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Raises an event when creating a map for the dynamic update.\n  syntax:\n    content: protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.UpdateMapMetadata\n      description: The metadata.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: The original activity.\n  overload: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  commentId: M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Updates the instance of <xref href=\"System.Activities.NativeActivity\"></xref>.\n  syntax:\n    content: protected virtual void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: The update context.\n  overload: System.Activities.NativeActivity.UpdateInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.NativeActivity.#ctor\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: NativeActivity()\n  nameWithType: NativeActivity.NativeActivity()\n  fullName: NativeActivity.NativeActivity()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivityAbortContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityAbortContext\n  nameWithType: NativeActivityAbortContext\n  fullName: System.Activities.NativeActivityAbortContext\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: NativeActivity.Execute(NativeActivityContext)\n  fullName: NativeActivity.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Func{System.Activities.Activity}\n  parent: System\n  isExternal: false\n  name: Func<Activity>\n  nameWithType: Func<Activity>\n  fullName: System.Func<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.NativeActivity.CacheMetadata*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: NativeActivity.CacheMetadata\n  fullName: NativeActivity.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.#ctor*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity.NativeActivity\n  fullName: NativeActivity.NativeActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.Abort*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort\n  nameWithType: NativeActivity.Abort\n  fullName: NativeActivity.Abort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.Cancel*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: NativeActivity.Cancel\n  fullName: NativeActivity.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.CanInduceIdle*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.Execute*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Execute\n  nameWithType: NativeActivity.Execute\n  fullName: NativeActivity.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.Implementation*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.ImplementationVersion*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap\n  fullName: NativeActivity.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Activities.NativeActivity.UpdateInstance*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: NativeActivity.UpdateInstance\n  fullName: NativeActivity.UpdateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n"}