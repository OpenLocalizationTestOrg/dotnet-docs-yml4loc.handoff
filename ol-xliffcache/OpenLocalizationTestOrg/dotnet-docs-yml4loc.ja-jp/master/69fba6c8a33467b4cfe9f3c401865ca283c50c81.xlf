<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69fba6c8a33467b4cfe9f3c401865ca283c50c81</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcf6682abb0eb491e1b8ec0d942bd518ee66265a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5eebe0f79b985dd1897ba2cacb8aa85915acdc1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When applied to an array parameter in a Windows Runtime component, specifies that the contents of an array that is passed to that parameter are used only for output.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The caller does not guarantee that the contents are initialized, and the called method should not read the contents.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an array parameter in your <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component is passed by value (<ph id="ph2">`ByVal`</ph> in Visual Basic), you must apply one of the following attributes to it:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute&gt;</ph> attribute if you intend the contents of the array to be used for input only.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute&gt;</ph> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying both attributes to a parameter causes an error.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, including the standard pattern for making changes to an array, see <bpt id="p1">[</bpt>Passing arrays to a Windows Runtime component<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=251026)</ept> in the Windows Dev Center.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters that have the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute&gt;</ph> attribute behave differently depending on whether the caller is written in native code or managed code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caller is native code (JavaScript or <ph id="ph1">[!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]</ph>), the called method can't make any assumptions about the contents of the original array.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the array the method receives might not be initialized, or might contain default values.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is expected to set the values of all the elements in the array.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caller is managed code, the caller's original array is passed to the called method, as it would be in any method call in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Array contents are mutable in managed code, so the method can selectively read and change those values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is important to remember because it affects unit tests written for a <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the tests are written in managed code, the contents of an array will appear to be mutable during testing, and the results are likely to be different if the method is called from native code later.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying this attribute to an <ph id="ph1">`out`</ph> parameter or to a parameter that has the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> attribute causes an error when the module is exported.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying the attribute to a parameter that has the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> attribute causes an error unless the parameter also has the Visual Basic <ph id="ph2">`ByRef`</ph> modifier.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the attribute is redundant but allowed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>