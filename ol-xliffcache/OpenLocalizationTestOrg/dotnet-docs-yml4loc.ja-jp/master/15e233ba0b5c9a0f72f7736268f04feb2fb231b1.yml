### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.NullExtension
  commentId: T:System.Windows.Markup.NullExtension
  id: NullExtension
  children:
  - System.Windows.Markup.NullExtension.#ctor
  - System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)
  langs:
  - csharp
  name: NullExtension
  nameWithType: NullExtension
  fullName: System.Windows.Markup.NullExtension
  type: Class
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.
  remarks: "In XAML, null and empty string are generally not equivalent. You use the `{x:Null}` extension usage in order to set an attribute that sets the underlying property to `null`.  For more information on how setting null values is relevant for scenarios in XAML, see [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md).  \n  \n This class is a markup extension implementation. Markup extension classes exist mainly to provide infrastructure support for how XAML processors interpret a particular extension. The members that markup extension implementation classes expose are not typically intended to be called from your code. This markup extension class supports the [x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md) usage for .NET XAML Services.  \n  \n In previous versions of the .NET Framework, this class (and the `x:Null` markup extension XAML behavior support as well as the relevant xmlns mapping) existed in the WPF-specific assembly PresentationFramework. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NullExtension> is in the System.Xaml assembly. This makes the `x:Null` usage available to applications using frameworks that reference .NET XAML Services. You do not need PresentationFramework as a referenced assembly so long as you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \n  \n The System.Xaml assembly uses <xref:System.Windows.Markup.XmlnsDefinitionAttribute> to map all types in the assembly to the XAML namespace for the XAML language ([!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]). Typically you declare a prefix for [!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)] in a root element mapping and use the prefix `x`.  \n  \n## WPF Usage Notes  \n For WPF dependency properties, when you set a dependency property value to `null`, you are not necessarily setting the property to its default value, even if it is a reference property. The default value of a dependency property depends on its dependency property registration. An unset value is not necessarily `null` either; see <xref:System.Windows.DependencyProperty.UnsetValue>. For more information, see <xref:System.Windows.DependencyObject.ClearValue%2A> or [Dependency Properties Overview](~/docs/framework/wpf/advanced/dependency-properties-overview.md).  \n  \n<a name=\"xamlTextUsage_NullExtension\"></a>   \n## XAML Text Usage"
  syntax:
    content: >-
      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]

      public class NullExtension : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Windows.Markup.MarkupExtensionReturnTypeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.NullExtension.#ctor
  commentId: M:System.Windows.Markup.NullExtension.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.NullExtension
  langs:
  - csharp
  name: NullExtension()
  nameWithType: NullExtension.NullExtension()
  fullName: NullExtension.NullExtension()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of the <xref href="System.Windows.Markup.NullExtension"></xref> class.
  syntax:
    content: public NullExtension ();
    parameters: []
  overload: System.Windows.Markup.NullExtension.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.NullExtension
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: NullExtension.ProvideValue(IServiceProvider)
  fullName: NullExtension.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Provides `null` to use as a value as the output of this markup extension.
  remarks: "This method supports XAML processor implementations, and is not intended to be called directly. A XAML processor implementation uses this method when it creates object graphs that include an `x:Null` extension usage. This relies on general behavior for XAML processors when they process any <xref:System.Windows.Markup.MarkupExtension> and call its `ProvideValue` implementation.  \n  \n This implementation does not rely on services that are based on the passed `serviceProvider`. It always returns a null reference regardless of context. In the .NET Framework XAML Services implementation, the value to return is obtained by referencing the <xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=fullName> static value."
  syntax:
    content: public override object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: An object that can provide services for the markup extension implementation.
    return:
      type: System.Object
      description: A null reference.
  overload: System.Windows.Markup.NullExtension.ProvideValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
references:
- uid: System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  isExternal: false
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Markup.NullExtension.#ctor
  parent: System.Windows.Markup.NullExtension
  isExternal: false
  name: NullExtension()
  nameWithType: NullExtension.NullExtension()
  fullName: NullExtension.NullExtension()
- uid: System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.NullExtension
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: NullExtension.ProvideValue(IServiceProvider)
  fullName: NullExtension.ProvideValue(IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.NullExtension.#ctor*
  parent: System.Windows.Markup.NullExtension
  isExternal: false
  name: NullExtension
  nameWithType: NullExtension.NullExtension
  fullName: NullExtension.NullExtension
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml
- uid: System.Windows.Markup.NullExtension.ProvideValue*
  parent: System.Windows.Markup.NullExtension
  isExternal: false
  name: ProvideValue
  nameWithType: NullExtension.ProvideValue
  fullName: NullExtension.ProvideValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NullExtension.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
