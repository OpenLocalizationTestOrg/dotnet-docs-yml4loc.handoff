### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D
  commentId: T:System.Windows.Input.Manipulations.ManipulationProcessor2D
  id: ManipulationProcessor2D
  children:
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  langs:
  - csharp
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D
  type: Class
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.
  remarks: "A <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object treats a collection of manipulators as a composite object. Your application is then freed from the necessity of tracking and managing individual manipulators.  \n  \n A manipulation processor by itself does not cause an element to move. Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> and <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> events. The values received via these events enable you to change the location, size or orientation of an element as needed.  \n  \n You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> property. You can then provide non-conditional logic to the transformation of the element that is being manipulated. For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.  \n  \n When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop. For more information see the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> class."
  syntax:
    content: public class ManipulationProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  commentId: M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Creates a new <xref href="System.Windows.Input.Manipulations.ManipulationProcessor2D"></xref> object.
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: The initial set of supported manipulations.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>supportedManipulations</code> parameter is not a valid combination of the <xref href="System.Windows.Input.Manipulations.Manipulations2D"></xref> enumeration values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  commentId: M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D, ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D, ManipulationPivot2D)
  fullName: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D, ManipulationPivot2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Creates a new <xref href="System.Windows.Input.Manipulations.ManipulationProcessor2D"></xref> object.
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: The initial set of supported manipulations.
    - id: pivot
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: Pivot information for single-manipulator rotations.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>supportedManipulations</code> parameter is not a valid combination of the <xref href="System.Windows.Input.Manipulations.Manipulations2D"></xref> enumeration values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  commentId: E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: ManipulationProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Occurs when a manipulation has competed.
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  commentId: M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  id: CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: ManipulationProcessor2D.CompleteManipulation(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Forces the current manipulation to complete and raises the <xref href="System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed"></xref> event.
  syntax:
    content: public void CompleteManipulation (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: The timestamp to complete the manipulation, in 100-nanosecond ticks.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The timestamp is less than the previous timestamp for the current manipulation.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  commentId: E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: ManipulationProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.
  remarks: The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName> event and the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName> event are the same type. Typically, you can use the same event handler for both events.
  example:
  - '[!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  commentId: P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  id: MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: ManipulationProcessor2D.MinimumScaleRotateRadius
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.
  remarks: "If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling. To avoid this problem, set <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> to something greater than zero. Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.  \n  \n A typical value to use should be based on the likely magnitude of \"accidental\" motions of the manipulators. For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.  \n  \n The value for <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> must be a finite, non-negative number."
  syntax:
    content: public float MinimumScaleRotateRadius { get; set; }
    return:
      type: System.Single
      description: The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  commentId: P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  id: Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: ManipulationProcessor2D.Pivot
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the pivot information for the manipulation processor.
  remarks: The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property is used to provide pivot information for single-manipulator rotations. Setting this property to null disables single-manipulator rotations.
  syntax:
    content: public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }
    return:
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: The pivot information for the manipulation processor.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  commentId: M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  id: ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ProcessManipulators(Int64, IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64, IEnumerable<Manipulator2D>)
  fullName: ManipulationProcessor2D.ProcessManipulators(Int64, IEnumerable<Manipulator2D>)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Processes the specified manipulators as a single batch action.
  remarks: The parameter `manipulators` may be an empty list or null. If this results in the number of manipulators reaching zero, the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> event is raised.
  example:
  - "In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D> manipulators);
    parameters:
    - id: timestamp
      type: System.Int64
      description: The timestamp for the batch, in 100-nanosecond ticks.
    - id: manipulators
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
      description: The set of manipulators that are currently in scope.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The timestamp is less than the previous timestamp for the current manipulation.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  commentId: M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Sets parameters on the manipulation processor.
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: Parameters to set.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  commentId: E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  id: Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: ManipulationProcessor2D.Started
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Occurs when a new manipulation has started.
  remarks: ''
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> event checks to see if inertia processing is running and if so, stops it.  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs> Started;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  commentId: P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  id: SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: ManipulationProcessor2D.SupportedManipulations
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the current set of supported manipulations.
  syntax:
    content: public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }
    return:
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: The current set of supported manipulations.
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The property tries to set a value that is not a valid combination of the <xref href=\"System.Windows.Input.Manipulations.Manipulations2D\"></xref>  \n  \n enumeration values."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
- uid: System.Windows.Input.Manipulations.Manipulations2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: Manipulations2D
  nameWithType: Manipulations2D
  fullName: System.Windows.Input.Manipulations.Manipulations2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D, ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D, ManipulationPivot2D)
  fullName: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D, ManipulationPivot2D)
- uid: System.Windows.Input.Manipulations.ManipulationPivot2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationPivot2D
  nameWithType: ManipulationPivot2D
  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: ManipulationProcessor2D.Completed
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
  name: Manipulation2DCompletedEventArgs
  nameWithType: Manipulation2DCompletedEventArgs
  fullName: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: ManipulationProcessor2D.CompleteManipulation(Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: ManipulationProcessor2D.Delta
- uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
  name: Manipulation2DDeltaEventArgs
  nameWithType: Manipulation2DDeltaEventArgs
  fullName: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators(Int64, IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64, IEnumerable<Manipulator2D>)
  fullName: ManipulationProcessor2D.ProcessManipulators(Int64, IEnumerable<Manipulator2D>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Windows.Input.Manipulations.Manipulator2D
  name: Manipulator2D
  nameWithType: Manipulator2D
  fullName: System.Windows.Input.Manipulations.Manipulator2D
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Manipulator2D>
  nameWithType: IEnumerable<Manipulator2D>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulator2D
    name: Manipulator2D
    nameWithType: Manipulator2D
    fullName: System.Windows.Input.Manipulations.Manipulator2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: ManipulationProcessor2D.Started
- uid: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
  name: Manipulation2DStartedEventArgs
  nameWithType: Manipulation2DStartedEventArgs
  fullName: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<Manipulation2DStartedEventArgs>
  nameWithType: EventHandler<Manipulation2DStartedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
    name: Manipulation2DStartedEventArgs
    nameWithType: Manipulation2DStartedEventArgs
    fullName: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: ManipulationProcessor2D.SupportedManipulations
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D
  fullName: ManipulationProcessor2D.ManipulationProcessor2D
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation
  nameWithType: ManipulationProcessor2D.CompleteManipulation
  fullName: ManipulationProcessor2D.CompleteManipulation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: ManipulationProcessor2D.MinimumScaleRotateRadius
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: ManipulationProcessor2D.Pivot
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators
  nameWithType: ManipulationProcessor2D.ProcessManipulators
  fullName: ManipulationProcessor2D.ProcessManipulators
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: ManipulationProcessor2D.SetParameters
  fullName: ManipulationProcessor2D.SetParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: ManipulationProcessor2D.SupportedManipulations
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/ManipulationProcessor2D.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
