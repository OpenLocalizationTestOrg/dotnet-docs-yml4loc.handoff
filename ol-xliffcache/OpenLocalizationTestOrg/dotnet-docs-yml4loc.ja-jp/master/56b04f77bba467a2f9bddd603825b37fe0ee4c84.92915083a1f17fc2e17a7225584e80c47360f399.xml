{"nodes":[{"content":"Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.","nodes":[{"pos":[0,115],"content":"Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.","nodes":[{"content":"Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.","pos":[0,115]}]}],"pos":[431,547],"yaml":true},{"content":"You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language. Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests. HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.  \n  \n If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods).","nodes":[{"pos":[0,502],"content":"You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language. Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests. HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.","nodes":[{"content":"You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.","pos":[0,152]},{"content":"Executable code defined in the <ph id=\"ph1\">`HttpHandler`</ph> classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.","pos":[153,294],"source":" Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests."},{"content":"HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.","pos":[295,502]}]},{"pos":[509,681],"content":"If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods).","nodes":[{"content":"If your handler will access session state values, it must implement the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;</ph> interface (a marker interface with no methods).","pos":[0,172],"source":"If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods)."}]}],"pos":[558,1244],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether another request can use the <xref href=\"System.Web.IHttpHandler\"></xref> instance.","nodes":[{"pos":[0,114],"content":"Gets a value indicating whether another request can use the <ph id=\"ph1\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets a value indicating whether another request can use the <xref href=\"System.Web.IHttpHandler\"></xref> instance."}],"pos":[2594,2709],"yaml":true},{"content":"You explicitly set the <xref:System.Web.IHttpHandler.IsReusable%2A> property to `true` or `false` by code you provide that overrides the <xref:System.Web.IHttpHandler.IsReusable%2A> property accessor (getter).","nodes":[{"pos":[0,209],"content":"You explicitly set the <ph id=\"ph1\">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> or <ph id=\"ph3\">`false`</ph> by code you provide that overrides the <ph id=\"ph4\">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property accessor (getter).","source":"You explicitly set the <xref:System.Web.IHttpHandler.IsReusable%2A> property to `true` or `false` by code you provide that overrides the <xref:System.Web.IHttpHandler.IsReusable%2A> property accessor (getter)."}],"pos":[2720,2930],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Web.IHttpHandler\"></xref> instance is reusable; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;&lt;/xref&gt;</ph> instance is reusable; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.IHttpHandler\"></xref> instance is reusable; otherwise, `false`."}],"pos":[3696,3799],"yaml":true},{"content":"Enables processing of HTTP Web requests by a custom `HttpHandler` that implements the <xref href=\"System.Web.IHttpHandler\"></xref> interface.","nodes":[{"pos":[0,141],"content":"Enables processing of HTTP Web requests by a custom <ph id=\"ph1\">`HttpHandler`</ph> that implements the <ph id=\"ph2\">&lt;xref href=\"System.Web.IHttpHandler\"&gt;&lt;/xref&gt;</ph> interface.","source":"Enables processing of HTTP Web requests by a custom `HttpHandler` that implements the <xref href=\"System.Web.IHttpHandler\"></xref> interface."}],"pos":[4840,4982],"yaml":true},{"content":"Place your custom `HttpHandler` code in the <xref:System.Web.IHttpHandler.ProcessRequest%2A> virtual method, as shown in the following example.","nodes":[{"pos":[0,143],"content":"Place your custom <ph id=\"ph1\">`HttpHandler`</ph> code in the <ph id=\"ph2\">&lt;xref:System.Web.IHttpHandler.ProcessRequest%2A&gt;</ph> virtual method, as shown in the following example.","source":"Place your custom `HttpHandler` code in the <xref:System.Web.IHttpHandler.ProcessRequest%2A> virtual method, as shown in the following example."}],"pos":[4993,5137],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpContext\"></xref> object that provides references to the intrinsic server objects (for example, `Request`, `Response`, `Session`, and `Server`) used to service HTTP requests.","nodes":[{"pos":[0,203],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> object that provides references to the intrinsic server objects (for example, <ph id=\"ph2\">`Request`</ph>, <ph id=\"ph3\">`Response`</ph>, <ph id=\"ph4\">`Session`</ph>, and <ph id=\"ph5\">`Server`</ph>) used to service HTTP requests.","source":"An <xref href=\"System.Web.HttpContext\"></xref> object that provides references to the intrinsic server objects (for example, `Request`, `Response`, `Session`, and `Server`) used to service HTTP requests."}],"pos":[5962,6166],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.IHttpHandler\n  commentId: T:System.Web.IHttpHandler\n  id: IHttpHandler\n  children:\n  - System.Web.IHttpHandler.IsReusable\n  - System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)\n  langs:\n  - csharp\n  name: IHttpHandler\n  nameWithType: IHttpHandler\n  fullName: System.Web.IHttpHandler\n  type: Interface\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.\n  remarks: \"You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language. Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests. HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.  \\n  \\n If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods).\"\n  syntax:\n    content: public interface IHttpHandler\n  derivedClasses:\n  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler\n  - System.Web.IHttpAsyncHandler\n  - System.Web.Handlers.AssemblyResourceLoader\n  - System.Web.Handlers.ScriptResourceHandler\n  - System.Web.Handlers.TraceHandler\n  - System.Web.Routing.UrlRoutingHandler\n  - System.Web.Services.Discovery.DiscoveryRequestHandler\n  - System.Web.UI.Page\n  - System.Web.UI.MobileControls.Adapters.XhtmlAdapters.XhtmlCssHandler\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/IHttpHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.IHttpHandler.IsReusable\n  commentId: P:System.Web.IHttpHandler.IsReusable\n  id: IsReusable\n  parent: System.Web.IHttpHandler\n  langs:\n  - csharp\n  name: IsReusable\n  nameWithType: IHttpHandler.IsReusable\n  fullName: IHttpHandler.IsReusable\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value indicating whether another request can use the <xref href=\"System.Web.IHttpHandler\"></xref> instance.\n  remarks: You explicitly set the <xref:System.Web.IHttpHandler.IsReusable%2A> property to `true` or `false` by code you provide that overrides the <xref:System.Web.IHttpHandler.IsReusable%2A> property accessor (getter).\n  example:\n  - \"The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \\n  \\n [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]\\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool IsReusable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.IHttpHandler\"></xref> instance is reusable; otherwise, `false`.'\n  overload: System.Web.IHttpHandler.IsReusable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/IHttpHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)\n  commentId: M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)\n  id: ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.IHttpHandler\n  langs:\n  - csharp\n  name: ProcessRequest(HttpContext)\n  nameWithType: IHttpHandler.ProcessRequest(HttpContext)\n  fullName: IHttpHandler.ProcessRequest(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Enables processing of HTTP Web requests by a custom `HttpHandler` that implements the <xref href=\"System.Web.IHttpHandler\"></xref> interface.\n  remarks: Place your custom `HttpHandler` code in the <xref:System.Web.IHttpHandler.ProcessRequest%2A> virtual method, as shown in the following example.\n  example:\n  - \"The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \\n  \\n [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]\\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void ProcessRequest (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: An <xref href=\"System.Web.HttpContext\"></xref> object that provides references to the intrinsic server objects (for example, `Request`, `Response`, `Session`, and `Server`) used to service HTTP requests.\n  overload: System.Web.IHttpHandler.ProcessRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/IHttpHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.IHttpHandler.IsReusable\n  parent: System.Web.IHttpHandler\n  isExternal: false\n  name: IsReusable\n  nameWithType: IHttpHandler.IsReusable\n  fullName: IHttpHandler.IsReusable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)\n  parent: System.Web.IHttpHandler\n  isExternal: false\n  name: ProcessRequest(HttpContext)\n  nameWithType: IHttpHandler.ProcessRequest(HttpContext)\n  fullName: IHttpHandler.ProcessRequest(HttpContext)\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.IHttpHandler.IsReusable*\n  parent: System.Web.IHttpHandler\n  isExternal: false\n  name: IsReusable\n  nameWithType: IHttpHandler.IsReusable\n  fullName: IHttpHandler.IsReusable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/IHttpHandler.xml\n- uid: System.Web.IHttpHandler.ProcessRequest*\n  parent: System.Web.IHttpHandler\n  isExternal: false\n  name: ProcessRequest\n  nameWithType: IHttpHandler.ProcessRequest\n  fullName: IHttpHandler.ProcessRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/IHttpHandler.xml\n"}