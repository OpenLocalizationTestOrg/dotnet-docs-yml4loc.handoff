{"nodes":[{"content":"Enables the sharing of properties, resources, and event handlers between instances of a type.","nodes":[{"pos":[0,93],"content":"Enables the sharing of properties, resources, and event handlers between instances of a type.","nodes":[{"content":"Enables the sharing of properties, resources, and event handlers between instances of a type.","pos":[0,93]}]}],"pos":[1186,1280],"yaml":true},{"content":"You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section. Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied. If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application. If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file. For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \n  \n The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects. Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>. The property is the name of the property of the element the style is to apply to. After the style is declared as a resource, it can then be referenced just like any other resource.  \n  \n> [!NOTE]\n>  If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used. Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.  \n  \n The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic. The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]. This suite of features includes the <xref:System.Windows.Style> class as well as the following:  \n  \n-   <xref:System.Windows.Trigger>  \n  \n-   <xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard>  \n  \n-   <xref:System.Windows.Controls.ControlTemplate>  \n  \n-   <xref:System.Windows.DataTemplate>  \n  \n For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).","nodes":[{"pos":[0,1034],"content":"You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section. Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied. If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application. If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file. For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).","nodes":[{"content":"You can set a <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> on any element that derives from <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.","pos":[0,163],"source":"You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>."},{"content":"A style is most commonly declared as a resource inside the <ph id=\"ph1\">&lt;xref:System.Windows.Application.Resources%2A&gt;</ph> section.","pos":[164,278],"source":" A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section."},{"content":"Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied.","pos":[279,432]},{"content":"If, for instance, you declare the style in the root element of your application definition <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file, the style can be used anywhere in your application.","pos":[433,643],"source":" If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application."},{"content":"If you are creating a navigation application and declare the style in one of the application's <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> files, the style can be used only in that <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> file.","pos":[644,910],"source":" If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file."},{"content":"For more information on scoping rules for resources, see <bpt id=\"p1\">[</bpt>XAML Resources<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.","pos":[911,1034],"source":" For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md)."}]},{"pos":[1041,1506],"content":"The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects. Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>. The property is the name of the property of the element the style is to apply to. After the style is declared as a resource, it can then be referenced just like any other resource.","nodes":[{"content":"The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects. Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>. The property is the name of the property of the element the style is to apply to. After the style is declared as a resource, it can then be referenced just like any other resource.","pos":[0,465],"nodes":[{"content":"The style declaration consists of a <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> object that contains a collection of one or more <ph id=\"ph2\">&lt;xref:System.Windows.Setter&gt;</ph> objects.","pos":[0,150],"source":"The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.Setter&gt;</ph> consists of a <ph id=\"ph2\">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> and a <ph id=\"ph3\">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph>.","pos":[151,284],"source":" Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>."},{"content":"The property is the name of the property of the element the style is to apply to.","pos":[285,366]},{"content":"After the style is declared as a resource, it can then be referenced just like any other resource.","pos":[367,465]}]}]},{"pos":[1514,1842],"content":"[!NOTE]\n If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used. Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.","leadings":["","> "],"nodes":[{"content":" If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used. Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.","pos":[8,326],"nodes":[{"content":"If there is more than one setter in the setter collection with the same <ph id=\"ph1\">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> property value, the setter that is declared last is used.","pos":[1,171],"source":" If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used."},{"content":"Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.","pos":[172,318]}]}]},{"pos":[1849,2296],"content":"The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic. The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]. This suite of features includes the <xref:System.Windows.Style> class as well as the following:","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic.","pos":[0,196],"source":"The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic."},{"content":"The styling and templating model includes a suite of features that enable you to customize your <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.","pos":[197,351],"source":" The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]."},{"content":"This suite of features includes the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> class as well as the following:","pos":[352,447],"source":" This suite of features includes the <xref:System.Windows.Style> class as well as the following:"}]},{"pos":[2306,2335],"content":"<xref:System.Windows.Trigger>","nodes":[]},{"pos":[2345,2432],"content":"<xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard>","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>","pos":[0,87],"source":"<xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard>"}]},{"pos":[2442,2488],"content":"<xref:System.Windows.Controls.ControlTemplate>","nodes":[]},{"pos":[2498,2532],"content":"<xref:System.Windows.DataTemplate>","nodes":[]},{"pos":[2539,2647],"content":"For more information, see <bpt id=\"p1\">[</bpt>Styling and Templating<ept id=\"p1\">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept>.","source":"For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md)."}],"pos":[1291,3958],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class.","nodes":[{"pos":[0,82],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class."}],"pos":[7858,7941],"yaml":true},{"content":"This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type. If this is used outside the context of the parser, behavior is undefined.","nodes":[{"pos":[0,223],"content":"This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type. If this is used outside the context of the parser, behavior is undefined.","nodes":[{"content":"This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type. If this is used outside the context of the parser, behavior is undefined.","pos":[0,223],"nodes":[{"content":"This constructor call requires delayed validation of <ph id=\"ph1\">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Style.BasedOn%2A&gt;</ph> style type.","pos":[0,149],"source":"This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type."},{"content":"If this is used outside the context of the parser, behavior is undefined.","pos":[150,223]}]}]}],"pos":[7952,8176],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class to use on the specified <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph> class to use on the specified <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class to use on the specified <xref href=\"System.Type\"></xref>."}],"pos":[9148,9288],"yaml":true},{"content":"The type to which the style will apply.","nodes":[{"pos":[0,39],"content":"The type to which the style will apply.","nodes":[{"content":"The type to which the style will apply.","pos":[0,39]}]}],"pos":[9423,9463],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class to use on the specified <xref href=\"System.Type\"></xref> and based on the specified <xref href=\"System.Windows.Style\"></xref>.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph> class to use on the specified <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> and based on the specified <ph id=\"ph3\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class to use on the specified <xref href=\"System.Type\"></xref> and based on the specified <xref href=\"System.Windows.Style\"></xref>."}],"pos":[10482,10691],"yaml":true},{"content":"The type to which the style will apply.","nodes":[{"pos":[0,39],"content":"The type to which the style will apply.","nodes":[{"content":"The type to which the style will apply.","pos":[0,39]}]}],"pos":[10856,10896],"yaml":true},{"content":"The style to base this style on.","nodes":[{"pos":[0,32],"content":"The style to base this style on.","nodes":[{"content":"The style to base this style on.","pos":[0,32]}]}],"pos":[10966,10999],"yaml":true},{"content":"Gets or sets a defined style that is the basis of the current style.","nodes":[{"pos":[0,68],"content":"Gets or sets a defined style that is the basis of the current style.","nodes":[{"content":"Gets or sets a defined style that is the basis of the current style.","pos":[0,68]}]}],"pos":[11884,11953],"yaml":true},{"content":"Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.  \n  \n<a name=\"xamlAttributeUsage_BasedOn\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object BasedOn=\"myStyle\" .../>  \n```  \n  \n<a name=\"xamlValues_BasedOn\"></a>   \n## XAML Values  \n *myStyle*  \n An existing style. Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.","nodes":[{"pos":[0,74],"content":"Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.","nodes":[{"content":"Each style only supports one <ph id=\"ph1\">&lt;xref:System.Windows.Style.BasedOn%2A&gt;</ph> value.","pos":[0,74],"source":"Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value."}]},{"pos":[128,148],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[243,254],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[258,441],"content":"*myStyle*  \n An existing style. Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>myStyle<ept id=\"p1\">*</ept>","pos":[0,9],"source":"*myStyle*"},{"content":" An existing style. Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.","pos":[12,183],"nodes":[{"content":"An existing style.","pos":[1,19]},{"content":"Typically, you use the <bpt id=\"p1\">[</bpt>Markup Extensions and WPF XAML<ept id=\"p1\">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept> to refer to an existing style.","pos":[20,171],"source":" Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style."}]}]}],"pos":[11964,12426],"yaml":true,"extradata":"MT"},{"content":"A defined style that is the basis of the current style. The default value is `null`.","nodes":[{"pos":[0,84],"content":"A defined style that is the basis of the current style. The default value is `null`.","nodes":[{"content":"A defined style that is the basis of the current style.","pos":[0,55]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[56,84],"source":" The default value is `null`."}]}],"pos":[14309,14394],"yaml":true},{"content":"Returns the hash code for this <xref href=\"System.Windows.Style\"></xref>.","nodes":[{"pos":[0,73],"content":"Returns the hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the hash code for this <xref href=\"System.Windows.Style\"></xref>."}],"pos":[15372,15446],"yaml":true},{"content":"The hash code for this <xref href=\"System.Windows.Style\"></xref>.","nodes":[{"pos":[0,65],"content":"The hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph>.","source":"The hash code for this <xref href=\"System.Windows.Style\"></xref>."}],"pos":[15580,15646],"yaml":true},{"content":"Gets a value that indicates whether the style is read-only and cannot be changed.","nodes":[{"pos":[0,81],"content":"Gets a value that indicates whether the style is read-only and cannot be changed.","nodes":[{"content":"Gets a value that indicates whether the style is read-only and cannot be changed.","pos":[0,81]}]}],"pos":[16543,16625],"yaml":true},{"content":"A style is sealed when another style is based on it or when it is applied for the first time.","nodes":[{"pos":[0,93],"content":"A style is sealed when another style is based on it or when it is applied for the first time.","nodes":[{"content":"A style is sealed when another style is based on it or when it is applied for the first time.","pos":[0,93]}]}],"pos":[16636,16730],"yaml":true,"extradata":"MT"},{"content":"`true` if the style is sealed; otherwise `false`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> if the style is sealed; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the style is sealed; otherwise `false`."}],"pos":[16841,16893],"yaml":true},{"content":"Registers a new name-object pair in the current namescope.","nodes":[{"pos":[0,58],"content":"Registers a new name-object pair in the current namescope.","nodes":[{"content":"Registers a new name-object pair in the current namescope.","pos":[0,58]}]}],"pos":[17944,18003],"yaml":true},{"content":"The name to register.","nodes":[{"pos":[0,21],"content":"The name to register.","nodes":[{"content":"The name to register.","pos":[0,21]}]}],"pos":[18164,18186],"yaml":true},{"content":"The object to map to the specified <code>name</code>.","nodes":[{"pos":[0,53],"content":"The object to map to the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The object to map to the specified <code>name</code>."}],"pos":[18255,18309],"yaml":true},{"content":"Gets or sets the collection of resources that can be used within the scope of this style.","nodes":[{"pos":[0,89],"content":"Gets or sets the collection of resources that can be used within the scope of this style.","nodes":[{"content":"Gets or sets the collection of resources that can be used within the scope of this style.","pos":[0,89]}]}],"pos":[19213,19303],"yaml":true},{"content":"<a name=\"xamlPropertyElementUsage_Resources\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Resources>  \n    oneOrMoreResourceElements  \n  </object.Resources>  \n</object>  \n- or -   \n<object>  \n  <object.Resources>  \n    <ResourceDictionary Source=\"externalDictionarySource\"/>  \n  </object.Resources>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Resources\"></a>   \n## XAML Values  \n *oneOrMoreResourceElements*  \n One or more resource elements. To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.  \n  \n \\<ResourceDictionary Source=\" *externalDictionarySource*\"/>  \n An external dictionary source. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).","nodes":[{"pos":[56,83],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[390,401],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[405,828],"content":"*oneOrMoreResourceElements*  \n One or more resource elements. To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>oneOrMoreResourceElements<ept id=\"p1\">*</ept>","pos":[0,27],"source":"*oneOrMoreResourceElements*"},{"content":" One or more resource elements. To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.","pos":[30,423],"nodes":[{"content":"One or more resource elements.","pos":[1,31]},{"content":"To be referenced later in either <bpt id=\"p1\">[</bpt>StaticResource Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept> or <bpt id=\"p2\">[</bpt>DynamicResource Markup Extension<ept id=\"p2\">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept> syntax in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, a resource element must have an <ph id=\"ph2\">`x:Key`</ph> attribute.","pos":[32,393],"source":" To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute."}]}]},{"pos":[835,1040],"content":"\\<ResourceDictionary Source=\" *externalDictionarySource*\"/>  \n An external dictionary source. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>ResourceDictionary Source=\" <bpt id=\"p1\">*</bpt>externalDictionarySource<ept id=\"p1\">*</ept>\"/&gt;","pos":[0,59],"source":"\\<ResourceDictionary Source=\" *externalDictionarySource*\"/>"},{"content":" An external dictionary source. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).","pos":[62,205],"nodes":[{"content":"An external dictionary source.","pos":[1,31]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Merged Resource Dictionaries<ept id=\"p1\">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>.","pos":[32,143],"source":" For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)."}]}]}],"pos":[19314,20389],"yaml":true,"extradata":"MT"},{"content":"The resources that can be used within the scope of this style.","nodes":[{"pos":[0,62],"content":"The resources that can be used within the scope of this style.","nodes":[{"content":"The resources that can be used within the scope of this style.","pos":[0,62]}]}],"pos":[20602,20665],"yaml":true},{"content":"Locks this style and all factories and triggers so they cannot be changed.","nodes":[{"pos":[0,74],"content":"Locks this style and all factories and triggers so they cannot be changed.","nodes":[{"content":"Locks this style and all factories and triggers so they cannot be changed.","pos":[0,74]}]}],"pos":[21581,21656],"yaml":true},{"content":"Gets a collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects.","nodes":[{"pos":[0,124],"content":"Gets a collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Setter\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> objects.","source":"Gets a collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects."}],"pos":[22603,22728],"yaml":true},{"content":"The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>. Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.  \n  \n An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common. This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style. For example:  \n  \n```  \n<Style>  \n  <Style.Setters>  \n    <!--one or more SetterBase derived object elements here-->  \n  </Style.Setters>  \n</Style>  \n```  \n  \n<a name=\"xamlPropertyElementUsage_Setters\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  oneOrMoreSetters  \n</object>  \n```  \n  \n<a name=\"xamlValues_Setters\"></a>   \n## XAML Values  \n *oneOrMoreSetters*  \n One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.","nodes":[{"pos":[0,368],"content":"The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>. Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.","nodes":[{"content":"The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>. Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.","pos":[0,368],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Style.Setters%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph> object can consist only of objects assignable to <ph id=\"ph3\">&lt;xref:System.Windows.SetterBase&gt;</ph>.","pos":[0,167],"source":"The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>."},{"content":"Adding a <ph id=\"ph1\">&lt;xref:System.Windows.SetterBase&gt;</ph> child to a <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph> object implicitly adds it to the <ph id=\"ph3\">&lt;xref:System.Windows.SetterBaseCollection&gt;</ph> for the <ph id=\"ph4\">&lt;xref:System.Windows.Style&gt;</ph> object.","pos":[168,368],"source":" Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object."}]}]},{"pos":[375,716],"content":"An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common. This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style. For example:","nodes":[{"content":"An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common. This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style. For example:","pos":[0,341],"nodes":[{"content":"An explicit property element usage  for <ph id=\"ph1\">&lt;xref:System.Windows.Style.Setters%2A&gt;</ph> is also relatively common.","pos":[0,105],"source":"An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common."},{"content":"This is a markup style decision that can sometimes help distinguish <ph id=\"ph1\">&lt;xref:System.Windows.Style.Setters%2A&gt;</ph> from <ph id=\"ph2\">&lt;xref:System.Windows.Style.Resources%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Style.Triggers%2A&gt;</ph> items in a complex style.","pos":[106,328],"source":" This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style."},{"content":"For example:","pos":[329,341]}]}]},{"pos":[918,945],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[1050,1061],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1065,1173],"content":"*oneOrMoreSetters*  \n One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>oneOrMoreSetters<ept id=\"p1\">*</ept>","pos":[0,18],"source":"*oneOrMoreSetters*"},{"content":"One or more <ph id=\"ph1\">&lt;xref:System.Windows.Setter&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.EventSetter&gt;</ph> objects.","pos":[22,108],"source":" One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects."}]}],"pos":[22739,23943],"yaml":true,"extradata":"MT"},{"content":"A collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects. The default is an empty collection.","nodes":[{"pos":[0,155],"content":"A collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects. The default is an empty collection.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Setter\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,119],"source":"A collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects."},{"content":"The default is an empty collection.","pos":[120,155]}]}],"pos":[24895,25051],"yaml":true},{"content":"Gets or sets the type for which this style is intended.","nodes":[{"pos":[0,55],"content":"Gets or sets the type for which this style is intended.","nodes":[{"content":"Gets or sets the type for which this style is intended.","pos":[0,55]}]}],"pos":[25973,26029],"yaml":true},{"content":"You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. Therefore, your target type can be any of those elements. However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.  \n  \n If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.  \n  \n<a name=\"xamlAttributeUsage_TargetType\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object  TargetType=\"{x:Type typeName}\"/>  \n-or-  \n<object  TargetType=\"typeName\"/>  \n```  \n  \n<a name=\"xamlValues_TargetType\"></a>   \n## XAML Values  \n `{x:Type ...}`  \n An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.  \n  \n *typeName*  \n The type name of the class.","nodes":[{"pos":[0,500],"content":"You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. Therefore, your target type can be any of those elements. However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.","nodes":[{"content":"You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. Therefore, your target type can be any of those elements. However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.","pos":[0,500],"nodes":[{"content":"You can set a style on any element that derives from <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.","pos":[0,141],"source":"You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>."},{"content":"Therefore, your target type can be any of those elements.","pos":[142,199]},{"content":"However, if you create a style with a <ph id=\"ph1\">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph> property and base it on another style that also defines a <ph id=\"ph2\">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph> property, the target type of the derived style must be the same as or be derived from the target type of the base style.","pos":[200,500],"source":" However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style."}]}]},{"pos":[507,708],"content":"If you do not specify a <ph id=\"ph1\">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>, then you must specify an <ph id=\"ph2\">`x:Key`</ph> for your <ph id=\"ph3\">&lt;xref:System.Windows.Style&gt;</ph> and also qualify the properties in your style with a class name.","source":"If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name."},{"pos":[765,785],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[935,946],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[950,1079],"content":"`{x:Type ...}`  \n An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.","nodes":[{"content":"An <bpt id=\"p1\">[</bpt>x:Type Markup Extension<ept id=\"p1\">](~/docs/framework/xaml-services/x-type-markup-extension.md)</ept> markup extension usage.","pos":[18,129],"source":" An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage."}]},{"pos":[1086,1127],"content":"*typeName*  \n The type name of the class.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>typeName<ept id=\"p1\">*</ept>","pos":[0,10],"source":"*typeName*"},{"content":"The type name of the class.","pos":[14,41]}]}],"pos":[26040,27197],"yaml":true,"extradata":"MT"},{"content":"The target type for this style.","nodes":[{"pos":[0,31],"content":"The target type for this style.","nodes":[{"content":"The target type for this style.","pos":[0,31]}]}],"pos":[28953,28985],"yaml":true},{"content":"Gets a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects that apply property values based on specified conditions.","nodes":[{"pos":[0,134],"content":"Gets a collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.TriggerBase\"&gt;&lt;/xref&gt;</ph> objects that apply property values based on specified conditions.","source":"Gets a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects that apply property values based on specified conditions."}],"pos":[29993,30128],"yaml":true},{"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>. Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.  \n  \n<a name=\"xamlPropertyElementUsage_Triggers\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Triggers>  \n    oneOrMoreTriggers  \n  </object.Triggers>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Triggers\"></a>   \n## XAML Values  \n *oneOrMoreTriggers*  \n Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.","nodes":[{"pos":[0,363],"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>. Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> styling and templating model enables you to specify triggers within your <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph>.","pos":[0,177],"source":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>."},{"content":"Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes <ph id=\"ph1\">`true`</ph>, or when an event occurs) are satisfied.","pos":[178,363],"source":" Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied."}]},{"pos":[424,451],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[605,616],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[620,737],"content":"*oneOrMoreTriggers*  \n Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>oneOrMoreTriggers<ept id=\"p1\">*</ept>","pos":[0,19],"source":"*oneOrMoreTriggers*"},{"content":"Zero or more object elements that are classes deriving from <ph id=\"ph1\">&lt;xref:System.Windows.TriggerBase&gt;</ph>.","pos":[23,117],"source":" Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>."}]}],"pos":[30139,30899],"yaml":true,"extradata":"MT"},{"content":"A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects. The default is an empty collection.","nodes":[{"pos":[0,108],"content":"A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects. The default is an empty collection.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.TriggerBase\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,72],"source":"A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects."},{"content":"The default is an empty collection.","pos":[73,108]}]}],"pos":[31564,31673],"yaml":true},{"content":"Removes a name-object mapping from the namescope.","nodes":[{"pos":[0,49],"content":"Removes a name-object mapping from the namescope.","nodes":[{"content":"Removes a name-object mapping from the namescope.","pos":[0,49]}]}],"pos":[32687,32737],"yaml":true},{"content":"The name of the mapping to remove.","nodes":[{"pos":[0,34],"content":"The name of the mapping to remove.","nodes":[{"content":"The name of the mapping to remove.","pos":[0,34]}]}],"pos":[32878,32913],"yaml":true},{"content":"Adds a child object.","nodes":[{"pos":[0,20],"content":"Adds a child object.","nodes":[{"content":"Adds a child object.","pos":[0,20]}]}],"pos":[34020,34041],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","nodes":[{"pos":[0,189],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","pos":[0,189],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IAddChild&gt;</ph> interface.","pos":[60,189],"source":" It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface."}]}]}],"pos":[34052,34242],"yaml":true,"extradata":"MT"},{"content":"The child object to add.","nodes":[{"pos":[0,24],"content":"The child object to add.","nodes":[{"content":"The child object to add.","pos":[0,24]}]}],"pos":[34382,34407],"yaml":true},{"content":"Adds the text content of a node to the object.","nodes":[{"pos":[0,46],"content":"Adds the text content of a node to the object.","nodes":[{"content":"Adds the text content of a node to the object.","pos":[0,46]}]}],"pos":[35512,35559],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","nodes":[{"pos":[0,189],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.","pos":[0,189],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IAddChild&gt;</ph> interface.","pos":[60,189],"source":" It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface."}]}]}],"pos":[35570,35760],"yaml":true,"extradata":"MT"},{"content":"The text to add to the object.","nodes":[{"pos":[0,30],"content":"The text to add to the object.","nodes":[{"content":"The text to add to the object.","pos":[0,30]}]}],"pos":[35897,35928],"yaml":true},{"content":"Returns an object that has the provided identifying name.","nodes":[{"pos":[0,57],"content":"Returns an object that has the provided identifying name.","nodes":[{"content":"Returns an object that has the provided identifying name.","pos":[0,57]}]}],"pos":[37066,37124],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.","nodes":[{"pos":[0,190],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.","pos":[0,190],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> interface.","pos":[60,190],"source":" It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface."}]}]}],"pos":[37135,37326],"yaml":true,"extradata":"MT"},{"content":"The name identifier for the object being requested.","nodes":[{"pos":[0,51],"content":"The name identifier for the object being requested.","nodes":[{"content":"The name identifier for the object being requested.","pos":[0,51]}]}],"pos":[37467,37519],"yaml":true},{"content":"The object, if found. Returns `null` if no object of that name was found.","nodes":[{"pos":[0,73],"content":"The object, if found. Returns `null` if no object of that name was found.","nodes":[{"content":"The object, if found.","pos":[0,21]},{"content":"Returns <ph id=\"ph1\">`null`</ph> if no object of that name was found.","pos":[22,73],"source":" Returns `null` if no object of that name was found."}]}],"pos":[37576,37650],"yaml":true},{"content":"Queries whether a specified ambient property is available in the current scope.","nodes":[{"pos":[0,79],"content":"Queries whether a specified ambient property is available in the current scope.","nodes":[{"content":"Queries whether a specified ambient property is available in the current scope.","pos":[0,79]}]}],"pos":[38916,38996],"yaml":true},{"content":"The name of the requested ambient property.","nodes":[{"pos":[0,43],"content":"The name of the requested ambient property.","nodes":[{"content":"The name of the requested ambient property.","pos":[0,43]}]}],"pos":[39172,39216],"yaml":true},{"content":"`true` if the requested ambient property is available; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the requested ambient property is available; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the requested ambient property is available; otherwise, `false`."}],"pos":[39274,39351],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Style\n  commentId: T:System.Windows.Style\n  id: Style\n  children:\n  - System.Windows.Style.#ctor\n  - System.Windows.Style.#ctor(System.Type)\n  - System.Windows.Style.#ctor(System.Type,System.Windows.Style)\n  - System.Windows.Style.BasedOn\n  - System.Windows.Style.GetHashCode\n  - System.Windows.Style.IsSealed\n  - System.Windows.Style.RegisterName(System.String,System.Object)\n  - System.Windows.Style.Resources\n  - System.Windows.Style.Seal\n  - System.Windows.Style.Setters\n  - System.Windows.Style.TargetType\n  - System.Windows.Style.Triggers\n  - System.Windows.Style.UnregisterName(System.String)\n  - System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)\n  - System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  langs:\n  - csharp\n  name: Style\n  nameWithType: Style\n  fullName: System.Windows.Style\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Enables the sharing of properties, resources, and event handlers between instances of a type.\n  remarks: \"You can set a <xref:System.Windows.Style> on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. A style is most commonly declared as a resource inside the <xref:System.Windows.Application.Resources%2A> section. Because styles are resources, they obey the same scoping rules that apply to all resources, so where you declare a style affects where it can be applied. If, for instance, you declare the style in the root element of your application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file, the style can be used anywhere in your application. If you are creating a navigation application and declare the style in one of the application's [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files, the style can be used only in that [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file. For more information on scoping rules for resources, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).  \\n  \\n The style declaration consists of a <xref:System.Windows.Style> object that contains a collection of one or more <xref:System.Windows.Setter> objects. Each <xref:System.Windows.Setter> consists of a <xref:System.Windows.Setter.Property%2A> and a <xref:System.Windows.Setter.Value%2A>. The property is the name of the property of the element the style is to apply to. After the style is declared as a resource, it can then be referenced just like any other resource.  \\n  \\n> [!NOTE]\\n>  If there is more than one setter in the setter collection with the same <xref:System.Windows.Setter.Property%2A> property value, the setter that is declared last is used. Similarly, if you set a value for the same property in a style and on an element directly, the value set on the element directly takes precedence.  \\n  \\n The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] styling and templating model allows maintenance and sharing of a look as well as the separation of presentation and logic. The styling and templating model includes a suite of features that enable you to customize your [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]. This suite of features includes the <xref:System.Windows.Style> class as well as the following:  \\n  \\n-   <xref:System.Windows.Trigger>  \\n  \\n-   <xref:System.Windows.EventTrigger> and <xref:System.Windows.Media.Animation.Storyboard>  \\n  \\n-   <xref:System.Windows.Controls.ControlTemplate>  \\n  \\n-   <xref:System.Windows.DataTemplate>  \\n  \\n For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).\"\n  example:\n  - \"The following example shows a style declaration that will affect the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Control>.  \\n  \\n [!code-xml[StyleOvw01#StyleSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimple)]   \\n  \\n To apply the above style, do the following:  \\n  \\n [!code-xml[StyleOvw01#StyleSimpleApplied](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#stylesimpleapplied)]\\n  \\n You can also apply styles to all elements of a given type by using the <xref:System.Windows.Style.TargetType%2A> property. Adding the target type to the style means that you no longer have to fully qualify the property you are setting with the `ClassName.PropertyName` syntax. The following example defines a style that will be applied to every <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   \\n  \\n> [!NOTE]\\n>  Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact. For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBlock> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBlock> controls in the canvas, even if the <xref:System.Windows.Controls.TextBlock> is part of another control, such as a <xref:System.Windows.Controls.ListBox>.  \\n  \\n For information on how to extend or inherit from a defined style, see the <xref:System.Windows.Style.BasedOn%2A> page.\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]\n\n      [System.Windows.Markup.ContentProperty(\"Setters\")]\n\n      [System.Windows.Markup.DictionaryKeyProperty(\"TargetType\")]\n\n      public class Style : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IAddChild, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  implements:\n  - System.Windows.Markup.IAddChild\n  - System.Windows.Markup.INameScope\n  - System.Windows.Markup.IQueryAmbient\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  - type: System.Windows.Markup.DictionaryKeyPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.#ctor\n  commentId: M:System.Windows.Style.#ctor\n  id: '#ctor'\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Style()\n  nameWithType: Style.Style()\n  fullName: Style.Style()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class.\n  remarks: This constructor call requires delayed validation of <xref:System.Windows.Style.TargetType%2A> and <xref:System.Windows.Style.BasedOn%2A> style type. If this is used outside the context of the parser, behavior is undefined.\n  syntax:\n    content: public Style ();\n    parameters: []\n  overload: System.Windows.Style.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Style.#ctor(System.Type)\n  commentId: M:System.Windows.Style.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Style(Type)\n  nameWithType: Style.Style(Type)\n  fullName: Style.Style(Type)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class to use on the specified <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public Style (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The type to which the style will apply.\n  overload: System.Windows.Style.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.#ctor(System.Type,System.Windows.Style)\n  commentId: M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)\n  id: '#ctor(System.Type,System.Windows.Style)'\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Style(Type, Style)\n  nameWithType: Style.Style(Type, Style)\n  fullName: Style.Style(Type, Style)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Style\"></xref> class to use on the specified <xref href=\"System.Type\"></xref> and based on the specified <xref href=\"System.Windows.Style\"></xref>.\n  syntax:\n    content: public Style (Type targetType, System.Windows.Style basedOn);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The type to which the style will apply.\n    - id: basedOn\n      type: System.Windows.Style\n      description: The style to base this style on.\n  overload: System.Windows.Style.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.BasedOn\n  commentId: P:System.Windows.Style.BasedOn\n  id: BasedOn\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: BasedOn\n  nameWithType: Style.BasedOn\n  fullName: Style.BasedOn\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets a defined style that is the basis of the current style.\n  remarks: \"Each style only supports one <xref:System.Windows.Style.BasedOn%2A> value.  \\n  \\n<a name=\\\"xamlAttributeUsage_BasedOn\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object BasedOn=\\\"myStyle\\\" .../>  \\n```  \\n  \\n<a name=\\\"xamlValues_BasedOn\\\"></a>   \\n## XAML Values  \\n *myStyle*  \\n An existing style. Typically, you use the [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md) to refer to an existing style.\"\n  example:\n  - \"There are several ways that styles in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can be extended or inherited. Styles can be based on other styles through this property. When you use this property, the new style will inherit the values of the original style that are not explicitly redefined in the new style. In the following example, `Style2` inherits the <xref:System.Windows.Controls.Control.Background%2A?displayProperty=fullName>value of `Yellow`, and adds a <xref:System.Windows.Controls.Control.Foreground%2A?displayProperty=fullName>value of `Blue`.  \\n  \\n [!code-xml[StyleOvw01#ExtendingStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyle)]   \\n  \\n Similarly, styles can be based on the style of an existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] element, as in the following example where the new style is based on the style of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[PhotoStoreDemoStyled#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#2)]   \\n  \\n> [!NOTE]\\n>  If you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the type of the base style.  \\n  \\n Styles defined for specific types can also be based on other styles, as in the following example.  \\n  \\n [!code-xml[StyleOvw01#ExtendingStyleTargetType](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#extendingstyletargettype)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.Ambient]\n\n      public System.Windows.Style BasedOn { get; set; }\n    return:\n      type: System.Windows.Style\n      description: A defined style that is the basis of the current style. The default value is `null`.\n  overload: System.Windows.Style.BasedOn*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.AmbientAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.GetHashCode\n  commentId: M:System.Windows.Style.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Style.GetHashCode()\n  fullName: Style.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the hash code for this <xref href=\"System.Windows.Style\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Windows.Style\"></xref>.\n  overload: System.Windows.Style.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.IsSealed\n  commentId: P:System.Windows.Style.IsSealed\n  id: IsSealed\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: IsSealed\n  nameWithType: Style.IsSealed\n  fullName: Style.IsSealed\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that indicates whether the style is read-only and cannot be changed.\n  remarks: A style is sealed when another style is based on it or when it is applied for the first time.\n  syntax:\n    content: public bool IsSealed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the style is sealed; otherwise `false`.'\n  overload: System.Windows.Style.IsSealed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.RegisterName(System.String,System.Object)\n  commentId: M:System.Windows.Style.RegisterName(System.String,System.Object)\n  id: RegisterName(System.String,System.Object)\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: RegisterName(String, Object)\n  nameWithType: Style.RegisterName(String, Object)\n  fullName: Style.RegisterName(String, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Registers a new name-object pair in the current namescope.\n  syntax:\n    content: public void RegisterName (string name, object scopedElement);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name to register.\n    - id: scopedElement\n      type: System.Object\n      description: The object to map to the specified <code>name</code>.\n  overload: System.Windows.Style.RegisterName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.Resources\n  commentId: P:System.Windows.Style.Resources\n  id: Resources\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Resources\n  nameWithType: Style.Resources\n  fullName: Style.Resources\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the collection of resources that can be used within the scope of this style.\n  remarks: \"<a name=\\\"xamlPropertyElementUsage_Resources\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.Resources>  \\n    oneOrMoreResourceElements  \\n  </object.Resources>  \\n</object>  \\n- or -   \\n<object>  \\n  <object.Resources>  \\n    <ResourceDictionary Source=\\\"externalDictionarySource\\\"/>  \\n  </object.Resources>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_Resources\\\"></a>   \\n## XAML Values  \\n *oneOrMoreResourceElements*  \\n One or more resource elements. To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], a resource element must have an `x:Key` attribute.  \\n  \\n \\\\<ResourceDictionary Source=\\\" *externalDictionarySource*\\\"/>  \\n An external dictionary source. For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.Ambient]\n\n      public System.Windows.ResourceDictionary Resources { get; set; }\n    return:\n      type: System.Windows.ResourceDictionary\n      description: The resources that can be used within the scope of this style.\n  overload: System.Windows.Style.Resources*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.AmbientAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Style.Seal\n  commentId: M:System.Windows.Style.Seal\n  id: Seal\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Seal()\n  nameWithType: Style.Seal()\n  fullName: Style.Seal()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Locks this style and all factories and triggers so they cannot be changed.\n  syntax:\n    content: public void Seal ();\n    parameters: []\n  overload: System.Windows.Style.Seal*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.Setters\n  commentId: P:System.Windows.Style.Setters\n  id: Setters\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Setters\n  nameWithType: Style.Setters\n  fullName: Style.Setters\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects.\n  remarks: \"The <xref:System.Windows.Style.Setters%2A> property of a <xref:System.Windows.Style> object can consist only of objects assignable to <xref:System.Windows.SetterBase>. Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object.  \\n  \\n An explicit property element usage  for <xref:System.Windows.Style.Setters%2A> is also relatively common. This is a markup style decision that can sometimes help distinguish <xref:System.Windows.Style.Setters%2A> from <xref:System.Windows.Style.Resources%2A> and <xref:System.Windows.Style.Triggers%2A> items in a complex style. For example:  \\n  \\n```  \\n<Style>  \\n  <Style.Setters>  \\n    <!--one or more SetterBase derived object elements here-->  \\n  </Style.Setters>  \\n</Style>  \\n```  \\n  \\n<a name=\\\"xamlPropertyElementUsage_Setters\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  oneOrMoreSetters  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_Setters\\\"></a>   \\n## XAML Values  \\n *oneOrMoreSetters*  \\n One or more <xref:System.Windows.Setter> or <xref:System.Windows.EventSetter> objects.\"\n  example:\n  - \"The following example shows how to use this property.  \\n  \\n [!code-csharp[listboxitemstyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxItemStyle/CSharp/Pane1.xaml.cs#1)]\\n [!code-vb[listboxitemstyle#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxItemStyle/VisualBasic/Pane1.xaml.vb#1)]  \\n  \\n Adding a <xref:System.Windows.SetterBase> child to a <xref:System.Windows.Style> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Style> object. The following <xref:System.Windows.EventSetter> is implicitly added to the <xref:System.Windows.SetterBaseCollection> of the style:  \\n  \\n [!code-xml[eventovwsupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]\"\n  syntax:\n    content: public System.Windows.SetterBaseCollection Setters { get; }\n    return:\n      type: System.Windows.SetterBaseCollection\n      description: A collection of <xref href=\"System.Windows.Setter\"></xref> and <xref href=\"System.Windows.EventSetter\"></xref> objects. The default is an empty collection.\n  overload: System.Windows.Style.Setters*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.TargetType\n  commentId: P:System.Windows.Style.TargetType\n  id: TargetType\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: Style.TargetType\n  fullName: Style.TargetType\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the type for which this style is intended.\n  remarks: \"You can set a style on any element that derives from <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>. Therefore, your target type can be any of those elements. However, if you create a style with a <xref:System.Windows.Style.TargetType%2A> property and base it on another style that also defines a <xref:System.Windows.Style.TargetType%2A> property, the target type of the derived style must be the same as or be derived from the target type of the base style.  \\n  \\n If you do not specify a <xref:System.Windows.Style.TargetType%2A>, then you must specify an `x:Key` for your <xref:System.Windows.Style> and also qualify the properties in your style with a class name.  \\n  \\n<a name=\\\"xamlAttributeUsage_TargetType\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object  TargetType=\\\"{x:Type typeName}\\\"/>  \\n-or-  \\n<object  TargetType=\\\"typeName\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_TargetType\\\"></a>   \\n## XAML Values  \\n `{x:Type ...}`  \\n An [x:Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md) markup extension usage.  \\n  \\n *typeName*  \\n The type name of the class.\"\n  example:\n  - \"The following example defines a style that will be applied to all instances of the <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[PhotoStoreDemoStyled#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#1)]   \\n  \\n Setting the <xref:System.Windows.Style.TargetType%2A> property to the <xref:System.Windows.Controls.TextBlock> type without setting an `x:Key` implicitly sets the `x:Key` to `{x:Type TextBlock}`. This also means that if you give the above <xref:System.Windows.Style> an `x:Key` value of anything other than `{x:Type TextBlock}`, the <xref:System.Windows.Style> would not be applied to all <xref:System.Windows.Controls.TextBlock> elements automatically. Instead, you need to apply the style to the <xref:System.Windows.Controls.TextBlock> elements explicitly.  \\n  \\n Many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls consist of a combination of other [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] controls, so creating a style that applies to all controls of a type can have broad impact. For instance, if you create a style that targets the <xref:System.Windows.Controls.TextBox> controls in a <xref:System.Windows.Controls.Canvas>, the style is applied to all <xref:System.Windows.Controls.TextBox> controls in the canvas, even if the <xref:System.Windows.Controls.TextBox> is part of another control, such as a <xref:System.Windows.Controls.ComboBox>.\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]\n\n      [System.Windows.Markup.Ambient]\n\n      public Type TargetType { get; set; }\n    return:\n      type: System.Type\n      description: The target type for this style.\n  overload: System.Windows.Style.TargetType*\n  exceptions: []\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  - type: System.Windows.Markup.AmbientAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.Triggers\n  commentId: P:System.Windows.Style.Triggers\n  id: Triggers\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: Triggers\n  nameWithType: Style.Triggers\n  fullName: Style.Triggers\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects that apply property values based on specified conditions.\n  remarks: \"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model enables you to specify triggers within your <xref:System.Windows.Style>. Essentially, triggers are objects that enable you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.  \\n  \\n<a name=\\\"xamlPropertyElementUsage_Triggers\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.Triggers>  \\n    oneOrMoreTriggers  \\n  </object.Triggers>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_Triggers\\\"></a>   \\n## XAML Values  \\n *oneOrMoreTriggers*  \\n Zero or more object elements that are classes deriving from <xref:System.Windows.TriggerBase>.\"\n  example:\n  - \"The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \\n  \\n [!code-xml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]\"\n  syntax:\n    content: public System.Windows.TriggerCollection Triggers { get; }\n    return:\n      type: System.Windows.TriggerCollection\n      description: A collection of <xref href=\"System.Windows.TriggerBase\"></xref> objects. The default is an empty collection.\n  overload: System.Windows.Style.Triggers*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.UnregisterName(System.String)\n  commentId: M:System.Windows.Style.UnregisterName(System.String)\n  id: UnregisterName(System.String)\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: UnregisterName(String)\n  nameWithType: Style.UnregisterName(String)\n  fullName: Style.UnregisterName(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Removes a name-object mapping from the namescope.\n  syntax:\n    content: public void UnregisterName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the mapping to remove.\n  overload: System.Windows.Style.UnregisterName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  commentId: M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  id: System#Windows#Markup#IAddChild#AddChild(System.Object)\n  isEii: true\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: IAddChild.AddChild(Object)\n  nameWithType: Style.IAddChild.AddChild(Object)\n  fullName: Style.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds a child object.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.\n  syntax:\n    content: void IAddChild.AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The child object to add.\n  overload: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)\n  commentId: M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)\n  id: System#Windows#Markup#IAddChild#AddText(System.String)\n  isEii: true\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: IAddChild.AddText(String)\n  nameWithType: Style.IAddChild.AddText(String)\n  fullName: Style.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Adds the text content of a node to the object.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.\n  syntax:\n    content: void IAddChild.AddText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text to add to the object.\n  overload: System.Windows.Style.System#Windows#Markup#IAddChild#AddText*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)\n  commentId: M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)\n  id: System#Windows#Markup#INameScope#FindName(System.String)\n  isEii: true\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: INameScope.FindName(String)\n  nameWithType: Style.INameScope.FindName(String)\n  fullName: Style.INameScope.FindName(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns an object that has the provided identifying name.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Style> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.\n  syntax:\n    content: object INameScope.FindName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name identifier for the object being requested.\n    return:\n      type: System.Object\n      description: The object, if found. Returns `null` if no object of that name was found.\n  overload: System.Windows.Style.System#Windows#Markup#INameScope#FindName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  commentId: M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  id: System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  isEii: true\n  parent: System.Windows.Style\n  langs:\n  - csharp\n  name: IQueryAmbient.IsAmbientPropertyAvailable(String)\n  nameWithType: Style.IQueryAmbient.IsAmbientPropertyAvailable(String)\n  fullName: Style.IQueryAmbient.IsAmbientPropertyAvailable(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Queries whether a specified ambient property is available in the current scope.\n  syntax:\n    content: bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the requested ambient property.\n    return:\n      type: System.Boolean\n      description: '`true` if the requested ambient property is available; otherwise, `false`.'\n  overload: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Threading.DispatcherObject\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherObject\n  nameWithType: DispatcherObject\n  fullName: System.Windows.Threading.DispatcherObject\n- uid: System.Windows.Style.#ctor\n  parent: System.Windows.Style\n  isExternal: false\n  name: Style()\n  nameWithType: Style.Style()\n  fullName: Style.Style()\n- uid: System.Windows.Style.#ctor(System.Type)\n  parent: System.Windows.Style\n  isExternal: false\n  name: Style(Type)\n  nameWithType: Style.Style(Type)\n  fullName: Style.Style(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Style.#ctor(System.Type,System.Windows.Style)\n  parent: System.Windows.Style\n  isExternal: false\n  name: Style(Type, Style)\n  nameWithType: Style.Style(Type, Style)\n  fullName: Style.Style(Type, Style)\n- uid: System.Windows.Style\n  parent: System.Windows\n  isExternal: false\n  name: Style\n  nameWithType: Style\n  fullName: System.Windows.Style\n- uid: System.Windows.Style.BasedOn\n  parent: System.Windows.Style\n  isExternal: false\n  name: BasedOn\n  nameWithType: Style.BasedOn\n  fullName: Style.BasedOn\n- uid: System.Windows.Style.GetHashCode\n  parent: System.Windows.Style\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Style.GetHashCode()\n  fullName: Style.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Style.IsSealed\n  parent: System.Windows.Style\n  isExternal: false\n  name: IsSealed\n  nameWithType: Style.IsSealed\n  fullName: Style.IsSealed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Style.RegisterName(System.String,System.Object)\n  parent: System.Windows.Style\n  isExternal: false\n  name: RegisterName(String, Object)\n  nameWithType: Style.RegisterName(String, Object)\n  fullName: Style.RegisterName(String, Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Style.Resources\n  parent: System.Windows.Style\n  isExternal: false\n  name: Resources\n  nameWithType: Style.Resources\n  fullName: Style.Resources\n- uid: System.Windows.ResourceDictionary\n  parent: System.Windows\n  isExternal: false\n  name: ResourceDictionary\n  nameWithType: ResourceDictionary\n  fullName: System.Windows.ResourceDictionary\n- uid: System.Windows.Style.Seal\n  parent: System.Windows.Style\n  isExternal: false\n  name: Seal()\n  nameWithType: Style.Seal()\n  fullName: Style.Seal()\n- uid: System.Windows.Style.Setters\n  parent: System.Windows.Style\n  isExternal: false\n  name: Setters\n  nameWithType: Style.Setters\n  fullName: Style.Setters\n- uid: System.Windows.SetterBaseCollection\n  parent: System.Windows\n  isExternal: false\n  name: SetterBaseCollection\n  nameWithType: SetterBaseCollection\n  fullName: System.Windows.SetterBaseCollection\n- uid: System.Windows.Style.TargetType\n  parent: System.Windows.Style\n  isExternal: false\n  name: TargetType\n  nameWithType: Style.TargetType\n  fullName: Style.TargetType\n- uid: System.Windows.Style.Triggers\n  parent: System.Windows.Style\n  isExternal: false\n  name: Triggers\n  nameWithType: Style.Triggers\n  fullName: Style.Triggers\n- uid: System.Windows.TriggerCollection\n  parent: System.Windows\n  isExternal: false\n  name: TriggerCollection\n  nameWithType: TriggerCollection\n  fullName: System.Windows.TriggerCollection\n- uid: System.Windows.Style.UnregisterName(System.String)\n  parent: System.Windows.Style\n  isExternal: false\n  name: UnregisterName(String)\n  nameWithType: Style.UnregisterName(String)\n  fullName: Style.UnregisterName(String)\n- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Style\n  isExternal: false\n  name: IAddChild.AddChild(Object)\n  nameWithType: Style.IAddChild.AddChild(Object)\n  fullName: Style.IAddChild.AddChild(Object)\n- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Style\n  isExternal: false\n  name: IAddChild.AddText(String)\n  nameWithType: Style.IAddChild.AddText(String)\n  fullName: Style.IAddChild.AddText(String)\n- uid: System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)\n  parent: System.Windows.Style\n  isExternal: false\n  name: INameScope.FindName(String)\n  nameWithType: Style.INameScope.FindName(String)\n  fullName: Style.INameScope.FindName(String)\n- uid: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  parent: System.Windows.Style\n  isExternal: false\n  name: IQueryAmbient.IsAmbientPropertyAvailable(String)\n  nameWithType: Style.IQueryAmbient.IsAmbientPropertyAvailable(String)\n  fullName: Style.IQueryAmbient.IsAmbientPropertyAvailable(String)\n- uid: System.Windows.Style.#ctor*\n  parent: System.Windows.Style\n  isExternal: false\n  name: Style\n  nameWithType: Style.Style\n  fullName: Style.Style\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.BasedOn*\n  parent: System.Windows.Style\n  isExternal: false\n  name: BasedOn\n  nameWithType: Style.BasedOn\n  fullName: Style.BasedOn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.GetHashCode*\n  parent: System.Windows.Style\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Style.GetHashCode\n  fullName: Style.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.IsSealed*\n  parent: System.Windows.Style\n  isExternal: false\n  name: IsSealed\n  nameWithType: Style.IsSealed\n  fullName: Style.IsSealed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.RegisterName*\n  parent: System.Windows.Style\n  isExternal: false\n  name: RegisterName\n  nameWithType: Style.RegisterName\n  fullName: Style.RegisterName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.Resources*\n  parent: System.Windows.Style\n  isExternal: false\n  name: Resources\n  nameWithType: Style.Resources\n  fullName: Style.Resources\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.Seal*\n  parent: System.Windows.Style\n  isExternal: false\n  name: Seal\n  nameWithType: Style.Seal\n  fullName: Style.Seal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.Setters*\n  parent: System.Windows.Style\n  isExternal: false\n  name: Setters\n  nameWithType: Style.Setters\n  fullName: Style.Setters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.TargetType*\n  parent: System.Windows.Style\n  isExternal: false\n  name: TargetType\n  nameWithType: Style.TargetType\n  fullName: Style.TargetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.Triggers*\n  parent: System.Windows.Style\n  isExternal: false\n  name: Triggers\n  nameWithType: Style.Triggers\n  fullName: Style.Triggers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.UnregisterName*\n  parent: System.Windows.Style\n  isExternal: false\n  name: UnregisterName\n  nameWithType: Style.UnregisterName\n  fullName: Style.UnregisterName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddChild*\n  parent: System.Windows.Style\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild\n  nameWithType: Style.System.Windows.Markup.IAddChild.AddChild\n  fullName: Style.System.Windows.Markup.IAddChild.AddChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.System#Windows#Markup#IAddChild#AddText*\n  parent: System.Windows.Style\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText\n  nameWithType: Style.System.Windows.Markup.IAddChild.AddText\n  fullName: Style.System.Windows.Markup.IAddChild.AddText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.System#Windows#Markup#INameScope#FindName*\n  parent: System.Windows.Style\n  isExternal: false\n  name: System.Windows.Markup.INameScope.FindName\n  nameWithType: Style.System.Windows.Markup.INameScope.FindName\n  fullName: Style.System.Windows.Markup.INameScope.FindName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*\n  parent: System.Windows.Style\n  isExternal: false\n  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable\n  nameWithType: Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable\n  fullName: Style.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Style.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.Markup.IAddChild\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IAddChild\n  nameWithType: IAddChild\n  fullName: System.Windows.Markup.IAddChild\n- uid: System.Windows.Markup.INameScope\n  parent: System.Windows.Markup\n  isExternal: false\n  name: INameScope\n  nameWithType: INameScope\n  fullName: System.Windows.Markup.INameScope\n- uid: System.Windows.Markup.IQueryAmbient\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IQueryAmbient\n  nameWithType: IQueryAmbient\n  fullName: System.Windows.Markup.IQueryAmbient\n"}