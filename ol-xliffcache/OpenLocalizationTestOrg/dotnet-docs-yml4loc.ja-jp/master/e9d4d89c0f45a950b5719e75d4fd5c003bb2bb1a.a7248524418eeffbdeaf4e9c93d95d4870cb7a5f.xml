{"nodes":[{"content":"Provides base definitions for classes that consume XAML input and produce XAML node streams.","nodes":[{"pos":[0,92],"content":"Provides base definitions for classes that consume XAML input and produce XAML node streams.","nodes":[{"content":"Provides base definitions for classes that consume XAML input and produce XAML node streams.","pos":[0,92]}]}],"pos":[872,965],"yaml":true},{"content":"<xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members. Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member. Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.  \n  \n Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases. However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override. <xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.  \n  \n The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:  \n  \n-   <xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.  \n  \n-   <xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.  \n  \n Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.  \n  \n <xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations. You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.  \n  \n## Subtree Readers  \n For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>. However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>. This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance. In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.  \n  \n The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class. This design enables the internal class to track the frame level where the subtree was entered. The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.  \n  \n Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.","nodes":[{"pos":[0,388],"content":"<xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members. Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member. Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.","nodes":[{"content":"<xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members. Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member. Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.","pos":[0,388],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> is an abstract class and does not provide implementations or definitions that have a working result for all members.","pos":[0,146],"source":"<xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members."},{"content":"Members that do have an implementation in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> are noted in the remarks for that member.","pos":[147,260],"source":" Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member."},{"content":"Specifically, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> has several abstract members that must be implemented, and several virtual members.","pos":[261,388],"source":" Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members."}]}]},{"pos":[395,957],"content":"Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases. However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override. <xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.","nodes":[{"content":"Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases. However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override. <xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.","pos":[0,562],"nodes":[{"content":"Of the virtual members, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> each provide a default implementation that is appropriate for most cases.","pos":[0,184],"source":"Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <ph id=\"ph3\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> override.","pos":[185,453],"source":" However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;</ph> is also a virtual member that has a working default implementation.","pos":[454,562],"source":" <xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation."}]}]},{"pos":[964,1103],"content":"The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:","nodes":[{"content":"The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:","pos":[0,139]}]},{"pos":[1113,1241],"content":"<xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectReader&gt;</ph>, which reads an object graph, such as the active object graph of an application at run time.","pos":[0,128],"source":"<xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time."}]},{"pos":[1251,1432],"content":"<xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>, which reads XAML in the form of a XML text file by using a general <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> that loads the file as an intermediary helper class.","pos":[0,181],"source":"<xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class."}]},{"pos":[1439,1594],"content":"Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.","nodes":[{"content":"Other XAML readers from other frameworks include <ph id=\"ph1\">&lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Debugger.XamlDebuggerXmlReader&gt;</ph>.","pos":[0,155],"source":"Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>."}]},{"pos":[1601,2018],"content":"<xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations. You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> differs from <ph id=\"ph2\">[!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)]</ph> and <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader&gt;</ph> design principles because <ph id=\"ph4\">&lt;xref:System.Xaml.XamlReader&gt;</ph> does not have a <ph id=\"ph5\">`Create`</ph> method to return underlying default XAML reader implementations.","pos":[0,284],"source":"<xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations."},{"content":"You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.","pos":[285,417]}]},{"pos":[2027,2042],"content":"Subtree Readers","linkify":"Subtree Readers","nodes":[{"content":"Subtree Readers","pos":[0,15]}]},{"pos":[2046,2674],"content":"For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>. However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>. This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance. In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.","nodes":[{"content":"For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>. However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>. This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance. In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.","pos":[0,628],"nodes":[{"content":"For the most part, you call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> API in the context of specific XAML reader classes that derive from <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader&gt;</ph>.","pos":[0,156],"source":"For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>."},{"content":"However, in one particular case, you access <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> API on a practical XAML reader instance that is not public and not derived from <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectReader&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>.","pos":[157,383],"source":" However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>."},{"content":"This case is when you call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>, which returns a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader&gt;</ph> instance.","pos":[384,512],"source":" This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance."},{"content":"In the default implementation, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> that is returned by this API is an internal class.","pos":[513,628],"source":" In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class."}]}]},{"pos":[2681,3230],"content":"The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class. This design enables the internal class to track the frame level where the subtree was entered. The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> obtained for subtree reading has valid actions for APIs such as <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>, and those actions are based on the parent reader class.","pos":[0,238],"source":"The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class."},{"content":"This design enables the internal class to track the frame level where the subtree was entered.","pos":[239,333]},{"content":"The acting subtree <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or <ph id=\"ph2\">`null`</ph> at the current node.","pos":[334,549],"source":" The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node."}]},{"pos":[3237,3329],"content":"Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.","nodes":[{"content":"Notes about subtree reader usage are included on certain <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> APIs.","pos":[0,92],"source":"Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs."}]}],"pos":[976,4327],"yaml":true,"extradata":"MT"},{"content":"Initializes the <xref href=\"System.Xaml.XamlReader\"></xref> class.","nodes":[{"pos":[0,66],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes the <xref href=\"System.Xaml.XamlReader\"></xref> class."}],"pos":[5785,5852],"yaml":true},{"content":"Closes the XAML node stream.","nodes":[{"pos":[0,28],"content":"Closes the XAML node stream.","nodes":[{"content":"Closes the XAML node stream.","pos":[0,28]}]}],"pos":[6764,6793],"yaml":true},{"content":"In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.","nodes":[{"pos":[0,165],"content":"In the base implementation, calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Close%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Dispose%2A&gt;</ph> with the <ph id=\"ph3\">`isDisposing`</ph> parameter as <ph id=\"ph4\">`true`</ph>.","source":"In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`."}],"pos":[6804,6970],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlReader\"></xref>, and optionally, releases the managed resources.","nodes":[{"pos":[0,137],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph>, and optionally, releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlReader\"></xref>, and optionally, releases the managed resources."}],"pos":[7960,8098],"yaml":true},{"content":"You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.","nodes":[{"pos":[0,89],"content":"You must call the base class to get <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.IsDisposed%2A&gt;</ph><ph id=\"ph2\"> = </ph><ph id=\"ph3\">`true`</ph>.","source":"You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`."}],"pos":[8109,8199],"yaml":true,"extradata":"MT"},{"content":"`true` to release the managed resources; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> to release the managed resources; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to release the managed resources; otherwise, `false`."}],"pos":[8353,8416],"yaml":true},{"content":"Gets whether <xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"></xref> has been called.","nodes":[{"pos":[0,97],"content":"Gets whether <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"&gt;&lt;/xref&gt;</ph> has been called.","source":"Gets whether <xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"></xref> has been called."}],"pos":[9289,9387],"yaml":true},{"content":"`true` if <xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"></xref> has been called; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"&gt;&lt;/xref&gt;</ph> has been called; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"></xref> has been called; otherwise, `false`."}],"pos":[9503,9620],"yaml":true},{"content":"When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.","nodes":[{"pos":[0,109],"content":"When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.","nodes":[{"content":"When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.","pos":[0,109]}]}],"pos":[10466,10576],"yaml":true},{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"pos":[0,280],"content":"Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","pos":[0,280],"nodes":[{"content":"Subtree readers can call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;</ph>, with behavior that correctly reflects the bounds of the entered subtree.","pos":[0,137],"source":"Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree."},{"content":"For more information, see the \"Subtree Readers\" section in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.","pos":[138,280],"source":" For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>."}]}]}],"pos":[10587,10868],"yaml":true,"extradata":"MT"},{"content":"`true` if the position is at the conceptual end-of-file of the XAML node stream; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> if the position is at the conceptual end-of-file of the XAML node stream; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the position is at the conceptual end-of-file of the XAML node stream; otherwise, `false`."}],"pos":[10985,11088],"yaml":true},{"content":"When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>.","nodes":[{"pos":[0,174],"content":"When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlNodeType.StartMember\"&gt;&lt;/xref&gt;</ph>.","source":"When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>."}],"pos":[11935,12110],"yaml":true},{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"pos":[0,236],"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","pos":[0,236],"nodes":[{"content":"Subtree readers can call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Member%2A&gt;</ph>, with behavior restrictions.","pos":[0,93],"source":"Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions."},{"content":"For more information, see the \"Subtree Readers\" section in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.","pos":[94,236],"source":" For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>."}]}]}],"pos":[12121,12358],"yaml":true,"extradata":"MT"},{"content":"The current member; or `null`, if the reader position is not on a member.","nodes":[{"pos":[0,73],"content":"The current member; or <ph id=\"ph1\">`null`</ph>, if the reader position is not on a member.","source":"The current member; or `null`, if the reader position is not on a member."}],"pos":[12502,12576],"yaml":true},{"content":"When implemented in a derived class, gets the XAML namespace information from the current node.","nodes":[{"pos":[0,95],"content":"When implemented in a derived class, gets the XAML namespace information from the current node.","nodes":[{"content":"When implemented in a derived class, gets the XAML namespace information from the current node.","pos":[0,95]}]}],"pos":[13442,13538],"yaml":true},{"content":"The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context. Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer. See<xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.","nodes":[{"pos":[0,661],"content":"The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context. Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer. See<xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.","nodes":[{"content":"The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context. Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer. See<xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.","pos":[0,661],"nodes":[{"content":"The intended design of this API is to return a non-null result only if the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph> of the current node is <ph id=\"ph2\">&lt;xref:System.Xaml.XamlNodeType.NamespaceDeclaration&gt;</ph>.","pos":[0,193],"source":"The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>."},{"content":"The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context.","pos":[194,348]},{"content":"Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer.","pos":[349,569]},{"content":"See<ph id=\"ph1\">&lt;xref:System.Xaml.XamlXmlReader.Namespace%2A&gt;</ph> for notes on the reference implementation.","pos":[570,661],"source":" See<xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation."}]}]}],"pos":[13549,14211],"yaml":true,"extradata":"MT"},{"content":"The XAML namespace information, if it is available; otherwise, `null`.","nodes":[{"pos":[0,70],"content":"The XAML namespace information, if it is available; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The XAML namespace information, if it is available; otherwise, `null`."}],"pos":[14378,14449],"yaml":true},{"content":"When implemented in a derived class, gets the type of the current node.","nodes":[{"pos":[0,71],"content":"When implemented in a derived class, gets the type of the current node.","nodes":[{"content":"When implemented in a derived class, gets the type of the current node.","pos":[0,71]}]}],"pos":[15312,15384],"yaml":true},{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"pos":[0,238],"content":"Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","pos":[0,238],"nodes":[{"content":"Subtree readers can call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph>, with behavior restrictions.","pos":[0,95],"source":"Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions."},{"content":"For more information, see the \"Subtree Readers\" section in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.","pos":[96,238],"source":" For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>."}]}]}],"pos":[15395,15634],"yaml":true,"extradata":"MT"},{"content":"A value of the <xref href=\"System.Xaml.XamlNodeType\"></xref> enumeration.","nodes":[{"pos":[0,73],"content":"A value of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlNodeType\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"A value of the <xref href=\"System.Xaml.XamlNodeType\"></xref> enumeration."}],"pos":[15784,15858],"yaml":true},{"content":"When implemented in a derived class, provides the next XAML node from the source, if a node is available.","nodes":[{"pos":[0,105],"content":"When implemented in a derived class, provides the next XAML node from the source, if a node is available.","nodes":[{"content":"When implemented in a derived class, provides the next XAML node from the source, if a node is available.","pos":[0,105]}]}],"pos":[16700,16806],"yaml":true},{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"pos":[0,234],"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","pos":[0,234],"nodes":[{"content":"Subtree readers can call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph>, with behavior restrictions.","pos":[0,91],"source":"Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions."},{"content":"For more information, see the \"Subtree Readers\" section in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.","pos":[92,234],"source":" For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>."}]}]}],"pos":[16817,17052],"yaml":true,"extradata":"MT"},{"content":"`true` if a node is available; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if a node is available; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a node is available; otherwise, `false`."}],"pos":[17182,17235],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.XamlReader\"></xref> that is based on the current <xref href=\"System.Xaml.XamlReader\"></xref>, where the returned <xref href=\"System.Xaml.XamlReader\"></xref> is used to iterate through a subtree of the XAML node structure.","nodes":[{"pos":[0,255],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph> that is based on the current <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph>, where the returned <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph> is used to iterate through a subtree of the XAML node structure.","source":"Returns a <xref href=\"System.Xaml.XamlReader\"></xref> that is based on the current <xref href=\"System.Xaml.XamlReader\"></xref>, where the returned <xref href=\"System.Xaml.XamlReader\"></xref> is used to iterate through a subtree of the XAML node structure."}],"pos":[18115,18371],"yaml":true},{"content":"This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>. The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions. The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.  \n  \n Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader. How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree. In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.  \n  \n After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node). You do not automatically obtain an initial node position from the subtree reader when you create it.  \n  \n The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class. The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called. The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior. The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs. It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point. In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.  \n  \n However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual. Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.","nodes":[{"pos":[0,431],"content":"This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>. The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions. The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.","nodes":[{"content":"This method has a default implementation and returns a valid <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>.","pos":[0,91],"source":"This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>."},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> is an internal class that restricts certain <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader&gt;</ph> actions.","pos":[92,217],"source":" The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions."},{"content":"The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or <ph id=\"ph1\">`null`</ph> at the current node when the subtree is exited.","pos":[218,431],"source":" The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited."}]},{"pos":[438,884],"content":"Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader. How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree. In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.","nodes":[{"content":"Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader. How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree. In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.","pos":[0,446],"nodes":[{"content":"Generally, you should check the current node from the initial <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> to determine whether you need a subtree reader.","pos":[0,147],"source":"Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader."},{"content":"How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree.","pos":[148,266]},{"content":"In addition, avoid invoking a subtree reader for certain node cases (for example, for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlNodeType.NamespaceDeclaration&gt;</ph>) that cannot contain a subtree of nodes.","pos":[267,446],"source":" In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes."}]}]},{"pos":[891,1180],"content":"After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node). You do not automatically obtain an initial node position from the subtree reader when you create it.","nodes":[{"content":"After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node). You do not automatically obtain an initial node position from the subtree reader when you create it.","pos":[0,289],"nodes":[{"content":"After you obtain a subtree reader, you must call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> on it to obtain a current node (or call <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> to obtain a next node).","pos":[0,188],"source":"After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node)."},{"content":"You do not automatically obtain an initial node position from the subtree reader when you create it.","pos":[189,289]}]}]},{"pos":[1187,2285],"content":"The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class. The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called. The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior. The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs. It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point. In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.","nodes":[{"content":"The reader you obtain by calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> from this default implementation is an internal class.","pos":[0,132],"source":"The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class."},{"content":"The internal class bases its behavior on the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> implementation that is being used when <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> is called.","pos":[133,302],"source":" The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called."},{"content":"The purpose of the internal class is to wrap the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> and general traversal behavior.","pos":[303,421],"source":" The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior."},{"content":"The traversal stays within the intended subtree by keeping track of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlNodeType.StartMember&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">&lt;xref:System.Xaml.XamlNodeType.EndMember&gt;</ph> pairs or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlNodeType.StartObject&gt;</ph><ph id=\"ph5\">/</ph><ph id=\"ph6\">&lt;xref:System.Xaml.XamlNodeType.EndObject&gt;</ph> pairs.","pos":[422,677],"source":" The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs."},{"content":"It also correctly returns <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> and <ph id=\"ph3\">`true`</ph> for <ph id=\"ph4\">&lt;xref:System.Xaml.XamlReader.IsEof%2A&gt;</ph> when the reader is at the end of the subtree, as defined by its entry point.","pos":[678,884],"source":" It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point."},{"content":"In general, you assume that any <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> API you call from a subtree reader has the same implementation as the overall <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader&gt;</ph> except for the traversal bounding behavior.","pos":[885,1098],"source":" In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior."}]},{"pos":[2292,2693],"content":"However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual. Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.","nodes":[{"content":"However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual. Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.","pos":[0,401],"nodes":[{"content":"However, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph> is virtual.","pos":[0,65],"source":"However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual."},{"content":"Therefore, a specific <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph> implementation can provide behavior that differs from the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader&gt;</ph> internal wrapper behavior; and a <ph id=\"ph3\">&lt;xref:System.Xaml.XamlReader&gt;</ph> implementation can even disable subtree reader functionality by returning <ph id=\"ph4\">&lt;xref:System.NotImplementedException&gt;</ph> or other exceptions.","pos":[66,401],"source":" Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions."}]}]}],"pos":[18382,21086],"yaml":true,"extradata":"MT"},{"content":"A new XAML reader instance for the subtree.","nodes":[{"pos":[0,43],"content":"A new XAML reader instance for the subtree.","nodes":[{"content":"A new XAML reader instance for the subtree.","pos":[0,43]}]}],"pos":[21248,21292],"yaml":true},{"content":"When implemented in a derived class, gets an object that provides XAML schema context information for the information set.","nodes":[{"pos":[0,122],"content":"When implemented in a derived class, gets an object that provides XAML schema context information for the information set.","nodes":[{"content":"When implemented in a derived class, gets an object that provides XAML schema context information for the information set.","pos":[0,122]}]}],"pos":[22187,22310],"yaml":true},{"content":"An object that provides XAML schema context information for the information set.","nodes":[{"pos":[0,80],"content":"An object that provides XAML schema context information for the information set.","nodes":[{"content":"An object that provides XAML schema context information for the information set.","pos":[0,80]}]}],"pos":[22475,22556],"yaml":true},{"content":"Skips the current node and advances the reader position to the next node.","nodes":[{"pos":[0,73],"content":"Skips the current node and advances the reader position to the next node.","nodes":[{"content":"Skips the current node and advances the reader position to the next node.","pos":[0,73]}]}],"pos":[23403,23477],"yaml":true},{"content":"Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation. You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.  \n  \n In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on. If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped. For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.  \n  \n Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  \n  \n The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>. Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> skips the node and its subtree, not just the single entry node.","nodes":[{"pos":[0,249],"content":"Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation. You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.","nodes":[{"content":"Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation. You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.","pos":[0,249],"nodes":[{"content":"Once skipped, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> is called by the default <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> implementation.","pos":[0,130],"source":"Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation."},{"content":"You typically do not call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> in sequence.","pos":[131,249],"source":" You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence."}]}]},{"pos":[256,780],"content":"In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on. If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped. For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.","nodes":[{"content":"In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on. If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped. For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.","pos":[0,524],"nodes":[{"content":"In the default <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph> implementation, different actions are taken depending on which <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph> the reader position is currently on.","pos":[0,194],"source":"In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on."},{"content":"If the reader position is currently on a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlNodeType.StartMember&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xaml.XamlNodeType.StartObject&gt;</ph>, that member or object is skipped.","pos":[195,361],"source":" If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped."},{"content":"For other <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.NodeType%2A&gt;</ph> values, no action is taken other than calling <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Read%2A&gt;</ph> from the current position.","pos":[362,524],"source":" For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position."}]}]},{"pos":[787,1021],"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","pos":[0,234],"nodes":[{"content":"Subtree readers can call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Skip%2A&gt;</ph>, with behavior restrictions.","pos":[0,91],"source":"Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions."},{"content":"For more information, see the \"Subtree Readers\" section in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.","pos":[92,234],"source":" For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>."}]}]},{"pos":[1028,1432],"content":"The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>. Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> skips the node and its subtree, not just the single entry node.","nodes":[{"content":"The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>. Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> skips the node and its subtree, not just the single entry node.","pos":[0,404],"nodes":[{"content":"The node tree behavior of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName&gt;</ph> is based on the XML equivalent <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;</ph>.","pos":[0,181],"source":"The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>."},{"content":"Based on the <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName&gt;</ph> behavior equivalence, <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName&gt;</ph> skips the node and its subtree, not just the single entry node.","pos":[182,404],"source":" Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> skips the node and its subtree, not just the single entry node."}]}]}],"pos":[23488,24931],"yaml":true,"extradata":"MT"},{"content":"When implemented in a derived class, gets the <xref href=\"System.Xaml.XamlType\"></xref> of the current node.","nodes":[{"pos":[0,108],"content":"When implemented in a derived class, gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the current node.","source":"When implemented in a derived class, gets the <xref href=\"System.Xaml.XamlType\"></xref> of the current node."}],"pos":[25836,25945],"yaml":true},{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"pos":[0,234],"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","nodes":[{"content":"Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.","pos":[0,234],"nodes":[{"content":"Subtree readers can call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader.Type%2A&gt;</ph>, with behavior restrictions.","pos":[0,91],"source":"Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions."},{"content":"For more information, see the \"Subtree Readers\" section in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlReader&gt;</ph>, or see <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader.ReadSubtree%2A&gt;</ph>.","pos":[92,234],"source":" For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>."}]}]}],"pos":[25956,26191],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> of the current node; or `null`, if the current reader position is not on an object.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the current node; or <ph id=\"ph2\">`null`</ph>, if the current reader position is not on an object.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> of the current node; or `null`, if the current reader position is not on an object."}],"pos":[26329,26459],"yaml":true},{"content":"When implemented in a derived class, gets the value of the current node.","nodes":[{"pos":[0,72],"content":"When implemented in a derived class, gets the value of the current node.","nodes":[{"content":"When implemented in a derived class, gets the value of the current node.","pos":[0,72]}]}],"pos":[27299,27372],"yaml":true},{"content":"The value of the current node; or `null`, if the current reader position is not on a <xref href=\"System.Xaml.XamlNodeType.Value\"></xref> node type.","nodes":[{"pos":[0,147],"content":"The value of the current node; or <ph id=\"ph1\">`null`</ph>, if the current reader position is not on a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlNodeType.Value\"&gt;&lt;/xref&gt;</ph> node type.","source":"The value of the current node; or `null`, if the current reader position is not on a <xref href=\"System.Xaml.XamlNodeType.Value\"></xref> node type."}],"pos":[27490,27638],"yaml":true},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Xaml.XamlReader\"></xref> class.","nodes":[{"pos":[0,109],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Xaml.XamlReader\"></xref> class."}],"pos":[28602,28712],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlReader\n  commentId: T:System.Xaml.XamlReader\n  id: XamlReader\n  children:\n  - System.Xaml.XamlReader.#ctor\n  - System.Xaml.XamlReader.Close\n  - System.Xaml.XamlReader.Dispose(System.Boolean)\n  - System.Xaml.XamlReader.IsDisposed\n  - System.Xaml.XamlReader.IsEof\n  - System.Xaml.XamlReader.Member\n  - System.Xaml.XamlReader.Namespace\n  - System.Xaml.XamlReader.NodeType\n  - System.Xaml.XamlReader.Read\n  - System.Xaml.XamlReader.ReadSubtree\n  - System.Xaml.XamlReader.SchemaContext\n  - System.Xaml.XamlReader.Skip\n  - System.Xaml.XamlReader.Type\n  - System.Xaml.XamlReader.Value\n  - System.Xaml.XamlReader.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: XamlReader\n  nameWithType: XamlReader\n  fullName: System.Xaml.XamlReader\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Provides base definitions for classes that consume XAML input and produce XAML node streams.\n  remarks: \"<xref:System.Xaml.XamlReader> is an abstract class and does not provide implementations or definitions that have a working result for all members. Members that do have an implementation in <xref:System.Xaml.XamlReader> are noted in the remarks for that member. Specifically, <xref:System.Xaml.XamlReader> has several abstract members that must be implemented, and several virtual members.  \\n  \\n Of the virtual members, <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> each provide a default implementation that is appropriate for most cases. However, the <xref:System.Xaml.XamlReader.ReadSubtree%2A> and <xref:System.Xaml.XamlReader.Skip%2A> default implementations rely on other expected behavior of the implementing XAML reader; in particular, they rely on the <xref:System.Xaml.XamlReader.Read%2A> override. <xref:System.Xaml.XamlReader.Dispose%2A> is also a virtual member that has a working default implementation.  \\n  \\n The following two classes are the most relevant and practical derived classes in .NET Framework XAML Services and the System.Xaml assembly:  \\n  \\n-   <xref:System.Xaml.XamlObjectReader>, which reads an object graph, such as the active object graph of an application at run time.  \\n  \\n-   <xref:System.Xaml.XamlXmlReader>, which reads XAML in the form of a XML text file by using a general <xref:System.Xml.XmlReader> that loads the file as an intermediary helper class.  \\n  \\n Other XAML readers from other frameworks include <xref:System.Windows.Baml2006.Baml2006Reader> and <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.  \\n  \\n <xref:System.Xaml.XamlReader> differs from [!INCLUDE[TLA#tla_xmldom](~/includes/tlasharptla-xmldom-md.md)] and <xref:System.Xml.XmlReader> design principles because <xref:System.Xaml.XamlReader> does not have a `Create` method to return underlying default XAML reader implementations. You must instead instantiate specific derived XAML reader classes by calling their constructors or other class-specific helper APIs.  \\n  \\n## Subtree Readers  \\n For the most part, you call <xref:System.Xaml.XamlReader> API in the context of specific XAML reader classes that derive from <xref:System.Xaml.XamlReader>. However, in one particular case, you access <xref:System.Xaml.XamlReader> API on a practical XAML reader instance that is not public and not derived from <xref:System.Xaml.XamlObjectReader> or <xref:System.Xaml.XamlXmlReader>. This case is when you call <xref:System.Xaml.XamlReader.ReadSubtree%2A>, which returns a <xref:System.Xaml.XamlReader> instance. In the default implementation, the <xref:System.Xaml.XamlReader> that is returned by this API is an internal class.  \\n  \\n The <xref:System.Xaml.XamlReader> obtained for subtree reading has valid actions for APIs such as <xref:System.Xaml.XamlReader.Read%2A> and <xref:System.Xaml.XamlReader.NodeType%2A>, and those actions are based on the parent reader class. This design enables the internal class to track the frame level where the subtree was entered. The acting subtree <xref:System.Xaml.XamlReader> makes sure that if the current node position is moved beyond the bounds of the subtree, the specific subtree reader reports end-of-file or `null` at the current node.  \\n  \\n Notes about subtree reader usage are included on certain <xref:System.Xaml.XamlReader> APIs.\"\n  syntax:\n    content: 'public abstract class XamlReader : IDisposable'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Activities.Debugger.XamlDebuggerXmlReader\n  - System.Windows.Baml2006.Baml2006Reader\n  - System.Xaml.XamlBackgroundReader\n  - System.Xaml.XamlObjectReader\n  - System.Xaml.XamlXmlReader\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.#ctor\n  commentId: M:System.Xaml.XamlReader.#ctor\n  id: '#ctor'\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: XamlReader()\n  nameWithType: XamlReader.XamlReader()\n  fullName: XamlReader.XamlReader()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes the <xref href=\"System.Xaml.XamlReader\"></xref> class.\n  syntax:\n    content: protected XamlReader ();\n    parameters: []\n  overload: System.Xaml.XamlReader.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Close\n  commentId: M:System.Xaml.XamlReader.Close\n  id: Close\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: XamlReader.Close()\n  fullName: XamlReader.Close()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Closes the XAML node stream.\n  remarks: In the base implementation, calling <xref:System.Xaml.XamlReader.Close%2A> calls <xref:System.Xaml.XamlReader.Dispose%2A> with the `isDisposing` parameter as `true`.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Xaml.XamlReader.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Dispose(System.Boolean)\n  commentId: M:System.Xaml.XamlReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: XamlReader.Dispose(Boolean)\n  fullName: XamlReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlReader\"></xref>, and optionally, releases the managed resources.\n  remarks: You must call the base class to get <xref:System.Xaml.XamlReader.IsDisposed%2A> = `true`.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release the managed resources; otherwise, `false`.'\n  overload: System.Xaml.XamlReader.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.IsDisposed\n  commentId: P:System.Xaml.XamlReader.IsDisposed\n  id: IsDisposed\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: IsDisposed\n  nameWithType: XamlReader.IsDisposed\n  fullName: XamlReader.IsDisposed\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets whether <xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"></xref> has been called.\n  syntax:\n    content: protected bool IsDisposed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.Xaml.XamlReader.Dispose(System.Boolean)\"></xref> has been called; otherwise, `false`.'\n  overload: System.Xaml.XamlReader.IsDisposed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.IsEof\n  commentId: P:System.Xaml.XamlReader.IsEof\n  id: IsEof\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: IsEof\n  nameWithType: XamlReader.IsEof\n  fullName: XamlReader.IsEof\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.\n  remarks: Subtree readers can call <xref:System.Xaml.XamlReader.IsEof%2A>, with behavior that correctly reflects the bounds of the entered subtree. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.\n  syntax:\n    content: public abstract bool IsEof { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the position is at the conceptual end-of-file of the XAML node stream; otherwise, `false`.'\n  overload: System.Xaml.XamlReader.IsEof*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Member\n  commentId: P:System.Xaml.XamlReader.Member\n  id: Member\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Member\n  nameWithType: XamlReader.Member\n  fullName: XamlReader.Member\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets the current member at the reader position, if the reader position is on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>.\n  remarks: Subtree readers can call <xref:System.Xaml.XamlReader.Member%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.\n  syntax:\n    content: public abstract System.Xaml.XamlMember Member { get; }\n    return:\n      type: System.Xaml.XamlMember\n      description: The current member; or `null`, if the reader position is not on a member.\n  overload: System.Xaml.XamlReader.Member*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Namespace\n  commentId: P:System.Xaml.XamlReader.Namespace\n  id: Namespace\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: XamlReader.Namespace\n  fullName: XamlReader.Namespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets the XAML namespace information from the current node.\n  remarks: The intended design of this API is to return a non-null result only if the <xref:System.Xaml.XamlReader.NodeType%2A> of the current node is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>. The property does not report the XAML namespace that applies to objects or members in a general scoping sense, as interpreted under a XAML schema context. Your application must provide a means to cache information for the acting XAML namespace as it traverses XAML nodes, if you need that information in a manner other than how the XAML schema context reports it to a writer. See<xref:System.Xaml.XamlXmlReader.Namespace%2A> for notes on the reference implementation.\n  syntax:\n    content: public abstract System.Xaml.NamespaceDeclaration Namespace { get; }\n    return:\n      type: System.Xaml.NamespaceDeclaration\n      description: The XAML namespace information, if it is available; otherwise, `null`.\n  overload: System.Xaml.XamlReader.Namespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.NodeType\n  commentId: P:System.Xaml.XamlReader.NodeType\n  id: NodeType\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XamlReader.NodeType\n  fullName: XamlReader.NodeType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets the type of the current node.\n  remarks: Subtree readers can call <xref:System.Xaml.XamlReader.NodeType%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.\n  syntax:\n    content: public abstract System.Xaml.XamlNodeType NodeType { get; }\n    return:\n      type: System.Xaml.XamlNodeType\n      description: A value of the <xref href=\"System.Xaml.XamlNodeType\"></xref> enumeration.\n  overload: System.Xaml.XamlReader.NodeType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Read\n  commentId: M:System.Xaml.XamlReader.Read\n  id: Read\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: XamlReader.Read()\n  fullName: XamlReader.Read()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, provides the next XAML node from the source, if a node is available.\n  remarks: Subtree readers can call <xref:System.Xaml.XamlReader.Read%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.\n  syntax:\n    content: public abstract bool Read ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if a node is available; otherwise, `false`.'\n  overload: System.Xaml.XamlReader.Read*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.ReadSubtree\n  commentId: M:System.Xaml.XamlReader.ReadSubtree\n  id: ReadSubtree\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: ReadSubtree()\n  nameWithType: XamlReader.ReadSubtree()\n  fullName: XamlReader.ReadSubtree()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.XamlReader\"></xref> that is based on the current <xref href=\"System.Xaml.XamlReader\"></xref>, where the returned <xref href=\"System.Xaml.XamlReader\"></xref> is used to iterate through a subtree of the XAML node structure.\n  remarks: \"This method has a default implementation and returns a valid <xref:System.Xaml.XamlReader>. The returned <xref:System.Xaml.XamlReader> is an internal class that restricts certain <xref:System.Xaml.XamlReader> actions. The restrictions are consistent with the purpose of reading only a dimensioned subtree of a larger source for a XAML node set, and of returning end-of-file or `null` at the current node when the subtree is exited.  \\n  \\n Generally, you should check the current node from the initial <xref:System.Xaml.XamlReader.Read%2A> to determine whether you need a subtree reader. How you check this may be implementation-specific; however, avoid creating multiple subtree readers for every subtree. In addition, avoid invoking a subtree reader for certain node cases (for example, for <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>) that cannot contain a subtree of nodes.  \\n  \\n After you obtain a subtree reader, you must call <xref:System.Xaml.XamlReader.Read%2A> on it to obtain a current node (or call <xref:System.Xaml.XamlReader.Skip%2A> to obtain a next node). You do not automatically obtain an initial node position from the subtree reader when you create it.  \\n  \\n The reader you obtain by calling <xref:System.Xaml.XamlReader.ReadSubtree%2A> from this default implementation is an internal class. The internal class bases its behavior on the <xref:System.Xaml.XamlReader> implementation that is being used when <xref:System.Xaml.XamlReader.ReadSubtree%2A> is called. The purpose of the internal class is to wrap the <xref:System.Xaml.XamlReader.Read%2A> and general traversal behavior. The traversal stays within the intended subtree by keeping track of <xref:System.Xaml.XamlNodeType.StartMember>/<xref:System.Xaml.XamlNodeType.EndMember> pairs or <xref:System.Xaml.XamlNodeType.StartObject>/<xref:System.Xaml.XamlNodeType.EndObject> pairs. It also correctly returns `false` for <xref:System.Xaml.XamlReader.Read%2A> and `true` for <xref:System.Xaml.XamlReader.IsEof%2A> when the reader is at the end of the subtree, as defined by its entry point. In general, you assume that any <xref:System.Xaml.XamlReader> API you call from a subtree reader has the same implementation as the overall <xref:System.Xaml.XamlReader> except for the traversal bounding behavior.  \\n  \\n However, <xref:System.Xaml.XamlReader.ReadSubtree%2A> is virtual. Therefore, a specific <xref:System.Xaml.XamlReader> implementation can provide behavior that differs from the <xref:System.Xaml.XamlReader> internal wrapper behavior; and a <xref:System.Xaml.XamlReader> implementation can even disable subtree reader functionality by returning <xref:System.NotImplementedException> or other exceptions.\"\n  syntax:\n    content: public virtual System.Xaml.XamlReader ReadSubtree ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlReader\n      description: A new XAML reader instance for the subtree.\n  overload: System.Xaml.XamlReader.ReadSubtree*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.SchemaContext\n  commentId: P:System.Xaml.XamlReader.SchemaContext\n  id: SchemaContext\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: SchemaContext\n  nameWithType: XamlReader.SchemaContext\n  fullName: XamlReader.SchemaContext\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets an object that provides XAML schema context information for the information set.\n  syntax:\n    content: public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }\n    return:\n      type: System.Xaml.XamlSchemaContext\n      description: An object that provides XAML schema context information for the information set.\n  overload: System.Xaml.XamlReader.SchemaContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Skip\n  commentId: M:System.Xaml.XamlReader.Skip\n  id: Skip\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Skip()\n  nameWithType: XamlReader.Skip()\n  fullName: XamlReader.Skip()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Skips the current node and advances the reader position to the next node.\n  remarks: \"Once skipped, <xref:System.Xaml.XamlReader.Read%2A> is called by the default <xref:System.Xaml.XamlReader.Skip%2A> implementation. You typically do not call <xref:System.Xaml.XamlReader.Skip%2A> and <xref:System.Xaml.XamlReader.Read%2A> in sequence.  \\n  \\n In the default <xref:System.Xaml.XamlReader.Skip%2A> implementation, different actions are taken depending on which <xref:System.Xaml.XamlReader.NodeType%2A> the reader position is currently on. If the reader position is currently on a <xref:System.Xaml.XamlNodeType.StartMember> or <xref:System.Xaml.XamlNodeType.StartObject>, that member or object is skipped. For other <xref:System.Xaml.XamlReader.NodeType%2A> values, no action is taken other than calling <xref:System.Xaml.XamlReader.Read%2A> from the current position.  \\n  \\n Subtree readers can call <xref:System.Xaml.XamlReader.Skip%2A>, with behavior restrictions. For more information, see the \\\"Subtree Readers\\\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.  \\n  \\n The node tree behavior of <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> is based on the XML equivalent <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>. Based on the <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> behavior equivalence, <xref:System.Xaml.XamlReader.Skip%2A?displayProperty=fullName> skips the node and its subtree, not just the single entry node.\"\n  syntax:\n    content: public virtual void Skip ();\n    parameters: []\n  overload: System.Xaml.XamlReader.Skip*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Type\n  commentId: P:System.Xaml.XamlReader.Type\n  id: Type\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Type\n  nameWithType: XamlReader.Type\n  fullName: XamlReader.Type\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets the <xref href=\"System.Xaml.XamlType\"></xref> of the current node.\n  remarks: Subtree readers can call <xref:System.Xaml.XamlReader.Type%2A>, with behavior restrictions. For more information, see the \"Subtree Readers\" section in <xref:System.Xaml.XamlReader>, or see <xref:System.Xaml.XamlReader.ReadSubtree%2A>.\n  syntax:\n    content: public abstract System.Xaml.XamlType Type { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> of the current node; or `null`, if the current reader position is not on an object.\n  overload: System.Xaml.XamlReader.Type*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.Value\n  commentId: P:System.Xaml.XamlReader.Value\n  id: Value\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XamlReader.Value\n  fullName: XamlReader.Value\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, gets the value of the current node.\n  syntax:\n    content: public abstract object Value { get; }\n    return:\n      type: System.Object\n      description: The value of the current node; or `null`, if the current reader position is not on a <xref href=\"System.Xaml.XamlNodeType.Value\"></xref> node type.\n  overload: System.Xaml.XamlReader.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlReader.System#IDisposable#Dispose\n  commentId: M:System.Xaml.XamlReader.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Xaml.XamlReader\n  langs:\n  - csharp\n  name: IDisposable.Dispose()\n  nameWithType: XamlReader.IDisposable.Dispose()\n  fullName: XamlReader.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Xaml.XamlReader\"></xref> class.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Xaml.XamlReader.System#IDisposable#Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xaml.XamlReader.#ctor\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: XamlReader()\n  nameWithType: XamlReader.XamlReader()\n  fullName: XamlReader.XamlReader()\n- uid: System.Xaml.XamlReader.Close\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Close()\n  nameWithType: XamlReader.Close()\n  fullName: XamlReader.Close()\n- uid: System.Xaml.XamlReader.Dispose(System.Boolean)\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: XamlReader.Dispose(Boolean)\n  fullName: XamlReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlReader.IsDisposed\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: IsDisposed\n  nameWithType: XamlReader.IsDisposed\n  fullName: XamlReader.IsDisposed\n- uid: System.Xaml.XamlReader.IsEof\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: IsEof\n  nameWithType: XamlReader.IsEof\n  fullName: XamlReader.IsEof\n- uid: System.Xaml.XamlReader.Member\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Member\n  nameWithType: XamlReader.Member\n  fullName: XamlReader.Member\n- uid: System.Xaml.XamlMember\n  parent: System.Xaml\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n- uid: System.Xaml.XamlReader.Namespace\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Namespace\n  nameWithType: XamlReader.Namespace\n  fullName: XamlReader.Namespace\n- uid: System.Xaml.NamespaceDeclaration\n  parent: System.Xaml\n  isExternal: false\n  name: NamespaceDeclaration\n  nameWithType: NamespaceDeclaration\n  fullName: System.Xaml.NamespaceDeclaration\n- uid: System.Xaml.XamlReader.NodeType\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: NodeType\n  nameWithType: XamlReader.NodeType\n  fullName: XamlReader.NodeType\n- uid: System.Xaml.XamlNodeType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlNodeType\n  nameWithType: XamlNodeType\n  fullName: System.Xaml.XamlNodeType\n- uid: System.Xaml.XamlReader.Read\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Read()\n  nameWithType: XamlReader.Read()\n  fullName: XamlReader.Read()\n- uid: System.Xaml.XamlReader.ReadSubtree\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: ReadSubtree()\n  nameWithType: XamlReader.ReadSubtree()\n  fullName: XamlReader.ReadSubtree()\n- uid: System.Xaml.XamlReader\n  parent: System.Xaml\n  isExternal: false\n  name: XamlReader\n  nameWithType: XamlReader\n  fullName: System.Xaml.XamlReader\n- uid: System.Xaml.XamlReader.SchemaContext\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlReader.SchemaContext\n  fullName: XamlReader.SchemaContext\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.XamlReader.Skip\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Skip()\n  nameWithType: XamlReader.Skip()\n  fullName: XamlReader.Skip()\n- uid: System.Xaml.XamlReader.Type\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Type\n  nameWithType: XamlReader.Type\n  fullName: XamlReader.Type\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Xaml.XamlReader.Value\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Value\n  nameWithType: XamlReader.Value\n  fullName: XamlReader.Value\n- uid: System.Xaml.XamlReader.System#IDisposable#Dispose\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: XamlReader.IDisposable.Dispose()\n  fullName: XamlReader.IDisposable.Dispose()\n- uid: System.Xaml.XamlReader.#ctor*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: XamlReader\n  nameWithType: XamlReader.XamlReader\n  fullName: XamlReader.XamlReader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Close*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Close\n  nameWithType: XamlReader.Close\n  fullName: XamlReader.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Dispose*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Dispose\n  nameWithType: XamlReader.Dispose\n  fullName: XamlReader.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.IsDisposed*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: IsDisposed\n  nameWithType: XamlReader.IsDisposed\n  fullName: XamlReader.IsDisposed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.IsEof*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: IsEof\n  nameWithType: XamlReader.IsEof\n  fullName: XamlReader.IsEof\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Member*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Member\n  nameWithType: XamlReader.Member\n  fullName: XamlReader.Member\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Namespace*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Namespace\n  nameWithType: XamlReader.Namespace\n  fullName: XamlReader.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.NodeType*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: NodeType\n  nameWithType: XamlReader.NodeType\n  fullName: XamlReader.NodeType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Read*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Read\n  nameWithType: XamlReader.Read\n  fullName: XamlReader.Read\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.ReadSubtree*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: ReadSubtree\n  nameWithType: XamlReader.ReadSubtree\n  fullName: XamlReader.ReadSubtree\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.SchemaContext*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlReader.SchemaContext\n  fullName: XamlReader.SchemaContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Skip*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Skip\n  nameWithType: XamlReader.Skip\n  fullName: XamlReader.Skip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Type*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Type\n  nameWithType: XamlReader.Type\n  fullName: XamlReader.Type\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.Value*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: Value\n  nameWithType: XamlReader.Value\n  fullName: XamlReader.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Xaml.XamlReader.System#IDisposable#Dispose*\n  parent: System.Xaml.XamlReader\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: XamlReader.System.IDisposable.Dispose\n  fullName: XamlReader.System.IDisposable.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}