{"nodes":[{"content":"Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.","nodes":[{"pos":[0,132],"content":"Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.","nodes":[{"content":"Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.","pos":[0,132],"nodes":[{"content":"Represents the coordinates of a three-dimensional (3D) data point.","pos":[0,66]},{"content":"This class is used when performing custom drawing with 3D charts.","pos":[67,132]}]}]}],"pos":[895,1028],"yaml":true},{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.  \n  \n Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).  \n  \n To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> class is not used for 3D styles.","nodes":[{"pos":[0,773],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.","nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.","pos":[0,773],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method.","pos":[0,271],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"By calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph>, the X and Y-values of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Point3D&gt;</ph> objects are changed so that they reflect the 3-dimensional space.","pos":[272,522],"source":" By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects are changed so that they reflect the 3-dimensional space."},{"content":"The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt;</ph> method.","pos":[523,773],"source":" The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."}]}]},{"pos":[780,914],"content":"Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).","nodes":[{"content":"Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).","pos":[0,134]}]},{"pos":[921,1171],"content":"To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> class is not used for 3D styles.","nodes":[{"content":"To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> class is not used for 3D styles.","pos":[0,250],"nodes":[{"content":"To both enable 3D charts and work with their styles, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A&gt;</ph> property.","pos":[0,150],"source":"To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Point3D&gt;</ph> class is not used for 3D styles.","pos":[151,250],"source":" The <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> class is not used for 3D styles."}]}]}],"pos":[1039,2217],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"></xref> class."}],"pos":[3618,3736],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"></xref> class with the specified X, Y and Z coordinates.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"&gt;&lt;/xref&gt;</ph> class with the specified X, Y and Z coordinates.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"></xref> class with the specified X, Y and Z coordinates."}],"pos":[5097,5269],"yaml":true},{"content":"The X coordinate of 3D point.","nodes":[{"pos":[0,29],"content":"The X coordinate of 3D point.","nodes":[{"content":"The X coordinate of 3D point.","pos":[0,29]}]}],"pos":[5409,5439],"yaml":true},{"content":"The Y coordinate of 3D point.","nodes":[{"pos":[0,29],"content":"The Y coordinate of 3D point.","nodes":[{"content":"The Y coordinate of 3D point.","pos":[0,29]}]}],"pos":[5496,5526],"yaml":true},{"content":"The Z coordinate, which represents the depth of 3D point.","nodes":[{"pos":[0,57],"content":"The Z coordinate, which represents the depth of 3D point.","nodes":[{"content":"The Z coordinate, which represents the depth of 3D point.","pos":[0,57]}]}],"pos":[5583,5641],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Drawing.PointF\"></xref> structure, which stores the X and Y coordinates of a 3D point.","nodes":[{"pos":[0,120],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure, which stores the X and Y coordinates of a 3D point.","source":"Gets or sets a <xref href=\"System.Drawing.PointF\"></xref> structure, which stores the X and Y coordinates of a 3D point."}],"pos":[6735,6856],"yaml":true},{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.  \n  \n These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.","nodes":[{"pos":[0,549],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.","nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[0,549],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Point3D&gt;</ph> objects as its only parameter.","pos":[254,377],"source":" This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter."},{"content":"By calling <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph>, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[378,549],"source":" By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space."}]}]},{"pos":[556,995],"content":"These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.","nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.","pos":[0,439],"nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt;</ph> method.","pos":[0,200],"source":"These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"After converting the coordinates, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A&gt;</ph> property of each Point3D object can be used for any GDI+ method that take a <ph id=\"ph2\">&lt;xref:System.Drawing.PointF&gt;</ph> object as a parameter.","pos":[201,439],"source":" After converting the coordinates, the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter."}]}]}],"pos":[6867,7867],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.PointF\"></xref> structure which stores the X and Y coordinates of a 3D point.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.PointF\"&gt;&lt;/xref&gt;</ph> structure which stores the X and Y coordinates of a 3D point.","source":"A <xref href=\"System.Drawing.PointF\"></xref> structure which stores the X and Y coordinates of a 3D point."}],"pos":[8060,8167],"yaml":true},{"content":"Gets or sets the X coordinate of a 3D point.","nodes":[{"pos":[0,44],"content":"Gets or sets the X coordinate of a 3D point.","nodes":[{"content":"Gets or sets the X coordinate of a 3D point.","pos":[0,44]}]}],"pos":[9296,9341],"yaml":true},{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \n  \n These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \n  \n A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","nodes":[{"pos":[0,505],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.","nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[0,505],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of Point3D objects as its only parameter.","pos":[254,322]},{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[323,505],"source":" By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space."}]}]},{"pos":[512,733],"content":"These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.","nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.","pos":[0,221],"nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt;</ph> method.","pos":[0,179],"source":"These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"They are then used for GDI+ method calls.","pos":[180,221]}]}]},{"pos":[740,900],"content":"A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","nodes":[{"content":"A relative X coordinate can be obtained from an axis value by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A&gt;</ph> method.","pos":[0,160],"source":"A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method."}]}],"pos":[9352,10259],"yaml":true,"extradata":"MT"},{"content":"A `float` that represents the X coordinate of a 3D point.","nodes":[{"pos":[0,57],"content":"A <ph id=\"ph1\">`float`</ph> that represents the X coordinate of a 3D point.","source":"A `float` that represents the X coordinate of a 3D point."}],"pos":[10423,10481],"yaml":true},{"content":"Gets or sets the Y coordinate of a 3D point.","nodes":[{"pos":[0,44],"content":"Gets or sets the Y coordinate of a 3D point.","nodes":[{"content":"Gets or sets the Y coordinate of a 3D point.","pos":[0,44]}]}],"pos":[11605,11650],"yaml":true},{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \n  \n These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \n  \n A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","nodes":[{"pos":[0,505],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.","nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[0,505],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of Point3D objects as its only parameter.","pos":[254,322]},{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[323,505],"source":" By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space."}]}]},{"pos":[512,736],"content":"These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.","nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.","pos":[0,224],"nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt;</ph> method.","pos":[0,182],"source":"These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"They are then used for GDI+ method calls.","pos":[183,224]}]}]},{"pos":[743,898],"content":"A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.","nodes":[{"content":"A relative Y coordinate can be obtained from an axis value using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A&gt;</ph> method.","pos":[0,155],"source":"A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method."}]}],"pos":[11661,12566],"yaml":true,"extradata":"MT"},{"content":"A `float` value that represents the Y coordinate of a 3D point.","nodes":[{"pos":[0,63],"content":"A <ph id=\"ph1\">`float`</ph> value that represents the Y coordinate of a 3D point.","source":"A `float` value that represents the Y coordinate of a 3D point."}],"pos":[12730,12794],"yaml":true},{"content":"Gets or sets the Z coordinate of a 3D point.","nodes":[{"pos":[0,44],"content":"Gets or sets the Z coordinate of a 3D point.","nodes":[{"content":"Gets or sets the Z coordinate of a 3D point.","pos":[0,44]}]}],"pos":[13918,13963],"yaml":true},{"content":"This Z property is always expressed as a percentage of the relevant chart area's depth. With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.  \n  \n **Note** This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).  \n  \n Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \n  \n These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \n  \n Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods.","nodes":[{"pos":[0,246],"content":"This Z property is always expressed as a percentage of the relevant chart area's depth. With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.","nodes":[{"content":"This Z property is always expressed as a percentage of the relevant chart area's depth. With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.","pos":[0,246],"nodes":[{"content":"This Z property is always expressed as a percentage of the relevant chart area's depth.","pos":[0,87]},{"content":"With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.","pos":[88,246]}]}]},{"pos":[253,385],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).","source":"**Note** This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area)."},{"pos":[392,897],"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.","nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[0,505],"nodes":[{"content":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method.","pos":[0,253],"source":"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method."},{"content":"This method takes an array of Point3D objects as its only parameter.","pos":[254,322]},{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A&gt;</ph> method, the X and Y property values are changed to reflect the 3-dimensional space.","pos":[323,505],"source":" By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space."}]}]},{"pos":[904,1128],"content":"These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.","nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.","pos":[0,224],"nodes":[{"content":"These new X and Y coordinates are then converted to absolute coordinates by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A&gt;</ph> method.","pos":[0,182],"source":"These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method."},{"content":"They are then used for GDI+ method calls.","pos":[183,224]}]}]},{"pos":[1135,1380],"content":"Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods.","nodes":[{"content":"Relative Z coordinates can be obtained for series by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A&gt;</ph> methods.","pos":[0,245],"source":"Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods."}]}],"pos":[13974,15365],"yaml":true,"extradata":"MT"},{"content":"The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.","nodes":[{"pos":[0,101],"content":"The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.","nodes":[{"content":"The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.","pos":[0,101]}]}],"pos":[15529,15631],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D\n  commentId: T:System.Windows.Forms.DataVisualization.Charting.Point3D\n  id: Point3D\n  children:\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  - System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  langs:\n  - csharp\n  name: Point3D\n  nameWithType: Point3D\n  fullName: System.Windows.Forms.DataVisualization.Charting.Point3D\n  type: Class\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Represents the coordinates of a three-dimensional (3D) data point. This class is used when performing custom drawing with 3D charts.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from relative X, Y and Z (3D) coordinates into relative X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y-values of the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects are changed so that they reflect the 3-dimensional space. The new X and Y points can then be used for GDI+ method calls—the Z value is then disregarded—after being changed to absolute pixel coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method.  \\n  \\n Note that the Z coordinate may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).  \\n  \\n To both enable 3D charts and work with their styles, use the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> property. The <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> class is not used for 3D styles.\"\n  syntax:\n    content: public class Point3D\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Point3D()\n  nameWithType: Point3D.Point3D()\n  fullName: Point3D.Point3D()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.Point3D\"></xref> class.\n  syntax:\n    content: public Point3D ();\n    parameters: []\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  commentId: M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single)'\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Point3D(Single, Single, Single)\n  nameWithType: Point3D.Point3D(Single, Single, Single)\n  fullName: Point3D.Point3D(Single, Single, Single)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint\"></xref> class with the specified X, Y and Z coordinates.\n  syntax:\n    content: public Point3D (float x, float y, float z);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The X coordinate of 3D point.\n    - id: y\n      type: System.Single\n      description: The Y coordinate of 3D point.\n    - id: z\n      type: System.Single\n      description: The Z coordinate, which represents the depth of 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  id: PointF\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: PointF\n  nameWithType: Point3D.PointF\n  fullName: Point3D.PointF\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets a <xref href=\"System.Drawing.PointF\"></xref> structure, which stores the X and Y coordinates of a 3D point.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> objects as its only parameter. By calling <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates, by using a method such as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. After converting the coordinates, the <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> property of each Point3D object can be used for any GDI+ method that take a <xref:System.Drawing.PointF> object as a parameter.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public System.Drawing.PointF PointF { get; set; }\n    return:\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> structure which stores the X and Y coordinates of a 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  id: X\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: X\n  nameWithType: Point3D.X\n  fullName: Point3D.X\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the X coordinate of a 3D point.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \\n  \\n A relative X coordinate can be obtained from an axis value by calling the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public float X { get; set; }\n    return:\n      type: System.Single\n      description: A `float` that represents the X coordinate of a 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.X*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  id: Y\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Point3D.Y\n  fullName: Point3D.Y\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the Y coordinate of a 3D point.\n  remarks: \"Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \\n  \\n A relative Y coordinate can be obtained from an axis value using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> method.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public float Y { get; set; }\n    return:\n      type: System.Single\n      description: A `float` value that represents the Y coordinate of a 3D point.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.Y*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  commentId: P:System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  id: Z\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  langs:\n  - csharp\n  name: Z\n  nameWithType: Point3D.Z\n  fullName: Point3D.Z\n  type: Property\n  assemblies:\n  - System.Windows.Forms.DataVisualization\n  namespace: System.Windows.Forms.DataVisualization.Charting\n  summary: Gets or sets the Z coordinate of a 3D point.\n  remarks: \"This Z property is always expressed as a percentage of the relevant chart area's depth. With 3D charts, Z coordinates are relative, and have a value of 0 for the back wall of the chart area and a value of 100 for the front wall of the chart area.  \\n  \\n **Note** This Z property may be less than zero (located behind a chart area) or greater than 100 (located in front of a chart area).  \\n  \\n Any point used in custom 3D drawing—which is accomplished using GDI+—must be transformed from X, Y and Z (3D) coordinates into X and Y (2D) coordinates using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method. This method takes an array of Point3D objects as its only parameter. By calling the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> method, the X and Y property values are changed to reflect the 3-dimensional space.  \\n  \\n These new X and Y coordinates are then converted to absolute coordinates by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> method. They are then used for GDI+ method calls.  \\n  \\n Relative Z coordinates can be obtained for series by using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> methods.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Bindable(true)]\n\n      public float Z { get; set; }\n    return:\n      type: System.Single\n      description: The Z coordinate of a 3D point, which is measured as a percentage of the relevant chart area's depth.\n  overload: System.Windows.Forms.DataVisualization.Charting.Point3D.Z*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: mblythe\n  manager: mblythe\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Point3D()\n  nameWithType: Point3D.Point3D()\n  fullName: Point3D.Point3D()\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Point3D(Single, Single, Single)\n  nameWithType: Point3D.Point3D(Single, Single, Single)\n  fullName: Point3D.Point3D(Single, Single, Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: PointF\n  nameWithType: Point3D.PointF\n  fullName: Point3D.PointF\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.X\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: X\n  nameWithType: Point3D.X\n  fullName: Point3D.X\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Y\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Y\n  nameWithType: Point3D.Y\n  fullName: Point3D.Y\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Z\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Z\n  nameWithType: Point3D.Z\n  fullName: Point3D.Z\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Point3D\n  nameWithType: Point3D.Point3D\n  fullName: Point3D.Point3D\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.PointF*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: PointF\n  nameWithType: Point3D.PointF\n  fullName: Point3D.PointF\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.X*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: X\n  nameWithType: Point3D.X\n  fullName: Point3D.X\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Y*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Y\n  nameWithType: Point3D.Y\n  fullName: Point3D.Y\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n- uid: System.Windows.Forms.DataVisualization.Charting.Point3D.Z*\n  parent: System.Windows.Forms.DataVisualization.Charting.Point3D\n  isExternal: false\n  name: Z\n  nameWithType: Point3D.Z\n  fullName: Point3D.Z\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Point3D.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}