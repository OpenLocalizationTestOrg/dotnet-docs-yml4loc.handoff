{"nodes":[{"content":"Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.","nodes":[{"pos":[0,97],"content":"Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.","nodes":[{"content":"Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.","pos":[0,97]}]}],"pos":[1359,1457],"yaml":true},{"content":"A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive. The same <xref:System.Threading.Barrier> can be used for multiple phases.","nodes":[{"pos":[0,288],"content":"A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive. The same <xref:System.Threading.Barrier> can be used for multiple phases.","nodes":[{"content":"A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive. The same <xref:System.Threading.Barrier> can be used for multiple phases.","pos":[0,288],"nodes":[{"content":"A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <ph id=\"ph1\">&lt;xref:System.Threading.Barrier&gt;</ph> in a given phase and implicitly waits for all others to arrive.","pos":[0,214],"source":"A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive."},{"content":"The same <ph id=\"ph1\">&lt;xref:System.Threading.Barrier&gt;</ph> can be used for multiple phases.","pos":[215,288],"source":" The same <xref:System.Threading.Barrier> can be used for multiple phases."}]}]}],"pos":[1468,1757],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Barrier\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Threading.Barrier\"></xref> class."}],"pos":[4111,4198],"yaml":true},{"content":"The number of participating threads.","nodes":[{"pos":[0,36],"content":"The number of participating threads.","nodes":[{"content":"The number of participating threads.","pos":[0,36]}]}],"pos":[4347,4384],"yaml":true},{"content":"<code>participantCount</code> is less than 0 or greater than 32,767.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;participantCount&lt;/code&gt;</ph> is less than 0 or greater than 32,767.","source":"<code>participantCount</code> is less than 0 or greater than 32,767."}],"pos":[4556,4625],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Barrier\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Threading.Barrier\"></xref> class."}],"pos":[6236,6323],"yaml":true},{"content":"The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase. The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.","nodes":[{"pos":[0,228],"content":"The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase. The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.","nodes":[{"content":"The <ph id=\"ph1\">`postPhaseAction`</ph> delegate will be executed after all participants have arrived at the barrier in one phase.","pos":[0,112],"source":"The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase."},{"content":"The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.","pos":[113,228]}]}],"pos":[6334,6563],"yaml":true,"extradata":"MT"},{"content":"The number of participating threads.","nodes":[{"pos":[0,36],"content":"The number of participating threads.","nodes":[{"content":"The number of participating threads.","pos":[0,36]}]}],"pos":[6762,6799],"yaml":true},{"content":"The <xref href=\"System.Action`1\"></xref> to be executed after each phase. null (Nothing in Visual Basic) may be passed to indicate no action is taken.","nodes":[{"pos":[0,150],"content":"The <xref href=\"System.Action`1\"></xref> to be executed after each phase. null (Nothing in Visual Basic) may be passed to indicate no action is taken.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Action`1\"&gt;&lt;/xref&gt;</ph> to be executed after each phase.","pos":[0,73],"source":"The <xref href=\"System.Action`1\"></xref> to be executed after each phase."},{"content":"null (Nothing in Visual Basic) may be passed to indicate no action is taken.","pos":[74,150]}]}],"pos":[6896,7047],"yaml":true},{"content":"<code>participantCount</code> is less than 0 or greater than 32,767.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;participantCount&lt;/code&gt;</ph> is less than 0 or greater than 32,767.","source":"<code>participantCount</code> is less than 0 or greater than 32,767."}],"pos":[7219,7288],"yaml":true},{"content":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be an additional participant.","nodes":[{"pos":[0,104],"content":"Notifies the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> that there will be an additional participant.","source":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be an additional participant."}],"pos":[8712,8817],"yaml":true},{"content":"If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.","nodes":[{"pos":[0,165],"content":"If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.","nodes":[{"content":"If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.","pos":[0,165]}]}],"pos":[8828,8994],"yaml":true,"extradata":"MT"},{"content":"The phase number of the barrier in which the new participants will first participate.","nodes":[{"pos":[0,85],"content":"The phase number of the barrier in which the new participants will first participate.","nodes":[{"content":"The phase number of the barrier in which the new participants will first participate.","pos":[0,85]}]}],"pos":[9123,9209],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[9382,9430],"yaml":true},{"content":"Adding a participant would cause the barrier's participant count to exceed 32,767.  \n  \n -or-  \n  \n The method was invoked from within a post-phase action.","nodes":[{"pos":[0,82],"content":"Adding a participant would cause the barrier's participant count to exceed 32,767.","nodes":[{"content":"Adding a participant would cause the barrier's participant count to exceed 32,767.","pos":[0,82]}]},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,155],"content":"The method was invoked from within a post-phase action.","nodes":[{"content":"The method was invoked from within a post-phase action.","pos":[0,55]}]}],"pos":[9540,9702],"yaml":true},{"content":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be additional participants.","nodes":[{"pos":[0,102],"content":"Notifies the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> that there will be additional participants.","source":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be additional participants."}],"pos":[11189,11292],"yaml":true},{"content":"If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.","nodes":[{"pos":[0,165],"content":"If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.","nodes":[{"content":"If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.","pos":[0,165]}]}],"pos":[11303,11469],"yaml":true,"extradata":"MT"},{"content":"The number of additional participants to add to the barrier.","nodes":[{"pos":[0,60],"content":"The number of additional participants to add to the barrier.","nodes":[{"content":"The number of additional participants to add to the barrier.","pos":[0,60]}]}],"pos":[11631,11692],"yaml":true},{"content":"The phase number of the barrier in which the new participants will first participate.","nodes":[{"pos":[0,85],"content":"The phase number of the barrier in which the new participants will first participate.","nodes":[{"content":"The phase number of the barrier in which the new participants will first participate.","pos":[0,85]}]}],"pos":[11748,11834],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[12008,12056],"yaml":true},{"content":"<code>participantCount</code> is less than 0.  \n  \n -or-  \n  \n Adding <code>participantCount</code> participants would cause the barrier's participant count to exceed 32,767.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;participantCount&lt;/code&gt;</ph> is less than 0.","source":"<code>participantCount</code> is less than 0."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,174],"content":"Adding <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">participantCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> participants would cause the barrier's participant count to exceed 32,767.","source":"Adding <code>participantCount</code> participants would cause the barrier's participant count to exceed 32,767."}],"pos":[12170,12351],"yaml":true},{"content":"The method was invoked from within a post-phase action.","nodes":[{"pos":[0,55],"content":"The method was invoked from within a post-phase action.","nodes":[{"content":"The method was invoked from within a post-phase action.","pos":[0,55]}]}],"pos":[12461,12517],"yaml":true},{"content":"Gets the number of the barrier's current phase.","nodes":[{"pos":[0,47],"content":"Gets the number of the barrier's current phase.","nodes":[{"content":"Gets the number of the barrier's current phase.","pos":[0,47]}]}],"pos":[13961,14009],"yaml":true},{"content":"Returns the number of the barrier's current phase.","nodes":[{"pos":[0,50],"content":"Returns the number of the barrier's current phase.","nodes":[{"content":"Returns the number of the barrier's current phase.","pos":[0,50]}]}],"pos":[14128,14179],"yaml":true},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Threading.Barrier\"></xref> class.","nodes":[{"pos":[0,111],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Threading.Barrier\"></xref> class."}],"pos":[15635,15747],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>. The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.","nodes":[{"pos":[0,365],"content":"Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>. The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Threading.Barrier&gt;</ph>.","pos":[0,79],"source":"Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Threading.Barrier&gt;</ph> in an unusable state.","pos":[80,165],"source":" The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Threading.Barrier&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Threading.Barrier&gt;</ph> was occupying.","pos":[166,365],"source":" After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying."}]},{"pos":[372,577],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[585,849],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.","pos":[8,262],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Threading.Barrier&gt;</ph>.","pos":[1,101],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Threading.Barrier&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[102,254],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method."}]}]}],"pos":[15758,16615],"yaml":true,"extradata":"MT"},{"content":"The method was invoked from within a post-phase action.","nodes":[{"pos":[0,55],"content":"The method was invoked from within a post-phase action.","nodes":[{"content":"The method was invoked from within a post-phase action.","pos":[0,55]}]}],"pos":[16851,16907],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Threading.Barrier\"></xref>, and optionally releases the managed resources.","nodes":[{"pos":[0,138],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph>, and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Threading.Barrier\"></xref>, and optionally releases the managed resources."}],"pos":[18358,18497],"yaml":true},{"content":"Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.","nodes":[{"pos":[0,159],"content":"Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.","nodes":[{"content":"Unlike most of the members of <ph id=\"ph1\">&lt;xref:System.Threading.Barrier&gt;</ph>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.","pos":[0,159],"source":"Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance."}]}],"pos":[18508,18668],"yaml":true,"extradata":"MT"},{"content":"true to release both managed and unmanaged resources; false to release only unmanaged resources.","nodes":[{"pos":[0,96],"content":"true to release both managed and unmanaged resources; false to release only unmanaged resources.","nodes":[{"content":"true to release both managed and unmanaged resources; false to release only unmanaged resources.","pos":[0,96]}]}],"pos":[18822,18919],"yaml":true},{"content":"Gets the total number of participants in the barrier.","nodes":[{"pos":[0,53],"content":"Gets the total number of participants in the barrier.","nodes":[{"content":"Gets the total number of participants in the barrier.","pos":[0,53]}]}],"pos":[20414,20468],"yaml":true},{"content":"Returns the total number of participants in the barrier.","nodes":[{"pos":[0,56],"content":"Returns the total number of participants in the barrier.","nodes":[{"content":"Returns the total number of participants in the barrier.","pos":[0,56]}]}],"pos":[20584,20641],"yaml":true},{"content":"Gets the number of participants in the barrier that haven’t yet signaled in the current phase.","nodes":[{"pos":[0,94],"content":"Gets the number of participants in the barrier that haven’t yet signaled in the current phase.","nodes":[{"content":"Gets the number of participants in the barrier that haven’t yet signaled in the current phase.","pos":[0,94]}]}],"pos":[22175,22270],"yaml":true},{"content":"This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.","nodes":[{"pos":[0,94],"content":"This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.","nodes":[{"content":"This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.","pos":[0,94]}]}],"pos":[22281,22376],"yaml":true,"extradata":"MT"},{"content":"Returns the number of participants in the barrier that haven’t yet signaled in the current phase.","nodes":[{"pos":[0,97],"content":"Returns the number of participants in the barrier that haven’t yet signaled in the current phase.","nodes":[{"content":"Returns the number of participants in the barrier that haven’t yet signaled in the current phase.","pos":[0,97]}]}],"pos":[22497,22595],"yaml":true},{"content":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be one less participant.","nodes":[{"pos":[0,99],"content":"Notifies the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> that there will be one less participant.","source":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be one less participant."}],"pos":[24114,24214],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[24466,24514],"yaml":true},{"content":"The barrier already has 0 participants.  \n  \n -or-  \n  \n The method was invoked from within a post-phase action.","nodes":[{"pos":[0,39],"content":"The barrier already has 0 participants.","nodes":[{"content":"The barrier already has 0 participants.","pos":[0,39]}]},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,112],"content":"The method was invoked from within a post-phase action.","nodes":[{"content":"The method was invoked from within a post-phase action.","pos":[0,55]}]}],"pos":[24624,24743],"yaml":true},{"content":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be fewer participants.","nodes":[{"pos":[0,97],"content":"Notifies the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Barrier\"&gt;&lt;/xref&gt;</ph> that there will be fewer participants.","source":"Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be fewer participants."}],"pos":[26248,26346],"yaml":true},{"content":"If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.","nodes":[{"pos":[0,252],"content":"If <ph id=\"ph1\">`participantCount`</ph> participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.","source":"If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier."}],"pos":[26357,26610],"yaml":true,"extradata":"MT"},{"content":"The number of additional participants to remove from the barrier.","nodes":[{"pos":[0,65],"content":"The number of additional participants to remove from the barrier.","nodes":[{"content":"The number of additional participants to remove from the barrier.","pos":[0,65]}]}],"pos":[26775,26841],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[27018,27066],"yaml":true},{"content":"The total participant count is less than the specified <code>participantCount</code>","nodes":[{"pos":[0,84],"content":"The total participant count is less than the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">participantCount</ph><ept id=\"p1\">&lt;/code&gt;</ept>","source":"The total participant count is less than the specified <code>participantCount</code>"}],"pos":[27180,27265],"yaml":true},{"content":"The barrier already has 0 participants.  \n  \n -or-  \n  \n The method was invoked from within a post-phase action.  \n  \n -or-  \n  \n current participant count is less than the specified participantCount","nodes":[{"pos":[0,39],"content":"The barrier already has 0 participants.","nodes":[{"content":"The barrier already has 0 participants.","pos":[0,39]}]},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,112],"content":"The method was invoked from within a post-phase action.","nodes":[{"content":"The method was invoked from within a post-phase action.","pos":[0,55]}]},{"pos":[119,123],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[130,199],"content":"current participant count is less than the specified participantCount","nodes":[{"content":"current participant count is less than the specified participantCount","pos":[0,69]}]}],"pos":[27375,27585],"yaml":true},{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.","nodes":[{"pos":[0,117],"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.","nodes":[{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.","pos":[0,117]}]}],"pos":[29003,29121],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[29365,29413],"yaml":true},{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"pos":[0,177],"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","pos":[0,177]}]}],"pos":[29523,29701],"yaml":true},{"content":"If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.","nodes":[{"pos":[0,229],"content":"If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.","nodes":[{"content":"If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.","pos":[0,229]}]}],"pos":[29831,30061],"yaml":true},{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.","nodes":[{"pos":[0,171],"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.","nodes":[{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.","pos":[0,171]}]}],"pos":[31536,31708],"yaml":true},{"content":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref>(-1) to wait indefinitely.","nodes":[{"pos":[0,119],"content":"The number of milliseconds to wait, or <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>(-1) to wait indefinitely.","source":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref>(-1) to wait indefinitely."}],"pos":[31874,31994],"yaml":true},{"content":"if all participants reached the barrier within the specified time; otherwise false.","nodes":[{"pos":[0,83],"content":"if all participants reached the barrier within the specified time; otherwise false.","nodes":[{"content":"if all participants reached the barrier within the specified time; otherwise false.","pos":[0,83]}]}],"pos":[32052,32136],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[32308,32356],"yaml":true},{"content":"<code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.","source":"<code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out."}],"pos":[32470,32578],"yaml":true},{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"pos":[0,177],"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","pos":[0,177]}]}],"pos":[32688,32866],"yaml":true},{"content":"If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.","nodes":[{"pos":[0,229],"content":"If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.","nodes":[{"content":"If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.","pos":[0,229]}]}],"pos":[32996,33226],"yaml":true},{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.","nodes":[{"pos":[0,147],"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.","nodes":[{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.","pos":[0,147]}]}],"pos":[34803,34951],"yaml":true},{"content":"The <xref href=\"System.Threading.CancellationToken\"></xref> to observe.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph> to observe.","source":"The <xref href=\"System.Threading.CancellationToken\"></xref> to observe."}],"pos":[35166,35238],"yaml":true},{"content":"<code>cancellationToken</code> has been canceled.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;cancellationToken&lt;/code&gt;</ph> has been canceled.","source":"<code>cancellationToken</code> has been canceled."}],"pos":[35416,35466],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[35572,35620],"yaml":true},{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"pos":[0,177],"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","pos":[0,177]}]}],"pos":[35730,35908],"yaml":true},{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href=\"System.TimeSpan\"></xref> object to measure the time interval.","nodes":[{"pos":[0,199],"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object to measure the time interval.","source":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href=\"System.TimeSpan\"></xref> object to measure the time interval."}],"pos":[37401,37601],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> that represents the number of milliseconds to wait, or a <xref href=\"System.TimeSpan\"></xref> that represents -1 milliseconds to wait indefinitely.","nodes":[{"pos":[0,186],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that represents the number of milliseconds to wait, or a <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that represents -1 milliseconds to wait indefinitely.","source":"A <xref href=\"System.TimeSpan\"></xref> that represents the number of milliseconds to wait, or a <xref href=\"System.TimeSpan\"></xref> that represents -1 milliseconds to wait indefinitely."}],"pos":[37751,37938],"yaml":true},{"content":"true if all other participants reached the barrier; otherwise, false.","nodes":[{"pos":[0,69],"content":"true if all other participants reached the barrier; otherwise, false.","nodes":[{"content":"true if all other participants reached the barrier; otherwise, false.","pos":[0,69]}]}],"pos":[37996,38066],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[38238,38286],"yaml":true},{"content":"<code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">&lt;code&gt;timeout&lt;/code&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.","source":"<code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767."}],"pos":[38400,38539],"yaml":true},{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"pos":[0,177],"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","pos":[0,177]}]}],"pos":[38649,38827],"yaml":true},{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.","nodes":[{"pos":[0,209],"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.","nodes":[{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.","pos":[0,209]}]}],"pos":[40464,40674],"yaml":true},{"content":"If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased. If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.","nodes":[{"pos":[0,440],"content":"If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased. If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.","nodes":[{"content":"If the <ph id=\"ph1\">`cancellationToken`</ph> was canceled before the signal took effect, then an <ph id=\"ph2\">&lt;xref:System.OperationCanceledException&gt;</ph> is thrown and the <ph id=\"ph3\">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> value is not decreased.","pos":[0,218],"source":"If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased."},{"content":"If the <ph id=\"ph1\">`cancellationToken`</ph> is not canceled or is canceled after the signal takes effect then <ph id=\"ph2\">&lt;xref:System.Threading.Barrier.ParticipantsRemaining%2A&gt;</ph> is decreased and no <ph id=\"ph3\">&lt;xref:System.OperationCanceledException&gt;</ph> is thrown.","pos":[219,440],"source":" If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown."}]}],"pos":[40685,41126],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref>(-1) to wait indefinitely.","nodes":[{"pos":[0,119],"content":"The number of milliseconds to wait, or <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>(-1) to wait indefinitely.","source":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref>(-1) to wait indefinitely."}],"pos":[41346,41466],"yaml":true},{"content":"The <xref href=\"System.Threading.CancellationToken\"></xref> to observe.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph> to observe.","source":"The <xref href=\"System.Threading.CancellationToken\"></xref> to observe."}],"pos":[41560,41632],"yaml":true},{"content":"if all participants reached the barrier within the specified time; otherwise false","nodes":[{"pos":[0,82],"content":"if all participants reached the barrier within the specified time; otherwise false","nodes":[{"content":"if all participants reached the barrier within the specified time; otherwise false","pos":[0,82]}]}],"pos":[41690,41773],"yaml":true},{"content":"<code>cancellationToken</code> has been canceled.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;cancellationToken&lt;/code&gt;</ph> has been canceled.","source":"<code>cancellationToken</code> has been canceled."}],"pos":[41951,42001],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[42107,42155],"yaml":true},{"content":"<code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;millisecondsTimeout&lt;/code&gt;</ph> is a negative number other than -1, which represents an infinite time-out.","source":"<code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out."}],"pos":[42269,42377],"yaml":true},{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"pos":[0,177],"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","pos":[0,177]}]}],"pos":[42487,42665],"yaml":true},{"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href=\"System.TimeSpan\"></xref> object to measure the time interval, while observing a cancellation token.","nodes":[{"pos":[0,237],"content":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object to measure the time interval, while observing a cancellation token.","source":"Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href=\"System.TimeSpan\"></xref> object to measure the time interval, while observing a cancellation token."}],"pos":[44320,44558],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> that represents the number of milliseconds to wait, or a <xref href=\"System.TimeSpan\"></xref> that represents -1 milliseconds to wait indefinitely.","nodes":[{"pos":[0,186],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that represents the number of milliseconds to wait, or a <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that represents -1 milliseconds to wait indefinitely.","source":"A <xref href=\"System.TimeSpan\"></xref> that represents the number of milliseconds to wait, or a <xref href=\"System.TimeSpan\"></xref> that represents -1 milliseconds to wait indefinitely."}],"pos":[44762,44949],"yaml":true},{"content":"The <xref href=\"System.Threading.CancellationToken\"></xref> to observe.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.CancellationToken\"&gt;&lt;/xref&gt;</ph> to observe.","source":"The <xref href=\"System.Threading.CancellationToken\"></xref> to observe."}],"pos":[45043,45115],"yaml":true},{"content":"true if all other participants reached the barrier; otherwise, false.","nodes":[{"pos":[0,69],"content":"true if all other participants reached the barrier; otherwise, false.","nodes":[{"content":"true if all other participants reached the barrier; otherwise, false.","pos":[0,69]}]}],"pos":[45173,45243],"yaml":true},{"content":"<code>cancellationToken</code> has been canceled.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;cancellationToken&lt;/code&gt;</ph> has been canceled.","source":"<code>cancellationToken</code> has been canceled."}],"pos":[45421,45471],"yaml":true},{"content":"The current instance has already been disposed.","nodes":[{"pos":[0,47],"content":"The current instance has already been disposed.","nodes":[{"content":"The current instance has already been disposed.","pos":[0,47]}]}],"pos":[45577,45625],"yaml":true},{"content":"<code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;code&gt;timeout&lt;/code&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out.","source":"<code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out."}],"pos":[45739,45848],"yaml":true},{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"pos":[0,177],"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","nodes":[{"content":"The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.","pos":[0,177]}]}],"pos":[45958,46136],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Barrier\n  commentId: T:System.Threading.Barrier\n  id: Barrier\n  children:\n  - System.Threading.Barrier.#ctor(System.Int32)\n  - System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})\n  - System.Threading.Barrier.AddParticipant\n  - System.Threading.Barrier.AddParticipants(System.Int32)\n  - System.Threading.Barrier.CurrentPhaseNumber\n  - System.Threading.Barrier.Dispose\n  - System.Threading.Barrier.Dispose(System.Boolean)\n  - System.Threading.Barrier.ParticipantCount\n  - System.Threading.Barrier.ParticipantsRemaining\n  - System.Threading.Barrier.RemoveParticipant\n  - System.Threading.Barrier.RemoveParticipants(System.Int32)\n  - System.Threading.Barrier.SignalAndWait\n  - System.Threading.Barrier.SignalAndWait(System.Int32)\n  - System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)\n  - System.Threading.Barrier.SignalAndWait(System.TimeSpan)\n  - System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: Barrier\n  nameWithType: Barrier\n  fullName: System.Threading.Barrier\n  type: Class\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.\n  remarks: A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive. The same <xref:System.Threading.Barrier> can be used for multiple phases.\n  example:\n  - \"The following example shows how to use a barrier:  \\n  \\n [!code-csharp[System.Threading.Barrier#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.barrier/cs/barrier.cs#01)]\\n [!code-vb[System.Threading.Barrier#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.barrier/vb/barrier.vb#01)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class Barrier : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.#ctor(System.Int32)\n  commentId: M:System.Threading.Barrier.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: Barrier(Int32)\n  nameWithType: Barrier.Barrier(Int32)\n  fullName: Barrier.Barrier(Int32)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Barrier\"></xref> class.\n  syntax:\n    content: public Barrier (int participantCount);\n    parameters:\n    - id: participantCount\n      type: System.Int32\n      description: The number of participating threads.\n  overload: System.Threading.Barrier.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>participantCount</code> is less than 0 or greater than 32,767.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})\n  commentId: M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})\n  id: '#ctor(System.Int32,System.Action{System.Threading.Barrier})'\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: Barrier(Int32, Action<Barrier>)\n  nameWithType: Barrier.Barrier(Int32, Action<Barrier>)\n  fullName: Barrier.Barrier(Int32, Action<Barrier>)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Barrier\"></xref> class.\n  remarks: The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase. The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.\n  syntax:\n    content: public Barrier (int participantCount, Action<System.Threading.Barrier> postPhaseAction);\n    parameters:\n    - id: participantCount\n      type: System.Int32\n      description: The number of participating threads.\n    - id: postPhaseAction\n      type: System.Action{System.Threading.Barrier}\n      description: The <xref href=\"System.Action`1\"></xref> to be executed after each phase. null (Nothing in Visual Basic) may be passed to indicate no action is taken.\n  overload: System.Threading.Barrier.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>participantCount</code> is less than 0 or greater than 32,767.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.AddParticipant\n  commentId: M:System.Threading.Barrier.AddParticipant\n  id: AddParticipant\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: AddParticipant()\n  nameWithType: Barrier.AddParticipant()\n  fullName: Barrier.AddParticipant()\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be an additional participant.\n  remarks: If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.\n  syntax:\n    content: public long AddParticipant ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: The phase number of the barrier in which the new participants will first participate.\n  overload: System.Threading.Barrier.AddParticipant*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Adding a participant would cause the barrier's participant count to exceed 32,767.  \\n  \\n -or-  \\n  \\n The method was invoked from within a post-phase action.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.AddParticipants(System.Int32)\n  commentId: M:System.Threading.Barrier.AddParticipants(System.Int32)\n  id: AddParticipants(System.Int32)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: AddParticipants(Int32)\n  nameWithType: Barrier.AddParticipants(Int32)\n  fullName: Barrier.AddParticipants(Int32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be additional participants.\n  remarks: If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.\n  syntax:\n    content: public long AddParticipants (int participantCount);\n    parameters:\n    - id: participantCount\n      type: System.Int32\n      description: The number of additional participants to add to the barrier.\n    return:\n      type: System.Int64\n      description: The phase number of the barrier in which the new participants will first participate.\n  overload: System.Threading.Barrier.AddParticipants*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>participantCount</code> is less than 0.  \\n  \\n -or-  \\n  \\n Adding <code>participantCount</code> participants would cause the barrier's participant count to exceed 32,767.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.CurrentPhaseNumber\n  commentId: P:System.Threading.Barrier.CurrentPhaseNumber\n  id: CurrentPhaseNumber\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: CurrentPhaseNumber\n  nameWithType: Barrier.CurrentPhaseNumber\n  fullName: Barrier.CurrentPhaseNumber\n  type: Property\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Gets the number of the barrier's current phase.\n  syntax:\n    content: public long CurrentPhaseNumber { get; }\n    return:\n      type: System.Int64\n      description: Returns the number of the barrier's current phase.\n  overload: System.Threading.Barrier.CurrentPhaseNumber*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.Dispose\n  commentId: M:System.Threading.Barrier.Dispose\n  id: Dispose\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Barrier.Dispose()\n  fullName: Barrier.Dispose()\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Threading.Barrier\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>. The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Threading.Barrier.Dispose*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.Dispose(System.Boolean)\n  commentId: M:System.Threading.Barrier.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Barrier.Dispose(Boolean)\n  fullName: Barrier.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Threading.Barrier\"></xref>, and optionally releases the managed resources.\n  remarks: Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.\n  overload: System.Threading.Barrier.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.ParticipantCount\n  commentId: P:System.Threading.Barrier.ParticipantCount\n  id: ParticipantCount\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: ParticipantCount\n  nameWithType: Barrier.ParticipantCount\n  fullName: Barrier.ParticipantCount\n  type: Property\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Gets the total number of participants in the barrier.\n  syntax:\n    content: public int ParticipantCount { get; }\n    return:\n      type: System.Int32\n      description: Returns the total number of participants in the barrier.\n  overload: System.Threading.Barrier.ParticipantCount*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.ParticipantsRemaining\n  commentId: P:System.Threading.Barrier.ParticipantsRemaining\n  id: ParticipantsRemaining\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: ParticipantsRemaining\n  nameWithType: Barrier.ParticipantsRemaining\n  fullName: Barrier.ParticipantsRemaining\n  type: Property\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Gets the number of participants in the barrier that haven’t yet signaled in the current phase.\n  remarks: This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.\n  syntax:\n    content: public int ParticipantsRemaining { get; }\n    return:\n      type: System.Int32\n      description: Returns the number of participants in the barrier that haven’t yet signaled in the current phase.\n  overload: System.Threading.Barrier.ParticipantsRemaining*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.RemoveParticipant\n  commentId: M:System.Threading.Barrier.RemoveParticipant\n  id: RemoveParticipant\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: RemoveParticipant()\n  nameWithType: Barrier.RemoveParticipant()\n  fullName: Barrier.RemoveParticipant()\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be one less participant.\n  syntax:\n    content: public void RemoveParticipant ();\n    parameters: []\n  overload: System.Threading.Barrier.RemoveParticipant*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The barrier already has 0 participants.  \\n  \\n -or-  \\n  \\n The method was invoked from within a post-phase action.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.RemoveParticipants(System.Int32)\n  commentId: M:System.Threading.Barrier.RemoveParticipants(System.Int32)\n  id: RemoveParticipants(System.Int32)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: RemoveParticipants(Int32)\n  nameWithType: Barrier.RemoveParticipants(Int32)\n  fullName: Barrier.RemoveParticipants(Int32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Notifies the <xref href=\"System.Threading.Barrier\"></xref> that there will be fewer participants.\n  remarks: If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.\n  syntax:\n    content: public void RemoveParticipants (int participantCount);\n    parameters:\n    - id: participantCount\n      type: System.Int32\n      description: The number of additional participants to remove from the barrier.\n  overload: System.Threading.Barrier.RemoveParticipants*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The total participant count is less than the specified <code>participantCount</code>\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The barrier already has 0 participants.  \\n  \\n -or-  \\n  \\n The method was invoked from within a post-phase action.  \\n  \\n -or-  \\n  \\n current participant count is less than the specified participantCount\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.SignalAndWait\n  commentId: M:System.Threading.Barrier.SignalAndWait\n  id: SignalAndWait\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: SignalAndWait()\n  nameWithType: Barrier.SignalAndWait()\n  fullName: Barrier.SignalAndWait()\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.\n  syntax:\n    content: public void SignalAndWait ();\n    parameters: []\n  overload: System.Threading.Barrier.SignalAndWait*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.\n  - type: System.Threading.BarrierPostPhaseException\n    commentId: T:System.Threading.BarrierPostPhaseException\n    description: If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.SignalAndWait(System.Int32)\n  commentId: M:System.Threading.Barrier.SignalAndWait(System.Int32)\n  id: SignalAndWait(System.Int32)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: SignalAndWait(Int32)\n  nameWithType: Barrier.SignalAndWait(Int32)\n  fullName: Barrier.SignalAndWait(Int32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.\n  syntax:\n    content: public bool SignalAndWait (int millisecondsTimeout);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref>(-1) to wait indefinitely.\n    return:\n      type: System.Boolean\n      description: if all participants reached the barrier within the specified time; otherwise false.\n  overload: System.Threading.Barrier.SignalAndWait*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.\n  - type: System.Threading.BarrierPostPhaseException\n    commentId: T:System.Threading.BarrierPostPhaseException\n    description: If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)\n  commentId: M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)\n  id: SignalAndWait(System.Threading.CancellationToken)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: SignalAndWait(CancellationToken)\n  nameWithType: Barrier.SignalAndWait(CancellationToken)\n  fullName: Barrier.SignalAndWait(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.\n  syntax:\n    content: public void SignalAndWait (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The <xref href=\"System.Threading.CancellationToken\"></xref> to observe.\n  overload: System.Threading.Barrier.SignalAndWait*\n  exceptions:\n  - type: System.OperationCanceledException\n    commentId: T:System.OperationCanceledException\n    description: <code>cancellationToken</code> has been canceled.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan)\n  commentId: M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)\n  id: SignalAndWait(System.TimeSpan)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: SignalAndWait(TimeSpan)\n  nameWithType: Barrier.SignalAndWait(TimeSpan)\n  fullName: Barrier.SignalAndWait(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href=\"System.TimeSpan\"></xref> object to measure the time interval.\n  syntax:\n    content: public bool SignalAndWait (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that represents the number of milliseconds to wait, or a <xref href=\"System.TimeSpan\"></xref> that represents -1 milliseconds to wait indefinitely.\n    return:\n      type: System.Boolean\n      description: true if all other participants reached the barrier; otherwise, false.\n  overload: System.Threading.Barrier.SignalAndWait*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)\n  id: SignalAndWait(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: SignalAndWait(Int32, CancellationToken)\n  nameWithType: Barrier.SignalAndWait(Int32, CancellationToken)\n  fullName: Barrier.SignalAndWait(Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.\n  remarks: If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased. If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.\n  syntax:\n    content: public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref>(-1) to wait indefinitely.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The <xref href=\"System.Threading.CancellationToken\"></xref> to observe.\n    return:\n      type: System.Boolean\n      description: if all participants reached the barrier within the specified time; otherwise false\n  overload: System.Threading.Barrier.SignalAndWait*\n  exceptions:\n  - type: System.OperationCanceledException\n    commentId: T:System.OperationCanceledException\n    description: <code>cancellationToken</code> has been canceled.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)\n  commentId: M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)\n  id: SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.Barrier\n  langs:\n  - csharp\n  name: SignalAndWait(TimeSpan, CancellationToken)\n  nameWithType: Barrier.SignalAndWait(TimeSpan, CancellationToken)\n  fullName: Barrier.SignalAndWait(TimeSpan, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Threading\n  - System\n  - netstandard\n  namespace: System.Threading\n  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href=\"System.TimeSpan\"></xref> object to measure the time interval, while observing a cancellation token.\n  syntax:\n    content: public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that represents the number of milliseconds to wait, or a <xref href=\"System.TimeSpan\"></xref> that represents -1 milliseconds to wait indefinitely.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The <xref href=\"System.Threading.CancellationToken\"></xref> to observe.\n    return:\n      type: System.Boolean\n      description: true if all other participants reached the barrier; otherwise, false.\n  overload: System.Threading.Barrier.SignalAndWait*\n  exceptions:\n  - type: System.OperationCanceledException\n    commentId: T:System.OperationCanceledException\n    description: <code>cancellationToken</code> has been canceled.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The current instance has already been disposed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Threading.BarrierPostPhaseException\n  parent: System.Threading\n  isExternal: false\n  name: BarrierPostPhaseException\n  nameWithType: BarrierPostPhaseException\n  fullName: System.Threading.BarrierPostPhaseException\n- uid: System.OperationCanceledException\n  parent: System\n  isExternal: false\n  name: OperationCanceledException\n  nameWithType: OperationCanceledException\n  fullName: System.OperationCanceledException\n- uid: System.Threading.Barrier.#ctor(System.Int32)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: Barrier(Int32)\n  nameWithType: Barrier.Barrier(Int32)\n  fullName: Barrier.Barrier(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: Barrier(Int32, Action<Barrier>)\n  nameWithType: Barrier.Barrier(Int32, Action<Barrier>)\n  fullName: Barrier.Barrier(Int32, Action<Barrier>)\n- uid: System.Action`1\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n- uid: System.Threading.Barrier\n  name: Barrier\n  nameWithType: Barrier\n  fullName: System.Threading.Barrier\n- uid: System.Action{System.Threading.Barrier}\n  parent: System\n  isExternal: false\n  name: Action<Barrier>\n  nameWithType: Action<Barrier>\n  fullName: System.Action<System.Threading.Barrier>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Threading.Barrier\n    name: Barrier\n    nameWithType: Barrier\n    fullName: System.Threading.Barrier\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.Barrier.AddParticipant\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: AddParticipant()\n  nameWithType: Barrier.AddParticipant()\n  fullName: Barrier.AddParticipant()\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Barrier.AddParticipants(System.Int32)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: AddParticipants(Int32)\n  nameWithType: Barrier.AddParticipants(Int32)\n  fullName: Barrier.AddParticipants(Int32)\n- uid: System.Threading.Barrier.CurrentPhaseNumber\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: CurrentPhaseNumber\n  nameWithType: Barrier.CurrentPhaseNumber\n  fullName: Barrier.CurrentPhaseNumber\n- uid: System.Threading.Barrier.Dispose\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: Dispose()\n  nameWithType: Barrier.Dispose()\n  fullName: Barrier.Dispose()\n- uid: System.Threading.Barrier.Dispose(System.Boolean)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Barrier.Dispose(Boolean)\n  fullName: Barrier.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Barrier.ParticipantCount\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: ParticipantCount\n  nameWithType: Barrier.ParticipantCount\n  fullName: Barrier.ParticipantCount\n- uid: System.Threading.Barrier.ParticipantsRemaining\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: ParticipantsRemaining\n  nameWithType: Barrier.ParticipantsRemaining\n  fullName: Barrier.ParticipantsRemaining\n- uid: System.Threading.Barrier.RemoveParticipant\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: RemoveParticipant()\n  nameWithType: Barrier.RemoveParticipant()\n  fullName: Barrier.RemoveParticipant()\n- uid: System.Threading.Barrier.RemoveParticipants(System.Int32)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: RemoveParticipants(Int32)\n  nameWithType: Barrier.RemoveParticipants(Int32)\n  fullName: Barrier.RemoveParticipants(Int32)\n- uid: System.Threading.Barrier.SignalAndWait\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait()\n  nameWithType: Barrier.SignalAndWait()\n  fullName: Barrier.SignalAndWait()\n- uid: System.Threading.Barrier.SignalAndWait(System.Int32)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait(Int32)\n  nameWithType: Barrier.SignalAndWait(Int32)\n  fullName: Barrier.SignalAndWait(Int32)\n- uid: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait(CancellationToken)\n  nameWithType: Barrier.SignalAndWait(CancellationToken)\n  fullName: Barrier.SignalAndWait(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait(TimeSpan)\n  nameWithType: Barrier.SignalAndWait(TimeSpan)\n  fullName: Barrier.SignalAndWait(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait(Int32, CancellationToken)\n  nameWithType: Barrier.SignalAndWait(Int32, CancellationToken)\n  fullName: Barrier.SignalAndWait(Int32, CancellationToken)\n- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait(TimeSpan, CancellationToken)\n  nameWithType: Barrier.SignalAndWait(TimeSpan, CancellationToken)\n  fullName: Barrier.SignalAndWait(TimeSpan, CancellationToken)\n- uid: System.Threading.Barrier.#ctor*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: Barrier\n  nameWithType: Barrier.Barrier\n  fullName: Barrier.Barrier\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.AddParticipant*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: AddParticipant\n  nameWithType: Barrier.AddParticipant\n  fullName: Barrier.AddParticipant\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.AddParticipants*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: AddParticipants\n  nameWithType: Barrier.AddParticipants\n  fullName: Barrier.AddParticipants\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.CurrentPhaseNumber*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: CurrentPhaseNumber\n  nameWithType: Barrier.CurrentPhaseNumber\n  fullName: Barrier.CurrentPhaseNumber\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.Dispose*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: Dispose\n  nameWithType: Barrier.Dispose\n  fullName: Barrier.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.ParticipantCount*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: ParticipantCount\n  nameWithType: Barrier.ParticipantCount\n  fullName: Barrier.ParticipantCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.ParticipantsRemaining*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: ParticipantsRemaining\n  nameWithType: Barrier.ParticipantsRemaining\n  fullName: Barrier.ParticipantsRemaining\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.RemoveParticipant*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: RemoveParticipant\n  nameWithType: Barrier.RemoveParticipant\n  fullName: Barrier.RemoveParticipant\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.RemoveParticipants*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: RemoveParticipants\n  nameWithType: Barrier.RemoveParticipants\n  fullName: Barrier.RemoveParticipants\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Threading.Barrier.SignalAndWait*\n  parent: System.Threading.Barrier\n  isExternal: false\n  name: SignalAndWait\n  nameWithType: Barrier.SignalAndWait\n  fullName: Barrier.SignalAndWait\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Barrier.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}