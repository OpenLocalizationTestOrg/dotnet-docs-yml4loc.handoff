### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithmGroup
  commentId: T:System.Security.Cryptography.CngAlgorithmGroup
  id: CngAlgorithmGroup
  children:
  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.Dsa
  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.Rsa
  - System.Security.Cryptography.CngAlgorithmGroup.ToString
  langs:
  - csharp
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
  type: Class
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Encapsulates the name of an encryption algorithm group.
  remarks: "The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.  \n  \n The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.  \n  \n You can also use this class to create objects for algorithm groups that are not covered by the static properties.  \n  \n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.  \n  \n Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups. It lets you specify an algorithm group name by using a strongly typed value instead of a string."
  syntax:
    content: 'public sealed class CngAlgorithmGroup : IEquatable<System.Security.Cryptography.CngAlgorithmGroup>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Security.Cryptography.CngAlgorithmGroup}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: CngAlgorithmGroup.CngAlgorithmGroup(String)
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> class.
  remarks: "Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter.  \n  \n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available."
  syntax:
    content: public CngAlgorithmGroup (string algorithmGroup);
    parameters:
    - id: algorithmGroup
      type: System.String
      description: The name of the algorithm group to initialize.
  overload: System.Security.Cryptography.CngAlgorithmGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>algorithmGroup</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>algorithmGroup</code> parameter length is 0 (zero).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: CngAlgorithmGroup.AlgorithmGroup
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets the name of the algorithm group that the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object specifies.
  syntax:
    content: public string AlgorithmGroup { get; }
    return:
      type: System.String
      description: The embedded algorithm group name.
  overload: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  id: DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: CngAlgorithmGroup.DiffieHellman
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object that specifies the Diffie-Hellman family of algorithms.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies the Diffie-Hellman family of algorithms.
  overload: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.Dsa
  id: Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: CngAlgorithmGroup.Dsa
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies the DSA family of algorithms.
  overload: System.Security.Cryptography.CngAlgorithmGroup.Dsa*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: CngAlgorithmGroup.ECDiffieHellman
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies the ECDH family of algorithms.
  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  id: ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: CngAlgorithmGroup.ECDsa
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies the ECDSA family of algorithms.
  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: CngAlgorithmGroup.Equals(Object)
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Compares the specified object to the current <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to be compared to the current <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the <code>obj</code> parameter is a <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> that specifies the same algorithm group as the current object; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Compares the specified <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object to the current <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object.
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object to be compared to the current <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the <code>other</code> parameter specifies the same algorithm group as the current object; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: CngAlgorithmGroup.GetHashCode()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Generates a hash value for the algorithm group name that is embedded in the current <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash value of the embedded algorithm group name.
  overload: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  fullName: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Determines whether two <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> objects specify the same algorithm group.
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies an algorithm group.
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.
    return:
      type: System.Boolean
      description: '`true` if the two objects specify the same algorithm group; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  fullName: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Determines whether two <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> objects do not specify the same algorithm group.
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies an algorithm group.
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.
    return:
      type: System.Boolean
      description: '`true` if the two objects do not specify the same algorithm group; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: CngAlgorithmGroup.Rsa
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithmGroup"></xref> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies the RSA family of algorithms.
  overload: System.Security.Cryptography.CngAlgorithmGroup.Rsa*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: CngAlgorithmGroup.ToString()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets the name of the algorithm group that the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object specifies.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The embedded algorithm group name.
  overload: System.Security.Cryptography.CngAlgorithmGroup.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: CngAlgorithmGroup.CngAlgorithmGroup(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: CngAlgorithmGroup.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: CngAlgorithmGroup.DiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: CngAlgorithmGroup.Dsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: CngAlgorithmGroup.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: CngAlgorithmGroup.ECDsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: CngAlgorithmGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: CngAlgorithmGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)
  fullName: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
  fullName: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: CngAlgorithmGroup.Rsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: CngAlgorithmGroup.ToString()
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup
  fullName: CngAlgorithmGroup.CngAlgorithmGroup
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: CngAlgorithmGroup.AlgorithmGroup
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: CngAlgorithmGroup.DiffieHellman
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: CngAlgorithmGroup.Dsa
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: CngAlgorithmGroup.ECDiffieHellman
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: CngAlgorithmGroup.ECDsa
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithmGroup.Equals
  fullName: CngAlgorithmGroup.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithmGroup.GetHashCode
  fullName: CngAlgorithmGroup.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithmGroup.op_Equality
  fullName: CngAlgorithmGroup.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithmGroup.op_Inequality
  fullName: CngAlgorithmGroup.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: CngAlgorithmGroup.Rsa
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithmGroup.ToString
  fullName: CngAlgorithmGroup.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.Security.Cryptography.CngAlgorithmGroup}
  parent: System
  isExternal: false
  name: IEquatable<CngAlgorithmGroup>
  nameWithType: IEquatable<CngAlgorithmGroup>
  fullName: System.IEquatable<System.Security.Cryptography.CngAlgorithmGroup>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.CngAlgorithmGroup
    name: CngAlgorithmGroup
    nameWithType: CngAlgorithmGroup
    fullName: System.Security.Cryptography.CngAlgorithmGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
