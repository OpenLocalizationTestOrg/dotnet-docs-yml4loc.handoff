{"nodes":[{"content":"Resolves issuer tokens received from service partners.","nodes":[{"pos":[0,54],"content":"Resolves issuer tokens received from service partners.","nodes":[{"content":"Resolves issuer tokens received from service partners.","pos":[0,54]}]}],"pos":[1340,1395],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"></xref> class."}],"pos":[4117,4227],"yaml":true},{"content":"By default, the new instance is initialized with an <xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver> that uses the default store (LM.TrustedPeople).        //","nodes":[{"pos":[0,178],"content":"By default, the new instance is initialized with an <xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver> that uses the default store (LM.TrustedPeople).        //","nodes":[{"content":"By default, the new instance is initialized with an <xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver> that uses the default store (LM.TrustedPeople).        //","pos":[0,178],"nodes":[{"content":"By default, the new instance is initialized with an <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver&gt;</ph> that uses the default store (LM.TrustedPeople).","pos":[0,168],"source":"By default, the new instance is initialized with an <xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver> that uses the default store (LM.TrustedPeople)."}]}]}],"pos":[4238,4417],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"></xref> class by using the specified token resolver.","nodes":[{"pos":[0,147],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"&gt;&lt;/xref&gt;</ph> class by using the specified token resolver.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"></xref> class by using the specified token resolver."}],"pos":[5803,5951],"yaml":true},{"content":"The security token resolver to be wrapped by this instance. Sets the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\"></xref> property in the new instance.","nodes":[{"pos":[0,188],"content":"The security token resolver to be wrapped by this instance. Sets the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\"></xref> property in the new instance.","nodes":[{"content":"The security token resolver to be wrapped by this instance.","pos":[0,59]},{"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\"&gt;&lt;/xref&gt;</ph> property in the new instance.","pos":[60,188],"source":" Sets the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\"></xref> property in the new instance."}]}],"pos":[6209,6398],"yaml":true},{"content":"The default store location for resolving X.509 certificates.","nodes":[{"pos":[0,60],"content":"The default store location for resolving X.509 certificates.","nodes":[{"content":"The default store location for resolving X.509 certificates.","pos":[0,60]}]}],"pos":[7520,7581],"yaml":true},{"content":"The default store for resolving X.509 certificates.","nodes":[{"pos":[0,51],"content":"The default store for resolving X.509 certificates.","nodes":[{"content":"The default store for resolving X.509 certificates.","pos":[0,51]}]}],"pos":[8846,8898],"yaml":true},{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause. (Override of the base class method.)","nodes":[{"pos":[0,124],"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause. (Override of the base class method.)","nodes":[{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause. (Override of the base class method.)","pos":[0,124],"nodes":[{"content":"Attempts to retrieve the key that is referenced in the specified key identifier clause.","pos":[0,87]},{"content":"(Override of the base class method.)","pos":[88,124]}]}]}],"pos":[10626,10751],"yaml":true},{"content":"A key identifier clause to retrieve the key for.","nodes":[{"pos":[0,48],"content":"A key identifier clause to retrieve the key for.","nodes":[{"content":"A key identifier clause to retrieve the key for.","pos":[0,48]}]}],"pos":[11085,11134],"yaml":true},{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"pos":[0,141],"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.","pos":[0,141],"nodes":[{"content":"When this method returns, contains the key that is referenced in the specified key identifier clause.","pos":[0,101]},{"content":"This parameter is passed uninitialized.","pos":[102,141]}]}]}],"pos":[11219,11361],"yaml":true},{"content":"`true` when a key can be retrieved for the specified key identifier clause; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> when a key can be retrieved for the specified key identifier clause; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when a key can be retrieved for the specified key identifier clause; otherwise, `false`."}],"pos":[11419,11517],"yaml":true},{"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier. (Override of the base class method.)","nodes":[{"pos":[0,179],"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier. (Override of the base class method.)","nodes":[{"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier. (Override of the base class method.)","pos":[0,179],"nodes":[{"content":"Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.","pos":[0,142]},{"content":"(Override of the base class method.)","pos":[143,179]}]}]}],"pos":[13050,13230],"yaml":true},{"content":"The key identifier to create a security token for.","nodes":[{"pos":[0,50],"content":"The key identifier to create a security token for.","nodes":[{"content":"The key identifier to create a security token for.","pos":[0,50]}]}],"pos":[13538,13589],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.","nodes":[{"pos":[0,185],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> that represents the specified key identifier.","pos":[0,145],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier."},{"content":"This parameter is passed uninitialized.","pos":[146,185]}]}],"pos":[13678,13864],"yaml":true},{"content":"`true` if a security token can be retrieved for the specified key identifier; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if a security token can be retrieved for the specified key identifier; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a security token can be retrieved for the specified key identifier; otherwise, `false`."}],"pos":[13922,14022],"yaml":true},{"content":"When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause. (Override of the base class method.)","nodes":[{"pos":[0,161],"content":"When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause. (Override of the base class method.)","nodes":[{"content":"When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause. (Override of the base class method.)","pos":[0,161],"nodes":[{"content":"When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.","pos":[0,124]},{"content":"(Override of the base class method.)","pos":[125,161]}]}]}],"pos":[15585,15747],"yaml":true},{"content":"The key identifier clause to create a security token for.","nodes":[{"pos":[0,57],"content":"The key identifier clause to create a security token for.","nodes":[{"content":"The key identifier clause to create a security token for.","pos":[0,57]}]}],"pos":[16079,16137],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"pos":[0,192],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> that represents the specified key identifier clause.","pos":[0,152],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause."},{"content":"This parameter is passed uninitialized.","pos":[153,192]}]}],"pos":[16226,16419],"yaml":true},{"content":"`true` if a security token can be retrieved for the specified key identifier clause; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if a security token can be retrieved for the specified key identifier clause; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a security token can be retrieved for the specified key identifier clause; otherwise, `false`."}],"pos":[16477,16584],"yaml":true},{"content":"Gets the security token resolver wrapped by this instance.","nodes":[{"pos":[0,58],"content":"Gets the security token resolver wrapped by this instance.","nodes":[{"content":"Gets the security token resolver wrapped by this instance.","pos":[0,58]}]}],"pos":[17723,17782],"yaml":true},{"content":"The wrapped token resolver.","nodes":[{"pos":[0,27],"content":"The wrapped token resolver.","nodes":[{"content":"The wrapped token resolver.","pos":[0,27]}]}],"pos":[17991,18019],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver\n  commentId: T:System.IdentityModel.Tokens.IssuerTokenResolver\n  id: IssuerTokenResolver\n  children:\n  - System.IdentityModel.Tokens.IssuerTokenResolver.#ctor\n  - System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation\n  - System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName\n  - System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\n  langs:\n  - csharp\n  name: IssuerTokenResolver\n  nameWithType: IssuerTokenResolver\n  fullName: System.IdentityModel.Tokens.IssuerTokenResolver\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Resolves issuer tokens received from service partners.\n  syntax:\n    content: 'public class IssuerTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor\n  commentId: M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: IssuerTokenResolver()\n  nameWithType: IssuerTokenResolver.IssuerTokenResolver()\n  fullName: IssuerTokenResolver.IssuerTokenResolver()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"></xref> class.\n  remarks: By default, the new instance is initialized with an <xref:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver> that uses the default store (LM.TrustedPeople).        //\n  syntax:\n    content: public IssuerTokenResolver ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)\n  commentId: M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)\n  id: '#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)'\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: IssuerTokenResolver(SecurityTokenResolver)\n  nameWithType: IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)\n  fullName: IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver\"></xref> class by using the specified token resolver.\n  syntax:\n    content: public IssuerTokenResolver (System.IdentityModel.Selectors.SecurityTokenResolver wrappedTokenResolver);\n    parameters:\n    - id: wrappedTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The security token resolver to be wrapped by this instance. Sets the <xref href=\"System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\"></xref> property in the new instance.\n  overload: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation\n  commentId: F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation\n  id: DefaultStoreLocation\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: DefaultStoreLocation\n  nameWithType: IssuerTokenResolver.DefaultStoreLocation\n  fullName: IssuerTokenResolver.DefaultStoreLocation\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: The default store location for resolving X.509 certificates.\n  syntax:\n    content: public static readonly System.Security.Cryptography.X509Certificates.StoreLocation DefaultStoreLocation;\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName\n  commentId: F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName\n  id: DefaultStoreName\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: DefaultStoreName\n  nameWithType: IssuerTokenResolver.DefaultStoreName\n  fullName: IssuerTokenResolver.DefaultStoreName\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: The default store for resolving X.509 certificates.\n  syntax:\n    content: public static readonly System.Security.Cryptography.X509Certificates.StoreName DefaultStoreName;\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  commentId: M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to retrieve the key that is referenced in the specified key identifier clause. (Override of the base class method.)\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A key identifier clause to retrieve the key for.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` when a key can be retrieved for the specified key identifier clause; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier. (Override of the base class method.)\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if a security token can be retrieved for the specified key identifier; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause. (Override of the base class method.)\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to create a security token for.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> that represents the specified key identifier clause. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if a security token can be retrieved for the specified key identifier clause; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\n  commentId: P:System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\n  id: WrappedTokenResolver\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  langs:\n  - csharp\n  name: WrappedTokenResolver\n  nameWithType: IssuerTokenResolver.WrappedTokenResolver\n  fullName: IssuerTokenResolver.WrappedTokenResolver\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the security token resolver wrapped by this instance.\n  syntax:\n    content: public System.IdentityModel.Selectors.SecurityTokenResolver WrappedTokenResolver { get; }\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: The wrapped token resolver.\n  overload: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: IssuerTokenResolver()\n  nameWithType: IssuerTokenResolver.IssuerTokenResolver()\n  fullName: IssuerTokenResolver.IssuerTokenResolver()\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: IssuerTokenResolver(SecurityTokenResolver)\n  nameWithType: IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)\n  fullName: IssuerTokenResolver.IssuerTokenResolver(SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: DefaultStoreLocation\n  nameWithType: IssuerTokenResolver.DefaultStoreLocation\n  fullName: IssuerTokenResolver.DefaultStoreLocation\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: DefaultStoreName\n  nameWithType: IssuerTokenResolver.DefaultStoreName\n  fullName: IssuerTokenResolver.DefaultStoreName\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  nameWithType: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: IssuerTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: IssuerTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: WrappedTokenResolver\n  nameWithType: IssuerTokenResolver.WrappedTokenResolver\n  fullName: IssuerTokenResolver.WrappedTokenResolver\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.#ctor*\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: IssuerTokenResolver\n  nameWithType: IssuerTokenResolver.IssuerTokenResolver\n  fullName: IssuerTokenResolver.IssuerTokenResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: IssuerTokenResolver.TryResolveSecurityKeyCore\n  fullName: IssuerTokenResolver.TryResolveSecurityKeyCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: IssuerTokenResolver.TryResolveTokenCore\n  fullName: IssuerTokenResolver.TryResolveTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n- uid: System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver*\n  parent: System.IdentityModel.Tokens.IssuerTokenResolver\n  isExternal: false\n  name: WrappedTokenResolver\n  nameWithType: IssuerTokenResolver.WrappedTokenResolver\n  fullName: IssuerTokenResolver.WrappedTokenResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/IssuerTokenResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  fullName: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n"}