{"nodes":[{"content":"Wraps objects the marshaler should marshal as a `VT_ERROR`.","nodes":[{"pos":[0,59],"content":"Wraps objects the marshaler should marshal as a <ph id=\"ph1\">`VT_ERROR`</ph>.","source":"Wraps objects the marshaler should marshal as a `VT_ERROR`."}],"pos":[717,777],"yaml":true},{"content":"By default, <xref:System.Object> type arguments are marshaled as a `VARIANT` type, where the object type determines the `VARTYPE` value of the `VARIANT`.  \n  \n The <xref:System.Runtime.InteropServices.ErrorWrapper> type must to be passed as an <xref:System.Object> type to be marshaled as a `VARIANT` of type `VT_ERROR`, otherwise the <xref:System.Runtime.InteropServices.ErrorWrapper> type is marshaled as an integer.  \n  \n The following table illustrates marshaling in a managed call to a native function, using platform invoke.  \n  \n|Managed signature parameter|pArr value|Marshaled as|  \n|---------------------------------|----------------|------------------|  \n|ErrorWrapper[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`Int[10]`|  \n|Object[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`VARIANT[10]` of `VT_ERROR`|  \n|Object[] pArr|Object[10] of ErrorWrapper(77)|`VARIANT[10]` of `VT_ERROR`|  \n  \n The following table illustrates marshaling data in a managed call to a native function, using COM runtime callable wrappers (RCW).  \n  \n|Managed signature parameter|pArr value|Marshaled as|  \n|---------------------------------|----------------|------------------|  \n|ErrorWrapper[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`Int[10]`|  \n|Object[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`SafeArrayTypeMismatch` exception|  \n|Object[] pArr|Object[10] of ErrorWrapper(77)|`SAFEARRAY(VARIANT)`|  \n  \n Note that <xref:System.Runtime.InteropServices.ErrorWrapper> objects are not marshaled as type `VT_ERROR` after they are passed back from COM.  A single value is marshaled back from COM as type `VT_I4`, while arrays are marshaled back from COM as type `VT_UI4`.  \n  \n For more information on `VT_ERROR`, please see the existing documentation for `VARENUM::VT_ERROR` in the MSDN library.","nodes":[{"pos":[0,153],"content":"By default, <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> type arguments are marshaled as a <ph id=\"ph2\">`VARIANT`</ph> type, where the object type determines the <ph id=\"ph3\">`VARTYPE`</ph> value of the <ph id=\"ph4\">`VARIANT`</ph>.","source":"By default, <xref:System.Object> type arguments are marshaled as a `VARIANT` type, where the object type determines the `VARTYPE` value of the `VARIANT`."},{"pos":[160,418],"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ErrorWrapper&gt;</ph> type must to be passed as an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> type to be marshaled as a <ph id=\"ph3\">`VARIANT`</ph> of type <ph id=\"ph4\">`VT_ERROR`</ph>, otherwise the <ph id=\"ph5\">&lt;xref:System.Runtime.InteropServices.ErrorWrapper&gt;</ph> type is marshaled as an integer.","source":"The <xref:System.Runtime.InteropServices.ErrorWrapper> type must to be passed as an <xref:System.Object> type to be marshaled as a `VARIANT` of type `VT_ERROR`, otherwise the <xref:System.Runtime.InteropServices.ErrorWrapper> type is marshaled as an integer."},{"pos":[425,530],"content":"The following table illustrates marshaling in a managed call to a native function, using platform invoke.","nodes":[{"content":"The following table illustrates marshaling in a managed call to a native function, using platform invoke.","pos":[0,105]}]},{"pos":[537,564],"content":"Managed signature parameter","nodes":[{"content":"Managed signature parameter","pos":[0,27]}]},{"pos":[565,575],"content":"pArr value","nodes":[{"content":"pArr value","pos":[0,10]}]},{"pos":[576,588],"content":"Marshaled as","nodes":[{"content":"Marshaled as","pos":[0,12]}]},{"pos":[667,686],"content":"ErrorWrapper[] pArr","nodes":[{"content":"ErrorWrapper[] pArr","pos":[0,19]}]},{"pos":[687,723],"content":"ErrorWrapper[10] of ErrorWrapper(77)","nodes":[{"content":"ErrorWrapper[10] of ErrorWrapper(77)","pos":[0,36]}]},{"pos":[738,751],"content":"Object[] pArr","nodes":[{"content":"Object[] pArr","pos":[0,13]}]},{"pos":[752,788],"content":"ErrorWrapper[10] of ErrorWrapper(77)","nodes":[{"content":"ErrorWrapper[10] of ErrorWrapper(77)","pos":[0,36]}]},{"pos":[789,816],"content":"<ph id=\"ph1\">`VARIANT[10]`</ph> of <ph id=\"ph2\">`VT_ERROR`</ph>","source":"`VARIANT[10]` of `VT_ERROR`"},{"pos":[821,834],"content":"Object[] pArr","nodes":[{"content":"Object[] pArr","pos":[0,13]}]},{"pos":[835,865],"content":"Object[10] of ErrorWrapper(77)","nodes":[{"content":"Object[10] of ErrorWrapper(77)","pos":[0,30]}]},{"pos":[866,893],"content":"<ph id=\"ph1\">`VARIANT[10]`</ph> of <ph id=\"ph2\">`VT_ERROR`</ph>","source":"`VARIANT[10]` of `VT_ERROR`"},{"pos":[901,1031],"content":"The following table illustrates marshaling data in a managed call to a native function, using COM runtime callable wrappers (RCW).","nodes":[{"content":"The following table illustrates marshaling data in a managed call to a native function, using COM runtime callable wrappers (RCW).","pos":[0,130]}]},{"pos":[1038,1065],"content":"Managed signature parameter","nodes":[{"content":"Managed signature parameter","pos":[0,27]}]},{"pos":[1066,1076],"content":"pArr value","nodes":[{"content":"pArr value","pos":[0,10]}]},{"pos":[1077,1089],"content":"Marshaled as","nodes":[{"content":"Marshaled as","pos":[0,12]}]},{"pos":[1168,1187],"content":"ErrorWrapper[] pArr","nodes":[{"content":"ErrorWrapper[] pArr","pos":[0,19]}]},{"pos":[1188,1224],"content":"ErrorWrapper[10] of ErrorWrapper(77)","nodes":[{"content":"ErrorWrapper[10] of ErrorWrapper(77)","pos":[0,36]}]},{"pos":[1239,1252],"content":"Object[] pArr","nodes":[{"content":"Object[] pArr","pos":[0,13]}]},{"pos":[1253,1289],"content":"ErrorWrapper[10] of ErrorWrapper(77)","nodes":[{"content":"ErrorWrapper[10] of ErrorWrapper(77)","pos":[0,36]}]},{"pos":[1290,1323],"content":"<ph id=\"ph1\">`SafeArrayTypeMismatch`</ph> exception","source":"`SafeArrayTypeMismatch` exception"},{"pos":[1328,1341],"content":"Object[] pArr","nodes":[{"content":"Object[] pArr","pos":[0,13]}]},{"pos":[1342,1372],"content":"Object[10] of ErrorWrapper(77)","nodes":[{"content":"Object[10] of ErrorWrapper(77)","pos":[0,30]}]},{"pos":[1401,1662],"content":"Note that <xref:System.Runtime.InteropServices.ErrorWrapper> objects are not marshaled as type `VT_ERROR` after they are passed back from COM.  A single value is marshaled back from COM as type `VT_I4`, while arrays are marshaled back from COM as type `VT_UI4`.","nodes":[{"content":"Note that <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.ErrorWrapper&gt;</ph> objects are not marshaled as type <ph id=\"ph2\">`VT_ERROR`</ph> after they are passed back from COM.","pos":[0,142],"source":"Note that <xref:System.Runtime.InteropServices.ErrorWrapper> objects are not marshaled as type `VT_ERROR` after they are passed back from COM."},{"content":"A single value is marshaled back from COM as type <ph id=\"ph1\">`VT_I4`</ph>, while arrays are marshaled back from COM as type <ph id=\"ph2\">`VT_UI4`</ph>.","pos":[144,261],"source":"  A single value is marshaled back from COM as type `VT_I4`, while arrays are marshaled back from COM as type `VT_UI4`."}]},{"pos":[1669,1787],"content":"For more information on <ph id=\"ph1\">`VT_ERROR`</ph>, please see the existing documentation for <ph id=\"ph2\">`VARENUM::VT_ERROR`</ph> in the MSDN library.","source":"For more information on `VT_ERROR`, please see the existing documentation for `VARENUM::VT_ERROR` in the MSDN library."}],"pos":[788,2600],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with the HRESULT that corresponds to the exception supplied.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ErrorWrapper\"&gt;&lt;/xref&gt;</ph> class with the HRESULT that corresponds to the exception supplied.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with the HRESULT that corresponds to the exception supplied."}],"pos":[5485,5651],"yaml":true},{"content":"The exception to be converted to an error code.","nodes":[{"pos":[0,47],"content":"The exception to be converted to an error code.","nodes":[{"content":"The exception to be converted to an error code.","pos":[0,47]}]}],"pos":[5785,5833],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with the HRESULT of the error.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ErrorWrapper\"&gt;&lt;/xref&gt;</ph> class with the HRESULT of the error.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with the HRESULT of the error."}],"pos":[7501,7637],"yaml":true},{"content":"The HRESULT of the error.","nodes":[{"pos":[0,25],"content":"The HRESULT of the error.","nodes":[{"content":"The HRESULT of the error.","pos":[0,25]}]}],"pos":[7777,7803],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with an object containing the HRESULT of the error.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ErrorWrapper\"&gt;&lt;/xref&gt;</ph> class with an object containing the HRESULT of the error.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with an object containing the HRESULT of the error."}],"pos":[9460,9617],"yaml":true},{"content":"The object containing the HRESULT of the error.","nodes":[{"pos":[0,47],"content":"The object containing the HRESULT of the error.","nodes":[{"content":"The object containing the HRESULT of the error.","pos":[0,47]}]}],"pos":[9761,9809],"yaml":true},{"content":"The <code>errorCode</code> parameter is not an <xref href=\"System.Int32\"></xref> type.","nodes":[{"pos":[0,86],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">errorCode</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an <ph id=\"ph2\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> type.","source":"The <code>errorCode</code> parameter is not an <xref href=\"System.Int32\"></xref> type."}],"pos":[9980,10067],"yaml":true},{"content":"Gets the error code of the wrapper.","nodes":[{"pos":[0,35],"content":"Gets the error code of the wrapper.","nodes":[{"content":"Gets the error code of the wrapper.","pos":[0,35]}]}],"pos":[11573,11609],"yaml":true},{"content":"The HRESULT of the error.","nodes":[{"pos":[0,25],"content":"The HRESULT of the error.","nodes":[{"content":"The HRESULT of the error.","pos":[0,25]}]}],"pos":[11718,11744],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.ErrorWrapper\n  commentId: T:System.Runtime.InteropServices.ErrorWrapper\n  id: ErrorWrapper\n  children:\n  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  - System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  - System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  langs:\n  - csharp\n  name: ErrorWrapper\n  nameWithType: ErrorWrapper\n  fullName: System.Runtime.InteropServices.ErrorWrapper\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Wraps objects the marshaler should marshal as a `VT_ERROR`.\n  remarks: \"By default, <xref:System.Object> type arguments are marshaled as a `VARIANT` type, where the object type determines the `VARTYPE` value of the `VARIANT`.  \\n  \\n The <xref:System.Runtime.InteropServices.ErrorWrapper> type must to be passed as an <xref:System.Object> type to be marshaled as a `VARIANT` of type `VT_ERROR`, otherwise the <xref:System.Runtime.InteropServices.ErrorWrapper> type is marshaled as an integer.  \\n  \\n The following table illustrates marshaling in a managed call to a native function, using platform invoke.  \\n  \\n|Managed signature parameter|pArr value|Marshaled as|  \\n|---------------------------------|----------------|------------------|  \\n|ErrorWrapper[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`Int[10]`|  \\n|Object[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`VARIANT[10]` of `VT_ERROR`|  \\n|Object[] pArr|Object[10] of ErrorWrapper(77)|`VARIANT[10]` of `VT_ERROR`|  \\n  \\n The following table illustrates marshaling data in a managed call to a native function, using COM runtime callable wrappers (RCW).  \\n  \\n|Managed signature parameter|pArr value|Marshaled as|  \\n|---------------------------------|----------------|------------------|  \\n|ErrorWrapper[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`Int[10]`|  \\n|Object[] pArr|ErrorWrapper[10] of ErrorWrapper(77)|`SafeArrayTypeMismatch` exception|  \\n|Object[] pArr|Object[10] of ErrorWrapper(77)|`SAFEARRAY(VARIANT)`|  \\n  \\n Note that <xref:System.Runtime.InteropServices.ErrorWrapper> objects are not marshaled as type `VT_ERROR` after they are passed back from COM.  A single value is marshaled back from COM as type `VT_I4`, while arrays are marshaled back from COM as type `VT_UI4`.  \\n  \\n For more information on `VT_ERROR`, please see the existing documentation for `VARENUM::VT_ERROR` in the MSDN library.\"\n  example:\n  - \"The following code example first demonstrates a lone <xref:System.Int32> object marshaled back from COM as an <xref:System.Int32> object. It then demonstrates an <xref:System.Int32> array marshaled back from COM as a <xref:System.UInt32> array.  \\n  \\n```  \\n// Scenario 1:  \\n// Pass a single value.  \\nInt32 x = 3;  \\nObject o = new ErrorWrapper(x);  \\n// Pass 'o' to COM.  \\n// On the return trip, 'o' has been unwrapped and is still an Int32 object.  \\nInt32 y = (Int32)o;  \\nScenario 2:  \\n// Pass an array of values.  \\nInt32[] arr = new Int32[3];  \\nObject o = new ErrorWrapper(arr);  \\n// Pass 'o' to COM.  \\n// On the return trip, 'o' has been unwrapped and is now a UInt32[] array.  \\nUInt32[ ] arr2 = (UInt32[])o;  \\n```\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ErrorWrapper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  id: '#ctor(System.Exception)'\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  name: ErrorWrapper(Exception)\n  nameWithType: ErrorWrapper.ErrorWrapper(Exception)\n  fullName: ErrorWrapper.ErrorWrapper(Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with the HRESULT that corresponds to the exception supplied.\n  syntax:\n    content: public ErrorWrapper (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: The exception to be converted to an error code.\n  overload: System.Runtime.InteropServices.ErrorWrapper.#ctor*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  name: ErrorWrapper(Int32)\n  nameWithType: ErrorWrapper.ErrorWrapper(Int32)\n  fullName: ErrorWrapper.ErrorWrapper(Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with the HRESULT of the error.\n  syntax:\n    content: public ErrorWrapper (int errorCode);\n    parameters:\n    - id: errorCode\n      type: System.Int32\n      description: The HRESULT of the error.\n  overload: System.Runtime.InteropServices.ErrorWrapper.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  commentId: M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  name: ErrorWrapper(Object)\n  nameWithType: ErrorWrapper.ErrorWrapper(Object)\n  fullName: ErrorWrapper.ErrorWrapper(Object)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ErrorWrapper\"></xref> class with an object containing the HRESULT of the error.\n  syntax:\n    content: public ErrorWrapper (object errorCode);\n    parameters:\n    - id: errorCode\n      type: System.Object\n      description: The object containing the HRESULT of the error.\n  overload: System.Runtime.InteropServices.ErrorWrapper.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>errorCode</code> parameter is not an <xref href=\"System.Int32\"></xref> type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  commentId: P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  id: ErrorCode\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  langs:\n  - csharp\n  name: ErrorCode\n  nameWithType: ErrorWrapper.ErrorCode\n  fullName: ErrorWrapper.ErrorCode\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the error code of the wrapper.\n  syntax:\n    content: public int ErrorCode { get; }\n    return:\n      type: System.Int32\n      description: The HRESULT of the error.\n  overload: System.Runtime.InteropServices.ErrorWrapper.ErrorCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  isExternal: false\n  name: ErrorWrapper(Exception)\n  nameWithType: ErrorWrapper.ErrorWrapper(Exception)\n  fullName: ErrorWrapper.ErrorWrapper(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  isExternal: false\n  name: ErrorWrapper(Int32)\n  nameWithType: ErrorWrapper.ErrorWrapper(Int32)\n  fullName: ErrorWrapper.ErrorWrapper(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  isExternal: false\n  name: ErrorWrapper(Object)\n  nameWithType: ErrorWrapper.ErrorWrapper(Object)\n  fullName: ErrorWrapper.ErrorWrapper(Object)\n- uid: System.Runtime.InteropServices.ErrorWrapper.ErrorCode\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  isExternal: false\n  name: ErrorCode\n  nameWithType: ErrorWrapper.ErrorCode\n  fullName: ErrorWrapper.ErrorCode\n- uid: System.Runtime.InteropServices.ErrorWrapper.#ctor*\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  isExternal: false\n  name: ErrorWrapper\n  nameWithType: ErrorWrapper.ErrorWrapper\n  fullName: ErrorWrapper.ErrorWrapper\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n- uid: System.Runtime.InteropServices.ErrorWrapper.ErrorCode*\n  parent: System.Runtime.InteropServices.ErrorWrapper\n  isExternal: false\n  name: ErrorCode\n  nameWithType: ErrorWrapper.ErrorCode\n  fullName: ErrorWrapper.ErrorCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/ErrorWrapper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}