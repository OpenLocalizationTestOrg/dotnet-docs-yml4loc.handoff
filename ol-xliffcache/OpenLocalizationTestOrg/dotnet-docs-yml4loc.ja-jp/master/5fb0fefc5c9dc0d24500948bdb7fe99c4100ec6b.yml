### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  commentId: T:System.Web.UI.WebControls.WebParts.WebPartDescription
  id: WebPartDescription
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  - System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  langs:
  - csharp
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Provides information about a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control that you can display in a catalog of Web Parts controls without having to create an instance of the control.
  remarks: "When <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are displayed in a catalog of controls that users can add to a page, some basic information about each control is required. For example, it is useful to have a title for the control, and a description, so that as users view a catalog they have enough information to decide whether to add a control to the page. However, a catalog of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can potentially contain many controls, and it could affect the performance of an application if an instance of every <xref:System.Web.UI.WebControls.WebParts.WebPart> control must be created to extract the information to display in the catalog.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class exists so that it is not necessary to create an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control to retrieve the information about the control that is displayed in a catalog of controls. In the Web Parts control set, a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> object is also used in conjunction with the various <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls when a page is in catalog display mode.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class has two overloads of its constructor, one that takes a <xref:System.Web.UI.WebControls.WebParts.WebPart> control as a parameter when an instance is available (the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> constructor), and one that takes several strings with information about the control as parameters (the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> constructor).  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class also has several properties designed to contain the description information for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The following table summarizes the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> properties, and what property each one corresponds to in a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n|Description property|Related part control property|  \n|--------------------------|-----------------------------------|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>|<xref:System.Web.UI.Control.ID%2A>|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>|<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|"
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class. Ordinarily, this type is used primarily by the Web Parts control set, but this code example is simply showing basic programmatic usage of the main description properties.  \n  \n The code example has four parts:  \n  \n-   A user control that enables users to change display modes on a Web page.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page to host the other controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For more details about the user control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartDescription_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/DisplayModeMenuCS.ascx#7)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartDescription_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/DisplayModeMenuVB.ascx#7)]  -->  \n  \n The second part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the approach of dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartDescription_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/textdisplaywebpart.cs#3)]\n [!code-vb[WebParts_WebPartDescription_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/textdisplaywebpart.vb#3)]  \n  \n The third part of the code example is the Web page. Near the top are two `Register` directives: one that registers the user control, and the other to register the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control whose source file is located in the App_Code folder of your site. The page contains an `<asp:catalogzone>` element, which in turn contains declarative references to two controls: the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, and a <xref:System.Web.UI.WebControls.BulletedList> Web server control that will be treated as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control will wrap it with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Note that in the code for the `Button1_Click` method, the available <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects for the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog are retrieved using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then the description details are all written out to the page.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartDescription_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartDescription_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#1)]  -->  \n  \n After you load the page in a browser, use the **Display Mode** drop-down list control and select **Catalog** to change the page to catalog display mode. In the catalog, you should see the two controls that are available to be added to the page. Click the **List WebPartDescription Information** button, and the code writes out the values of all available <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects to the page. This demonstrates that you can retrieve description details for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a catalog without having to create instances of the controls themselves."
  syntax:
    content: public class WebPartDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  id: '#ctor(System.Web.UI.WebControls.WebParts.WebPart)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: WebPartDescription.WebPartDescription(WebPart)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Initializes a new instance of the class when a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control instance is available.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> constructor is used for creating a new <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> object based on an existing <xref:System.Web.UI.WebControls.WebParts.WebPart> control. This constructor simply calls the other overload, the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> constructor, obtaining the required parameter values from properties on the `part` parameter.
  syntax:
    content: public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);
    parameters:
    - id: part
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control whose information is contained in a <xref href="System.Web.UI.WebControls.WebParts.WebPartDescription"></xref>.
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Web.UI.Control.ID"></xref> property of <code>part</code> is `null` or an empty string ("").
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(String, String, String, String)
  nameWithType: WebPartDescription.WebPartDescription(String, String, String, String)
  fullName: WebPartDescription.WebPartDescription(String, String, String, String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Initializes a new instance of the class by using several strings that contain description information for a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> constructor is used to create a new instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class when a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is not available. For example, this occurs in the case of an <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control when it imports a description file for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. It gets the information it needs to create a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> object directly from the description file, and a <xref:System.Web.UI.WebControls.WebParts.WebPart> instance is not present.
  syntax:
    content: public WebPartDescription (string id, string title, string description, string imageUrl);
    parameters:
    - id: id
      type: System.String
      description: The value to assign to the <xref href="System.Web.UI.WebControls.WebParts.WebPartDescription.ID"></xref>.
    - id: title
      type: System.String
      description: The value to assign to the <xref href="System.Web.UI.WebControls.WebParts.WebPartDescription.Title"></xref>.
    - id: description
      type: System.String
      description: The value to assign to the <xref href="System.Web.UI.WebControls.WebParts.WebPartDescription.Description"></xref>.
    - id: imageUrl
      type: System.String
      description: The value to assign to the <xref href="System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl"></xref>.
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>id</code> or <code>title</code> is `null` or an empty string ("").
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: WebPartDescription.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a URL containing the path to an image used as an icon for a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> property corresponds directly to the <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName> property. If that property is set on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, then the property in the corresponding <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> object will also have a value.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> property applies only when a page is in catalog display mode, and a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is being displayed in a catalog of controls. If the control has an icon assigned to it in the property value, the icon appears in the catalog next to the control."
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> property value is retrieved in the following code.  \n  \n [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]"
  syntax:
    content: public string CatalogIconImageUrl { get; }
    return:
      type: System.String
      description: A string that contains a URL; the default value is an empty string ("").
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: WebPartDescription.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets the text of a description for a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> property corresponds directly to the <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName> property. If that property is set on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, then the property in the corresponding <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> object will also have a value.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> property applies only when a page is in catalog display mode, and a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is being displayed in a catalog of controls. If the control has a description assigned to it, the description appears in the catalog as a ToolTip on the control."
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> property value is retrieved in the following code.  \n  \n [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: A string that contains the description for a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control; the default value is an empty string ("").
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: WebPartDescription.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets the ID of a corresponding <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "The value of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> property cannot be `null`; it must always have a value. The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> property corresponds directly to the <xref:System.Web.UI.Control.ID%2A?displayProperty=fullName> property.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> property applies only when a page is in catalog display mode, and a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is being displayed in a catalog of controls."
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> property value is retrieved in the following code.  \n  \n [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: A string that contains the ID of the control.
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: WebPartDescription.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets the title text of a corresponding <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "The value of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> property corresponds directly to the <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName> property. Whatever the corresponding <xref:System.Web.UI.WebControls.WebParts.WebPart> control has for its <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> property, that becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> property; otherwise, the title is a calculated value.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> property applies only when a page is in catalog display mode, and a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is being displayed in a catalog of controls. Whatever title is assigned to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control appears next to the control in the catalog."
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> property value is retrieved in the following code.  \n  \n [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: A string that contains the title of the corresponding control. The default value is a calculated string supplied by the .NET Framework.
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: WebPartDescription.WebPartDescription(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(String, String, String, String)
  nameWithType: WebPartDescription.WebPartDescription(String, String, String, String)
  fullName: WebPartDescription.WebPartDescription(String, String, String, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: WebPartDescription.Title
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription.WebPartDescription
  fullName: WebPartDescription.WebPartDescription
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: WebPartDescription.CatalogIconImageUrl
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: WebPartDescription.Description
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: WebPartDescription.ID
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: WebPartDescription.Title
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartDescription.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
