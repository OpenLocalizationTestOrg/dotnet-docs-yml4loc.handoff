{"nodes":[{"content":"Represents the main entry point for the LINQ to SQL framework.","nodes":[{"pos":[0,62],"content":"Represents the main entry point for the LINQ to SQL framework.","nodes":[{"content":"Represents the main entry point for the LINQ to SQL framework.","pos":[0,62]}]}],"pos":[2987,3050],"yaml":true},{"content":"The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection. It tracks changes that you made to all retrieved entities and maintains an \"identity cache\" that guarantees that entities retrieved more than one time are represented by using the same object instance.  \n  \n In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one \"unit of work\" however your application defines that term. A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create. A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.","nodes":[{"pos":[0,306],"content":"The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection. It tracks changes that you made to all retrieved entities and maintains an \"identity cache\" that guarantees that entities retrieved more than one time are represented by using the same object instance.","nodes":[{"content":"The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection. It tracks changes that you made to all retrieved entities and maintains an \"identity cache\" that guarantees that entities retrieved more than one time are represented by using the same object instance.","pos":[0,306],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is the source of all entities mapped over a database connection.","pos":[0,104],"source":"The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection."},{"content":"It tracks changes that you made to all retrieved entities and maintains an \"identity cache\" that guarantees that entities retrieved more than one time are represented by using the same object instance.","pos":[105,306]}]}]},{"pos":[313,786],"content":"In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one \"unit of work\" however your application defines that term. A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create. A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.","nodes":[{"content":"In general, a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance is designed to last for one \"unit of work\" however your application defines that term.","pos":[0,145],"source":"In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one \"unit of work\" however your application defines that term."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is lightweight and is not expensive to create.","pos":[146,230],"source":" A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create."},{"content":"A typical <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> application creates <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.","pos":[231,473],"source":" A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations."}]}],"pos":[3061,3856],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].","nodes":[{"pos":[0,186],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> class by referencing the connection used by the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]."}],"pos":[5335,5522],"yaml":true},{"content":"A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string. In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>. If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it. Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this. In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.","nodes":[{"pos":[0,606],"content":"A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string. In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>. If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it. Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this. In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> opens and closes a database connection as needed if you provide a closed connection or a connection string.","pos":[0,145],"source":"A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string."},{"content":"In general, you should never have to call <ph id=\"ph1\">`Dispose`</ph> on a <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","pos":[146,239],"source":" In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>."},{"content":"If you provide an open connection, the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> will not close it.","pos":[240,333],"source":" If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it."},{"content":"Therefore, do not instantiate a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> with an open connection unless you have a good reason to do this.","pos":[334,467],"source":" Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this."},{"content":"In a <ph id=\"ph1\">&lt;xref:System.Transactions&gt;</ph> transaction, a <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> will not open or close a connection to avoid promotion.","pos":[468,606],"source":" In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion."}]}],"pos":[5533,6140],"yaml":true,"extradata":"MT"},{"content":"The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].","nodes":[{"pos":[0,81],"content":"The connection used by the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.","source":"The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]."}],"pos":[6316,6398],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a file source.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> class by referencing a file source.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a file source."}],"pos":[7457,7577],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a connection and a mapping source.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> class by referencing a connection and a mapping source.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a connection and a mapping source."}],"pos":[9023,9163],"yaml":true},{"content":"The connection used by the .NET Framework.","nodes":[{"pos":[0,42],"content":"The connection used by the .NET Framework.","nodes":[{"content":"The connection used by the .NET Framework.","pos":[0,42]}]}],"pos":[9387,9430],"yaml":true},{"content":"A source for mapping.","nodes":[{"pos":[0,21],"content":"A source for mapping.","nodes":[{"content":"A source for mapping.","pos":[0,21]}]}],"pos":[9518,9540],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a file source and a mapping source.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> class by referencing a file source and a mapping source.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a file source and a mapping source."}],"pos":[10761,10902],"yaml":true},{"content":"This argument can be any one of the following:  \n  \n The name of a file where a SQL Server Express database resides.  \n  \n The name of a server where a database is present. In this case the provider uses the default database for a user.  \n  \n A complete connection string. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] just passes the string to the provider without modification.","nodes":[{"pos":[0,46],"content":"This argument can be any one of the following:","nodes":[{"content":"This argument can be any one of the following:","pos":[0,46]}]},{"pos":[53,116],"content":"The name of a file where a SQL Server Express database resides.","nodes":[{"content":"The name of a file where a SQL Server Express database resides.","pos":[0,63]}]},{"pos":[123,236],"content":"The name of a server where a database is present. In this case the provider uses the default database for a user.","nodes":[{"content":"The name of a server where a database is present. In this case the provider uses the default database for a user.","pos":[0,113],"nodes":[{"content":"The name of a server where a database is present.","pos":[0,49]},{"content":"In this case the provider uses the default database for a user.","pos":[50,113]}]}]},{"pos":[243,385],"content":"A complete connection string. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] just passes the string to the provider without modification.","nodes":[{"content":"A complete connection string.","pos":[0,29]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> just passes the string to the provider without modification.","pos":[30,142],"source":"[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] just passes the string to the provider without modification."}]}],"pos":[11123,11517],"yaml":true},{"content":"A source for mapping.","nodes":[{"pos":[0,21],"content":"A source for mapping.","nodes":[{"content":"A source for mapping.","pos":[0,21]}]}],"pos":[11605,11627],"yaml":true},{"content":"Gets a collection of objects that caused concurrency conflicts when <xref href=\"System.Data.Linq.DataContext.SubmitChanges\"></xref> was called.","nodes":[{"pos":[0,143],"content":"Gets a collection of objects that caused concurrency conflicts when <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext.SubmitChanges\"&gt;&lt;/xref&gt;</ph> was called.","source":"Gets a collection of objects that caused concurrency conflicts when <xref href=\"System.Data.Linq.DataContext.SubmitChanges\"></xref> was called."}],"pos":[12654,12798],"yaml":true},{"content":"The following example shows how the collection can be iterated over to retrieve conflict information.","nodes":[{"pos":[0,101],"content":"The following example shows how the collection can be iterated over to retrieve conflict information.","nodes":[{"content":"The following example shows how the collection can be iterated over to retrieve conflict information.","pos":[0,101]}]}],"pos":[12809,12911],"yaml":true,"extradata":"MT"},{"content":"A collection of objects that caused concurrency conflicts.","nodes":[{"pos":[0,58],"content":"A collection of objects that caused concurrency conflicts.","nodes":[{"content":"A collection of objects that caused concurrency conflicts.","pos":[0,58]}]}],"pos":[13429,13488],"yaml":true},{"content":"Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.","nodes":[{"pos":[0,133],"content":"Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.","nodes":[{"content":"Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.","pos":[0,133]}]}],"pos":[14519,14653],"yaml":true},{"content":"This property gets or sets the command time-out used to execute generated commands (`IDbCommands`). For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.  \n  \n When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution. This default value is set by the storage provider. Note that some providers may throw exceptions if this value is set to a non-zero value.","nodes":[{"pos":[0,174],"content":"This property gets or sets the command time-out used to execute generated commands (`IDbCommands`). For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.","nodes":[{"content":"This property gets or sets the command time-out used to execute generated commands (<ph id=\"ph1\">`IDbCommands`</ph>).","pos":[0,99],"source":"This property gets or sets the command time-out used to execute generated commands (`IDbCommands`)."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>.","pos":[100,174],"source":" For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>."}]},{"pos":[181,456],"content":"When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution. This default value is set by the storage provider. Note that some providers may throw exceptions if this value is set to a non-zero value.","nodes":[{"content":"When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution. This default value is set by the storage provider. Note that some providers may throw exceptions if this value is set to a non-zero value.","pos":[0,275],"nodes":[{"content":"When this property is not set, the default value of <ph id=\"ph1\">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph> is used for query command execution.","pos":[0,136],"source":"When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution."},{"content":"This default value is set by the storage provider.","pos":[137,187]},{"content":"Note that some providers may throw exceptions if this value is set to a non-zero value.","pos":[188,275]}]}]}],"pos":[14664,15125],"yaml":true,"extradata":"MT"},{"content":"An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.","nodes":[{"pos":[0,129],"content":"An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.","nodes":[{"content":"An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.","pos":[0,129]}]}],"pos":[15244,15374],"yaml":true},{"content":"Gets the connection used by the framework.","nodes":[{"pos":[0,42],"content":"Gets the connection used by the framework.","nodes":[{"content":"Gets the connection used by the framework.","pos":[0,42]}]}],"pos":[16380,16423],"yaml":true},{"content":"You can use this property to interoperate with relational ADO.NET code.  \n  \n The returned connection will be closed unless it has been explicitly opened by the user.","nodes":[{"pos":[0,71],"content":"You can use this property to interoperate with relational ADO.NET code.","nodes":[{"content":"You can use this property to interoperate with relational ADO.NET code.","pos":[0,71]}]},{"pos":[78,166],"content":"The returned connection will be closed unless it has been explicitly opened by the user.","nodes":[{"content":"The returned connection will be closed unless it has been explicitly opened by the user.","pos":[0,88]}]}],"pos":[16434,16605],"yaml":true,"extradata":"MT"},{"content":"The connection used by the framework.","nodes":[{"pos":[0,37],"content":"The connection used by the framework.","nodes":[{"content":"The connection used by the framework.","pos":[0,37]}]}],"pos":[16762,16800],"yaml":true},{"content":"Creates a database on the server.","nodes":[{"pos":[0,33],"content":"Creates a database on the server.","nodes":[{"content":"Creates a database on the server.","pos":[0,33]}]}],"pos":[17830,17864],"yaml":true},{"content":"The name of the database is derived by using the following algorithm:  \n  \n-   If a database is identified in the connection string, its name is used.  \n  \n-   If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.  \n  \n-   If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is checked.  \n  \n-   If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.  \n  \n-   If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.","nodes":[{"pos":[0,69],"content":"The name of the database is derived by using the following algorithm:","nodes":[{"content":"The name of the database is derived by using the following algorithm:","pos":[0,69]}]},{"pos":[79,150],"content":"If a database is identified in the connection string, its name is used.","nodes":[{"content":"If a database is identified in the connection string, its name is used.","pos":[0,71]}]},{"pos":[160,344],"content":"If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;</ph> attribute is present, its <ph id=\"ph2\">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;</ph> property is used as the name of the database.","pos":[0,184],"source":"If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database."}]},{"pos":[354,578],"content":"If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is checked.","nodes":[{"content":"If there is no database tag in the connection string and a strongly typed <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used, a database that has the same name as the <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> inheriting class is checked.","pos":[0,224],"source":"If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is checked."}]},{"pos":[588,674],"content":"If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.","nodes":[{"content":"If a weakly typed <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used, an exception is thrown.","pos":[0,86],"source":"If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown."}]},{"pos":[684,822],"content":"If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has been created by using a file name, the database corresponding to that file name is created.","pos":[0,138],"source":"If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created."}]}],"pos":[17875,18710],"yaml":true,"extradata":"MT"},{"content":"Executes the table-valued database function associated with the specified CLR method.","nodes":[{"pos":[0,85],"content":"Executes the table-valued database function associated with the specified CLR method.","nodes":[{"content":"Executes the table-valued database function associated with the specified CLR method.","pos":[0,85]}]}],"pos":[20551,20637],"yaml":true},{"content":"The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.","nodes":[{"pos":[0,154],"content":"The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A&gt;</ph> method is used in automatically generated code and acts as a proxy to database functions.","pos":[0,154],"source":"The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions."}]}],"pos":[20648,20803],"yaml":true,"extradata":"MT"},{"content":"The instance of the method invocation (the current object).","nodes":[{"pos":[0,59],"content":"The instance of the method invocation (the current object).","nodes":[{"content":"The instance of the method invocation (the current object).","pos":[0,59]}]}],"pos":[21060,21120],"yaml":true},{"content":"The <xref href=\"System.Reflection.MethodInfo\"></xref> that identifies the CLR method that corresponds to a database method.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> that identifies the CLR method that corresponds to a database method.","source":"The <xref href=\"System.Reflection.MethodInfo\"></xref> that identifies the CLR method that corresponds to a database method."}],"pos":[21201,21325],"yaml":true},{"content":"The array of parameters to be passed to the command.","nodes":[{"pos":[0,52],"content":"The array of parameters to be passed to the command.","nodes":[{"content":"The array of parameters to be passed to the command.","pos":[0,52]}]}],"pos":[21393,21446],"yaml":true},{"content":"The type of the elements in the returned collection.","nodes":[{"pos":[0,52],"content":"The type of the elements in the returned collection.","nodes":[{"content":"The type of the elements in the returned collection.","pos":[0,52]}]}],"pos":[21503,21556],"yaml":true},{"content":"A collection of resultant values returned by the database query.","nodes":[{"pos":[0,64],"content":"A collection of resultant values returned by the database query.","nodes":[{"content":"A collection of resultant values returned by the database query.","pos":[0,64]}]}],"pos":[21631,21696],"yaml":true},{"content":"Determines whether the associated database can be opened.","nodes":[{"pos":[0,57],"content":"Determines whether the associated database can be opened.","nodes":[{"content":"Determines whether the associated database can be opened.","pos":[0,57]}]}],"pos":[22740,22798],"yaml":true},{"content":"This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.","nodes":[{"pos":[0,141],"content":"This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.","nodes":[{"content":"This method uses the connection in the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph> property to attempt to open the associated database.","pos":[0,141],"source":"This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database."}]}],"pos":[22809,22951],"yaml":true,"extradata":"MT"},{"content":"`true` if the specified database can be opened; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the specified database can be opened; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified database can be opened; otherwise, `false`."}],"pos":[23481,23551],"yaml":true},{"content":"Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.","nodes":[{"pos":[0,98],"content":"Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.","nodes":[{"content":"Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.","pos":[0,98]}]}],"pos":[24629,24728],"yaml":true},{"content":"When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many. The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.  \n  \n The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).  \n  \n> [!NOTE]\n>  If this property is set to `false` after a query has been executed, an exception is thrown. See the **Valid Modes** section below for more information.  \n  \n## Valid modes  \n Deferred loading requires object tracking. Only the following three modes are valid:  \n  \n-   <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`. <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`. This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.  \n  \n-   <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`. <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`. This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.  \n  \n-   Both are set to `true`. This is the default.  \n  \n The flags may not be changed after a query has been executed. Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.","nodes":[{"pos":[0,274],"content":"When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many. The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.","nodes":[{"content":"When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many. The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.","pos":[0,274],"nodes":[{"content":"When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.","pos":[0,160]},{"content":"The relationships can still be filled by setting the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;</ph> property.","pos":[161,274],"source":" The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property."}]}]},{"pos":[281,421],"content":"The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).","nodes":[{"content":"The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).","pos":[0,140]}]},{"pos":[429,591],"content":"[!NOTE]\n If this property is set to `false` after a query has been executed, an exception is thrown. See the **Valid Modes** section below for more information.","leadings":["","> "],"nodes":[{"content":" If this property is set to `false` after a query has been executed, an exception is thrown. See the **Valid Modes** section below for more information.","pos":[8,160],"nodes":[{"content":"If this property is set to <ph id=\"ph1\">`false`</ph> after a query has been executed, an exception is thrown.","pos":[1,92],"source":" If this property is set to `false` after a query has been executed, an exception is thrown."},{"content":"See the <bpt id=\"p1\">**</bpt>Valid Modes<ept id=\"p1\">**</ept> section below for more information.","pos":[93,152],"source":" See the **Valid Modes** section below for more information."}]}]},{"pos":[600,611],"content":"Valid modes","linkify":"Valid modes","nodes":[{"content":"Valid modes","pos":[0,11]}]},{"pos":[615,699],"content":"Deferred loading requires object tracking. Only the following three modes are valid:","nodes":[{"content":"Deferred loading requires object tracking. Only the following three modes are valid:","pos":[0,84],"nodes":[{"content":"Deferred loading requires object tracking.","pos":[0,42]},{"content":"Only the following three modes are valid:","pos":[43,84]}]}]},{"pos":[709,959],"content":"<xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`. <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`. This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id=\"ph2\"> = </ph><ph id=\"ph3\">`false`</ph>.","pos":[0,71],"source":"<xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is ignored and inferred to be <ph id=\"ph2\">`false`</ph>.","pos":[72,172],"source":" <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`."},{"content":"This behavior corresponds to a read-only <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","pos":[173,250],"source":" This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>."}]},{"pos":[969,1336],"content":"<xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`. <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`. This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id=\"ph2\"> = </ph><ph id=\"ph3\">`true`</ph>.","pos":[0,70],"source":"<xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph><ph id=\"ph2\"> = </ph><ph id=\"ph3\">`false`</ph>.","pos":[71,143],"source":" <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`."},{"content":"This situation corresponds to a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> that allows users to load an object graph by using <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> directives, but it does not enable deferred loading.","pos":[144,367],"source":" This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading."}]},{"pos":[1346,1390],"content":"Both are set to `true`. This is the default.","nodes":[{"content":"Both are set to <ph id=\"ph1\">`true`</ph>.","pos":[0,23],"source":"Both are set to `true`."},{"content":"This is the default.","pos":[24,44]}]},{"pos":[1397,1580],"content":"The flags may not be changed after a query has been executed. Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.","nodes":[{"content":"The flags may not be changed after a query has been executed. Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.","pos":[0,183],"nodes":[{"content":"The flags may not be changed after a query has been executed.","pos":[0,61]},{"content":"Any change after the execution of the first query that uses that <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> throws an exception.","pos":[62,183],"source":" Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception."}]}]}],"pos":[24739,26338],"yaml":true,"extradata":"MT"},{"content":"`true` if deferred loading is enabled; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if deferred loading is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if deferred loading is enabled; otherwise, `false`."}],"pos":[26468,26529],"yaml":true},{"content":"Deletes the associated database.","nodes":[{"pos":[0,32],"content":"Deletes the associated database.","nodes":[{"content":"Deletes the associated database.","pos":[0,32]}]}],"pos":[27571,27604],"yaml":true},{"content":"This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.","nodes":[{"pos":[0,137],"content":"This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.","nodes":[{"content":"This method uses the connection in the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph> property to identify the database to be deleted.","pos":[0,137],"source":"This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted."}]}],"pos":[27615,27753],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class.","nodes":[{"pos":[0,115],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class."}],"pos":[29218,29334],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Data.Linq.DataContext\"></xref> class and optionally releases the managed resource.","nodes":[{"pos":[0,146],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> class and optionally releases the managed resource.","source":"Releases the unmanaged resources used by the <xref href=\"System.Data.Linq.DataContext\"></xref> class and optionally releases the managed resource."}],"pos":[30454,30601],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[30755,30858],"yaml":true},{"content":"Executes SQL commands directly on the database.","nodes":[{"pos":[0,47],"content":"Executes SQL commands directly on the database.","nodes":[{"content":"Executes SQL commands directly on the database.","pos":[0,47]}]}],"pos":[32026,32074],"yaml":true},{"content":"This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.  \n  \n The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`. The only difference is in how the parameters are specified. Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0. The parameter is associated with the equally numbered object in the parameters array.  \n  \n `ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution. For example, you can specify the parameters when invoking ExecuteQuery\\<TResult>:  \n  \n```  \ndb.ExecuteQuery<Customer>(\"select * from dbo.Customers where City = {0}\", \"London\");  \n```  \n  \n And, another example:  \n  \n```  \ndb.ExecuteCommand(\"UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}\", \"24 boxes\", 5);  \n```  \n  \n The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.","nodes":[{"pos":[0,162],"content":"This method is a pass-through mechanism for cases where <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not adequately provide for a particular scenario.","source":"This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario."},{"pos":[169,522],"content":"The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`. The only difference is in how the parameters are specified. Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0. The parameter is associated with the equally numbered object in the parameters array.","nodes":[{"content":"The syntax for the command is almost the same as the syntax used to create an ADO.NET <ph id=\"ph1\">`DataCommand`</ph>.","pos":[0,100],"source":"The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`."},{"content":"The only difference is in how the parameters are specified.","pos":[101,160]},{"content":"Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.","pos":[161,267]},{"content":"The parameter is associated with the equally numbered object in the parameters array.","pos":[268,353]}]},{"pos":[529,726],"content":"`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution. For example, you can specify the parameters when invoking ExecuteQuery\\<TResult>:","nodes":[{"content":"<ph id=\"ph1\">`ExecuteQuery`</ph> and <ph id=\"ph2\">`ExecuteCommand`</ph> allow you to specify a variable number of arguments for parameter substitution.","pos":[0,115],"source":"`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution."},{"content":"For example, you can specify the parameters when invoking ExecuteQuery<ph id=\"ph1\">\\&lt;</ph>TResult&gt;:","pos":[116,197],"source":" For example, you can specify the parameters when invoking ExecuteQuery\\<TResult>:"}]},{"pos":[835,856],"content":"And, another example:","nodes":[{"content":"And, another example:","pos":[0,21]}]},{"pos":[981,1074],"content":"The following example opens a connection and passes a SQL <ph id=\"ph1\">`UPDATE`</ph> command to the SQL engine.","source":"The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine."}],"pos":[32085,33187],"yaml":true,"extradata":"MT"},{"content":"The SQL command to be executed.","nodes":[{"pos":[0,31],"content":"The SQL command to be executed.","nodes":[{"content":"The SQL command to be executed.","pos":[0,31]}]}],"pos":[33662,33694],"yaml":true},{"content":"The array of parameters to be passed to the command. Note the following behavior:  \n  \n If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  \n  \n If the array contains objects that are not referenced in the command string, no exception is thrown.  \n  \n If any one of the parameters is null, it is converted to `DBNull.Value`.","nodes":[{"pos":[0,81],"content":"The array of parameters to be passed to the command. Note the following behavior:","nodes":[{"content":"The array of parameters to be passed to the command. Note the following behavior:","pos":[0,81],"nodes":[{"content":"The array of parameters to be passed to the command.","pos":[0,52]},{"content":"Note the following behavior:","pos":[53,81]}]}]},{"pos":[88,215],"content":"If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.","nodes":[{"content":"If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.","pos":[0,127]}]},{"pos":[222,322],"content":"If the array contains objects that are not referenced in the command string, no exception is thrown.","nodes":[{"content":"If the array contains objects that are not referenced in the command string, no exception is thrown.","pos":[0,100]}]},{"pos":[329,401],"content":"If any one of the parameters is null, it is converted to <ph id=\"ph1\">`DBNull.Value`</ph>.","source":"If any one of the parameters is null, it is converted to `DBNull.Value`."}],"pos":[33762,34172],"yaml":true},{"content":"The number of rows modified by the executed command.","nodes":[{"pos":[0,52],"content":"The number of rows modified by the executed command.","nodes":[{"content":"The number of rows modified by the executed command.","pos":[0,52]}]}],"pos":[34228,34281],"yaml":true},{"content":"Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.","nodes":[{"pos":[0,182],"content":"Executes, inside delete override methods, to redelegate to <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for delete operations.","source":"Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations."}],"pos":[35414,35597],"yaml":true},{"content":"See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.","nodes":[{"pos":[0,64],"content":"See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>.","pos":[0,64],"source":"See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>."}]}],"pos":[35608,35673],"yaml":true,"extradata":"MT"},{"content":"The entity to be deleted.","nodes":[{"pos":[0,25],"content":"The entity to be deleted.","nodes":[{"content":"The entity to be deleted.","pos":[0,25]}]}],"pos":[35827,35853],"yaml":true},{"content":"Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.","nodes":[{"pos":[0,182],"content":"Executes, inside insert override methods, to redelegate to <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for insert operations.","source":"Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations."}],"pos":[36992,37175],"yaml":true},{"content":"Note the following considerations:  \n  \n-   Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.  \n  \n-   An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. <xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.  \n  \n-   It is the responsibility of the developer to pass in the correct entity. The implementation verifies that the passed-in entity is tracked. However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.  \n  \n-   It is the responsibility of the developer to invoke the correct dynamic API. For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not detect or verify whether the invoked dynamic method matches the applicable operation. The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).","nodes":[{"pos":[0,34],"content":"Note the following considerations:","nodes":[{"content":"Note the following considerations:","pos":[0,34]}]},{"pos":[44,154],"content":"Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.","nodes":[{"content":"Because the method has a protected modifier, its use requires subclassing <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","pos":[0,110],"source":"Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>."}]},{"pos":[164,624],"content":"An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. <xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.","nodes":[{"content":"An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. <xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.","pos":[0,460],"nodes":[{"content":"An exception is thrown if this operation is not called inside a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> operation.","pos":[0,127],"source":"An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation."},{"content":"It is not intended to be called as a stand-alone operation outside the scope of a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> operation.","pos":[128,273],"source":" It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.","pos":[274,460],"source":" <xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods."}]}]},{"pos":[634,883],"content":"It is the responsibility of the developer to pass in the correct entity. The implementation verifies that the passed-in entity is tracked. However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.","nodes":[{"content":"It is the responsibility of the developer to pass in the correct entity. The implementation verifies that the passed-in entity is tracked. However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.","pos":[0,249],"nodes":[{"content":"It is the responsibility of the developer to pass in the correct entity.","pos":[0,72]},{"content":"The implementation verifies that the passed-in entity is tracked.","pos":[73,138]},{"content":"However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.","pos":[139,249]}]}]},{"pos":[893,1427],"content":"It is the responsibility of the developer to invoke the correct dynamic API. For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not detect or verify whether the invoked dynamic method matches the applicable operation. The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).","nodes":[{"content":"It is the responsibility of the developer to invoke the correct dynamic API.","pos":[0,76]},{"content":"For example, in the <ph id=\"ph1\">`Update`</ph> override method, only the <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;</ph> method can be called.","pos":[77,213],"source":" For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called."},{"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not detect or verify whether the invoked dynamic method matches the applicable operation.","pos":[214,360],"source":"[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not detect or verify whether the invoked dynamic method matches the applicable operation."},{"content":"The results are undefined if an inapplicable method is called (for example, calling <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;</ph> for an object to be updated).","pos":[361,534],"source":" The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated)."}]}],"pos":[37186,38624],"yaml":true,"extradata":"MT"},{"content":"The entity to be inserted.","nodes":[{"pos":[0,26],"content":"The entity to be inserted.","nodes":[{"content":"The entity to be inserted.","pos":[0,26]}]}],"pos":[38778,38805],"yaml":true},{"content":"Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.","nodes":[{"pos":[0,182],"content":"Executes, inside update override methods, to redelegate to <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for update operations.","source":"Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations."}],"pos":[39944,40127],"yaml":true},{"content":"See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.","nodes":[{"pos":[0,64],"content":"See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>.","pos":[0,64],"source":"See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>."}]}],"pos":[40138,40203],"yaml":true,"extradata":"MT"},{"content":"The entity to be updated.","nodes":[{"pos":[0,25],"content":"The entity to be updated.","nodes":[{"content":"The entity to be updated.","pos":[0,25]}]}],"pos":[40357,40383],"yaml":true},{"content":"Executes the stored database procedure or scalar function associated with the specified CLR method.","nodes":[{"pos":[0,99],"content":"Executes the stored database procedure or scalar function associated with the specified CLR method.","nodes":[{"content":"Executes the stored database procedure or scalar function associated with the specified CLR method.","pos":[0,99]}]}],"pos":[41705,41805],"yaml":true},{"content":"The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.","nodes":[{"pos":[0,150],"content":"The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A&gt;</ph> method is used in automatically generated code and acts as a proxy to database functions.","pos":[0,150],"source":"The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions."}]}],"pos":[41816,41967],"yaml":true,"extradata":"MT"},{"content":"The instance of the method invocation (the current object).","nodes":[{"pos":[0,59],"content":"The instance of the method invocation (the current object).","nodes":[{"content":"The instance of the method invocation (the current object).","pos":[0,59]}]}],"pos":[42211,42271],"yaml":true},{"content":"Identifies the CLR method that corresponds to a database method.","nodes":[{"pos":[0,64],"content":"Identifies the CLR method that corresponds to a database method.","nodes":[{"content":"Identifies the CLR method that corresponds to a database method.","pos":[0,64]}]}],"pos":[42352,42417],"yaml":true},{"content":"The array of parameters to be passed to the command.","nodes":[{"pos":[0,52],"content":"The array of parameters to be passed to the command.","nodes":[{"content":"The array of parameters to be passed to the command.","pos":[0,52]}]}],"pos":[42485,42538],"yaml":true},{"content":"The result (the return value and output parameters) of executing the specified method.","nodes":[{"pos":[0,86],"content":"The result (the return value and output parameters) of executing the specified method.","nodes":[{"content":"The result (the return value and output parameters) of executing the specified method.","pos":[0,86]}]}],"pos":[42613,42700],"yaml":true},{"content":"Executes SQL queries directly on the database.","nodes":[{"pos":[0,46],"content":"Executes SQL queries directly on the database.","nodes":[{"content":"Executes SQL queries directly on the database.","pos":[0,46]}]}],"pos":[43920,43967],"yaml":true},{"content":"The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned.  \n  \n The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:  \n  \n If a field or property is mapped to a particular column name, that column name is expected in the resultset.  \n  \n If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  \n  \n The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search occurs for a case-insensitive match.  \n  \n The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  \n  \n <code>T</code> is an entity explicitly tracked by the <xref href=\"System.Data.Linq.DataContext\"></xref>.  \n  \n <xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"></xref> is `true`.  \n  \n The entity has a primary key.  \n  \n Otherwise an exception is thrown.","nodes":[{"pos":[0,93],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> to be returned.","source":"The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned."},{"pos":[100,217],"content":"The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:","nodes":[{"content":"The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:","pos":[0,117]}]},{"pos":[224,332],"content":"If a field or property is mapped to a particular column name, that column name is expected in the resultset.","nodes":[{"content":"If a field or property is mapped to a particular column name, that column name is expected in the resultset.","pos":[0,108]}]},{"pos":[339,459],"content":"If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.","nodes":[{"content":"If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.","pos":[0,120]}]},{"pos":[466,623],"content":"The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search occurs for a case-insensitive match.","nodes":[{"content":"The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search occurs for a case-insensitive match.","pos":[0,157],"nodes":[{"content":"The comparison is performed by looking for a case-sensitive match first.","pos":[0,72]},{"content":"If this match is not found, a subsequent search occurs for a case-insensitive match.","pos":[73,157]}]}]},{"pos":[630,798],"content":"The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:","nodes":[{"content":"The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:","pos":[0,168]}]},{"pos":[805,998],"content":"<code>T</code> is an entity explicitly tracked by the <xref href=\"System.Data.Linq.DataContext\"></xref>.  \n  \n <xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"></xref> is `true`.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> is an entity explicitly tracked by the <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph>.","pos":[0,104],"source":"<code>T</code> is an entity explicitly tracked by the <xref href=\"System.Data.Linq.DataContext\"></xref>."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[111,193],"source":"<xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"></xref> is `true`."}]},{"pos":[1005,1034],"content":"The entity has a primary key.","nodes":[{"content":"The entity has a primary key.","pos":[0,29]}]},{"pos":[1041,1074],"content":"Otherwise an exception is thrown.","nodes":[{"content":"Otherwise an exception is thrown.","pos":[0,33]}]}],"pos":[44177,45278],"yaml":true},{"content":"The SQL query to be executed.","nodes":[{"pos":[0,29],"content":"The SQL query to be executed.","nodes":[{"content":"The SQL query to be executed.","pos":[0,29]}]}],"pos":[45339,45369],"yaml":true},{"content":"The array of parameters to be passed to the command. Note the following behavior:  \n  \n If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  \n  \n If the array contains objects that are not referenced in the command string, no exception is thrown.  \n  \n If a parameter is `null`, it is converted to `DBNull.Value`.","nodes":[{"pos":[0,81],"content":"The array of parameters to be passed to the command. Note the following behavior:","nodes":[{"content":"The array of parameters to be passed to the command. Note the following behavior:","pos":[0,81],"nodes":[{"content":"The array of parameters to be passed to the command.","pos":[0,52]},{"content":"Note the following behavior:","pos":[53,81]}]}]},{"pos":[88,215],"content":"If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.","nodes":[{"content":"If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.","pos":[0,127]}]},{"pos":[222,322],"content":"If the array contains objects that are not referenced in the command string, no exception is thrown.","nodes":[{"content":"If the array contains objects that are not referenced in the command string, no exception is thrown.","pos":[0,100]}]},{"pos":[329,389],"content":"If a parameter is <ph id=\"ph1\">`null`</ph>, it is converted to <ph id=\"ph2\">`DBNull.Value`</ph>.","source":"If a parameter is `null`, it is converted to `DBNull.Value`."}],"pos":[45437,45835],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection of objects returned by the query.","nodes":[{"pos":[0,109],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> collection of objects returned by the query.","source":"An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection of objects returned by the query."}],"pos":[45909,46019],"yaml":true},{"content":"Executes SQL queries directly on the database and returns objects.","nodes":[{"pos":[0,66],"content":"Executes SQL queries directly on the database and returns objects.","nodes":[{"content":"Executes SQL queries directly on the database and returns objects.","pos":[0,66]}]}],"pos":[47216,47283],"yaml":true},{"content":"This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.  \n  \n The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:  \n  \n-   If a field or property is mapped to a particular column name, that column name is expected in the resultset.  \n  \n-   If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  \n  \n-   The comparison is performed by first looking for a case-sensitive match. If such a match is not found, a subsequent search occurs for a case-insensitive match.  \n  \n-   The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:  \n  \n    -   If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.  \n  \n    -   ObjectTrackingEnabled is true.  \n  \n    -   The entity has a primary key.  \n  \n     Otherwise an exception is thrown.  \n  \n-   In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.  \n  \n The following C# snippet shows one use for this method:  \n  \n```  \nvar customers = db.ExecuteQuery<Customer>(@\"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   \n   Address, City, Region, PostalCode, Country, Phone, Fax  \n   FROM   dbo.Customers  \n   WHERE  City = {0}\", \"London\");  \n  \nforeach (Customer c in customers)  \n   Console.WriteLine(c.ContactName);  \n```  \n  \n In Visual Basic  \n  \n```  \nDim customers = db.ExecuteQuery(Of Customer)(\"SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  \n   Address, City, Region, PostalCode, Country, Phone, Fax _  \n   FROM dbo.Customers _  \nWHERE City = {0}\", \"London\")  \n  \nFor Each c As Customer In customers  \n    Console.WriteLine(c.ContactName)  \nNext  \n```","nodes":[{"pos":[0,151],"content":"This method is a pass-through mechanism for cases where <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not provide for a particular scenario.","source":"This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario."},{"pos":[158,276],"content":"The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:","nodes":[{"content":"The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:","pos":[0,118]}]},{"pos":[286,394],"content":"If a field or property is mapped to a particular column name, that column name is expected in the resultset.","nodes":[{"content":"If a field or property is mapped to a particular column name, that column name is expected in the resultset.","pos":[0,108]}]},{"pos":[404,524],"content":"If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.","nodes":[{"content":"If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.","pos":[0,120]}]},{"pos":[534,693],"content":"The comparison is performed by first looking for a case-sensitive match. If such a match is not found, a subsequent search occurs for a case-insensitive match.","nodes":[{"content":"The comparison is performed by first looking for a case-sensitive match. If such a match is not found, a subsequent search occurs for a case-insensitive match.","pos":[0,159],"nodes":[{"content":"The comparison is performed by first looking for a case-sensitive match.","pos":[0,72]},{"content":"If such a match is not found, a subsequent search occurs for a case-insensitive match.","pos":[73,159]}]}]},{"pos":[703,856],"content":"The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:","nodes":[{"content":"The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:","pos":[0,153]}]},{"pos":[870,954],"content":"If <ph id=\"ph1\">`&lt;T&gt;`</ph> is an entity explicitly tracked by the <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","source":"If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>."},{"pos":[968,998],"content":"ObjectTrackingEnabled is true.","nodes":[{"content":"ObjectTrackingEnabled is true.","pos":[0,30]}]},{"pos":[1012,1041],"content":"The entity has a primary key.","nodes":[{"content":"The entity has a primary key.","pos":[0,29]}]},{"pos":[1052,1085],"content":"Otherwise an exception is thrown.","nodes":[{"content":"Otherwise an exception is thrown.","pos":[0,33]}]},{"pos":[1095,1204],"content":"In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.","nodes":[{"content":"In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.","pos":[0,109]}]},{"pos":[1211,1266],"content":"The following C# snippet shows one use for this method:","nodes":[{"content":"The following C# snippet shows one use for this method:","pos":[0,55]}]},{"pos":[1594,1609],"content":"In Visual Basic","nodes":[{"content":"In Visual Basic","pos":[0,15]}]}],"pos":[47294,49294],"yaml":true,"extradata":"MT"},{"content":"The SQL query to be executed.","nodes":[{"pos":[0,29],"content":"The SQL query to be executed.","nodes":[{"content":"The SQL query to be executed.","pos":[0,29]}]}],"pos":[49532,49562],"yaml":true},{"content":"The array of parameters to be passed to the command. Note the following behavior:  \n  \n If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  \n  \n If the array contains objects that are not referenced in the command string, no exception is thrown.  \n  \n If a parameter is null, it is converted to `DBNull.Value`.","nodes":[{"pos":[0,81],"content":"The array of parameters to be passed to the command. Note the following behavior:","nodes":[{"content":"The array of parameters to be passed to the command. Note the following behavior:","pos":[0,81],"nodes":[{"content":"The array of parameters to be passed to the command.","pos":[0,52]},{"content":"Note the following behavior:","pos":[53,81]}]}]},{"pos":[88,215],"content":"If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.","nodes":[{"content":"If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.","pos":[0,127]}]},{"pos":[222,322],"content":"If the array contains objects that are not referenced in the command string, no exception is thrown.","nodes":[{"content":"If the array contains objects that are not referenced in the command string, no exception is thrown.","pos":[0,100]}]},{"pos":[329,387],"content":"If a parameter is null, it is converted to <ph id=\"ph1\">`DBNull.Value`</ph>.","source":"If a parameter is null, it is converted to `DBNull.Value`."}],"pos":[49630,50026],"yaml":true},{"content":"The type of the elements in the returned collection.","nodes":[{"pos":[0,52],"content":"The type of the elements in the returned collection.","nodes":[{"content":"The type of the elements in the returned collection.","pos":[0,52]}]}],"pos":[50083,50136],"yaml":true},{"content":"A collection of objects returned by the query.","nodes":[{"pos":[0,46],"content":"A collection of objects returned by the query.","nodes":[{"content":"A collection of objects returned by the query.","pos":[0,46]}]}],"pos":[50227,50274],"yaml":true},{"content":"Gets the modified objects tracked by <xref href=\"System.Data.Linq.DataContext\"></xref>.","nodes":[{"pos":[0,87],"content":"Gets the modified objects tracked by <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the modified objects tracked by <xref href=\"System.Data.Linq.DataContext\"></xref>."}],"pos":[51297,51385],"yaml":true},{"content":"Note the following considerations:  \n  \n-   <xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>. For example, objects that are used in the following operations can create corresponding inferred operations in the following list:  \n  \n    -   <xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.  \n  \n    -   <xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.  \n  \n-   The set may not be ordered according to foreign key constraints.  \n  \n-   Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available. Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).  \n  \n-   The set of changed objects is computed at the time of the call. Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.  \n  \n Output when no changes have been made appears as follows:  \n  \n `{Added: 0, Removed: 0, Modified: 0}`","nodes":[{"pos":[0,34],"content":"Note the following considerations:","nodes":[{"content":"Note the following considerations:","pos":[0,34]}]},{"pos":[44,397],"content":"<xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>. For example, objects that are used in the following operations can create corresponding inferred operations in the following list:","nodes":[{"content":"<xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>. For example, objects that are used in the following operations can create corresponding inferred operations in the following list:","pos":[0,353],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.GetChangeSet%2A&gt;</ph> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.","pos":[0,222],"source":"<xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>."},{"content":"For example, objects that are used in the following operations can create corresponding inferred operations in the following list:","pos":[223,353]}]}]},{"pos":[411,511],"content":"<xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>.","pos":[0,100],"source":"<xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>."}]},{"pos":[525,706],"content":"<xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph> assignment to null (possibly because of <ph id=\"ph2\">&lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>.","pos":[0,181],"source":"<xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>."}]},{"pos":[716,780],"content":"The set may not be ordered according to foreign key constraints.","nodes":[{"content":"The set may not be ordered according to foreign key constraints.","pos":[0,64]}]},{"pos":[790,1057],"content":"Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available. Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).","nodes":[{"content":"Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available. Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).","pos":[0,267],"nodes":[{"content":"Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.","pos":[0,116]},{"content":"Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).","pos":[117,267]}]}]},{"pos":[1067,1263],"content":"The set of changed objects is computed at the time of the call. Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.","nodes":[{"content":"The set of changed objects is computed at the time of the call. Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.","pos":[0,196],"nodes":[{"content":"The set of changed objects is computed at the time of the call.","pos":[0,63]},{"content":"Subsequent calls to <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> can produce a different set if additional changes are made.","pos":[64,196],"source":" Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made."}]}]},{"pos":[1270,1327],"content":"Output when no changes have been made appears as follows:","nodes":[{"content":"Output when no changes have been made appears as follows:","pos":[0,57]}]}],"pos":[51396,52786],"yaml":true,"extradata":"MT"},{"content":"The set of objects is returned as three read-only collections.","nodes":[{"pos":[0,62],"content":"The set of objects is returned as three read-only collections.","nodes":[{"content":"The set of objects is returned as three read-only collections.","pos":[0,62]}]}],"pos":[53221,53284],"yaml":true},{"content":"Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].","nodes":[{"pos":[0,105],"content":"Gets the information about SQL commands generated by <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>.","source":"Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]."}],"pos":[54394,54500],"yaml":true},{"content":"This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.  \n  \n Note the following considerations:  \n  \n-   The argument must be non-null. Otherwise, a null argument exception is thrown.  \n  \n-   Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.  \n  \n-   Only the first query command is returned. Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.  \n  \n-   <xref:System.Data.Linq.DataContext> does not track what the user does with the command. For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.","nodes":[{"pos":[0,91],"content":"This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.","nodes":[{"content":"This method is only a getter and does not affect <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> state.","pos":[0,91],"source":"This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state."}]},{"pos":[98,132],"content":"Note the following considerations:","nodes":[{"content":"Note the following considerations:","pos":[0,34]}]},{"pos":[142,220],"content":"The argument must be non-null. Otherwise, a null argument exception is thrown.","nodes":[{"content":"The argument must be non-null. Otherwise, a null argument exception is thrown.","pos":[0,78],"nodes":[{"content":"The argument must be non-null.","pos":[0,30]},{"content":"Otherwise, a null argument exception is thrown.","pos":[31,78]}]}]},{"pos":[230,392],"content":"Normal query translation exceptions thrown during <ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> query execution apply for a query that cannot be translated.","source":"Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated."},{"pos":[402,581],"content":"Only the first query command is returned. Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.","nodes":[{"content":"Only the first query command is returned. Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.","pos":[0,179],"nodes":[{"content":"Only the first query command is returned.","pos":[0,41]},{"content":"Specifically, additional commands that are used for eager loading (<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>) are not included.","pos":[42,179],"source":" Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included."}]}]},{"pos":[591,819],"content":"<xref:System.Data.Linq.DataContext> does not track what the user does with the command. For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.","nodes":[{"content":"<xref:System.Data.Linq.DataContext> does not track what the user does with the command. For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.","pos":[0,228],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> does not track what the user does with the command.","pos":[0,87],"source":"<xref:System.Data.Linq.DataContext> does not track what the user does with the command."},{"content":"For example, results from the execution of the returned command are not tracked and do not affect <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> state.","pos":[88,228],"source":" For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state."}]}]}],"pos":[54511,55343],"yaml":true,"extradata":"MT"},{"content":"The query whose SQL command information is to be retrieved.","nodes":[{"pos":[0,59],"content":"The query whose SQL command information is to be retrieved.","nodes":[{"content":"The query whose SQL command information is to be retrieved.","pos":[0,59]}]}],"pos":[55803,55863],"yaml":true},{"content":"The requested command information object.","nodes":[{"pos":[0,41],"content":"The requested command information object.","nodes":[{"content":"The requested command information object.","pos":[0,41]}]}],"pos":[55935,55977],"yaml":true},{"content":"Returns a collection of objects of a particular type, where the type is defined by the <code>type</code> parameter.","nodes":[{"pos":[0,115],"content":"Returns a collection of objects of a particular type, where the type is defined by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"Returns a collection of objects of a particular type, where the type is defined by the <code>type</code> parameter."}],"pos":[57989,58105],"yaml":true},{"content":"This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>. It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically. It would be inconvenient to force the application to use reflection to call the correct generic method.  \n  \n If there is no collection for a particular type, an exception is thrown.","nodes":[{"pos":[0,310],"content":"This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>. It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically. It would be inconvenient to force the application to use reflection to call the correct generic method.","nodes":[{"content":"This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>. It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically. It would be inconvenient to force the application to use reflection to call the correct generic method.","pos":[0,310],"nodes":[{"content":"This is a weakly typed version of <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph>.","pos":[0,82],"source":"This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>."},{"content":"It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.","pos":[83,206]},{"content":"It would be inconvenient to force the application to use reflection to call the correct generic method.","pos":[207,310]}]}]},{"pos":[317,389],"content":"If there is no collection for a particular type, an exception is thrown.","nodes":[{"content":"If there is no collection for a particular type, an exception is thrown.","pos":[0,72]}]}],"pos":[58116,58510],"yaml":true,"extradata":"MT"},{"content":"The type of the objects to be returned.","nodes":[{"pos":[0,39],"content":"The type of the objects to be returned.","nodes":[{"content":"The type of the objects to be returned.","pos":[0,39]}]}],"pos":[58660,58700],"yaml":true},{"content":"A collection of objects defined by the <code>type</code> parameter.","nodes":[{"pos":[0,67],"content":"A collection of objects defined by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A collection of objects defined by the <code>type</code> parameter."}],"pos":[58767,58835],"yaml":true},{"content":"Returns a collection of objects of a particular type, where the type is defined by the <code>TEntity</code> parameter.","nodes":[{"pos":[0,118],"content":"Returns a collection of objects of a particular type, where the type is defined by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TEntity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"Returns a collection of objects of a particular type, where the type is defined by the <code>TEntity</code> parameter."}],"pos":[59863,59982],"yaml":true},{"content":"This method is the main entry point for querying. When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method. For example, a `Customers` property is generated that returns `GetTable<Customer>`.  \n  \n If there is no collection for a particular type, an exception is thrown.","nodes":[{"pos":[0,262],"content":"This method is the main entry point for querying. When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method. For example, a `Customers` property is generated that returns `GetTable<Customer>`.","nodes":[{"content":"This method is the main entry point for querying.","pos":[0,49]},{"content":"When a strongly typed <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is created, new generated properties encapsulate calls to this method.","pos":[50,178],"source":" When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method."},{"content":"For example, a <ph id=\"ph1\">`Customers`</ph> property is generated that returns <ph id=\"ph2\">`GetTable&lt;Customer&gt;`</ph>.","pos":[179,262],"source":" For example, a `Customers` property is generated that returns `GetTable<Customer>`."}]},{"pos":[269,341],"content":"If there is no collection for a particular type, an exception is thrown.","nodes":[{"content":"If there is no collection for a particular type, an exception is thrown.","pos":[0,72]}]}],"pos":[59993,60339],"yaml":true,"extradata":"MT"},{"content":"The type of the objects to be returned.","nodes":[{"pos":[0,39],"content":"The type of the objects to be returned.","nodes":[{"content":"The type of the objects to be returned.","pos":[0,39]}]}],"pos":[60523,60563],"yaml":true},{"content":"A collection of objects defined by the <code>TEntity</code> parameter.","nodes":[{"pos":[0,70],"content":"A collection of objects defined by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TEntity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A collection of objects defined by the <code>TEntity</code> parameter."}],"pos":[60631,60702],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Data.Linq.DataLoadOptions\"></xref> associated with this <xref href=\"System.Data.Linq.DataContext\"></xref>.","nodes":[{"pos":[0,142],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataLoadOptions\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.Data.Linq.DataLoadOptions\"></xref> associated with this <xref href=\"System.Data.Linq.DataContext\"></xref>."}],"pos":[61711,61854],"yaml":true},{"content":"This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.","nodes":[{"pos":[0,147],"content":"This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.","nodes":[{"content":"This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.","pos":[0,147]}]}],"pos":[61865,62013],"yaml":true,"extradata":"MT"},{"content":"The prefetch load options for related data.","nodes":[{"pos":[0,43],"content":"The prefetch load options for related data.","nodes":[{"content":"The prefetch load options for related data.","pos":[0,43]}]}],"pos":[62178,62222],"yaml":true},{"content":"Gets or sets the destination to write the SQL query or command.","nodes":[{"pos":[0,63],"content":"Gets or sets the destination to write the SQL query or command.","nodes":[{"content":"Gets or sets the destination to write the SQL query or command.","pos":[0,63]}]}],"pos":[63183,63247],"yaml":true},{"content":"Set this property to `null` to disable command logging.","nodes":[{"pos":[0,55],"content":"Set this property to <ph id=\"ph1\">`null`</ph> to disable command logging.","source":"Set this property to `null` to disable command logging."}],"pos":[63258,63314],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.TextReader\"></xref> to use for writing the command.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> to use for writing the command.","source":"The <xref href=\"System.IO.TextReader\"></xref> to use for writing the command."}],"pos":[63871,63949],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> on which the mapping is based.","nodes":[{"pos":[0,95],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;&lt;/xref&gt;</ph> on which the mapping is based.","source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> on which the mapping is based."}],"pos":[64926,65022],"yaml":true},{"content":"The mapping between a database and domain objects.","nodes":[{"pos":[0,50],"content":"The mapping between a database and domain objects.","nodes":[{"content":"The mapping between a database and domain objects.","pos":[0,50]}]}],"pos":[65182,65233],"yaml":true},{"content":"Gets or sets a value that indicates whether object tracking is enabled.","nodes":[{"pos":[0,71],"content":"Gets or sets a value that indicates whether object tracking is enabled.","nodes":[{"content":"Gets or sets a value that indicates whether object tracking is enabled.","pos":[0,71]}]}],"pos":[66298,66370],"yaml":true},{"content":"Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.  \n  \n An exception is thrown:  \n  \n-   If the property is set to `false` after a query has been executed.  \n  \n     For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.  \n  \n-   If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.  \n  \n If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`. In this case, the <xref:System.Data.Linq.DataContext> is read-only.  \n  \n If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`. In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.","nodes":[{"pos":[0,112],"content":"Setting this property to <ph id=\"ph1\">`false`</ph> improves performance at retrieval time, because there are fewer items to track.","source":"Setting this property to `false` improves performance at retrieval time, because there are fewer items to track."},{"pos":[119,142],"content":"An exception is thrown:","nodes":[{"content":"An exception is thrown:","pos":[0,23]}]},{"pos":[152,218],"content":"If the property is set to <ph id=\"ph1\">`false`</ph> after a query has been executed.","source":"If the property is set to `false` after a query has been executed."},{"pos":[229,318],"content":"For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.","nodes":[{"content":"For more information, see the Valid Modes section in <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","pos":[0,89],"source":"For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>."}]},{"pos":[328,429],"content":"If the property is set to <ph id=\"ph1\">`false`</ph> and <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.","source":"If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called."},{"pos":[436,676],"content":"If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`. In this case, the <xref:System.Data.Linq.DataContext> is read-only.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is ignored and treated as <ph id=\"ph4\">`false`</ph>.","pos":[0,172],"source":"If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`."},{"content":"In this case, the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is read-only.","pos":[173,240],"source":" In this case, the <xref:System.Data.Linq.DataContext> is read-only."}]},{"pos":[683,1027],"content":"If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`. In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","pos":[0,148],"source":"If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`."},{"content":"In this case, <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> allows you to load an object graph by using <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> directives, but does not enable deferred loading.","pos":[149,344],"source":" In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading."}]}],"pos":[66381,67423],"yaml":true,"extradata":"MT"},{"content":"`true` if the object tracking is enabled; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,84],"content":"`true` if the object tracking is enabled; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the object tracking is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,61],"source":"`true` if the object tracking is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[62,84],"source":" The default is `true`."}]}],"pos":[67552,67639],"yaml":true},{"content":"Refreshes a collection of entity objects according to the specified mode.","nodes":[{"pos":[0,73],"content":"Refreshes a collection of entity objects according to the specified mode.","nodes":[{"content":"Refreshes a collection of entity objects according to the specified mode.","pos":[0,73]}]}],"pos":[69653,69727],"yaml":true},{"content":"A value that specifies how optimistic concurrency conflicts are handled.","nodes":[{"pos":[0,72],"content":"A value that specifies how optimistic concurrency conflicts are handled.","nodes":[{"content":"A value that specifies how optimistic concurrency conflicts are handled.","pos":[0,72]}]}],"pos":[69939,70012],"yaml":true},{"content":"The collection of entities to be refreshed.","nodes":[{"pos":[0,43],"content":"The collection of entities to be refreshed.","nodes":[{"content":"The collection of entities to be refreshed.","pos":[0,43]}]}],"pos":[70093,70137],"yaml":true},{"content":"Refreshes an entity object according to the specified mode.","nodes":[{"pos":[0,59],"content":"Refreshes an entity object according to the specified mode.","nodes":[{"content":"Refreshes an entity object according to the specified mode.","pos":[0,59]}]}],"pos":[71311,71371],"yaml":true},{"content":"A value that specifies how optimistic concurrency conflicts are handled.","nodes":[{"pos":[0,72],"content":"A value that specifies how optimistic concurrency conflicts are handled.","nodes":[{"content":"A value that specifies how optimistic concurrency conflicts are handled.","pos":[0,72]}]}],"pos":[71557,71630],"yaml":true},{"content":"The object to be refreshed.","nodes":[{"pos":[0,27],"content":"The object to be refreshed.","nodes":[{"content":"The object to be refreshed.","pos":[0,27]}]}],"pos":[71692,71720],"yaml":true},{"content":"Refreshes an array of entity objects according to the specified mode.","nodes":[{"pos":[0,69],"content":"Refreshes an array of entity objects according to the specified mode.","nodes":[{"content":"Refreshes an array of entity objects according to the specified mode.","pos":[0,69]}]}],"pos":[72906,72976],"yaml":true},{"content":"A value that specifies how optimistic concurrency conflicts are handled.","nodes":[{"pos":[0,72],"content":"A value that specifies how optimistic concurrency conflicts are handled.","nodes":[{"content":"A value that specifies how optimistic concurrency conflicts are handled.","pos":[0,72]}]}],"pos":[73166,73239],"yaml":true},{"content":"The array of entity objects to be refreshed.","nodes":[{"pos":[0,44],"content":"The array of entity objects to be refreshed.","nodes":[{"content":"The array of entity objects to be refreshed.","pos":[0,44]}]}],"pos":[73305,73350],"yaml":true},{"content":"Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.","nodes":[{"pos":[0,153],"content":"Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.","nodes":[{"content":"Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.","pos":[0,153]}]}],"pos":[74371,74525],"yaml":true},{"content":"If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.","nodes":[{"pos":[0,223],"content":"If override methods are present for insert, update, or delete, <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> executes these methods instead of the default <ph id=\"ph2\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> commands.","source":"If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands."}],"pos":[74536,74760],"yaml":true,"extradata":"MT"},{"content":"Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.","nodes":[{"pos":[0,139],"content":"Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.","nodes":[{"content":"Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.","pos":[0,139]}]}],"pos":[75988,76128],"yaml":true},{"content":"Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.","nodes":[{"pos":[0,81],"content":"Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.","nodes":[{"content":"Default failure mode is <ph id=\"ph1\">&lt;xref:System.Data.Linq.ConflictMode.FailOnFirstConflict&gt;</ph>.","pos":[0,81],"source":"Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>."}]}],"pos":[76139,76221],"yaml":true,"extradata":"MT"},{"content":"The action to be taken if the submission fails. Valid arguments are as follows:  \n  \n <xref href=\"System.Data.Linq.ConflictMode.FailOnFirstConflict\"></xref><xref href=\"System.Data.Linq.ConflictMode.ContinueOnConflict\"></xref>","nodes":[{"pos":[0,79],"content":"The action to be taken if the submission fails. Valid arguments are as follows:","nodes":[{"content":"The action to be taken if the submission fails. Valid arguments are as follows:","pos":[0,79],"nodes":[{"content":"The action to be taken if the submission fails.","pos":[0,47]},{"content":"Valid arguments are as follows:","pos":[48,79]}]}]}],"pos":[76770,77004],"yaml":true},{"content":"Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.","nodes":[{"pos":[0,125],"content":"Gets or sets a local transaction for the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> to use to access the database.","source":"Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database."}],"pos":[78015,78141],"yaml":true},{"content":"The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code. For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.  \n  \n Note the following:  \n  \n-   If this property has not been explicitly set, the getter returns null.  \n  \n-   If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.  \n  \n-   If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.","nodes":[{"pos":[0,281],"content":"The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code. For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.","nodes":[{"content":"The primary scenario for this property is interoperability with relational <ph id=\"ph1\">[!INCLUDE[vstecado](~/includes/vstecado-md.md)]</ph> code.","pos":[0,128],"source":"The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code."},{"content":"For example, use this property when you write your own <ph id=\"ph1\">`Create`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`Update`</ph><ph id=\"ph4\">/</ph><ph id=\"ph5\">`Delete`</ph> methods to set the <ph id=\"ph6\">`Transaction`</ph> property on the ADO <ph id=\"ph7\">`Command`</ph> object.","pos":[129,281],"source":" For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object."}]},{"pos":[288,307],"content":"Note the following:","nodes":[{"content":"Note the following:","pos":[0,19]}]},{"pos":[317,387],"content":"If this property has not been explicitly set, the getter returns null.","nodes":[{"content":"If this property has not been explicitly set, the getter returns null.","pos":[0,70]}]},{"pos":[397,517],"content":"If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.","nodes":[{"content":"If the code is executing in a <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> context, setting this property throws an exception.","pos":[0,120],"source":"If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception."}]},{"pos":[527,669],"content":"If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.","nodes":[{"content":"If this property is set and a new <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> is opened, an exception is thrown when a query or update is executed.","pos":[0,142],"source":"If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed."}]}],"pos":[78152,78832],"yaml":true,"extradata":"MT"},{"content":"The transaction object used by the <xref href=\"System.Data.Linq.DataContext\"></xref> when executing queries and commands.","nodes":[{"pos":[0,121],"content":"The transaction object used by the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> when executing queries and commands.","source":"The transaction object used by the <xref href=\"System.Data.Linq.DataContext\"></xref> when executing queries and commands."}],"pos":[78997,79119],"yaml":true},{"content":"Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects.","nodes":[{"pos":[0,85],"content":"Converts an existing <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> to objects.","source":"Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects."}],"pos":[80255,80341],"yaml":true},{"content":"The <xref href=\"System.Data.IDataReader\"></xref> to be converted.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> to be converted.","source":"The <xref href=\"System.Data.IDataReader\"></xref> to be converted."}],"pos":[80553,80619],"yaml":true},{"content":"A list of objects returned by the conversion.","nodes":[{"pos":[0,45],"content":"A list of objects returned by the conversion.","nodes":[{"content":"A list of objects returned by the conversion.","pos":[0,45]}]}],"pos":[80696,80742],"yaml":true},{"content":"Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects.","nodes":[{"pos":[0,85],"content":"Converts an existing <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> to objects.","source":"Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects."}],"pos":[81930,82016],"yaml":true},{"content":"The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned.  \n  \n The algorithm for matching columns in the result to fields and properties in the object works as follows:  \n  \n If a field or property is mapped to a particular column name, that column name is expected in the resultset.  \n  \n If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  \n  \n The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search is occurs for a case-insensitive match.  \n  \n The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  \n  \n <code>T</code> is an entity explicitly tracked by the <xref href=\"System.Data.Linq.DataContext\"></xref>.  \n  \n <xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"></xref> is `true`.  \n  \n The entity has a primary key.  \n  \n Otherwise an exception is thrown.","nodes":[{"pos":[0,93],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> to be returned.","source":"The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned."},{"pos":[100,205],"content":"The algorithm for matching columns in the result to fields and properties in the object works as follows:","nodes":[{"content":"The algorithm for matching columns in the result to fields and properties in the object works as follows:","pos":[0,105]}]},{"pos":[212,320],"content":"If a field or property is mapped to a particular column name, that column name is expected in the resultset.","nodes":[{"content":"If a field or property is mapped to a particular column name, that column name is expected in the resultset.","pos":[0,108]}]},{"pos":[327,447],"content":"If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.","nodes":[{"content":"If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.","pos":[0,120]}]},{"pos":[454,614],"content":"The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search is occurs for a case-insensitive match.","nodes":[{"content":"The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search is occurs for a case-insensitive match.","pos":[0,160],"nodes":[{"content":"The comparison is performed by looking for a case-sensitive match first.","pos":[0,72]},{"content":"If this match is not found, a subsequent search is occurs for a case-insensitive match.","pos":[73,160]}]}]},{"pos":[621,789],"content":"The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:","nodes":[{"content":"The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:","pos":[0,168]}]},{"pos":[796,989],"content":"<code>T</code> is an entity explicitly tracked by the <xref href=\"System.Data.Linq.DataContext\"></xref>.  \n  \n <xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"></xref> is `true`.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;T&lt;/code&gt;</ph> is an entity explicitly tracked by the <ph id=\"ph2\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph>.","pos":[0,104],"source":"<code>T</code> is an entity explicitly tracked by the <xref href=\"System.Data.Linq.DataContext\"></xref>."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[111,193],"source":"<xref href=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\"></xref> is `true`."}]},{"pos":[996,1025],"content":"The entity has a primary key.","nodes":[{"content":"The entity has a primary key.","pos":[0,29]}]},{"pos":[1032,1065],"content":"Otherwise an exception is thrown.","nodes":[{"content":"Otherwise an exception is thrown.","pos":[0,33]}]}],"pos":[82228,83320],"yaml":true},{"content":"The <xref href=\"System.Data.IDataReader\"></xref> to be converted.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> to be converted.","source":"The <xref href=\"System.Data.IDataReader\"></xref> to be converted."}],"pos":[83400,83466],"yaml":true},{"content":"A list of objects returned by the conversion.","nodes":[{"pos":[0,45],"content":"A list of objects returned by the conversion.","nodes":[{"content":"A list of objects returned by the conversion.","pos":[0,45]}]}],"pos":[83540,83586],"yaml":true},{"content":"Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects.","nodes":[{"pos":[0,85],"content":"Converts an existing <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;&lt;/xref&gt;</ph> to objects.","source":"Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects."}],"pos":[84756,84842],"yaml":true},{"content":"The <xref href=\"System.Data.IDataReader\"></xref> to be converted.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.IDataReader\"&gt;&lt;/xref&gt;</ph> to be converted.","source":"The <xref href=\"System.Data.IDataReader\"></xref> to be converted."}],"pos":[85077,85143],"yaml":true},{"content":"The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned.","nodes":[{"pos":[0,93],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> to be returned.","source":"The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned."}],"pos":[85200,85294],"yaml":true},{"content":"A collection of objects returned by the conversion.","nodes":[{"pos":[0,51],"content":"A collection of objects returned by the conversion.","nodes":[{"content":"A collection of objects returned by the conversion.","pos":[0,51]}]}],"pos":[85385,85437],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.DataContext\n  commentId: T:System.Data.Linq.DataContext\n  id: DataContext\n  children:\n  - System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)\n  - System.Data.Linq.DataContext.#ctor(System.String)\n  - System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)\n  - System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)\n  - System.Data.Linq.DataContext.ChangeConflicts\n  - System.Data.Linq.DataContext.CommandTimeout\n  - System.Data.Linq.DataContext.Connection\n  - System.Data.Linq.DataContext.CreateDatabase\n  - System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])\n  - System.Data.Linq.DataContext.DatabaseExists\n  - System.Data.Linq.DataContext.DeferredLoadingEnabled\n  - System.Data.Linq.DataContext.DeleteDatabase\n  - System.Data.Linq.DataContext.Dispose\n  - System.Data.Linq.DataContext.Dispose(System.Boolean)\n  - System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])\n  - System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)\n  - System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)\n  - System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)\n  - System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])\n  - System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])\n  - System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])\n  - System.Data.Linq.DataContext.GetChangeSet\n  - System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)\n  - System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)\n  - System.Data.Linq.DataContext.GetTable(System.Type)\n  - System.Data.Linq.DataContext.GetTable``1\n  - System.Data.Linq.DataContext.LoadOptions\n  - System.Data.Linq.DataContext.Log\n  - System.Data.Linq.DataContext.Mapping\n  - System.Data.Linq.DataContext.ObjectTrackingEnabled\n  - System.Data.Linq.DataContext.QueryCacheEnabled\n  - System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)\n  - System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)\n  - System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])\n  - System.Data.Linq.DataContext.SubmitChanges\n  - System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)\n  - System.Data.Linq.DataContext.Transaction\n  - System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)\n  - System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)\n  - System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)\n  langs:\n  - csharp\n  name: DataContext\n  nameWithType: DataContext\n  fullName: System.Data.Linq.DataContext\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Represents the main entry point for the LINQ to SQL framework.\n  remarks: \"The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection. It tracks changes that you made to all retrieved entities and maintains an \\\"identity cache\\\" that guarantees that entities retrieved more than one time are represented by using the same object instance.  \\n  \\n In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one \\\"unit of work\\\" however your application defines that term. A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create. A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.\"\n  syntax:\n    content: 'public class DataContext : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)\n  commentId: M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)\n  id: '#ctor(System.Data.IDbConnection)'\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DataContext(IDbConnection)\n  nameWithType: DataContext.DataContext(IDbConnection)\n  fullName: DataContext.DataContext(IDbConnection)\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].\n  remarks: A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string. In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>. If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it. Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this. In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.\n  syntax:\n    content: public DataContext (System.Data.IDbConnection connection);\n    parameters:\n    - id: connection\n      type: System.Data.IDbConnection\n      description: The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].\n  overload: System.Data.Linq.DataContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.#ctor(System.String)\n  commentId: M:System.Data.Linq.DataContext.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DataContext(String)\n  nameWithType: DataContext.DataContext(String)\n  fullName: DataContext.DataContext(String)\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a file source.\n  syntax:\n    content: public DataContext (string connectionString);\n    parameters:\n    - id: fileOrServerOrConnection\n      type: System.String\n      description: ''\n  overload: System.Data.Linq.DataContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)\n  commentId: M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)\n  id: '#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)'\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DataContext(IDbConnection, MappingSource)\n  nameWithType: DataContext.DataContext(IDbConnection, MappingSource)\n  fullName: DataContext.DataContext(IDbConnection, MappingSource)\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a connection and a mapping source.\n  syntax:\n    content: public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);\n    parameters:\n    - id: connection\n      type: System.Data.IDbConnection\n      description: The connection used by the .NET Framework.\n    - id: mapping\n      type: System.Data.Linq.Mapping.MappingSource\n      description: A source for mapping.\n  overload: System.Data.Linq.DataContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)\n  commentId: M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)\n  id: '#ctor(System.String,System.Data.Linq.Mapping.MappingSource)'\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DataContext(String, MappingSource)\n  nameWithType: DataContext.DataContext(String, MappingSource)\n  fullName: DataContext.DataContext(String, MappingSource)\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class by referencing a file source and a mapping source.\n  syntax:\n    content: public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);\n    parameters:\n    - id: fileOrServerOrConnection\n      type: System.String\n      description: \"This argument can be any one of the following:  \\n  \\n The name of a file where a SQL Server Express database resides.  \\n  \\n The name of a server where a database is present. In this case the provider uses the default database for a user.  \\n  \\n A complete connection string. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] just passes the string to the provider without modification.\"\n    - id: mapping\n      type: System.Data.Linq.Mapping.MappingSource\n      description: A source for mapping.\n  overload: System.Data.Linq.DataContext.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ChangeConflicts\n  commentId: P:System.Data.Linq.DataContext.ChangeConflicts\n  id: ChangeConflicts\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ChangeConflicts\n  nameWithType: DataContext.ChangeConflicts\n  fullName: DataContext.ChangeConflicts\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets a collection of objects that caused concurrency conflicts when <xref href=\"System.Data.Linq.DataContext.SubmitChanges\"></xref> was called.\n  remarks: The following example shows how the collection can be iterated over to retrieve conflict information.\n  example:\n  - >-\n    [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]\n     [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]\n  syntax:\n    content: public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }\n    return:\n      type: System.Data.Linq.ChangeConflictCollection\n      description: A collection of objects that caused concurrency conflicts.\n  overload: System.Data.Linq.DataContext.ChangeConflicts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.CommandTimeout\n  commentId: P:System.Data.Linq.DataContext.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: CommandTimeout\n  nameWithType: DataContext.CommandTimeout\n  fullName: DataContext.CommandTimeout\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.\n  remarks: \"This property gets or sets the command time-out used to execute generated commands (`IDbCommands`). For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.  \\n  \\n When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution. This default value is set by the storage provider. Note that some providers may throw exceptions if this value is set to a non-zero value.\"\n  syntax:\n    content: public int CommandTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.\n  overload: System.Data.Linq.DataContext.CommandTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Connection\n  commentId: P:System.Data.Linq.DataContext.Connection\n  id: Connection\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: DataContext.Connection\n  fullName: DataContext.Connection\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the connection used by the framework.\n  remarks: \"You can use this property to interoperate with relational ADO.NET code.  \\n  \\n The returned connection will be closed unless it has been explicitly opened by the user.\"\n  syntax:\n    content: public System.Data.Common.DbConnection Connection { get; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: The connection used by the framework.\n  overload: System.Data.Linq.DataContext.Connection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.CreateDatabase\n  commentId: M:System.Data.Linq.DataContext.CreateDatabase\n  id: CreateDatabase\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: CreateDatabase()\n  nameWithType: DataContext.CreateDatabase()\n  fullName: DataContext.CreateDatabase()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Creates a database on the server.\n  remarks: \"The name of the database is derived by using the following algorithm:  \\n  \\n-   If a database is identified in the connection string, its name is used.  \\n  \\n-   If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.  \\n  \\n-   If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is checked.  \\n  \\n-   If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.  \\n  \\n-   If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.\"\n  example:\n  - \"The following code shows how to set up a temporary database and then remove it.  \\n  \\n [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]\\n [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]\"\n  syntax:\n    content: public void CreateDatabase ();\n    parameters: []\n  overload: System.Data.Linq.DataContext.CreateDatabase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])\n  commentId: M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])\n  id: CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: CreateMethodCallQuery<TResult>(Object, MethodInfo, Object[])\n  nameWithType: DataContext.CreateMethodCallQuery<TResult>(Object, MethodInfo, Object[])\n  fullName: DataContext.CreateMethodCallQuery<TResult>(Object, MethodInfo, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes the table-valued database function associated with the specified CLR method.\n  remarks: The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.\n  syntax:\n    content: protected System.Linq.IQueryable<TResult> CreateMethodCallQuery<TResult> (object instance, System.Reflection.MethodInfo methodInfo, object[] parameters);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance of the method invocation (the current object).\n    - id: methodInfo\n      type: System.Reflection.MethodInfo\n      description: The <xref href=\"System.Reflection.MethodInfo\"></xref> that identifies the CLR method that corresponds to a database method.\n    - id: parameters\n      type: System.Object[]\n      description: The array of parameters to be passed to the command.\n    typeParameters:\n    - id: TResult\n      description: The type of the elements in the returned collection.\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: A collection of resultant values returned by the database query.\n  overload: System.Data.Linq.DataContext.CreateMethodCallQuery``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.DatabaseExists\n  commentId: M:System.Data.Linq.DataContext.DatabaseExists\n  id: DatabaseExists\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DatabaseExists()\n  nameWithType: DataContext.DatabaseExists()\n  fullName: DataContext.DatabaseExists()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Determines whether the associated database can be opened.\n  remarks: This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.\n  example:\n  - \"The following example uses this method to determine whether a database already exists.  \\n  \\n [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]\\n [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]\"\n  syntax:\n    content: public bool DatabaseExists ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the specified database can be opened; otherwise, `false`.'\n  overload: System.Data.Linq.DataContext.DatabaseExists*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.DeferredLoadingEnabled\n  commentId: P:System.Data.Linq.DataContext.DeferredLoadingEnabled\n  id: DeferredLoadingEnabled\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DeferredLoadingEnabled\n  nameWithType: DataContext.DeferredLoadingEnabled\n  fullName: DataContext.DeferredLoadingEnabled\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.\n  remarks: \"When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many. The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.  \\n  \\n The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).  \\n  \\n> [!NOTE]\\n>  If this property is set to `false` after a query has been executed, an exception is thrown. See the **Valid Modes** section below for more information.  \\n  \\n## Valid modes  \\n Deferred loading requires object tracking. Only the following three modes are valid:  \\n  \\n-   <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`. <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`. This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.  \\n  \\n-   <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`. <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`. This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.  \\n  \\n-   Both are set to `true`. This is the default.  \\n  \\n The flags may not be changed after a query has been executed. Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.\"\n  syntax:\n    content: public bool DeferredLoadingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if deferred loading is enabled; otherwise, `false`.'\n  overload: System.Data.Linq.DataContext.DeferredLoadingEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.DeleteDatabase\n  commentId: M:System.Data.Linq.DataContext.DeleteDatabase\n  id: DeleteDatabase\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: DeleteDatabase()\n  nameWithType: DataContext.DeleteDatabase()\n  fullName: DataContext.DeleteDatabase()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Deletes the associated database.\n  remarks: This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.\n  example:\n  - \"The following example shows how to delete a database that has been temporarily created.  \\n  \\n [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]\\n [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]\"\n  syntax:\n    content: public void DeleteDatabase ();\n    parameters: []\n  overload: System.Data.Linq.DataContext.DeleteDatabase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Dispose\n  commentId: M:System.Data.Linq.DataContext.Dispose\n  id: Dispose\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DataContext.Dispose()\n  fullName: DataContext.Dispose()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Data.Linq.DataContext\"></xref> class.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Data.Linq.DataContext.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Dispose(System.Boolean)\n  commentId: M:System.Data.Linq.DataContext.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DataContext.Dispose(Boolean)\n  fullName: DataContext.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Data.Linq.DataContext\"></xref> class and optionally releases the managed resource.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Data.Linq.DataContext.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])\n  commentId: M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])\n  id: ExecuteCommand(System.String,System.Object[])\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteCommand(String, Object[])\n  nameWithType: DataContext.ExecuteCommand(String, Object[])\n  fullName: DataContext.ExecuteCommand(String, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes SQL commands directly on the database.\n  remarks: \"This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.  \\n  \\n The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`. The only difference is in how the parameters are specified. Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0. The parameter is associated with the equally numbered object in the parameters array.  \\n  \\n `ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution. For example, you can specify the parameters when invoking ExecuteQuery\\\\<TResult>:  \\n  \\n```  \\ndb.ExecuteQuery<Customer>(\\\"select * from dbo.Customers where City = {0}\\\", \\\"London\\\");  \\n```  \\n  \\n And, another example:  \\n  \\n```  \\ndb.ExecuteCommand(\\\"UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}\\\", \\\"24 boxes\\\", 5);  \\n```  \\n  \\n The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.\"\n  example:\n  - >-\n    [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]\n     [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]\n  syntax:\n    content: public int ExecuteCommand (string command, object[] parameters);\n    parameters:\n    - id: command\n      type: System.String\n      description: The SQL command to be executed.\n    - id: parameters\n      type: System.Object[]\n      description: \"The array of parameters to be passed to the command. Note the following behavior:  \\n  \\n If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  \\n  \\n If the array contains objects that are not referenced in the command string, no exception is thrown.  \\n  \\n If any one of the parameters is null, it is converted to `DBNull.Value`.\"\n    return:\n      type: System.Int32\n      description: The number of rows modified by the executed command.\n  overload: System.Data.Linq.DataContext.ExecuteCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)\n  commentId: M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)\n  id: ExecuteDynamicDelete(System.Object)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteDynamicDelete(Object)\n  nameWithType: DataContext.ExecuteDynamicDelete(Object)\n  fullName: DataContext.ExecuteDynamicDelete(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.\n  remarks: See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.\n  syntax:\n    content: protected void ExecuteDynamicDelete (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be deleted.\n  overload: System.Data.Linq.DataContext.ExecuteDynamicDelete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)\n  commentId: M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)\n  id: ExecuteDynamicInsert(System.Object)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteDynamicInsert(Object)\n  nameWithType: DataContext.ExecuteDynamicInsert(Object)\n  fullName: DataContext.ExecuteDynamicInsert(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.\n  remarks: \"Note the following considerations:  \\n  \\n-   Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.  \\n  \\n-   An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation. <xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.  \\n  \\n-   It is the responsibility of the developer to pass in the correct entity. The implementation verifies that the passed-in entity is tracked. However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.  \\n  \\n-   It is the responsibility of the developer to invoke the correct dynamic API. For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not detect or verify whether the invoked dynamic method matches the applicable operation. The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).\"\n  syntax:\n    content: protected void ExecuteDynamicInsert (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be inserted.\n  overload: System.Data.Linq.DataContext.ExecuteDynamicInsert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)\n  commentId: M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)\n  id: ExecuteDynamicUpdate(System.Object)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteDynamicUpdate(Object)\n  nameWithType: DataContext.ExecuteDynamicUpdate(Object)\n  fullName: DataContext.ExecuteDynamicUpdate(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.\n  remarks: See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.\n  syntax:\n    content: protected void ExecuteDynamicUpdate (object entity);\n    parameters:\n    - id: entity\n      type: System.Object\n      description: The entity to be updated.\n  overload: System.Data.Linq.DataContext.ExecuteDynamicUpdate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])\n  commentId: M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])\n  id: ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteMethodCall(Object, MethodInfo, Object[])\n  nameWithType: DataContext.ExecuteMethodCall(Object, MethodInfo, Object[])\n  fullName: DataContext.ExecuteMethodCall(Object, MethodInfo, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes the stored database procedure or scalar function associated with the specified CLR method.\n  remarks: The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.\n  syntax:\n    content: protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, object[] parameters);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The instance of the method invocation (the current object).\n    - id: methodInfo\n      type: System.Reflection.MethodInfo\n      description: Identifies the CLR method that corresponds to a database method.\n    - id: parameters\n      type: System.Object[]\n      description: The array of parameters to be passed to the command.\n    return:\n      type: System.Data.Linq.IExecuteResult\n      description: The result (the return value and output parameters) of executing the specified method.\n  overload: System.Data.Linq.DataContext.ExecuteMethodCall*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])\n  commentId: M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])\n  id: ExecuteQuery(System.Type,System.String,System.Object[])\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteQuery(Type, String, Object[])\n  nameWithType: DataContext.ExecuteQuery(Type, String, Object[])\n  fullName: DataContext.ExecuteQuery(Type, String, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes SQL queries directly on the database.\n  syntax:\n    content: public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, object[] parameters);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: \"The type of the <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\"></xref> to be returned.  \\n  \\n The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:  \\n  \\n If a field or property is mapped to a particular column name, that column name is expected in the resultset.  \\n  \\n If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  \\n  \\n The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search occurs for a case-insensitive match.  \\n  \\n The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  \\n  \\n <code>T</code> is an entity explicitly tracked by the <xref href=\\\"System.Data.Linq.DataContext\\\"></xref>.  \\n  \\n <xref href=\\\"System.Data.Linq.DataContext.ObjectTrackingEnabled\\\"></xref> is `true`.  \\n  \\n The entity has a primary key.  \\n  \\n Otherwise an exception is thrown.\"\n    - id: query\n      type: System.String\n      description: The SQL query to be executed.\n    - id: parameters\n      type: System.Object[]\n      description: \"The array of parameters to be passed to the command. Note the following behavior:  \\n  \\n If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  \\n  \\n If the array contains objects that are not referenced in the command string, no exception is thrown.  \\n  \\n If a parameter is `null`, it is converted to `DBNull.Value`.\"\n    return:\n      type: System.Collections.IEnumerable\n      description: An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> collection of objects returned by the query.\n  overload: System.Data.Linq.DataContext.ExecuteQuery*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])\n  commentId: M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])\n  id: ExecuteQuery``1(System.String,System.Object[])\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ExecuteQuery<TResult>(String, Object[])\n  nameWithType: DataContext.ExecuteQuery<TResult>(String, Object[])\n  fullName: DataContext.ExecuteQuery<TResult>(String, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Executes SQL queries directly on the database and returns objects.\n  remarks: \"This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.  \\n  \\n The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:  \\n  \\n-   If a field or property is mapped to a particular column name, that column name is expected in the resultset.  \\n  \\n-   If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  \\n  \\n-   The comparison is performed by first looking for a case-sensitive match. If such a match is not found, a subsequent search occurs for a case-insensitive match.  \\n  \\n-   The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:  \\n  \\n    -   If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.  \\n  \\n    -   ObjectTrackingEnabled is true.  \\n  \\n    -   The entity has a primary key.  \\n  \\n     Otherwise an exception is thrown.  \\n  \\n-   In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.  \\n  \\n The following C# snippet shows one use for this method:  \\n  \\n```  \\nvar customers = db.ExecuteQuery<Customer>(@\\\"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   \\n   Address, City, Region, PostalCode, Country, Phone, Fax  \\n   FROM   dbo.Customers  \\n   WHERE  City = {0}\\\", \\\"London\\\");  \\n  \\nforeach (Customer c in customers)  \\n   Console.WriteLine(c.ContactName);  \\n```  \\n  \\n In Visual Basic  \\n  \\n```  \\nDim customers = db.ExecuteQuery(Of Customer)(\\\"SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  \\n   Address, City, Region, PostalCode, Country, Phone, Fax _  \\n   FROM dbo.Customers _  \\nWHERE City = {0}\\\", \\\"London\\\")  \\n  \\nFor Each c As Customer In customers  \\n    Console.WriteLine(c.ContactName)  \\nNext  \\n```\"\n  syntax:\n    content: 'public System.Collections.Generic.IEnumerable<TResult> ExecuteQuery<TResult> (string query, object[] parameters) where TResult : new();'\n    parameters:\n    - id: query\n      type: System.String\n      description: The SQL query to be executed.\n    - id: parameters\n      type: System.Object[]\n      description: \"The array of parameters to be passed to the command. Note the following behavior:  \\n  \\n If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  \\n  \\n If the array contains objects that are not referenced in the command string, no exception is thrown.  \\n  \\n If a parameter is null, it is converted to `DBNull.Value`.\"\n    typeParameters:\n    - id: TResult\n      description: The type of the elements in the returned collection.\n    return:\n      type: System.Collections.Generic.IEnumerable{TResult}\n      description: A collection of objects returned by the query.\n  overload: System.Data.Linq.DataContext.ExecuteQuery``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.GetChangeSet\n  commentId: M:System.Data.Linq.DataContext.GetChangeSet\n  id: GetChangeSet\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: GetChangeSet()\n  nameWithType: DataContext.GetChangeSet()\n  fullName: DataContext.GetChangeSet()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the modified objects tracked by <xref href=\"System.Data.Linq.DataContext\"></xref>.\n  remarks: \"Note the following considerations:  \\n  \\n-   <xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>. For example, objects that are used in the following operations can create corresponding inferred operations in the following list:  \\n  \\n    -   <xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.  \\n  \\n    -   <xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.  \\n  \\n-   The set may not be ordered according to foreign key constraints.  \\n  \\n-   Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available. Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).  \\n  \\n-   The set of changed objects is computed at the time of the call. Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.  \\n  \\n Output when no changes have been made appears as follows:  \\n  \\n `{Added: 0, Removed: 0, Modified: 0}`\"\n  example:\n  - >-\n    [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]\n     [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]\n  syntax:\n    content: public System.Data.Linq.ChangeSet GetChangeSet ();\n    parameters: []\n    return:\n      type: System.Data.Linq.ChangeSet\n      description: The set of objects is returned as three read-only collections.\n  overload: System.Data.Linq.DataContext.GetChangeSet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)\n  commentId: M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)\n  id: GetCommand(System.Linq.IQueryable)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: GetCommand(IQueryable)\n  nameWithType: DataContext.GetCommand(IQueryable)\n  fullName: DataContext.GetCommand(IQueryable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].\n  remarks: \"This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.  \\n  \\n Note the following considerations:  \\n  \\n-   The argument must be non-null. Otherwise, a null argument exception is thrown.  \\n  \\n-   Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.  \\n  \\n-   Only the first query command is returned. Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.  \\n  \\n-   <xref:System.Data.Linq.DataContext> does not track what the user does with the command. For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.\"\n  example:\n  - >-\n    [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]\n     [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]\n  syntax:\n    content: public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);\n    parameters:\n    - id: query\n      type: System.Linq.IQueryable\n      description: The query whose SQL command information is to be retrieved.\n    return:\n      type: System.Data.Common.DbCommand\n      description: The requested command information object.\n  overload: System.Data.Linq.DataContext.GetCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)\n  commentId: M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)\n  id: GetIDbCommand(System.Linq.IQueryable)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: GetIDbCommand(IQueryable)\n  nameWithType: DataContext.GetIDbCommand(IQueryable)\n  fullName: DataContext.GetIDbCommand(IQueryable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);\n    parameters:\n    - id: query\n      type: System.Linq.IQueryable\n      description: ''\n    return:\n      type: System.Data.IDbCommand\n      description: ''\n  overload: System.Data.Linq.DataContext.GetIDbCommand*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.GetTable(System.Type)\n  commentId: M:System.Data.Linq.DataContext.GetTable(System.Type)\n  id: GetTable(System.Type)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: GetTable(Type)\n  nameWithType: DataContext.GetTable(Type)\n  fullName: DataContext.GetTable(Type)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns a collection of objects of a particular type, where the type is defined by the <code>type</code> parameter.\n  remarks: \"This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>. It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically. It would be inconvenient to force the application to use reflection to call the correct generic method.  \\n  \\n If there is no collection for a particular type, an exception is thrown.\"\n  syntax:\n    content: public System.Data.Linq.ITable GetTable (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the objects to be returned.\n    return:\n      type: System.Data.Linq.ITable\n      description: A collection of objects defined by the <code>type</code> parameter.\n  overload: System.Data.Linq.DataContext.GetTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.GetTable``1\n  commentId: M:System.Data.Linq.DataContext.GetTable``1\n  id: GetTable``1\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: GetTable<TEntity>()\n  nameWithType: DataContext.GetTable<TEntity>()\n  fullName: DataContext.GetTable<TEntity>()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns a collection of objects of a particular type, where the type is defined by the <code>TEntity</code> parameter.\n  remarks: \"This method is the main entry point for querying. When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method. For example, a `Customers` property is generated that returns `GetTable<Customer>`.  \\n  \\n If there is no collection for a particular type, an exception is thrown.\"\n  syntax:\n    content: 'public System.Data.Linq.Table<TEntity> GetTable<TEntity> () where TEntity : class;'\n    parameters: []\n    typeParameters:\n    - id: TEntity\n      description: The type of the objects to be returned.\n    return:\n      type: System.Data.Linq.Table`1\n      description: A collection of objects defined by the <code>TEntity</code> parameter.\n  overload: System.Data.Linq.DataContext.GetTable``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.LoadOptions\n  commentId: P:System.Data.Linq.DataContext.LoadOptions\n  id: LoadOptions\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: LoadOptions\n  nameWithType: DataContext.LoadOptions\n  fullName: DataContext.LoadOptions\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets the <xref href=\"System.Data.Linq.DataLoadOptions\"></xref> associated with this <xref href=\"System.Data.Linq.DataContext\"></xref>.\n  remarks: This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.\n  syntax:\n    content: public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }\n    return:\n      type: System.Data.Linq.DataLoadOptions\n      description: The prefetch load options for related data.\n  overload: System.Data.Linq.DataContext.LoadOptions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Log\n  commentId: P:System.Data.Linq.DataContext.Log\n  id: Log\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Log\n  nameWithType: DataContext.Log\n  fullName: DataContext.Log\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets the destination to write the SQL query or command.\n  remarks: Set this property to `null` to disable command logging.\n  example:\n  - \"The following example displays generated SQL in the console window before it displays the results of the query.  \\n  \\n [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]\\n [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]\"\n  syntax:\n    content: public System.IO.TextWriter Log { get; set; }\n    return:\n      type: System.IO.TextWriter\n      description: The <xref href=\"System.IO.TextReader\"></xref> to use for writing the command.\n  overload: System.Data.Linq.DataContext.Log*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Mapping\n  commentId: P:System.Data.Linq.DataContext.Mapping\n  id: Mapping\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Mapping\n  nameWithType: DataContext.Mapping\n  fullName: DataContext.Mapping\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> on which the mapping is based.\n  syntax:\n    content: public System.Data.Linq.Mapping.MetaModel Mapping { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaModel\n      description: The mapping between a database and domain objects.\n  overload: System.Data.Linq.DataContext.Mapping*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.ObjectTrackingEnabled\n  commentId: P:System.Data.Linq.DataContext.ObjectTrackingEnabled\n  id: ObjectTrackingEnabled\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: ObjectTrackingEnabled\n  nameWithType: DataContext.ObjectTrackingEnabled\n  fullName: DataContext.ObjectTrackingEnabled\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets a value that indicates whether object tracking is enabled.\n  remarks: \"Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.  \\n  \\n An exception is thrown:  \\n  \\n-   If the property is set to `false` after a query has been executed.  \\n  \\n     For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.  \\n  \\n-   If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.  \\n  \\n If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`. In this case, the <xref:System.Data.Linq.DataContext> is read-only.  \\n  \\n If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`. In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.\"\n  syntax:\n    content: public bool ObjectTrackingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object tracking is enabled; otherwise, `false`. The default is `true`.'\n  overload: System.Data.Linq.DataContext.ObjectTrackingEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.QueryCacheEnabled\n  commentId: P:System.Data.Linq.DataContext.QueryCacheEnabled\n  id: QueryCacheEnabled\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: QueryCacheEnabled\n  nameWithType: DataContext.QueryCacheEnabled\n  fullName: DataContext.QueryCacheEnabled\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool QueryCacheEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Data.Linq.DataContext.QueryCacheEnabled*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)\n  commentId: M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)\n  id: Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Refresh(RefreshMode, IEnumerable)\n  nameWithType: DataContext.Refresh(RefreshMode, IEnumerable)\n  fullName: DataContext.Refresh(RefreshMode, IEnumerable)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Refreshes a collection of entity objects according to the specified mode.\n  syntax:\n    content: public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);\n    parameters:\n    - id: mode\n      type: System.Data.Linq.RefreshMode\n      description: A value that specifies how optimistic concurrency conflicts are handled.\n    - id: entities\n      type: System.Collections.IEnumerable\n      description: The collection of entities to be refreshed.\n  overload: System.Data.Linq.DataContext.Refresh*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)\n  commentId: M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)\n  id: Refresh(System.Data.Linq.RefreshMode,System.Object)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Refresh(RefreshMode, Object)\n  nameWithType: DataContext.Refresh(RefreshMode, Object)\n  fullName: DataContext.Refresh(RefreshMode, Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Refreshes an entity object according to the specified mode.\n  syntax:\n    content: public void Refresh (System.Data.Linq.RefreshMode mode, object entity);\n    parameters:\n    - id: mode\n      type: System.Data.Linq.RefreshMode\n      description: A value that specifies how optimistic concurrency conflicts are handled.\n    - id: entity\n      type: System.Object\n      description: The object to be refreshed.\n  overload: System.Data.Linq.DataContext.Refresh*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])\n  commentId: M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])\n  id: Refresh(System.Data.Linq.RefreshMode,System.Object[])\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Refresh(RefreshMode, Object[])\n  nameWithType: DataContext.Refresh(RefreshMode, Object[])\n  fullName: DataContext.Refresh(RefreshMode, Object[])\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Refreshes an array of entity objects according to the specified mode.\n  syntax:\n    content: public void Refresh (System.Data.Linq.RefreshMode mode, object[] entities);\n    parameters:\n    - id: mode\n      type: System.Data.Linq.RefreshMode\n      description: A value that specifies how optimistic concurrency conflicts are handled.\n    - id: entities\n      type: System.Object[]\n      description: The array of entity objects to be refreshed.\n  overload: System.Data.Linq.DataContext.Refresh*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.SubmitChanges\n  commentId: M:System.Data.Linq.DataContext.SubmitChanges\n  id: SubmitChanges\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: SubmitChanges()\n  nameWithType: DataContext.SubmitChanges()\n  fullName: DataContext.SubmitChanges()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.\n  remarks: If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.\n  syntax:\n    content: public void SubmitChanges ();\n    parameters: []\n  overload: System.Data.Linq.DataContext.SubmitChanges*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)\n  commentId: M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)\n  id: SubmitChanges(System.Data.Linq.ConflictMode)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: SubmitChanges(ConflictMode)\n  nameWithType: DataContext.SubmitChanges(ConflictMode)\n  fullName: DataContext.SubmitChanges(ConflictMode)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.\n  remarks: Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.\n  example:\n  - >-\n    [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]\n     [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]\n  syntax:\n    content: public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);\n    parameters:\n    - id: failureMode\n      type: System.Data.Linq.ConflictMode\n      description: \"The action to be taken if the submission fails. Valid arguments are as follows:  \\n  \\n <xref href=\\\"System.Data.Linq.ConflictMode.FailOnFirstConflict\\\"></xref><xref href=\\\"System.Data.Linq.ConflictMode.ContinueOnConflict\\\"></xref>\"\n  overload: System.Data.Linq.DataContext.SubmitChanges*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Transaction\n  commentId: P:System.Data.Linq.DataContext.Transaction\n  id: Transaction\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Transaction\n  nameWithType: DataContext.Transaction\n  fullName: DataContext.Transaction\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.\n  remarks: \"The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code. For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.  \\n  \\n Note the following:  \\n  \\n-   If this property has not been explicitly set, the getter returns null.  \\n  \\n-   If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.  \\n  \\n-   If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.\"\n  syntax:\n    content: public System.Data.Common.DbTransaction Transaction { get; set; }\n    return:\n      type: System.Data.Common.DbTransaction\n      description: The transaction object used by the <xref href=\"System.Data.Linq.DataContext\"></xref> when executing queries and commands.\n  overload: System.Data.Linq.DataContext.Transaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)\n  commentId: M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)\n  id: Translate(System.Data.Common.DbDataReader)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Translate(DbDataReader)\n  nameWithType: DataContext.Translate(DbDataReader)\n  fullName: DataContext.Translate(DbDataReader)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects.\n  syntax:\n    content: public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);\n    parameters:\n    - id: reader\n      type: System.Data.Common.DbDataReader\n      description: The <xref href=\"System.Data.IDataReader\"></xref> to be converted.\n    return:\n      type: System.Data.Linq.IMultipleResults\n      description: A list of objects returned by the conversion.\n  overload: System.Data.Linq.DataContext.Translate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)\n  commentId: M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)\n  id: Translate(System.Type,System.Data.Common.DbDataReader)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Translate(Type, DbDataReader)\n  nameWithType: DataContext.Translate(Type, DbDataReader)\n  fullName: DataContext.Translate(Type, DbDataReader)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects.\n  syntax:\n    content: public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: \"The type of the <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\"></xref> to be returned.  \\n  \\n The algorithm for matching columns in the result to fields and properties in the object works as follows:  \\n  \\n If a field or property is mapped to a particular column name, that column name is expected in the resultset.  \\n  \\n If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  \\n  \\n The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search is occurs for a case-insensitive match.  \\n  \\n The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  \\n  \\n <code>T</code> is an entity explicitly tracked by the <xref href=\\\"System.Data.Linq.DataContext\\\"></xref>.  \\n  \\n <xref href=\\\"System.Data.Linq.DataContext.ObjectTrackingEnabled\\\"></xref> is `true`.  \\n  \\n The entity has a primary key.  \\n  \\n Otherwise an exception is thrown.\"\n    - id: reader\n      type: System.Data.Common.DbDataReader\n      description: The <xref href=\"System.Data.IDataReader\"></xref> to be converted.\n    return:\n      type: System.Collections.IEnumerable\n      description: A list of objects returned by the conversion.\n  overload: System.Data.Linq.DataContext.Translate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)\n  commentId: M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)\n  id: Translate``1(System.Data.Common.DbDataReader)\n  parent: System.Data.Linq.DataContext\n  langs:\n  - csharp\n  name: Translate<TResult>(DbDataReader)\n  nameWithType: DataContext.Translate<TResult>(DbDataReader)\n  fullName: DataContext.Translate<TResult>(DbDataReader)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Converts an existing <xref href=\"System.Data.Common.DbDataReader\"></xref> to objects.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<TResult> Translate<TResult> (System.Data.Common.DbDataReader reader);\n    parameters:\n    - id: reader\n      type: System.Data.Common.DbDataReader\n      description: The <xref href=\"System.Data.IDataReader\"></xref> to be converted.\n    typeParameters:\n    - id: TResult\n      description: The type of the <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> to be returned.\n    return:\n      type: System.Collections.Generic.IEnumerable{TResult}\n      description: A collection of objects returned by the conversion.\n  overload: System.Data.Linq.DataContext.Translate``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DataContext(IDbConnection)\n  nameWithType: DataContext.DataContext(IDbConnection)\n  fullName: DataContext.DataContext(IDbConnection)\n- uid: System.Data.IDbConnection\n  parent: System.Data\n  isExternal: false\n  name: IDbConnection\n  nameWithType: IDbConnection\n  fullName: System.Data.IDbConnection\n- uid: System.Data.Linq.DataContext.#ctor(System.String)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DataContext(String)\n  nameWithType: DataContext.DataContext(String)\n  fullName: DataContext.DataContext(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DataContext(IDbConnection, MappingSource)\n  nameWithType: DataContext.DataContext(IDbConnection, MappingSource)\n  fullName: DataContext.DataContext(IDbConnection, MappingSource)\n- uid: System.Data.Linq.Mapping.MappingSource\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MappingSource\n  nameWithType: MappingSource\n  fullName: System.Data.Linq.Mapping.MappingSource\n- uid: System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DataContext(String, MappingSource)\n  nameWithType: DataContext.DataContext(String, MappingSource)\n  fullName: DataContext.DataContext(String, MappingSource)\n- uid: System.Data.Linq.DataContext.ChangeConflicts\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ChangeConflicts\n  nameWithType: DataContext.ChangeConflicts\n  fullName: DataContext.ChangeConflicts\n- uid: System.Data.Linq.ChangeConflictCollection\n  parent: System.Data.Linq\n  isExternal: false\n  name: ChangeConflictCollection\n  nameWithType: ChangeConflictCollection\n  fullName: System.Data.Linq.ChangeConflictCollection\n- uid: System.Data.Linq.DataContext.CommandTimeout\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: DataContext.CommandTimeout\n  fullName: DataContext.CommandTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.DataContext.Connection\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Connection\n  nameWithType: DataContext.Connection\n  fullName: DataContext.Connection\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbConnection\n  fullName: System.Data.Common.DbConnection\n- uid: System.Data.Linq.DataContext.CreateDatabase\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: CreateDatabase()\n  nameWithType: DataContext.CreateDatabase()\n  fullName: DataContext.CreateDatabase()\n- uid: System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: CreateMethodCallQuery<TResult>(Object, MethodInfo, Object[])\n  nameWithType: DataContext.CreateMethodCallQuery<TResult>(Object, MethodInfo, Object[])\n  fullName: DataContext.CreateMethodCallQuery<TResult>(Object, MethodInfo, Object[])\n- uid: System.Linq.IQueryable`1\n  name: IQueryable<T>\n  nameWithType: IQueryable<T>\n  fullName: System.Linq.IQueryable<T>\n- uid: TResult\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n  spec.csharp:\n  - uid: System.Linq.IQueryable`1\n    name: IQueryable\n    nameWithType: IQueryable\n    fullName: System.Linq.IQueryable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.DataContext.DatabaseExists\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DatabaseExists()\n  nameWithType: DataContext.DatabaseExists()\n  fullName: DataContext.DatabaseExists()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.DataContext.DeferredLoadingEnabled\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DeferredLoadingEnabled\n  nameWithType: DataContext.DeferredLoadingEnabled\n  fullName: DataContext.DeferredLoadingEnabled\n- uid: System.Data.Linq.DataContext.DeleteDatabase\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DeleteDatabase()\n  nameWithType: DataContext.DeleteDatabase()\n  fullName: DataContext.DeleteDatabase()\n- uid: System.Data.Linq.DataContext.Dispose\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: DataContext.Dispose()\n  fullName: DataContext.Dispose()\n- uid: System.Data.Linq.DataContext.Dispose(System.Boolean)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DataContext.Dispose(Boolean)\n  fullName: DataContext.Dispose(Boolean)\n- uid: System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteCommand(String, Object[])\n  nameWithType: DataContext.ExecuteCommand(String, Object[])\n  fullName: DataContext.ExecuteCommand(String, Object[])\n- uid: System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteDynamicDelete(Object)\n  nameWithType: DataContext.ExecuteDynamicDelete(Object)\n  fullName: DataContext.ExecuteDynamicDelete(Object)\n- uid: System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteDynamicInsert(Object)\n  nameWithType: DataContext.ExecuteDynamicInsert(Object)\n  fullName: DataContext.ExecuteDynamicInsert(Object)\n- uid: System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteDynamicUpdate(Object)\n  nameWithType: DataContext.ExecuteDynamicUpdate(Object)\n  fullName: DataContext.ExecuteDynamicUpdate(Object)\n- uid: System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteMethodCall(Object, MethodInfo, Object[])\n  nameWithType: DataContext.ExecuteMethodCall(Object, MethodInfo, Object[])\n  fullName: DataContext.ExecuteMethodCall(Object, MethodInfo, Object[])\n- uid: System.Data.Linq.IExecuteResult\n  parent: System.Data.Linq\n  isExternal: false\n  name: IExecuteResult\n  nameWithType: IExecuteResult\n  fullName: System.Data.Linq.IExecuteResult\n- uid: System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteQuery(Type, String, Object[])\n  nameWithType: DataContext.ExecuteQuery(Type, String, Object[])\n  fullName: DataContext.ExecuteQuery(Type, String, Object[])\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteQuery<TResult>(String, Object[])\n  nameWithType: DataContext.ExecuteQuery<TResult>(String, Object[])\n  fullName: DataContext.ExecuteQuery<TResult>(String, Object[])\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{TResult}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TResult>\n  nameWithType: IEnumerable<TResult>\n  fullName: System.Collections.Generic.IEnumerable<TResult>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.DataContext.GetChangeSet\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetChangeSet()\n  nameWithType: DataContext.GetChangeSet()\n  fullName: DataContext.GetChangeSet()\n- uid: System.Data.Linq.ChangeSet\n  parent: System.Data.Linq\n  isExternal: false\n  name: ChangeSet\n  nameWithType: ChangeSet\n  fullName: System.Data.Linq.ChangeSet\n- uid: System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetCommand(IQueryable)\n  nameWithType: DataContext.GetCommand(IQueryable)\n  fullName: DataContext.GetCommand(IQueryable)\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetIDbCommand(IQueryable)\n  nameWithType: DataContext.GetIDbCommand(IQueryable)\n  fullName: DataContext.GetIDbCommand(IQueryable)\n- uid: System.Data.IDbCommand\n  parent: System.Data\n  isExternal: false\n  name: IDbCommand\n  nameWithType: IDbCommand\n  fullName: System.Data.IDbCommand\n- uid: System.Data.Linq.DataContext.GetTable(System.Type)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetTable(Type)\n  nameWithType: DataContext.GetTable(Type)\n  fullName: DataContext.GetTable(Type)\n- uid: System.Data.Linq.ITable\n  parent: System.Data.Linq\n  isExternal: false\n  name: ITable\n  nameWithType: ITable\n  fullName: System.Data.Linq.ITable\n- uid: System.Data.Linq.DataContext.GetTable``1\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetTable<TEntity>()\n  nameWithType: DataContext.GetTable<TEntity>()\n  fullName: DataContext.GetTable<TEntity>()\n- uid: System.Data.Linq.Table`1\n  parent: System.Data.Linq\n  isExternal: false\n  name: Table<TEntity>\n  nameWithType: Table<TEntity>\n  fullName: System.Data.Linq.Table<TEntity>\n- uid: System.Data.Linq.DataContext.LoadOptions\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: LoadOptions\n  nameWithType: DataContext.LoadOptions\n  fullName: DataContext.LoadOptions\n- uid: System.Data.Linq.DataLoadOptions\n  parent: System.Data.Linq\n  isExternal: false\n  name: DataLoadOptions\n  nameWithType: DataLoadOptions\n  fullName: System.Data.Linq.DataLoadOptions\n- uid: System.Data.Linq.DataContext.Log\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Log\n  nameWithType: DataContext.Log\n  fullName: DataContext.Log\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Data.Linq.DataContext.Mapping\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Mapping\n  nameWithType: DataContext.Mapping\n  fullName: DataContext.Mapping\n- uid: System.Data.Linq.Mapping.MetaModel\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Data.Linq.Mapping.MetaModel\n- uid: System.Data.Linq.DataContext.ObjectTrackingEnabled\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ObjectTrackingEnabled\n  nameWithType: DataContext.ObjectTrackingEnabled\n  fullName: DataContext.ObjectTrackingEnabled\n- uid: System.Data.Linq.DataContext.QueryCacheEnabled\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: QueryCacheEnabled\n  nameWithType: DataContext.QueryCacheEnabled\n  fullName: DataContext.QueryCacheEnabled\n- uid: System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Refresh(RefreshMode, IEnumerable)\n  nameWithType: DataContext.Refresh(RefreshMode, IEnumerable)\n  fullName: DataContext.Refresh(RefreshMode, IEnumerable)\n- uid: System.Data.Linq.RefreshMode\n  parent: System.Data.Linq\n  isExternal: false\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Linq.RefreshMode\n- uid: System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Refresh(RefreshMode, Object)\n  nameWithType: DataContext.Refresh(RefreshMode, Object)\n  fullName: DataContext.Refresh(RefreshMode, Object)\n- uid: System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Refresh(RefreshMode, Object[])\n  nameWithType: DataContext.Refresh(RefreshMode, Object[])\n  fullName: DataContext.Refresh(RefreshMode, Object[])\n- uid: System.Data.Linq.DataContext.SubmitChanges\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: SubmitChanges()\n  nameWithType: DataContext.SubmitChanges()\n  fullName: DataContext.SubmitChanges()\n- uid: System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: SubmitChanges(ConflictMode)\n  nameWithType: DataContext.SubmitChanges(ConflictMode)\n  fullName: DataContext.SubmitChanges(ConflictMode)\n- uid: System.Data.Linq.ConflictMode\n  parent: System.Data.Linq\n  isExternal: false\n  name: ConflictMode\n  nameWithType: ConflictMode\n  fullName: System.Data.Linq.ConflictMode\n- uid: System.Data.Linq.DataContext.Transaction\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Transaction\n  nameWithType: DataContext.Transaction\n  fullName: DataContext.Transaction\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Translate(DbDataReader)\n  nameWithType: DataContext.Translate(DbDataReader)\n  fullName: DataContext.Translate(DbDataReader)\n- uid: System.Data.Linq.IMultipleResults\n  parent: System.Data.Linq\n  isExternal: false\n  name: IMultipleResults\n  nameWithType: IMultipleResults\n  fullName: System.Data.Linq.IMultipleResults\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Translate(Type, DbDataReader)\n  nameWithType: DataContext.Translate(Type, DbDataReader)\n  fullName: DataContext.Translate(Type, DbDataReader)\n- uid: System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Translate<TResult>(DbDataReader)\n  nameWithType: DataContext.Translate<TResult>(DbDataReader)\n  fullName: DataContext.Translate<TResult>(DbDataReader)\n- uid: System.Data.Linq.DataContext.Refresh*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Refresh\n  nameWithType: DataContext.Refresh\n  fullName: DataContext.Refresh\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.SubmitChanges*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: SubmitChanges\n  nameWithType: DataContext.SubmitChanges\n  fullName: DataContext.SubmitChanges\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Translate*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Translate\n  nameWithType: DataContext.Translate\n  fullName: DataContext.Translate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.#ctor*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DataContext\n  nameWithType: DataContext.DataContext\n  fullName: DataContext.DataContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ChangeConflicts*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ChangeConflicts\n  nameWithType: DataContext.ChangeConflicts\n  fullName: DataContext.ChangeConflicts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.CommandTimeout*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: DataContext.CommandTimeout\n  fullName: DataContext.CommandTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Connection*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Connection\n  nameWithType: DataContext.Connection\n  fullName: DataContext.Connection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.CreateDatabase*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: CreateDatabase\n  nameWithType: DataContext.CreateDatabase\n  fullName: DataContext.CreateDatabase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.CreateMethodCallQuery``1*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: CreateMethodCallQuery<TResult>\n  nameWithType: DataContext.CreateMethodCallQuery<TResult>\n  fullName: DataContext.CreateMethodCallQuery<TResult>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.DatabaseExists*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DatabaseExists\n  nameWithType: DataContext.DatabaseExists\n  fullName: DataContext.DatabaseExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.DeferredLoadingEnabled*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DeferredLoadingEnabled\n  nameWithType: DataContext.DeferredLoadingEnabled\n  fullName: DataContext.DeferredLoadingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.DeleteDatabase*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: DeleteDatabase\n  nameWithType: DataContext.DeleteDatabase\n  fullName: DataContext.DeleteDatabase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Dispose*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Dispose\n  nameWithType: DataContext.Dispose\n  fullName: DataContext.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteCommand*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteCommand\n  nameWithType: DataContext.ExecuteCommand\n  fullName: DataContext.ExecuteCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteDynamicDelete*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteDynamicDelete\n  nameWithType: DataContext.ExecuteDynamicDelete\n  fullName: DataContext.ExecuteDynamicDelete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteDynamicInsert*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteDynamicInsert\n  nameWithType: DataContext.ExecuteDynamicInsert\n  fullName: DataContext.ExecuteDynamicInsert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteDynamicUpdate*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteDynamicUpdate\n  nameWithType: DataContext.ExecuteDynamicUpdate\n  fullName: DataContext.ExecuteDynamicUpdate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteMethodCall*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteMethodCall\n  nameWithType: DataContext.ExecuteMethodCall\n  fullName: DataContext.ExecuteMethodCall\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteQuery*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteQuery\n  nameWithType: DataContext.ExecuteQuery\n  fullName: DataContext.ExecuteQuery\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ExecuteQuery``1*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ExecuteQuery<TResult>\n  nameWithType: DataContext.ExecuteQuery<TResult>\n  fullName: DataContext.ExecuteQuery<TResult>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.GetChangeSet*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetChangeSet\n  nameWithType: DataContext.GetChangeSet\n  fullName: DataContext.GetChangeSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.GetCommand*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetCommand\n  nameWithType: DataContext.GetCommand\n  fullName: DataContext.GetCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.GetIDbCommand*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetIDbCommand\n  nameWithType: DataContext.GetIDbCommand\n  fullName: DataContext.GetIDbCommand\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.GetTable*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetTable\n  nameWithType: DataContext.GetTable\n  fullName: DataContext.GetTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.GetTable``1*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: GetTable<TEntity>\n  nameWithType: DataContext.GetTable<TEntity>\n  fullName: DataContext.GetTable<TEntity>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.LoadOptions*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: LoadOptions\n  nameWithType: DataContext.LoadOptions\n  fullName: DataContext.LoadOptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Log*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Log\n  nameWithType: DataContext.Log\n  fullName: DataContext.Log\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Mapping*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Mapping\n  nameWithType: DataContext.Mapping\n  fullName: DataContext.Mapping\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.ObjectTrackingEnabled*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: ObjectTrackingEnabled\n  nameWithType: DataContext.ObjectTrackingEnabled\n  fullName: DataContext.ObjectTrackingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.QueryCacheEnabled*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: QueryCacheEnabled\n  nameWithType: DataContext.QueryCacheEnabled\n  fullName: DataContext.QueryCacheEnabled\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Transaction*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Transaction\n  nameWithType: DataContext.Transaction\n  fullName: DataContext.Transaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Data.Linq.DataContext.Translate``1*\n  parent: System.Data.Linq.DataContext\n  isExternal: false\n  name: Translate<TResult>\n  nameWithType: DataContext.Translate<TResult>\n  fullName: DataContext.Translate<TResult>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}