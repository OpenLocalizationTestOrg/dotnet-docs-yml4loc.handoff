{"nodes":[{"content":"Provides a set of utility functions for manipulating security permision sets and signing.","nodes":[{"pos":[0,89],"content":"Provides a set of utility functions for manipulating security permision sets and signing.","nodes":[{"content":"Provides a set of utility functions for manipulating security permision sets and signing.","pos":[0,89]}]}],"pos":[1495,1585],"yaml":true},{"content":"Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.","nodes":[{"pos":[0,144],"content":"Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.","nodes":[{"content":"Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.","pos":[0,144]}]}],"pos":[3605,3750],"yaml":true},{"content":"Specifies a zone default permission set, which is obtained from machine policy. Valid values are `Internet`, `LocalIntranet`, or `Custom`. If `Custom` is specified, the generated permission set is based only on the <code>includedPermissionSet</code> parameter.","nodes":[{"pos":[0,260],"content":"Specifies a zone default permission set, which is obtained from machine policy. Valid values are `Internet`, `LocalIntranet`, or `Custom`. If `Custom` is specified, the generated permission set is based only on the <code>includedPermissionSet</code> parameter.","nodes":[{"content":"Specifies a zone default permission set, which is obtained from machine policy.","pos":[0,79]},{"content":"Valid values are <ph id=\"ph1\">`Internet`</ph>, <ph id=\"ph2\">`LocalIntranet`</ph>, or <ph id=\"ph3\">`Custom`</ph>.","pos":[80,138],"source":" Valid values are `Internet`, `LocalIntranet`, or `Custom`."},{"content":"If <ph id=\"ph1\">`Custom`</ph> is specified, the generated permission set is based only on the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">includedPermissionSet</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[139,260],"source":" If `Custom` is specified, the generated permission set is based only on the <code>includedPermissionSet</code> parameter."}]}],"pos":[4028,4289],"yaml":true},{"content":"A <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet\"></xref> object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <code>targetZone</code> or <code>excludedPermissions</code> parameters.","nodes":[{"pos":[0,382],"content":"A <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet\"></xref> object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <code>targetZone</code> or <code>excludedPermissions</code> parameters.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet\"&gt;&lt;/xref&gt;</ph> object containing the set of permissions to be explicitly included in the generated permission set.","pos":[0,197],"source":"A <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet\"></xref> object containing the set of permissions to be explicitly included in the generated permission set."},{"content":"Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">excludedPermissions</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","pos":[198,382],"source":" Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <code>targetZone</code> or <code>excludedPermissions</code> parameters."}]}],"pos":[4382,4765],"yaml":true},{"content":"An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\"></xref> method. This parameter is ignored if <code>targetZone</code> is not `Internet` or `LocalIntranet`.","nodes":[{"pos":[0,394],"content":"An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\"></xref> method. This parameter is ignored if <code>targetZone</code> is not `Internet` or `LocalIntranet`.","nodes":[{"content":"An array of permission identity strings to be excluded from the zone default permission set.","pos":[0,92]},{"content":"Permission identity strings can be computed using the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\"&gt;&lt;/xref&gt;</ph> method.","pos":[93,303],"source":" Permission identity strings can be computed using the <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\"></xref> method."},{"content":"This parameter is ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">targetZone</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph2\">`Internet`</ph> or <ph id=\"ph3\">`LocalIntranet`</ph>.","pos":[304,394],"source":" This parameter is ignored if <code>targetZone</code> is not `Internet` or `LocalIntranet`."}]}],"pos":[4842,5237],"yaml":true},{"content":"Returns the generated permission set.","nodes":[{"pos":[0,37],"content":"Returns the generated permission set.","nodes":[{"content":"Returns the generated permission set.","pos":[0,37]}]}],"pos":[5310,5348],"yaml":true},{"content":"Converts an array of permission identity strings to a permission set object.","nodes":[{"pos":[0,76],"content":"Converts an array of permission identity strings to a permission set object.","nodes":[{"content":"Converts an array of permission identity strings to a permission set object.","pos":[0,76]}]}],"pos":[6762,6839],"yaml":true},{"content":"An array of permission identity strings.","nodes":[{"pos":[0,40],"content":"An array of permission identity strings.","nodes":[{"content":"An array of permission identity strings.","pos":[0,40]}]}],"pos":[7027,7068],"yaml":true},{"content":"Returns the converted permission set.","nodes":[{"pos":[0,37],"content":"Returns the converted permission set.","nodes":[{"content":"Returns the converted permission set.","pos":[0,37]}]}],"pos":[7141,7179],"yaml":true},{"content":"Converts a permission set object to an array of permission identity strings.","nodes":[{"pos":[0,76],"content":"Converts a permission set object to an array of permission identity strings.","nodes":[{"content":"Converts a permission set object to an array of permission identity strings.","pos":[0,76]}]}],"pos":[8653,8730],"yaml":true},{"content":"The input permission set to be converted.","nodes":[{"pos":[0,41],"content":"The input permission set to be converted.","nodes":[{"content":"The input permission set to be converted.","pos":[0,41]}]}],"pos":[8952,8994],"yaml":true},{"content":"Returns an array of permission identity strings.","nodes":[{"pos":[0,48],"content":"Returns an array of permission identity strings.","nodes":[{"content":"Returns an array of permission identity strings.","pos":[0,48]}]}],"pos":[9053,9102],"yaml":true},{"content":"Signs a ClickOnce manifest or PE file.","nodes":[{"pos":[0,38],"content":"Signs a ClickOnce manifest or PE file.","nodes":[{"content":"Signs a ClickOnce manifest or PE file.","pos":[0,38]}]}],"pos":[10684,10723],"yaml":true},{"content":"This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the current user's personal certificate store.  \n  \n This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to be installed.","nodes":[{"pos":[0,146],"content":"This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the current user's personal certificate store.","nodes":[{"content":"This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the current user's personal certificate store.","pos":[0,146]}]},{"pos":[153,295],"content":"This overload of the method calls SignTool.exe and therefore requires the <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to be installed.","source":"This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to be installed."}],"pos":[10734,11034],"yaml":true,"extradata":"MT"},{"content":"The certificate to be used to sign the file.","nodes":[{"pos":[0,44],"content":"The certificate to be used to sign the file.","nodes":[{"content":"The certificate to be used to sign the file.","pos":[0,44]}]}],"pos":[11312,11357],"yaml":true},{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","nodes":[{"pos":[0,158],"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","nodes":[{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","pos":[0,158],"nodes":[{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address.","pos":[0,99]},{"content":"This parameter can be NULL if you do not want a timestamp.","pos":[100,158]}]}]}],"pos":[11422,11581],"yaml":true},{"content":"The name of the file to sign.","nodes":[{"pos":[0,29],"content":"The name of the file to sign.","nodes":[{"content":"The name of the file to sign.","pos":[0,29]}]}],"pos":[11641,11671],"yaml":true},{"content":"Signs a ClickOnce manifest or PE file.","nodes":[{"pos":[0,38],"content":"Signs a ClickOnce manifest or PE file.","nodes":[{"content":"Signs a ClickOnce manifest or PE file.","pos":[0,38]}]}],"pos":[13057,13096],"yaml":true},{"content":"This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to be installed.","nodes":[{"pos":[0,142],"content":"This overload of the method calls SignTool.exe and therefore requires the <ph id=\"ph1\">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to be installed.","source":"This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to be installed."}],"pos":[13107,13250],"yaml":true,"extradata":"MT"},{"content":"Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.","nodes":[{"pos":[0,126],"content":"Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.","nodes":[{"content":"Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.","pos":[0,126]}]}],"pos":[13443,13570],"yaml":true},{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","nodes":[{"pos":[0,158],"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","nodes":[{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","pos":[0,158],"nodes":[{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address.","pos":[0,99]},{"content":"This parameter can be NULL if you do not want a timestamp.","pos":[100,158]}]}]}],"pos":[13635,13794],"yaml":true},{"content":"The name of the file to sign.","nodes":[{"pos":[0,29],"content":"The name of the file to sign.","nodes":[{"content":"The name of the file to sign.","pos":[0,29]}]}],"pos":[13854,13884],"yaml":true},{"content":"Signs a ClickOnce manifest.","nodes":[{"pos":[0,27],"content":"Signs a ClickOnce manifest.","nodes":[{"content":"Signs a ClickOnce manifest.","pos":[0,27]}]}],"pos":[15399,15427],"yaml":true},{"content":"This function is only for signing a manifest, not a PE file.","nodes":[{"pos":[0,60],"content":"This function is only for signing a manifest, not a PE file.","nodes":[{"content":"This function is only for signing a manifest, not a PE file.","pos":[0,60]}]}],"pos":[15438,15499],"yaml":true,"extradata":"MT"},{"content":"The certificate to be used to sign the file. The certificate must contain a private key. The `KeyUsage` extension is optional, but if it is present, `DigitalSignature` must be set to `True`. The `EnhancedKeyUsage` extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.","nodes":[{"pos":[0,325],"content":"The certificate to be used to sign the file. The certificate must contain a private key. The `KeyUsage` extension is optional, but if it is present, `DigitalSignature` must be set to `True`. The `EnhancedKeyUsage` extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.","nodes":[{"content":"The certificate to be used to sign the file.","pos":[0,44]},{"content":"The certificate must contain a private key.","pos":[45,88]},{"content":"The <ph id=\"ph1\">`KeyUsage`</ph> extension is optional, but if it is present, <ph id=\"ph2\">`DigitalSignature`</ph> must be set to <ph id=\"ph3\">`True`</ph>.","pos":[89,190],"source":" The `KeyUsage` extension is optional, but if it is present, `DigitalSignature` must be set to `True`."},{"content":"The <ph id=\"ph1\">`EnhancedKeyUsage`</ph> extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.","pos":[191,325],"source":" The `EnhancedKeyUsage` extension is also optional, but if it is present, the certificate must contain object identifier (OID) support."}]}],"pos":[15723,16049],"yaml":true},{"content":"The certificate password.","nodes":[{"pos":[0,25],"content":"The certificate password.","nodes":[{"content":"The certificate password.","pos":[0,25]}]}],"pos":[16132,16158],"yaml":true},{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","nodes":[{"pos":[0,158],"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","nodes":[{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.","pos":[0,158],"nodes":[{"content":"Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address.","pos":[0,99]},{"content":"This parameter can be NULL if you do not want a timestamp.","pos":[100,158]}]}]}],"pos":[16223,16382],"yaml":true},{"content":"The name of the file to sign.","nodes":[{"pos":[0,29],"content":"The name of the file to sign.","nodes":[{"content":"The name of the file to sign.","pos":[0,29]}]}],"pos":[16442,16472],"yaml":true},{"content":"Converts an XML element to a permission set object.","nodes":[{"pos":[0,51],"content":"Converts an XML element to a permission set object.","nodes":[{"content":"Converts an XML element to a permission set object.","pos":[0,51]}]}],"pos":[17840,17892],"yaml":true},{"content":"Converts an <xref:System.Xml.XmlElement> object to a <xref:System.Security.PermissionSet> object.","nodes":[{"pos":[0,97],"content":"Converts an <xref:System.Xml.XmlElement> object to a <xref:System.Security.PermissionSet> object.","nodes":[{"content":"Converts an <ph id=\"ph1\">&lt;xref:System.Xml.XmlElement&gt;</ph> object to a <ph id=\"ph2\">&lt;xref:System.Security.PermissionSet&gt;</ph> object.","pos":[0,97],"source":"Converts an <xref:System.Xml.XmlElement> object to a <xref:System.Security.PermissionSet> object."}]}],"pos":[17903,18001],"yaml":true,"extradata":"MT"},{"content":"An XML representation of the permission set.","nodes":[{"pos":[0,44],"content":"An XML representation of the permission set.","nodes":[{"content":"An XML representation of the permission set.","pos":[0,44]}]}],"pos":[18207,18252],"yaml":true},{"content":"The converted permission set object.","nodes":[{"pos":[0,36],"content":"The converted permission set object.","nodes":[{"content":"The converted permission set object.","pos":[0,36]}]}],"pos":[18325,18362],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  commentId: T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  id: SecurityUtilities\n  children:\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)\n  - Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)\n  langs:\n  - csharp\n  name: SecurityUtilities\n  nameWithType: SecurityUtilities\n  fullName: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  type: Class\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Provides a set of utility functions for manipulating security permision sets and signing.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public static class SecurityUtilities\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])\n  id: ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: ComputeZonePermissionSet(String, PermissionSet, String[])\n  nameWithType: SecurityUtilities.ComputeZonePermissionSet(String, PermissionSet, String[])\n  fullName: SecurityUtilities.ComputeZonePermissionSet(String, PermissionSet, String[])\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Generates a permission set by computing the zone default permission set, removing any excluded permissions, and adding any included permissions.\n  syntax:\n    content: public static System.Security.PermissionSet ComputeZonePermissionSet (string targetZone, System.Security.PermissionSet includedPermissionSet, string[] excludedPermissions);\n    parameters:\n    - id: targetZone\n      type: System.String\n      description: Specifies a zone default permission set, which is obtained from machine policy. Valid values are `Internet`, `LocalIntranet`, or `Custom`. If `Custom` is specified, the generated permission set is based only on the <code>includedPermissionSet</code> parameter.\n    - id: includedPermissionSet\n      type: System.Security.PermissionSet\n      description: A <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet\"></xref> object containing the set of permissions to be explicitly included in the generated permission set. Permissions specified in this parameter will be included verbatim in the generated permission set, regardless of <code>targetZone</code> or <code>excludedPermissions</code> parameters.\n    - id: excludedPermissions\n      type: System.String[]\n      description: An array of permission identity strings to be excluded from the zone default permission set. Permission identity strings can be computed using the <xref href=\"Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\"></xref> method. This parameter is ignored if <code>targetZone</code> is not `Internet` or `LocalIntranet`.\n    return:\n      type: System.Security.PermissionSet\n      description: Returns the generated permission set.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])\n  id: IdentityListToPermissionSet(System.String[])\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: IdentityListToPermissionSet(String[])\n  nameWithType: SecurityUtilities.IdentityListToPermissionSet(String[])\n  fullName: SecurityUtilities.IdentityListToPermissionSet(String[])\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Converts an array of permission identity strings to a permission set object.\n  syntax:\n    content: public static System.Security.PermissionSet IdentityListToPermissionSet (string[] ids);\n    parameters:\n    - id: ids\n      type: System.String[]\n      description: An array of permission identity strings.\n    return:\n      type: System.Security.PermissionSet\n      description: Returns the converted permission set.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\n  id: PermissionSetToIdentityList(System.Security.PermissionSet)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: PermissionSetToIdentityList(PermissionSet)\n  nameWithType: SecurityUtilities.PermissionSetToIdentityList(PermissionSet)\n  fullName: SecurityUtilities.PermissionSetToIdentityList(PermissionSet)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Converts a permission set object to an array of permission identity strings.\n  syntax:\n    content: public static string[] PermissionSetToIdentityList (System.Security.PermissionSet permissionSet);\n    parameters:\n    - id: permissionSet\n      type: System.Security.PermissionSet\n      description: The input permission set to be converted.\n    return:\n      type: System.String[]\n      description: Returns an array of permission identity strings.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)\n  id: SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: SignFile(X509Certificate2, Uri, String)\n  nameWithType: SecurityUtilities.SignFile(X509Certificate2, Uri, String)\n  fullName: SecurityUtilities.SignFile(X509Certificate2, Uri, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Signs a ClickOnce manifest or PE file.\n  remarks: \"This function can only sign a PE file if the X509Certificate2 parameter represents a certificate in the current user's personal certificate store.  \\n  \\n This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to be installed.\"\n  syntax:\n    content: public static void SignFile (System.Security.Cryptography.X509Certificates.X509Certificate2 cert, Uri timestampUrl, string path);\n    parameters:\n    - id: cert\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The certificate to be used to sign the file.\n    - id: timestampUrl\n      type: System.Uri\n      description: Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.\n    - id: path\n      type: System.String\n      description: The name of the file to sign.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)\n  id: SignFile(System.String,System.Uri,System.String)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: SignFile(String, Uri, String)\n  nameWithType: SecurityUtilities.SignFile(String, Uri, String)\n  fullName: SecurityUtilities.SignFile(String, Uri, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Signs a ClickOnce manifest or PE file.\n  remarks: This overload of the method calls SignTool.exe and therefore requires the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to be installed.\n  syntax:\n    content: public static void SignFile (string certThumbprint, Uri timestampUrl, string path);\n    parameters:\n    - id: certThumbprint\n      type: System.String\n      description: Specifies the thumbprint, which is the SHA1 hash of the signing certificate, which is kept in your personal certificate store.\n    - id: timestampUrl\n      type: System.Uri\n      description: Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.\n    - id: path\n      type: System.String\n      description: The name of the file to sign.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)\n  id: SignFile(System.String,System.Security.SecureString,System.Uri,System.String)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: SignFile(String, SecureString, Uri, String)\n  nameWithType: SecurityUtilities.SignFile(String, SecureString, Uri, String)\n  fullName: SecurityUtilities.SignFile(String, SecureString, Uri, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Signs a ClickOnce manifest.\n  remarks: This function is only for signing a manifest, not a PE file.\n  syntax:\n    content: public static void SignFile (string certPath, System.Security.SecureString certPassword, Uri timestampUrl, string path);\n    parameters:\n    - id: certPath\n      type: System.String\n      description: The certificate to be used to sign the file. The certificate must contain a private key. The `KeyUsage` extension is optional, but if it is present, `DigitalSignature` must be set to `True`. The `EnhancedKeyUsage` extension is also optional, but if it is present, the certificate must contain object identifier (OID) support.\n    - id: certPassword\n      type: System.Security.SecureString\n      description: The certificate password.\n    - id: timestampUrl\n      type: System.Uri\n      description: Indicates that the file is to be timestamped by the timestamp server at the specified HTTP address. This parameter can be NULL if you do not want a timestamp.\n    - id: path\n      type: System.String\n      description: The name of the file to sign.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)\n  commentId: M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)\n  id: XmlToPermissionSet(System.Xml.XmlElement)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  langs:\n  - csharp\n  name: XmlToPermissionSet(XmlElement)\n  nameWithType: SecurityUtilities.XmlToPermissionSet(XmlElement)\n  fullName: SecurityUtilities.XmlToPermissionSet(XmlElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks.Deployment.ManifestUtilities\n  summary: Converts an XML element to a permission set object.\n  remarks: Converts an <xref:System.Xml.XmlElement> object to a <xref:System.Security.PermissionSet> object.\n  syntax:\n    content: public static System.Security.PermissionSet XmlToPermissionSet (System.Xml.XmlElement element);\n    parameters:\n    - id: element\n      type: System.Xml.XmlElement\n      description: An XML representation of the permission set.\n    return:\n      type: System.Security.PermissionSet\n      description: The converted permission set object.\n  overload: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: ComputeZonePermissionSet(String, PermissionSet, String[])\n  nameWithType: SecurityUtilities.ComputeZonePermissionSet(String, PermissionSet, String[])\n  fullName: SecurityUtilities.ComputeZonePermissionSet(String, PermissionSet, String[])\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: IdentityListToPermissionSet(String[])\n  nameWithType: SecurityUtilities.IdentityListToPermissionSet(String[])\n  fullName: SecurityUtilities.IdentityListToPermissionSet(String[])\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: PermissionSetToIdentityList(PermissionSet)\n  nameWithType: SecurityUtilities.PermissionSetToIdentityList(PermissionSet)\n  fullName: SecurityUtilities.PermissionSetToIdentityList(PermissionSet)\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: SignFile(X509Certificate2, Uri, String)\n  nameWithType: SecurityUtilities.SignFile(X509Certificate2, Uri, String)\n  fullName: SecurityUtilities.SignFile(X509Certificate2, Uri, String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: SignFile(String, Uri, String)\n  nameWithType: SecurityUtilities.SignFile(String, Uri, String)\n  fullName: SecurityUtilities.SignFile(String, Uri, String)\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: SignFile(String, SecureString, Uri, String)\n  nameWithType: SecurityUtilities.SignFile(String, SecureString, Uri, String)\n  fullName: SecurityUtilities.SignFile(String, SecureString, Uri, String)\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: XmlToPermissionSet(XmlElement)\n  nameWithType: SecurityUtilities.XmlToPermissionSet(XmlElement)\n  fullName: SecurityUtilities.XmlToPermissionSet(XmlElement)\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet*\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: ComputeZonePermissionSet\n  nameWithType: SecurityUtilities.ComputeZonePermissionSet\n  fullName: SecurityUtilities.ComputeZonePermissionSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet*\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: IdentityListToPermissionSet\n  nameWithType: SecurityUtilities.IdentityListToPermissionSet\n  fullName: SecurityUtilities.IdentityListToPermissionSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList*\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: PermissionSetToIdentityList\n  nameWithType: SecurityUtilities.PermissionSetToIdentityList\n  fullName: SecurityUtilities.PermissionSetToIdentityList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile*\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: SignFile\n  nameWithType: SecurityUtilities.SignFile\n  fullName: SecurityUtilities.SignFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n- uid: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet*\n  parent: Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities\n  isExternal: false\n  name: XmlToPermissionSet\n  nameWithType: SecurityUtilities.XmlToPermissionSet\n  fullName: SecurityUtilities.XmlToPermissionSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks.Deployment.ManifestUtilities/SecurityUtilities.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}