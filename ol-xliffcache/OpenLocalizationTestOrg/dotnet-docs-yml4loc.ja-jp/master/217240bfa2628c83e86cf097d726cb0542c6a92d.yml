### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
  id: PrivilegeNotHeldException
  children:
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  - System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  langs:
  - csharp
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
  type: Class
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: The exception that is thrown when a method in the <xref href="System.Security.AccessControl"></xref> namespace attempts to enable a privilege that it does not have.
  syntax:
    content: 'public sealed class PrivilegeNotHeldException : UnauthorizedAccessException'
  inheritance:
  - System.Object
  - System.Exception
  - System.UnauthorizedAccessException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeNotHeldException()
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException()
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException()
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.PrivilegeNotHeldException"></xref> class.
  syntax:
    content: public PrivilegeNotHeldException ();
    parameters: []
  overload: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeNotHeldException(String)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String)
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException(String)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.PrivilegeNotHeldException"></xref> class by using the specified privilege.
  syntax:
    content: public PrivilegeNotHeldException (string privilege);
    parameters:
    - id: privilege
      type: System.String
      description: The privilege that is not enabled.
  overload: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeNotHeldException(String, Exception)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String, Exception)
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException(String, Exception)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.PrivilegeNotHeldException"></xref> class by using the specified exception.
  syntax:
    content: public PrivilegeNotHeldException (string privilege, Exception inner);
    parameters:
    - id: privilege
      type: System.String
      description: The privilege that is not enabled.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: PrivilegeNotHeldException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: PrivilegeNotHeldException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Sets the <code>info</code> parameter with information about the exception.
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext"></xref> that contains contextual information about the source or destination.
  overload: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  commentId: P:System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  id: PrivilegeName
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  name: PrivilegeName
  nameWithType: PrivilegeNotHeldException.PrivilegeName
  fullName: PrivilegeNotHeldException.PrivilegeName
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the name of the privilege that is not enabled.
  syntax:
    content: public string PrivilegeName { get; }
    return:
      type: System.String
      description: The name of the privilege that the method failed to enable.
  overload: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException()
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException()
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException()
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException(String)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String)
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException(String, Exception)
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException(String, Exception)
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: PrivilegeNotHeldException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: PrivilegeNotHeldException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeName
  nameWithType: PrivilegeNotHeldException.PrivilegeName
  fullName: PrivilegeNotHeldException.PrivilegeName
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor*
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException.PrivilegeNotHeldException
  fullName: PrivilegeNotHeldException.PrivilegeNotHeldException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
- uid: System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData*
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: GetObjectData
  nameWithType: PrivilegeNotHeldException.GetObjectData
  fullName: PrivilegeNotHeldException.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName*
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeName
  nameWithType: PrivilegeNotHeldException.PrivilegeName
  fullName: PrivilegeNotHeldException.PrivilegeName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/PrivilegeNotHeldException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: Exception.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  nameWithType: Exception.Message
  fullName: Exception.Message
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
