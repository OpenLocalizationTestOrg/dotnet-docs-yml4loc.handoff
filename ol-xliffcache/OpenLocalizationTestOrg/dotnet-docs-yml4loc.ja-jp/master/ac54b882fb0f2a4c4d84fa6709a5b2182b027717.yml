### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService
  commentId: T:System.ComponentModel.Design.ITypeDescriptorFilterService
  id: ITypeDescriptorFilterService
  children:
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  langs:
  - csharp
  name: ITypeDescriptorFilterService
  nameWithType: ITypeDescriptorFilterService
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService
  type: Interface
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Provides an interface to modify the set of member descriptors for a component in design mode.
  remarks: "The <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> interface provides an interface that allows modification of the properties, events, and class-level attributes of a component at design time. This modification occurs through the set of descriptors that a component provides through a <xref:System.ComponentModel.TypeDescriptor>. The type descriptor will query a component's site for the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service and, if it exists, the type descriptor will pass all metadata it has collected to this service. The service can then modify the metadata by adding, removing, and altering existing characteristics of the component.  \n  \n For example, the properties of a component can be modified through a call to the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> method. The filter service obtains a dictionary that contains property names and their property descriptors of type <xref:System.ComponentModel.PropertyDescriptor>. The modifications are implemented using the following logic.  \n  \n|Modification|Implementation|  \n|------------------|--------------------|  \n|Removal|Delete the corresponding entry in the dictionary.|  \n|Addition|Add the appropriate entry to the dictionary.|  \n|Alteration|Call existing property descriptor methods, replace the associated property descriptor entry, or replace the entire property key/value pair in the dictionary.|  \n  \n The return value of <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> determines if this set of properties is fixed. If this method returns `true`, the <xref:System.ComponentModel.TypeDescriptor> for this component can cache the results. This cache is maintained until either the component is garbage collected or the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method of the type descriptor is called."
  example:
  - "The following code example demonstrates a designer that uses the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.  \n  \n To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n Add some buttons to your form. Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray. The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, as a design mode service provider. Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`. The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events. New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.  \n  \n [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]\n [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]\n [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]"
  syntax:
    content: public interface ITypeDescriptorFilterService
  derivedClasses:
  - System.Windows.Forms.Design.ComponentDocumentDesigner
  implements: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  commentId: M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterAttributes(IComponent, IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)
  fullName: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Filters the attributes that a component exposes through a <xref href="System.ComponentModel.TypeDescriptor"></xref>.
  remarks: This method is called when a user requests a set of attributes for a component. The attributes are added to the dictionary with the attribute's <xref:System.Attribute.TypeId%2A> as the keys and the actual attribute as the value. Implementers of this service can add, remove, or alter existing attribute entries in the dictionary.
  syntax:
    content: public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: The component to filter the attributes of.
    - id: attributes
      type: System.Collections.IDictionary
      description: A dictionary of attributes that can be modified.
    return:
      type: System.Boolean
      description: '`true` if the set of filtered attributes is to be cached; `false` if the filter service must query again.'
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  commentId: M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterEvents(IComponent, IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)
  fullName: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Filters the events that a component exposes through a <xref href="System.ComponentModel.TypeDescriptor"></xref>.
  remarks: This method is called when a user requests a set of events for a component. The events are added to the dictionary with the event names as the keys and the corresponding <xref:System.ComponentModel.EventDescriptor> objects as the values. Implementers of this service can add, remove, or alter event entries in the dictionary.
  syntax:
    content: public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: The component to filter events for.
    - id: events
      type: System.Collections.IDictionary
      description: A dictionary of events that can be modified.
    return:
      type: System.Boolean
      description: '`true` if the set of filtered events is to be cached; `false` if the filter service must query again.'
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  commentId: M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterProperties(IComponent, IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)
  fullName: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Filters the properties that a component exposes through a <xref href="System.ComponentModel.TypeDescriptor"></xref>.
  remarks: This method is called when a user requests a set of properties for a component. The properties are added to the dictionary with the property names as the keys and the corresponding <xref:System.ComponentModel.PropertyDescriptor> objects as the values. Implementers of this service can add, remove, or alter property entries in the dictionary.
  syntax:
    content: public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: The component to filter properties for.
    - id: properties
      type: System.Collections.IDictionary
      description: A dictionary of properties that can be modified.
    return:
      type: System.Boolean
      description: '`true` if the set of filtered properties is to be cached; `false` if the filter service must query again.'
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes(IComponent, IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)
  fullName: ITypeDescriptorFilterService.FilterAttributes(IComponent, IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents(IComponent, IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)
  fullName: ITypeDescriptorFilterService.FilterEvents(IComponent, IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties(IComponent, IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)
  fullName: ITypeDescriptorFilterService.FilterProperties(IComponent, IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes
  nameWithType: ITypeDescriptorFilterService.FilterAttributes
  fullName: ITypeDescriptorFilterService.FilterAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents
  nameWithType: ITypeDescriptorFilterService.FilterEvents
  fullName: ITypeDescriptorFilterService.FilterEvents
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties
  nameWithType: ITypeDescriptorFilterService.FilterProperties
  fullName: ITypeDescriptorFilterService.FilterProperties
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDescriptorFilterService.xml
