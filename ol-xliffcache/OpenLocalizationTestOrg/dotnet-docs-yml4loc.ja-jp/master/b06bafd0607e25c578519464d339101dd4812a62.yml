### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityElement
  commentId: T:System.Security.SecurityElement
  id: SecurityElement
  children:
  - System.Security.SecurityElement.#ctor(System.String)
  - System.Security.SecurityElement.#ctor(System.String,System.String)
  - System.Security.SecurityElement.AddAttribute(System.String,System.String)
  - System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  - System.Security.SecurityElement.Attribute(System.String)
  - System.Security.SecurityElement.Attributes
  - System.Security.SecurityElement.Children
  - System.Security.SecurityElement.Copy
  - System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  - System.Security.SecurityElement.Escape(System.String)
  - System.Security.SecurityElement.FromString(System.String)
  - System.Security.SecurityElement.IsValidAttributeName(System.String)
  - System.Security.SecurityElement.IsValidAttributeValue(System.String)
  - System.Security.SecurityElement.IsValidTag(System.String)
  - System.Security.SecurityElement.IsValidText(System.String)
  - System.Security.SecurityElement.SearchForChildByTag(System.String)
  - System.Security.SecurityElement.SearchForTextOfTag(System.String)
  - System.Security.SecurityElement.Tag
  - System.Security.SecurityElement.Text
  - System.Security.SecurityElement.ToString
  langs:
  - csharp
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Represents the XML object model for encoding security objects. This class cannot be inherited.
  remarks: "This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model. This documentation assumes a basic knowledge of XML.  \n  \n The simple XML object model for an element consists of the following parts:  \n  \n-   The tag is the element name.  \n  \n-   The attributes are zero or more name/value attribute pairs on the element.  \n  \n-   The children are zero or more elements nested within `<tag>` and `</tag>`.  \n  \n It is strongly suggested that attribute based XML representation is used to express security elements and their values. This means properties of an element are expressed as attributes and property values are expressed as attribute values. Avoid nesting text within tags. For any `<tag>text</tag>` representation a representation of type `<tag value=\"text\"/>` is usually available. Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.  \n  \n An attribute name must be one character or longer, and cannot be `null`. If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens. Both forms can be combined with attributes, which are shown if present.  \n  \n The tags, attributes, and text of elements, if present, are always case-sensitive. The XML form contains quotations and escapes where necessary. String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>. These rules apply to all properties and methods.  \n  \n> [!NOTE]\n>  For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method. Static methods allow explicit checking where needed."
  example:
  - "The following example shows the use of members of the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]\n [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]\n [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SecurityElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.#ctor(System.String)
  commentId: M:System.Security.SecurityElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SecurityElement(String)
  nameWithType: SecurityElement.SecurityElement(String)
  fullName: SecurityElement.SecurityElement(String)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Initializes a new instance of the <xref href="System.Security.SecurityElement"></xref> class with the specified tag.
  remarks: The `tag` parameter must consist of a valid XML tag name. Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.
  example:
  - "The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.  This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]\n [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]\n [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]"
  syntax:
    content: public SecurityElement (string tag);
    parameters:
    - id: tag
      type: System.String
      description: The tag name of an XML element.
  overload: System.Security.SecurityElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>tag</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>tag</code> parameter is invalid in XML.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.#ctor(System.String,System.String)
  commentId: M:System.Security.SecurityElement.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SecurityElement(String, String)
  nameWithType: SecurityElement.SecurityElement(String, String)
  fullName: SecurityElement.SecurityElement(String, String)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Initializes a new instance of the <xref href="System.Security.SecurityElement"></xref> class with the specified tag and text.
  remarks: If the `text` parameter is `null` this constructor produces an element identical to the default constructor.
  syntax:
    content: public SecurityElement (string tag, string text);
    parameters:
    - id: tag
      type: System.String
      description: The tag name of the XML element.
    - id: text
      type: System.String
      description: The text content within the element.
  overload: System.Security.SecurityElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>tag</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>tag</code> parameter or <code>text</code> parameter is invalid in XML.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.AddAttribute(System.String,System.String)
  commentId: M:System.Security.SecurityElement.AddAttribute(System.String,System.String)
  id: AddAttribute(System.String,System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: AddAttribute(String, String)
  nameWithType: SecurityElement.AddAttribute(String, String)
  fullName: SecurityElement.AddAttribute(String, String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Adds a name/value attribute to an XML element.
  remarks: "Names and values in attributes should only contain valid XML attribute characters. XML attribute names must be unique. Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.  \n  \n There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting."
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]\n [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]\n [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]"
  syntax:
    content: public void AddAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: The name of the attribute.
    - id: value
      type: System.String
      description: The value of the attribute.
  overload: System.Security.SecurityElement.AddAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter or <code>value</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>name</code> parameter or <code>value</code> parameter is invalid in XML.  \n  \n -or-  \n  \n An attribute with the name specified by the <code>name</code> parameter already exists."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  commentId: M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  id: AddChild(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: AddChild(SecurityElement)
  nameWithType: SecurityElement.AddChild(SecurityElement)
  fullName: SecurityElement.AddChild(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Adds a child element to the XML element.
  remarks: The child element is added following any previously existing child elements.
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.  This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]\n [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]\n [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]"
  syntax:
    content: public void AddChild (System.Security.SecurityElement child);
    parameters:
    - id: child
      type: System.Security.SecurityElement
      description: The child element to add.
  overload: System.Security.SecurityElement.AddChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>child</code> parameter is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Attribute(System.String)
  commentId: M:System.Security.SecurityElement.Attribute(System.String)
  id: Attribute(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Attribute(String)
  nameWithType: SecurityElement.Attribute(String)
  fullName: SecurityElement.Attribute(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Finds an attribute by name in an XML element.
  remarks: "With XML as follows, `Attribute(\"B\")` would return \"456\".  \n  \n```  \n<thetag A=\"123\" B=\"456\" C=\"789\">text</thetag>  \n```"
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]\n [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]\n [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]"
  syntax:
    content: public string Attribute (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the attribute for which to search.
    return:
      type: System.String
      description: The value associated with the named attribute, or `null` if no attribute with <code>name</code> exists.
  overload: System.Security.SecurityElement.Attribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Attributes
  commentId: P:System.Security.SecurityElement.Attributes
  id: Attributes
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Attributes
  nameWithType: SecurityElement.Attributes
  fullName: SecurityElement.Attributes
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Gets or sets the attributes of an XML element as name/value pairs.
  remarks: "Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.  \n  \n Names and values in attributes should contain only valid XML attribute characters. Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.  \n  \n There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting."
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]\n [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]\n [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]"
  syntax:
    content: public System.Collections.Hashtable Attributes { get; set; }
    return:
      type: System.Collections.Hashtable
      description: The <xref href="System.Collections.Hashtable"></xref> object for the attribute values of the XML element.
  overload: System.Security.SecurityElement.Attributes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The name or value of the <xref href="System.Collections.Hashtable"></xref> object is invalid.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The name is not a valid XML attribute name.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Children
  commentId: P:System.Security.SecurityElement.Children
  id: Children
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Children
  nameWithType: SecurityElement.Children
  fullName: SecurityElement.Children
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Gets or sets the array of child elements of the XML element.
  remarks: If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]\n [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]\n [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]"
  syntax:
    content: public System.Collections.ArrayList Children { get; set; }
    return:
      type: System.Collections.ArrayList
      description: The ordered child elements of the XML element as security elements.
  overload: System.Security.SecurityElement.Children*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A child of the XML parent node is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Copy
  commentId: M:System.Security.SecurityElement.Copy
  id: Copy
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Copy()
  nameWithType: SecurityElement.Copy()
  fullName: SecurityElement.Copy()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Creates and returns an identical copy of the current <xref href="System.Security.SecurityElement"></xref> object.
  remarks: The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public System.Security.SecurityElement Copy ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: A copy of the current <xref href="System.Security.SecurityElement"></xref> object.
  overload: System.Security.SecurityElement.Copy*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  commentId: M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  id: Equal(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Equal(SecurityElement)
  nameWithType: SecurityElement.Equal(SecurityElement)
  fullName: SecurityElement.Equal(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Compares two XML element objects for equality.
  remarks: "If there are child elements, comparison extends recursively to them.  \n  \n There is no support for comparing different XML representations of the same characters."
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]\n [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]\n [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]"
  syntax:
    content: public bool Equal (System.Security.SecurityElement other);
    parameters:
    - id: other
      type: System.Security.SecurityElement
      description: An XML element object to which to compare the current XML element object.
    return:
      type: System.Boolean
      description: '`true` if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <code>other</code> parameter; otherwise, `false`.'
  overload: System.Security.SecurityElement.Equal*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Escape(System.String)
  commentId: M:System.Security.SecurityElement.Escape(System.String)
  id: Escape(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Escape(String)
  nameWithType: SecurityElement.Escape(String)
  fullName: SecurityElement.Escape(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Replaces invalid XML characters in a string with their valid XML equivalent.
  remarks: "Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>. If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.  \n  \n The following table shows the invalid XML characters and their escaped equivalents.  \n  \n|invalid XML Character|Replaced With|  \n|---------------------------|-------------------|  \n|\"\\<\"|\"&lt;\"|  \n|\">\"|\"&gt;\"|  \n|\"\\\\\"\"|\"&quot;\"|  \n|\"\\\\'\"|\"&apos;\"|  \n|\"&\"|\"&amp;\"|"
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]\n [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]\n [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]"
  syntax:
    content: public static string Escape (string str);
    parameters:
    - id: str
      type: System.String
      description: The string within which to escape invalid characters.
    return:
      type: System.String
      description: The input string with invalid characters replaced.
  overload: System.Security.SecurityElement.Escape*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.FromString(System.String)
  commentId: M:System.Security.SecurityElement.FromString(System.String)
  id: FromString(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: FromString(String)
  nameWithType: SecurityElement.FromString(String)
  fullName: SecurityElement.FromString(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Creates a security element from an XML-encoded string.
  remarks: "Do not use single quotation marks in the XML string; instead, use escaped double quotation marks. For example, instead of \"`<value name='Company'>Microsoft</value>\"` use \"`<value name=\\\"Company\\\">Microsoft</value>\"`.  \n  \n Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string."
  syntax:
    content: public static System.Security.SecurityElement FromString (string xml);
    parameters:
    - id: xml
      type: System.String
      description: The XML-encoded string from which to create the security element.
    return:
      type: System.Security.SecurityElement
      description: A <xref href="System.Security.SecurityElement"></xref> created from the XML.
  overload: System.Security.SecurityElement.FromString*
  exceptions:
  - type: System.Security.XmlSyntaxException
    commentId: T:System.Security.XmlSyntaxException
    description: <code>xml</code> contains one or more single quotation mark characters.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>xml</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.IsValidAttributeName(System.String)
  commentId: M:System.Security.SecurityElement.IsValidAttributeName(System.String)
  id: IsValidAttributeName(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidAttributeName(String)
  nameWithType: SecurityElement.IsValidAttributeName(String)
  fullName: SecurityElement.IsValidAttributeName(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Determines whether a string is a valid attribute name.
  remarks: This method can be used to test an attribute before adding it to a security element.
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]\n [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]\n [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]"
  syntax:
    content: public static bool IsValidAttributeName (string name);
    parameters:
    - id: name
      type: System.String
      description: The attribute name to test for validity.
    return:
      type: System.Boolean
      description: '`true` if the <code>name</code> parameter is a valid XML attribute name; otherwise, `false`.'
  overload: System.Security.SecurityElement.IsValidAttributeName*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.IsValidAttributeValue(System.String)
  commentId: M:System.Security.SecurityElement.IsValidAttributeValue(System.String)
  id: IsValidAttributeValue(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidAttributeValue(String)
  nameWithType: SecurityElement.IsValidAttributeValue(String)
  fullName: SecurityElement.IsValidAttributeValue(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Determines whether a string is a valid attribute value.
  remarks: This method can be used to test an attribute before adding it to a security element.
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]\n [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]\n [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]"
  syntax:
    content: public static bool IsValidAttributeValue (string value);
    parameters:
    - id: value
      type: System.String
      description: The attribute value to test for validity.
    return:
      type: System.Boolean
      description: '`true` if the <code>value</code> parameter is a valid XML attribute value; otherwise, `false`.'
  overload: System.Security.SecurityElement.IsValidAttributeValue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.IsValidTag(System.String)
  commentId: M:System.Security.SecurityElement.IsValidTag(System.String)
  id: IsValidTag(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidTag(String)
  nameWithType: SecurityElement.IsValidTag(String)
  fullName: SecurityElement.IsValidTag(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Determines whether a string is a valid tag.
  remarks: This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]\n [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]\n [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]"
  syntax:
    content: public static bool IsValidTag (string tag);
    parameters:
    - id: tag
      type: System.String
      description: The tag to test for validity.
    return:
      type: System.Boolean
      description: '`true` if the <code>tag</code> parameter is a valid XML tag; otherwise, `false`.'
  overload: System.Security.SecurityElement.IsValidTag*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.IsValidText(System.String)
  commentId: M:System.Security.SecurityElement.IsValidText(System.String)
  id: IsValidText(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: IsValidText(String)
  nameWithType: SecurityElement.IsValidText(String)
  fullName: SecurityElement.IsValidText(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Determines whether a string is valid as text within an XML element.
  remarks: This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]\n [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]\n [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]"
  syntax:
    content: public static bool IsValidText (string text);
    parameters:
    - id: text
      type: System.String
      description: The text to test for validity.
    return:
      type: System.Boolean
      description: '`true` if the <code>text</code> parameter is a valid XML text element; otherwise, `false`.'
  overload: System.Security.SecurityElement.IsValidText*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.SearchForChildByTag(System.String)
  commentId: M:System.Security.SecurityElement.SearchForChildByTag(System.String)
  id: SearchForChildByTag(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SearchForChildByTag(String)
  nameWithType: SecurityElement.SearchForChildByTag(String)
  fullName: SecurityElement.SearchForChildByTag(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Finds a child by its tag name.
  remarks: "With XML as follows, `SearchForChildByTag(\"second\")` would return the child element `<second>`.  \n  \n```  \n<thetag A=\"123\" B=\"456\" C=\"789\"> <first>text1</first>  \n       <second>text2</second></thetag>  \n```"
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]\n [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]\n [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]"
  syntax:
    content: public System.Security.SecurityElement SearchForChildByTag (string tag);
    parameters:
    - id: tag
      type: System.String
      description: The tag for which to search in child elements.
    return:
      type: System.Security.SecurityElement
      description: The first child XML element with the specified tag value, or `null` if no child element with <code>tag</code> exists.
  overload: System.Security.SecurityElement.SearchForChildByTag*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>tag</code> parameter is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.SearchForTextOfTag(System.String)
  commentId: M:System.Security.SecurityElement.SearchForTextOfTag(System.String)
  id: SearchForTextOfTag(System.String)
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: SearchForTextOfTag(String)
  nameWithType: SecurityElement.SearchForTextOfTag(String)
  fullName: SecurityElement.SearchForTextOfTag(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Finds a child by its tag name and returns the contained text.
  remarks: "This method is equivalent to the following:  \n  \n [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]\n [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]\n [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  \n  \n With XML as follows, `SearchForTextOfTag(\"second\")` would return \"text2\".  \n  \n```  \n<thetag A=\"123\" B=\"456\" C=\"789\"> <first>text1</first>  \n    <second>text2</second></thetag>  \n```"
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]\n [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]\n [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]"
  syntax:
    content: public string SearchForTextOfTag (string tag);
    parameters:
    - id: tag
      type: System.String
      description: The tag for which to search in child elements.
    return:
      type: System.String
      description: The text contents of the first child element with the specified tag value.
  overload: System.Security.SecurityElement.SearchForTextOfTag*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>tag</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Tag
  commentId: P:System.Security.SecurityElement.Tag
  id: Tag
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Tag
  nameWithType: SecurityElement.Tag
  fullName: SecurityElement.Tag
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Gets or sets the tag name of an XML element.
  remarks: "In XML, the tag appears in the script as appears below:  \n  \n```  \n<tag attributes>text</tag>  \n```  \n  \n If this element has child elements, the children will replace `text`.  \n  \n Assign only valid XML tag strings to this property. Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string."
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]\n [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]\n [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]"
  syntax:
    content: public string Tag { get; set; }
    return:
      type: System.String
      description: The tag name of an XML element.
  overload: System.Security.SecurityElement.Tag*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The tag is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The tag is not valid in XML.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.Text
  commentId: P:System.Security.SecurityElement.Text
  id: Text
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: Text
  nameWithType: SecurityElement.Text
  fullName: SecurityElement.Text
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Gets or sets the text within an XML element.
  remarks: "The text should not contain XML special characters. Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.  \n  \n If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first."
  example:
  - "The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element. This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.  \n  \n [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]\n [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]\n [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: The value of the text within an XML element.
  overload: System.Security.SecurityElement.Text*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The text is not valid in XML.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.SecurityElement.ToString
  commentId: M:System.Security.SecurityElement.ToString
  id: ToString
  parent: System.Security.SecurityElement
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityElement.ToString()
  fullName: SecurityElement.ToString()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.Security
  summary: Produces a string representation of an XML element and its constituent attributes, child elements, and text.
  remarks: This method is useful in debugging to see the XML representation of the element.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The XML element and its contents.
  overload: System.Security.SecurityElement.ToString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.Security.XmlSyntaxException
  parent: System.Security
  isExternal: false
  name: XmlSyntaxException
  nameWithType: XmlSyntaxException
  fullName: System.Security.XmlSyntaxException
- uid: System.Security.SecurityElement.#ctor(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SecurityElement(String)
  nameWithType: SecurityElement.SecurityElement(String)
  fullName: SecurityElement.SecurityElement(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityElement.#ctor(System.String,System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SecurityElement(String, String)
  nameWithType: SecurityElement.SecurityElement(String, String)
  fullName: SecurityElement.SecurityElement(String, String)
- uid: System.Security.SecurityElement.AddAttribute(System.String,System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddAttribute(String, String)
  nameWithType: SecurityElement.AddAttribute(String, String)
  fullName: SecurityElement.AddAttribute(String, String)
- uid: System.Security.SecurityElement.AddChild(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddChild(SecurityElement)
  nameWithType: SecurityElement.AddChild(SecurityElement)
  fullName: SecurityElement.AddChild(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.SecurityElement.Attribute(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attribute(String)
  nameWithType: SecurityElement.Attribute(String)
  fullName: SecurityElement.Attribute(String)
- uid: System.Security.SecurityElement.Attributes
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attributes
  nameWithType: SecurityElement.Attributes
  fullName: SecurityElement.Attributes
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Security.SecurityElement.Children
  parent: System.Security.SecurityElement
  isExternal: false
  name: Children
  nameWithType: SecurityElement.Children
  fullName: SecurityElement.Children
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Security.SecurityElement.Copy
  parent: System.Security.SecurityElement
  isExternal: false
  name: Copy()
  nameWithType: SecurityElement.Copy()
  fullName: SecurityElement.Copy()
- uid: System.Security.SecurityElement.Equal(System.Security.SecurityElement)
  parent: System.Security.SecurityElement
  isExternal: false
  name: Equal(SecurityElement)
  nameWithType: SecurityElement.Equal(SecurityElement)
  fullName: SecurityElement.Equal(SecurityElement)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityElement.Escape(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: Escape(String)
  nameWithType: SecurityElement.Escape(String)
  fullName: SecurityElement.Escape(String)
- uid: System.Security.SecurityElement.FromString(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: FromString(String)
  nameWithType: SecurityElement.FromString(String)
  fullName: SecurityElement.FromString(String)
- uid: System.Security.SecurityElement.IsValidAttributeName(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeName(String)
  nameWithType: SecurityElement.IsValidAttributeName(String)
  fullName: SecurityElement.IsValidAttributeName(String)
- uid: System.Security.SecurityElement.IsValidAttributeValue(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeValue(String)
  nameWithType: SecurityElement.IsValidAttributeValue(String)
  fullName: SecurityElement.IsValidAttributeValue(String)
- uid: System.Security.SecurityElement.IsValidTag(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidTag(String)
  nameWithType: SecurityElement.IsValidTag(String)
  fullName: SecurityElement.IsValidTag(String)
- uid: System.Security.SecurityElement.IsValidText(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidText(String)
  nameWithType: SecurityElement.IsValidText(String)
  fullName: SecurityElement.IsValidText(String)
- uid: System.Security.SecurityElement.SearchForChildByTag(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForChildByTag(String)
  nameWithType: SecurityElement.SearchForChildByTag(String)
  fullName: SecurityElement.SearchForChildByTag(String)
- uid: System.Security.SecurityElement.SearchForTextOfTag(System.String)
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForTextOfTag(String)
  nameWithType: SecurityElement.SearchForTextOfTag(String)
  fullName: SecurityElement.SearchForTextOfTag(String)
- uid: System.Security.SecurityElement.Tag
  parent: System.Security.SecurityElement
  isExternal: false
  name: Tag
  nameWithType: SecurityElement.Tag
  fullName: SecurityElement.Tag
- uid: System.Security.SecurityElement.Text
  parent: System.Security.SecurityElement
  isExternal: false
  name: Text
  nameWithType: SecurityElement.Text
  fullName: SecurityElement.Text
- uid: System.Security.SecurityElement.ToString
  parent: System.Security.SecurityElement
  isExternal: false
  name: ToString()
  nameWithType: SecurityElement.ToString()
  fullName: SecurityElement.ToString()
- uid: System.Security.SecurityElement.#ctor*
  parent: System.Security.SecurityElement
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement.SecurityElement
  fullName: SecurityElement.SecurityElement
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.AddAttribute*
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddAttribute
  nameWithType: SecurityElement.AddAttribute
  fullName: SecurityElement.AddAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.AddChild*
  parent: System.Security.SecurityElement
  isExternal: false
  name: AddChild
  nameWithType: SecurityElement.AddChild
  fullName: SecurityElement.AddChild
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Attribute*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attribute
  nameWithType: SecurityElement.Attribute
  fullName: SecurityElement.Attribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Attributes*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Attributes
  nameWithType: SecurityElement.Attributes
  fullName: SecurityElement.Attributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Children*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Children
  nameWithType: SecurityElement.Children
  fullName: SecurityElement.Children
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Copy*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Copy
  nameWithType: SecurityElement.Copy
  fullName: SecurityElement.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Equal*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Equal
  nameWithType: SecurityElement.Equal
  fullName: SecurityElement.Equal
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Escape*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Escape
  nameWithType: SecurityElement.Escape
  fullName: SecurityElement.Escape
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.FromString*
  parent: System.Security.SecurityElement
  isExternal: false
  name: FromString
  nameWithType: SecurityElement.FromString
  fullName: SecurityElement.FromString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.IsValidAttributeName*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeName
  nameWithType: SecurityElement.IsValidAttributeName
  fullName: SecurityElement.IsValidAttributeName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.IsValidAttributeValue*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidAttributeValue
  nameWithType: SecurityElement.IsValidAttributeValue
  fullName: SecurityElement.IsValidAttributeValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.IsValidTag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidTag
  nameWithType: SecurityElement.IsValidTag
  fullName: SecurityElement.IsValidTag
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.IsValidText*
  parent: System.Security.SecurityElement
  isExternal: false
  name: IsValidText
  nameWithType: SecurityElement.IsValidText
  fullName: SecurityElement.IsValidText
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.SearchForChildByTag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForChildByTag
  nameWithType: SecurityElement.SearchForChildByTag
  fullName: SecurityElement.SearchForChildByTag
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.SearchForTextOfTag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: SearchForTextOfTag
  nameWithType: SecurityElement.SearchForTextOfTag
  fullName: SecurityElement.SearchForTextOfTag
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Tag*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Tag
  nameWithType: SecurityElement.Tag
  fullName: SecurityElement.Tag
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.Text*
  parent: System.Security.SecurityElement
  isExternal: false
  name: Text
  nameWithType: SecurityElement.Text
  fullName: SecurityElement.Text
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Security.SecurityElement.ToString*
  parent: System.Security.SecurityElement
  isExternal: false
  name: ToString
  nameWithType: SecurityElement.ToString
  fullName: SecurityElement.ToString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityElement.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
