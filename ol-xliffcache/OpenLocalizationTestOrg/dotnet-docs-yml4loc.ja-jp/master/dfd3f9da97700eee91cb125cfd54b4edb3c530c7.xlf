<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfd3f9da97700eee91cb125cfd54b4edb3c530c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Deployment.Application.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66ad82614dbf83fe54d7a128e79af79d16d6f0fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d544e60e2b982e38276c3df2d509b55d64a79b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>With the <ph id="ph1">&lt;xref href="System.Deployment.Application"&gt;&lt;/xref&gt;</ph> namespace, you can program custom upgrade behavior into your ClickOnce application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The key class in this namespace is <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can test whether your deployment has an available update by using either the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A&gt;</ph> methods; the latter method raises the <ph id="ph3">&lt;xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&gt;</ph> event when it has successfully completed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A&gt;</ph> returns important information about the update, such as its version number and whether it is a required update for current users.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an update is available, you can install it by using <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A&gt;</ph>; the latter method raises the <ph id="ph3">&lt;xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted&gt;</ph> event after installation of the update is finished.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For large updates, you can receive progress notifications through the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged&gt;</ph> events, and use the information in <ph id="ph3">&lt;xref:System.ComponentModel.ProgressChangedEventArgs&gt;</ph> to notify the user of the download status.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment&gt;</ph> to download large files and assemblies on demand.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>These files must be marked as "optional" within the deployment's application manifest, so that they are not downloaded at installation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can download the files at any point during the application's duration by using the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can download assemblies before they are loaded into memory by supplying an event handler for the <ph id="ph1">&lt;xref:System.AppDomain.AssemblyResolve&gt;</ph> event on the <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>