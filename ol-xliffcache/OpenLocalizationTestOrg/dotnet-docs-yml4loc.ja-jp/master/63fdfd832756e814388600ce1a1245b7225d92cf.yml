### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Capture
  commentId: T:System.Text.RegularExpressions.Capture
  id: Capture
  children:
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.ToString
  - System.Text.RegularExpressions.Capture.Value
  langs:
  - csharp
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
  type: Class
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Represents the results from a single successful subexpression capture.
  remarks: "A <xref:System.Text.RegularExpressions.Capture> object is immutable and has no public constructor. Instances are returned through the <xref:System.Text.RegularExpressions.CaptureCollection> object, which is returned by the `Match.Captures` and <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> properties. However, the `Match.Captures` property provides information about the same match as the <xref:System.Text.RegularExpressions.Match> object.  \n  \n If you do not apply a  to a capturing group, the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> with a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same capture as the <xref:System.Text.RegularExpressions.Group> object. If you do apply a quantifier to a capturing group, the `Group.Index`, `Group.Length`, and `Group.Value` properties provide information only about the last captured group, whereas the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> provide information about all subexpression captures. The example provides an illustration."
  example:
  - "The following example defines a regular expression that matches sentences that contain no punctuation except for a period (\".\").  \n  \n [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  \n  \n The regular expression pattern `((\\w+)[\\s.])+` is defined as shown in the following table. Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w+)`|Match one or more word characters. This is the second capturing group.|  \n|`[\\s.])`|Match a white-space character or period (\".\").|  \n|`((\\w+)[\\s.])`|Match one or more word characters followed by a white-space character or period (\".\"). This is the first capturing group.|  \n|`((\\w+)[\\s.])+`|Match one or more occurrences of a word character or characters followed by a white-space character or period (\".\").|  \n  \n In this example, the input string consists of two sentences. As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object. The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression. Group 1, which represents the first capture, contains the last word in the sentence that has a closing period. Group 2, which represents the second capture, contains the last word in the sentence. However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match. The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period. The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word."
  syntax:
    content: public class Capture
  inheritance:
  - System.Object
  derivedClasses:
  - System.Text.RegularExpressions.Group
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Capture.Index
  commentId: P:System.Text.RegularExpressions.Capture.Index
  id: Index
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: Index
  nameWithType: Capture.Index
  fullName: Capture.Index
  type: Property
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: The position in the original string where the first character of the captured substring is found.
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: The zero-based starting position in the original string where the captured substring is found.
  overload: System.Text.RegularExpressions.Capture.Index*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Capture.Length
  commentId: P:System.Text.RegularExpressions.Capture.Length
  id: Length
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: Length
  nameWithType: Capture.Length
  fullName: Capture.Length
  type: Property
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Gets the length of the captured substring.
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: The length of the captured substring.
  overload: System.Text.RegularExpressions.Capture.Length*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Capture.ToString
  commentId: M:System.Text.RegularExpressions.Capture.ToString
  id: ToString
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: Capture.ToString()
  type: Method
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Retrieves the captured substring from the input string by calling the <xref href="System.Text.RegularExpressions.Capture.Value"></xref> property.
  remarks: '`ToString` is actually an internal call to the <xref:System.Text.RegularExpressions.Capture.Value%2A> property.'
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The substring that was captured by the match.
  overload: System.Text.RegularExpressions.Capture.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Capture.Value
  commentId: P:System.Text.RegularExpressions.Capture.Value
  id: Value
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: Value
  nameWithType: Capture.Value
  fullName: Capture.Value
  type: Property
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Gets the captured substring from the input string.
  remarks: If a call to the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> or <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName> method fails to find a match, the value of the returned `Match.Value` property is <xref:System.String.Empty?displayProperty=fullName>. If the regular expression engine is unable to match a capturing group. the value of the returned `Group.Value` property is <xref:System.String.Empty?displayProperty=fullName>. See the second example for an illustration.
  example:
  - "The following example defines a regular expression that matches sentences that contain no punctuation except for a period (\".\"). The `Match.Value` property displays the result string, which consists of a matched sentence, for each match. The `Group.Value` property displays the result string for each capturing group; it consists of the last string captured by that capturing group. The <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=fullName> property displays the result string for each capture.  \n  \n [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  \n  \n The regular expression pattern `((\\w+)[\\s.])+` is defined as shown in the following table. Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w+)`|Match one or more word characters. This is the second capturing group.|  \n|`[\\s.])`|Match a white-space character or period (\".\").|  \n|`((\\w+)[\\s.])`|Match one or more word characters followed by a white-space character or period (\".\"). This is the first capturing group.|  \n|`((\\w+)[\\s.])+`|Match one or more occurrences of a word character or characters followed by a white-space character or period (\".\").|  \n  \n In this example, the input string consists of two sentences. As the output shows, the first sentence consists of only one word, so the <xref:System.Text.RegularExpressions.CaptureCollection> object has a single <xref:System.Text.RegularExpressions.Capture> object that represents the same capture as the <xref:System.Text.RegularExpressions.Group> object. The second sentence consists of multiple words, so the <xref:System.Text.RegularExpressions.Group> objects only contain information about the last matched subexpression. Group 1, which represents the first capture, contains the last word in the sentence that has a closing period. Group 2, which represents the second capture, contains the last word in the sentence. However, the <xref:System.Text.RegularExpressions.Capture> objects in the group's <xref:System.Text.RegularExpressions.CaptureCollection> object capture each subexpression match. The <xref:System.Text.RegularExpressions.Capture> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period. The <xref:System.Text.RegularExpressions.Capture> objects in the second capturing group's collection of captures contain information about each captured word.  \n  \n The following example uses a regular expression pattern, `^([a-z]+)(\\d+)*\\.([a-z]+(\\d)*)$`, to match a product number that consists of two parts separated by a period. Both parts consist of alphabetic characters followed by optional numbers. Because the first input string does not match the pattern, the value of the returned <xref:System.Text.RegularExpressions.Match?displayProperty=fullName> object's `Value` property is <xref:System.String.Empty?displayProperty=fullName>. Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <xref:System.Text.RegularExpressions.Group> object's `Value` property is <xref:System.String.Empty?displayProperty=fullName>.  \n  \n [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  \n  \n The regular expression pattern is defined as shown in the following table:  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`^`|Begin the match at the beginning of the string.|  \n|`([a-z]+)`|Match one or more occurrences of any character from a to z. Because the regular expression engine is passed the <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> option, this comparison is case-insensitive. This is the first capturing group.|  \n|`(\\d+)?`|Match zero or one occurrence of one or more decimal digits. This is the second capturing group.|  \n|`\\.`|Match a literal period character.|  \n|`([a-z]+`|Match one or more occurrences of any character from a to z. The comparison is case-insensitive.|  \n|`(\\d)*`|Match zero or more decimal digits. A single matched digit is the fourth capturing group.|  \n|`([a-z]+(\\d)*)`|Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits. This is the fourth capturing group.|  \n|`$`|Conclude the match at the end of the string.|"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: The substring that is captured by the match.
  overload: System.Text.RegularExpressions.Capture.Value*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.RegularExpressions.Capture.Index
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
  fullName: Capture.Index
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.Capture.Length
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
  fullName: Capture.Length
- uid: System.Text.RegularExpressions.Capture.ToString
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: Capture.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.Capture.Value
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
  fullName: Capture.Value
- uid: System.Text.RegularExpressions.Capture.Index*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
  fullName: Capture.Index
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
- uid: System.Text.RegularExpressions.Capture.Length*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
  fullName: Capture.Length
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
- uid: System.Text.RegularExpressions.Capture.ToString*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString
  nameWithType: Capture.ToString
  fullName: Capture.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
- uid: System.Text.RegularExpressions.Capture.Value*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
  fullName: Capture.Value
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Capture.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
