<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62bd8adbab7193ef82f2dd6cfa69931f69c8d39c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Odbc.OdbcConnectionStringBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">720870f5e80cab792b17edaea413f195e8c1a568</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4c66a7f6f0be4816d01421f5b42743e5badebbd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple way to create and manage the contents of connection strings used by the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builders let developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by ODBC connections, and developers can add arbitrary key/value pairs for any other connection string values.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers needing to create connection strings as part of applications can use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class to build and modify connection strings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class also makes it easy to manage connection strings stored in an application configuration file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> performs checks only for the limited set of known key/value pairs.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, this class can be used to create invalid connection strings.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the specific known keys together with their corresponding properties within the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class, and their default values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Besides these specific values, developers can add any key/value pairs to the collection that is contained within the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Driver</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers should not include the braces surrounding the driver name when they set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance adds braces as needed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Empty string</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>DSN</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Empty string</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any value (other than the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> value) within the connection string contains a semicolon (;), the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> surrounds the value with quotation marks in the connection string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to avoid this issue with the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> value that frequently contains a semicolon, the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> class always surrounds this value with braces.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ODBC specification indicates that driver values that contain semicolons must be surrounded with braces, and this class handles this for you.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> property handles attempts to insert malicious code.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following code, using the default <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A&gt;</ph> property (the indexer, in C#) correctly escapes the nested key/value pair.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is the following connection string that handles the invalid value in a safe manner:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The provided connection string provides the data for the instance's internal connection information.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass a connection string in the constructor, or you can set the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property explicitly.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior is the same either way.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The basis for the object's internal connection information.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Parsed into key/value pairs.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Clears the contents of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A&gt;</ph> method removes all key/value pairs from the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> and resets the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A&gt;</ph> properties to their default values.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Clear%2A&gt;</ph> method also sets the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> property to 0 and the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.ConnectionString&gt;</ph> property to an empty string.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains a specific key.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains an element that has the specified key; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is null (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the ODBC driver associated with the connection.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A&gt;</ph> property is reset.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the "Driver" key within the connection string.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder.Driver"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph2">`String.Empty`</ph> if none has been supplied.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the data source name (DSN) associated with the connection.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A&gt;</ph> property is reset.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the "Dsn" key within the connection string.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder.Dsn"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph2">`String.Empty`</ph> if none has been supplied.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In C#, this property is the indexer.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set this property, if the specified key already exists in the dictionary, the value is replaced; otherwise, a new element is created.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The key of the item to get or set.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.Remove%2A&gt;</ph> method returns a value that indicates its success, it is not required to look for the existence of a key before trying to remove the key/value pair from the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The key of the key/value pair to be removed from the connection string in this <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key existed within the connection string and was removed; <ph id="ph2">`false`</ph> if the key did not exist.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is null (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Retrieves a value corresponding to the supplied key from this <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> method lets developers safely retrieve a value from a <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph> without needing to verify that the supplied key name is a valid key name.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> does not raise an exception when you pass in a nonexistent key, you do not have to look for a key before retrieving its value.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue%2A&gt;</ph> with a nonexistent key places the value null (<ph id="ph2">`Nothing`</ph> in Visual Basic) in the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The key of the item to retrieve.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The value corresponding to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyword.</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">keyword</ph><ept id="p1">&lt;/code&gt;</ept> was found within the connection string; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>