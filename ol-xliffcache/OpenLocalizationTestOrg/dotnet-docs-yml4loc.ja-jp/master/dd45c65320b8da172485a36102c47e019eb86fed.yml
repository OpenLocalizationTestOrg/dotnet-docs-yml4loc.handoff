### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  commentId: T:System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Exposes a <xref href="System.IO.Stream"></xref> object around a pipe, which supports both anonymous and named pipes.
  remarks: "The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework. Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations. Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.  \n  \n For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md). For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md). For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.Object
  - System.IO.Stream
  derivedClasses:
  - System.IO.Pipes.AnonymousPipeClientStream
  - System.IO.Pipes.AnonymousPipeServerStream
  - System.IO.Pipes.NamedPipeClientStream
  - System.IO.Pipes.NamedPipeServerStream
  implements: []
  inheritedMembers:
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteTimeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)
  - System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  commentId: M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection, Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection, Int32)
  fullName: PipeStream.PipeStream(PipeDirection, Int32)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.PipeStream"></xref> class using the specified <xref href="System.IO.Pipes.PipeDirection"></xref> value and buffer size.
  remarks: This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the <xref href="System.IO.Pipes.PipeDirection"></xref> values that indicates the direction of the pipe object.
    - id: bufferSize
      type: System.Int32
      description: A positive <xref href="System.Int32"></xref> value greater than or equal to 0 that indicates the buffer size.
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>bufferSize</code> is less than 0."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  commentId: M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection, PipeTransmissionMode, Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)
  fullName: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.PipeStream"></xref> class using the specified <xref href="System.IO.Pipes.PipeDirection"></xref>, <xref href="System.IO.Pipes.PipeTransmissionMode"></xref>, and buffer size.
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the <xref href="System.IO.Pipes.PipeDirection"></xref> values that indicates the direction of the pipe object.
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the <xref href="System.IO.Pipes.PipeTransmissionMode"></xref> values that indicates the transmission mode of the pipe object.
    - id: outBufferSize
      type: System.Int32
      description: A positive <xref href="System.Int32"></xref> value greater than or equal to 0 that indicates the buffer size.
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>transmissionMode</code> is not a valid <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value.  \n  \n -or-  \n  \n <code>bufferSize</code> is less than 0."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Begins an asynchronous read operation.
  remarks: "Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method."
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to read data into.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>buffer</code> at which to begin reading.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: callback
      type: System.AsyncCallback
      description: The method to call when the asynchronous read operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> object that references the asynchronous read.
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support read operations.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Begins an asynchronous write operation.
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method."
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer that contains the data to write to the current stream.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: callback
      type: System.AsyncCallback
      description: The method to call when the asynchronous write operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> object that references the asynchronous write operation.
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.CanRead
  commentId: P:System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: PipeStream.CanRead
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether the current stream supports read operations.
  remarks: If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: '`true` if the stream supports read operations; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.CanSeek
  commentId: P:System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: PipeStream.CanSeek
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether the current stream supports seek operations.
  remarks: If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.CanWrite
  commentId: P:System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: PipeStream.CanWrite
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether the current stream supports write operations.
  remarks: If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: '`true` if the stream supports write operations; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  commentId: M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Verifies that the pipe is in a proper state for getting or setting properties.
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  commentId: M:System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Verifies that the pipe is in a connected state for read operations.
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  commentId: M:System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Verifies that the pipe is in a connected state for write operations.
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  commentId: M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Releases the unmanaged resources used by the <xref href="System.IO.Pipes.PipeStream"></xref> class and optionally releases the managed resources.
  remarks: This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`. When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references. This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Ends a pending asynchronous read request.
  remarks: "This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \n  \n Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request.
    return:
      type: System.Int32
      description: The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>asyncResult</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> did not originate from a <xref href="System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></xref> method on the current stream.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The stream is closed or an internal error has occurred.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Ends a pending asynchronous write request.
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request.
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>asyncResult</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> did not originate from a <xref href="System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></xref> method on the current stream.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The stream is closed or an internal error has occurred.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Flush
  commentId: M:System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: PipeStream.Flush()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.
  remarks: The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called.
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  commentId: M:System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: Gets a <xref href="System.IO.Pipes.PipeSecurity"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href="System.IO.Pipes.PipeStream"></xref> object.
  remarks: 'An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: A <xref href="System.IO.Pipes.PipeSecurity"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href="System.IO.Pipes.PipeStream"></xref> object.
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The underlying call to set security information failed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying call to set security information failed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The underlying call to set security information failed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.InBufferSize
  commentId: P:System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the size, in bytes, of the inbound buffer for a pipe.
  remarks: If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed.
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: An integer value that represents the inbound buffer size, in bytes.
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream is unreadable.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is waiting to connect.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  commentId: M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a <xref href="System.IO.Pipes.PipeStream"></xref> object from the specified <xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"></xref> object.
  remarks: If the pipe is in a connected state, this method also sets the <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property to `true`.
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: The <xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"></xref> object of the pipe to initialize.
    - id: isExposed
      type: System.Boolean
      description: '`true` to expose the handle; otherwise, `false`.'
    - id: isAsync
      type: System.Boolean
      description: '`true` to indicate that the handle was opened asynchronously; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A handle cannot be bound to the pipe.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.IsAsync
  commentId: P:System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: PipeStream.IsAsync
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether a <xref href="System.IO.Pipes.PipeStream"></xref> object was opened asynchronously or synchronously.
  remarks: This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly.
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.IO.Pipes.PipeStream"></xref> object was opened asynchronously; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.IsConnected
  commentId: P:System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: PipeStream.IsConnected
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets or sets a value indicating whether a <xref href="System.IO.Pipes.PipeStream"></xref> object is connected.
  remarks: The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected. If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken.
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.IO.Pipes.PipeStream"></xref> object is connected; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  commentId: P:System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether a handle to a <xref href="System.IO.Pipes.PipeStream"></xref> object is exposed.
  remarks: The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object.
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: '`true` if a handle to the <xref href="System.IO.Pipes.PipeStream"></xref> object is exposed; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  commentId: P:System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets a value indicating whether there is more data in the message returned from the most recent read operation.
  remarks: This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>.
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: '`true` if there are no more characters to read in the message; otherwise, `false`.'
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The pipe is not connected.  \n  \n -or-  \n  \n The pipe handle has not been set.  \n  \n -or-  \n  \n The pipe's <xref href=\"System.IO.Pipes.PipeStream.ReadMode\"></xref> property value is not <xref href=\"System.IO.Pipes.PipeTransmissionMode.Message\"></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Length
  commentId: P:System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: PipeStream.Length
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the length of a stream, in bytes.
  remarks: The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property.
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: 0 in all cases.
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Always thrown.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  commentId: P:System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the size, in bytes, of the outbound buffer for a pipe.
  remarks: If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed.
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: The outbound buffer size, in bytes.
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream is unwriteable.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is waiting to connect.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Position
  commentId: P:System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: PipeStream.Position
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets or sets the current position of the current stream.
  remarks: The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property.
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: 0 in all cases.
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Always thrown.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[], Int32, Int32)
  nameWithType: PipeStream.Read(Byte[], Int32, Int32)
  fullName: PipeStream.Read(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Reads a block of bytes from a stream and writes the data to a specified buffer.
  remarks: "Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \n  \n Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>."
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the <xref:System.IO.Pipes.PipeStream.Read%2A> method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cpp[System.IO.Pipes.PipeStream#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cpp/sample.cpp#1)]\n [!code-csharp[System.IO.Pipes.PipeStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cs/sample.cs#1)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.pipes.pipestream/vb/sample.vb#1)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: When this method returns, contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code> - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The byte offset in the <code>buffer</code> array at which the bytes that are read will be placed.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    return:
      type: System.Int32
      description: The total number of bytes that are read into <code>buffer</code>. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support read operations.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: Any I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  type: Method
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  syntax:
    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
  overload: System.IO.Pipes.PipeStream.ReadAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.ReadByte
  commentId: M:System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Reads a byte from a pipe.
  remarks: Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: The byte, cast to <xref href="System.Int32"></xref>, or -1 indicates the end of the stream (the pipe has been closed).
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support read operations.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: Any I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.ReadMode
  commentId: P:System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: PipeStream.ReadMode
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets or sets the reading mode for a <xref href="System.IO.Pipes.PipeStream"></xref> object.
  remarks: Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the <xref href="System.IO.Pipes.PipeTransmissionMode"></xref> values that indicates how the <xref href="System.IO.Pipes.PipeStream"></xref> object reads from the pipe.
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The supplied value is not a valid <xref href="System.IO.Pipes.PipeTransmissionMode"></xref> value.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The supplied value is not a supported <xref href="System.IO.Pipes.PipeTransmissionMode"></xref> value for this pipe stream.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The handle has not been set.  \n  \n -or-  \n  \n The pipe is waiting to connect with a named client."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or an I/O error occurred with a named client.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  commentId: P:System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the safe handle for the local end of the pipe that the current <xref href="System.IO.Pipes.PipeStream"></xref> object encapsulates.
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A <xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"></xref> object for the pipe that is encapsulated by the current <xref href="System.IO.Pipes.PipeStream"></xref> object.
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe handle has not been set.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64, SeekOrigin)
  nameWithType: PipeStream.Seek(Int64, SeekOrigin)
  fullName: PipeStream.Seek(Int64, SeekOrigin)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Sets the current position of the current stream to the specified value.
  remarks: The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called.
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: The point, relative to <code>origin</code>, to begin seeking from.
    - id: origin
      type: System.IO.SeekOrigin
      description: Specifies the beginning, the end, or the current position as a reference point for <code>offset</code>, using a value of type <xref href="System.IO.SeekOrigin"></xref>.
    return:
      type: System.Int64
      description: The new position in the stream.
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  commentId: M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: Applies the access control list (ACL) entries specified by a <xref href="System.IO.Pipes.PipeSecurity"></xref> object to the pipe specified by the current <xref href="System.IO.Pipes.PipeStream"></xref> object.
  remarks: 'An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: A <xref href="System.IO.Pipes.PipeSecurity"></xref> object that specifies an access control list (ACL) entry to apply to the current pipe.
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeSecurity</code> is `null`.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The underlying call to set security information failed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The underlying call to set security information failed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The underlying call to set security information failed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  commentId: M:System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Sets the length of the current stream to the specified value.
  remarks: The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method.
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The new length of the stream.
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  commentId: P:System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the pipe transmission mode supported by the current pipe.
  remarks: Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: One of the <xref href="System.IO.Pipes.PipeTransmissionMode"></xref> values that indicates the transmission mode supported by the current pipe.
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The handle has not been set.  \n  \n -or-  \n  \n The pipe is waiting to connect in an anonymous client/server operation or with a named client."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  commentId: M:System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Waits for the other end of the pipe to read all sent bytes.
  remarks: The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes.
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[], Int32, Int32)
  nameWithType: PipeStream.Write(Byte[], Int32, Int32)
  fullName: PipeStream.Write(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Writes a block of bytes to the current stream using data from a buffer.
  remarks: "Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \n  \n Calling the <xref:System.IO.Pipes.PipeStream.Write%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer that contains data to write to the pipe.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write to the current stream.
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  type: Method
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  syntax:
    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: offset
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: System.IO.Pipes.PipeStream.WriteAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  commentId: M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Writes a byte to the current stream.
  remarks: Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: The byte to write to the stream.
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The pipe does not support write operations.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The pipe is disconnected, waiting to connect, or the handle has not been set.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or another I/O error occurred.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection, Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection, Int32)
  fullName: PipeStream.PipeStream(PipeDirection, Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection, PipeTransmissionMode, Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)
  fullName: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: PipeStream.Read(Byte[], Int32, Int32)
  fullName: PipeStream.Read(Byte[], Int32, Int32)
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64, SeekOrigin)
  nameWithType: PipeStream.Seek(Int64, SeekOrigin)
  fullName: PipeStream.Seek(Int64, SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: PipeStream.Write(Byte[], Int32, Int32)
  fullName: PipeStream.Write(Byte[], Int32, Int32)
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: PipeStream.WriteByte(Byte)
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
  fullName: PipeStream.PipeStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
  fullName: PipeStream.BeginRead
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
  fullName: PipeStream.BeginWrite
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: PipeStream.CanRead
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: PipeStream.CanSeek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: PipeStream.CanWrite
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
  fullName: PipeStream.CheckPipePropertyOperations
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
  fullName: PipeStream.CheckReadOperations
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
  fullName: PipeStream.CheckWriteOperations
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
  fullName: PipeStream.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
  fullName: PipeStream.EndRead
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
  fullName: PipeStream.EndWrite
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
  fullName: PipeStream.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
  fullName: PipeStream.GetAccessControl
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: PipeStream.InBufferSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
  fullName: PipeStream.InitializeHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: PipeStream.IsAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: PipeStream.IsConnected
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: PipeStream.IsHandleExposed
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: PipeStream.IsMessageComplete
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: PipeStream.Length
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: PipeStream.OutBufferSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: PipeStream.Position
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
  fullName: PipeStream.Read
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.ReadAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadAsync
  nameWithType: PipeStream.ReadAsync
  fullName: PipeStream.ReadAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
  fullName: PipeStream.ReadByte
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: PipeStream.ReadMode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: PipeStream.SafePipeHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
  fullName: PipeStream.Seek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
  fullName: PipeStream.SetAccessControl
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
  fullName: PipeStream.SetLength
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: PipeStream.TransmissionMode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
  fullName: PipeStream.WaitForPipeDrain
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
  fullName: PipeStream.Write
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.WriteAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteAsync
  nameWithType: PipeStream.WriteAsync
  fullName: PipeStream.WriteAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
  fullName: PipeStream.WriteByte
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: Stream.CanTimeout
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: false
  name: Close()
  nameWithType: Stream.Close()
  fullName: Stream.Close()
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: Stream.CopyTo(Stream, Int32)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: Stream.CopyTo(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: Stream.CopyToAsync(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: Stream.CopyToAsync(Stream, Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: false
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: Stream.CreateWaitHandle()
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: Stream.Dispose()
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: Stream.FlushAsync()
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: Stream.FlushAsync(CancellationToken)
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  name: "Null"
  nameWithType: Stream.Null
  fullName: Stream.Null
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: false
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: Stream.ObjectInvariant()
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32)
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: Stream.ReadTimeout
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: Stream.Synchronized(Stream)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32)
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: Stream.WriteTimeout
- uid: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)
  parent: System.IO.Pipes.PipesAclExtensions
  isExternal: false
  name: GetAccessControl(PipeStream)
  nameWithType: PipesAclExtensions.GetAccessControl(PipeStream)
  fullName: PipesAclExtensions.GetAccessControl(PipeStream)
- uid: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipesAclExtensions
  isExternal: false
  name: SetAccessControl(PipeStream, PipeSecurity)
  nameWithType: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)
  fullName: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)
