{"nodes":[{"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.","nodes":[{"pos":[0,143],"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.","nodes":[{"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.","pos":[0,143],"nodes":[{"content":"Defines configuration settings that are used to support the role management infrastructure of Web applications.","pos":[0,111]},{"content":"This class cannot be inherited.","pos":[112,143]}]}]}],"pos":[1344,1488],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection> class provides a way to programmatically access and modify the content of the `roleManager` section of the configuration file.","nodes":[{"pos":[0,181],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection&gt;</ph> class provides a way to programmatically access and modify the content of the <ph id=\"ph2\">`roleManager`</ph> section of the configuration file.","source":"The <xref:System.Web.Configuration.RoleManagerSection> class provides a way to programmatically access and modify the content of the `roleManager` section of the configuration file."}],"pos":[1499,1681],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Configuration.RoleManagerSection\"></xref> class by using default settings.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.RoleManagerSection\"&gt;&lt;/xref&gt;</ph> class by using default settings.","source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.RoleManagerSection\"></xref> class by using default settings."}],"pos":[8771,8903],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  \n  \n The following table shows the default settings that are used for the <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor.  \n  \n|Property|Default value|  \n|--------------|-------------------|  \n|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  \n|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  \n|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|\".ASPXROLES\"|  \n|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|\"/\"|  \n|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  \n|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  \n|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  \n|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, in minutes|  \n|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  \n|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|\"AspNetSqlRoleProvider\"|  \n|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|An empty string (\"\")|  \n|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|","nodes":[{"pos":[0,343],"content":"The <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","nodes":[{"content":"The <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.","pos":[0,343],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A&gt;</ph> constructor is not intended to be used directly from your code.","pos":[0,129],"source":"The <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor is not intended to be used directly from your code."},{"content":"It is called by the ASP.NET configuration system.","pos":[130,179]},{"content":"You obtain an instance of the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection&gt;</ph> class by using the <ph id=\"ph2\">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> method.","pos":[180,343],"source":" You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method."}]}]},{"pos":[350,493],"content":"The following table shows the default settings that are used for the <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor.","nodes":[{"content":"The following table shows the default settings that are used for the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A&gt;</ph> constructor.","pos":[0,143],"source":"The following table shows the default settings that are used for the <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor."}]},{"pos":[500,508],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[509,522],"content":"Default value","nodes":[{"content":"Default value","pos":[0,13]}]},{"pos":[566,627],"content":"<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>","nodes":[]},{"pos":[640,712],"content":"<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>","nodes":[]},{"pos":[725,789],"content":"<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>","nodes":[]},{"pos":[790,802],"content":"\".ASPXROLES\"","nodes":[{"content":"\".ASPXROLES\"","pos":[0,12]}]},{"pos":[807,871],"content":"<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>","nodes":[]},{"pos":[872,875],"content":"\"/\"","nodes":[{"content":"\"/\"","pos":[0,3]}]},{"pos":[880,950],"content":"<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>","nodes":[]},{"pos":[961,1031],"content":"<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>","nodes":[]},{"pos":[1044,1121],"content":"<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>","nodes":[]},{"pos":[1133,1200],"content":"<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>","nodes":[]},{"pos":[1201,1215],"content":"30, in minutes","nodes":[{"content":"30, in minutes","pos":[0,14]}]},{"pos":[1220,1296],"content":"<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>","nodes":[]},{"pos":[1309,1378],"content":"<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>","nodes":[]},{"pos":[1379,1402],"content":"\"AspNetSqlRoleProvider\"","nodes":[{"content":"\"AspNetSqlRoleProvider\"","pos":[0,23]}]},{"pos":[1407,1467],"content":"<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>","nodes":[]},{"pos":[1468,1488],"content":"An empty string (\"\")","nodes":[{"content":"An empty string (\"\")","pos":[0,20]}]},{"pos":[1493,1563],"content":"<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>","nodes":[]},{"pos":[1564,1566],"content":"25","nodes":[{"content":"25","pos":[0,2]}]}],"pos":[8914,10509],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the current user's roles are cached in a cookie.","nodes":[{"pos":[0,88],"content":"Gets or sets a value indicating whether the current user's roles are cached in a cookie.","nodes":[{"content":"Gets or sets a value indicating whether the current user's roles are cached in a cookie.","pos":[0,88]}]}],"pos":[11658,11747],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property returns a Boolean value indicating whether cookie storage for role names is enabled.  \n  \n When the <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client. When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source. The cookie is dynamically updated on the client to cache the most recently validated role names.  \n  \n You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file. The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered.","nodes":[{"pos":[0,170],"content":"The <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property returns a Boolean value indicating whether cookie storage for role names is enabled.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A&gt;</ph> property returns a Boolean value indicating whether cookie storage for role names is enabled.","pos":[0,170],"source":"The <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property returns a Boolean value indicating whether cookie storage for role names is enabled."}]},{"pos":[177,665],"content":"When the <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client. When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source. The cookie is dynamically updated on the client to cache the most recently validated role names.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> in the configuration file, role information for each user is stored in a cookie on the client.","pos":[0,202],"source":"When the <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client."},{"content":"When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source.","pos":[203,391]},{"content":"The cookie is dynamically updated on the client to cache the most recently validated role names.","pos":[392,488]}]},{"pos":[672,1121],"content":"You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file. The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered.","nodes":[{"content":"You can improve the reliability of the role names that are cached in a cookie by specifying a <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt;</ph> property when you configure the <ph id=\"ph2\">`roleManager`</ph> section of the configuration file.","pos":[0,245],"source":"You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt;</ph> property is <ph id=\"ph2\">`All`</ph>, which encrypts role names in the cookie and validates that the cookie contents have not been altered.","pos":[246,449],"source":" The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered."}]}],"pos":[11758,12886],"yaml":true,"extradata":"MT"},{"content":"`true` if the current user's roles are cached in a cookie; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,102],"content":"`true` if the current user's roles are cached in a cookie; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the current user's roles are cached in a cookie; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,78],"source":"`true` if the current user's roles are cached in a cookie; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[79,102],"source":" The default is `false`."}]}],"pos":[13789,13894],"yaml":true},{"content":"Gets or sets the name of the cookie that is used to cache role names.","nodes":[{"pos":[0,69],"content":"Gets or sets the name of the cookie that is used to cache role names.","nodes":[{"content":"Gets or sets the name of the cookie that is used to cache role names.","pos":[0,69]}]}],"pos":[15012,15082],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> property returns the name of the cookie that is used to cache role names. You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application. This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.","nodes":[{"pos":[0,453],"content":"The <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> property returns the name of the cookie that is used to cache role names. You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application. This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieName%2A&gt;</ph> property returns the name of the cookie that is used to cache role names.","pos":[0,142],"source":"The <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> property returns the name of the cookie that is used to cache role names."},{"content":"You can specify the name of the cookie where roles are cached for your application by setting the <ph id=\"ph1\">`cookieName`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[143,316],"source":" You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application."},{"content":"This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.","pos":[317,453]}]}],"pos":[15093,15547],"yaml":true,"extradata":"MT"},{"content":"The name of the cookie used to cache role names. The default is \".ASPXROLES\".","nodes":[{"pos":[0,77],"content":"The name of the cookie used to cache role names. The default is \".ASPXROLES\".","nodes":[{"content":"The name of the cookie used to cache role names. The default is \".ASPXROLES\".","pos":[0,77],"nodes":[{"content":"The name of the cookie used to cache role names.","pos":[0,48]},{"content":"The default is \".ASPXROLES\".","pos":[49,77]}]}]}],"pos":[16591,16669],"yaml":true},{"content":"Gets or sets the virtual path of the cookie that is used to cache role names.","nodes":[{"pos":[0,77],"content":"Gets or sets the virtual path of the cookie that is used to cache role names.","nodes":[{"content":"Gets or sets the virtual path of the cookie that is used to cache role names.","pos":[0,77]}]}],"pos":[17890,17968],"yaml":true},{"content":"You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application. The <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> property returns the value of the `cookiePath` attribute from the Web.config file. The path is case sensitive.","nodes":[{"pos":[0,358],"content":"You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application. The <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> property returns the value of the `cookiePath` attribute from the Web.config file. The path is case sensitive.","nodes":[{"content":"You can specify the path of the cookie where role names are cached for your application by setting the <ph id=\"ph1\">`cookiePath`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[0,178],"source":"You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A&gt;</ph> property returns the value of the <ph id=\"ph2\">`cookiePath`</ph> attribute from the Web.config file.","pos":[179,330],"source":" The <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> property returns the value of the `cookiePath` attribute from the Web.config file."},{"content":"The path is case sensitive.","pos":[331,358]}]}],"pos":[17979,18338],"yaml":true,"extradata":"MT"},{"content":"The path of the cookie used to store role names. The default is \"/\".","nodes":[{"pos":[0,68],"content":"The path of the cookie used to store role names. The default is \"/\".","nodes":[{"content":"The path of the cookie used to store role names. The default is \"/\".","pos":[0,68],"nodes":[{"content":"The path of the cookie used to store role names.","pos":[0,48]},{"content":"The default is \"/\".","pos":[49,68]}]}]}],"pos":[19382,19451],"yaml":true},{"content":"Gets or sets the type of security that is used to protect the cookie that caches role names.","nodes":[{"pos":[0,92],"content":"Gets or sets the type of security that is used to protect the cookie that caches role names.","nodes":[{"content":"Gets or sets the type of security that is used to protect the cookie that caches role names.","pos":[0,92]}]}],"pos":[20708,20801],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property describes how information in a cookie is securely stored. You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application. The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`. The default is `All`. Be sure to use the default value for the <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property if you want both data validation and encryption to help protect the cookie. To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`.","nodes":[{"pos":[0,855],"content":"The <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property describes how information in a cookie is securely stored. You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application. The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`. The default is `All`. Be sure to use the default value for the <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property if you want both data validation and encryption to help protect the cookie. To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt;</ph> property describes how information in a cookie is securely stored.","pos":[0,141],"source":"The <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property describes how information in a cookie is securely stored."},{"content":"You can specify the security type of the cookie where roles are cached for your application by setting the <ph id=\"ph1\">`cookieProtection`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[142,330],"source":" You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application."},{"content":"The <ph id=\"ph1\">`cookieProtection`</ph> attribute takes a <ph id=\"ph2\">&lt;xref:System.Web.Security.CookieProtection&gt;</ph> enumeration value of <ph id=\"ph3\">`All`</ph>, <ph id=\"ph4\">`Encryption`</ph>, <ph id=\"ph5\">`None`</ph>, or <ph id=\"ph6\">`Validation`</ph>.","pos":[331,482],"source":" The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`."},{"content":"The default is <ph id=\"ph1\">`All`</ph>.","pos":[483,504],"source":" The default is `All`."},{"content":"Be sure to use the default value for the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A&gt;</ph> property if you want both data validation and encryption to help protect the cookie.","pos":[505,701],"source":" Be sure to use the default value for the <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property if you want both data validation and encryption to help protect the cookie."},{"content":"To improve the protection of your cookie, you can also set the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[702,855],"source":" To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`."}]}],"pos":[20812,21668],"yaml":true,"extradata":"MT"},{"content":"The type of security protection used within the cookie where role names are cached. The default is `All`.","nodes":[{"pos":[0,105],"content":"The type of security protection used within the cookie where role names are cached. The default is `All`.","nodes":[{"content":"The type of security protection used within the cookie where role names are cached.","pos":[0,83]},{"content":"The default is <ph id=\"ph1\">`All`</ph>.","pos":[84,105],"source":" The default is `All`."}]}],"pos":[22619,22725],"yaml":true},{"content":"Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.","nodes":[{"pos":[0,171],"content":"Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.","nodes":[{"content":"Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.","pos":[0,171]}]}],"pos":[23877,24049],"yaml":true},{"content":"You can specify whether SSL is required to return the role names cookie to the server by setting the `cookieRequireSSL` attribute in the Web.config file for your ASP.NET application.","nodes":[{"pos":[0,182],"content":"You can specify whether SSL is required to return the role names cookie to the server by setting the <ph id=\"ph1\">`cookieRequireSSL`</ph> attribute in the Web.config file for your ASP.NET application.","source":"You can specify whether SSL is required to return the role names cookie to the server by setting the `cookieRequireSSL` attribute in the Web.config file for your ASP.NET application."}],"pos":[24060,24243],"yaml":true,"extradata":"MT"},{"content":"`true` if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,154],"content":"`true` if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,130],"source":"`true` if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[131,154],"source":" The default is `false`."}]}],"pos":[25140,25297],"yaml":true},{"content":"Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.","nodes":[{"pos":[0,111],"content":"Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.","nodes":[{"content":"Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.","pos":[0,111]}]}],"pos":[26491,26603],"yaml":true},{"content":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application. If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes. While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining. The default is `true`.","nodes":[{"pos":[0,678],"content":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application. If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes. While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining. The default is `true`.","nodes":[{"content":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the <ph id=\"ph1\">`cookieSlidingExpiration`</ph> attribute in the Web.config file for your ASP.NET application.","pos":[0,227],"source":"You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application."},{"content":"If <ph id=\"ph1\">`true`</ph>, the cookie expiration is initially set to the current date and time plus the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt;</ph> property, in minutes.","pos":[228,405],"source":" If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes."},{"content":"While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt;</ph> remaining.","pos":[406,655],"source":" While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[656,678],"source":" The default is `true`."}]}],"pos":[26614,27293],"yaml":true,"extradata":"MT"},{"content":"`true` if the role names cookie expiration date and time will be reset periodically; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,127],"content":"`true` if the role names cookie expiration date and time will be reset periodically; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the role names cookie expiration date and time will be reset periodically; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,104],"source":"`true` if the role names cookie expiration date and time will be reset periodically; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[105,127],"source":" The default is `true`."}]}],"pos":[28211,28341],"yaml":true},{"content":"Gets or sets the number of minutes before the cookie that is used to cache role names expires.","nodes":[{"pos":[0,94],"content":"Gets or sets the number of minutes before the cookie that is used to cache role names expires.","nodes":[{"content":"Gets or sets the number of minutes before the cookie that is used to cache role names expires.","pos":[0,94]}]}],"pos":[29482,29577],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property sets a value specifying the number of minutes before the role names cookie expires. The default is 30 minutes. If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property is ignored.","nodes":[{"pos":[0,390],"content":"The <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property sets a value specifying the number of minutes before the role names cookie expires. The default is 30 minutes. If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property is ignored.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt;</ph> property sets a value specifying the number of minutes before the role names cookie expires.","pos":[0,164],"source":"The <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property sets a value specifying the number of minutes before the role names cookie expires."},{"content":"The default is 30 minutes.","pos":[165,191]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A&gt;</ph> property is ignored.","pos":[192,390],"source":" If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property is ignored."}]}],"pos":[29588,29979],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.","nodes":[{"pos":[0,151],"content":"A <xref href=\"System.TimeSpan\"></xref> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that is the number of minutes before the cookie used to cache role names expires.","pos":[0,120],"source":"A <xref href=\"System.TimeSpan\"></xref> that is the number of minutes before the cookie used to cache role names expires."},{"content":"The default is 30, in minutes.","pos":[121,151]}]}],"pos":[31101,31253],"yaml":true},{"content":"Indicates whether a session-based cookie or a persistent cookie is used to cache role names.","nodes":[{"pos":[0,92],"content":"Indicates whether a session-based cookie or a persistent cookie is used to cache role names.","nodes":[{"content":"Indicates whether a session-based cookie or a persistent cookie is used to cache role names.","pos":[0,92]}]}],"pos":[32551,32644],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions. The default is `false`, which indicates that a session-based cookie is used to cache role names.","nodes":[{"pos":[0,443],"content":"The <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions. The default is `false`, which indicates that a session-based cookie is used to cache role names.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A&gt;</ph> property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions.","pos":[0,346],"source":"The <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions."},{"content":"The default is <ph id=\"ph1\">`false`</ph>, which indicates that a session-based cookie is used to cache role names.","pos":[347,443],"source":" The default is `false`, which indicates that a session-based cookie is used to cache role names."}]}],"pos":[32655,33099],"yaml":true,"extradata":"MT"},{"content":"`true` to make the role names cookie persistent across browser sessions; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,116],"content":"`true` to make the role names cookie persistent across browser sessions; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to make the role names cookie persistent across browser sessions; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,92],"source":"`true` to make the role names cookie persistent across browser sessions; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[93,116],"source":" The default is `false`."}]}],"pos":[34014,34133],"yaml":true},{"content":"Gets or sets the name of the default provider that is used to manage roles.","nodes":[{"pos":[0,75],"content":"Gets or sets the name of the default provider that is used to manage roles.","nodes":[{"content":"Gets or sets the name of the default provider that is used to manage roles.","pos":[0,75]}]}],"pos":[35285,35361],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file. An empty string (\"\") is not a valid value for the <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property.","nodes":[{"pos":[0,321],"content":"The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file. An empty string (\"\") is not a valid value for the <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A&gt;</ph> property must match a named value in the <ph id=\"ph2\">`providers`</ph> subsection of the <ph id=\"ph3\">`roleManager`</ph> section of a configuration file.","pos":[0,191],"source":"The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file."},{"content":"An empty string (\"\") is not a valid value for the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A&gt;</ph> property.","pos":[192,321],"source":" An empty string (\"\") is not a valid value for the <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property."}]}],"pos":[35372,35694],"yaml":true,"extradata":"MT"},{"content":"The name of a provider in the <xref href=\"System.Web.Configuration.RoleManagerSection.Providers\"></xref>. The default is \"AspNetSqlRoleProvider\".","nodes":[{"pos":[0,145],"content":"The name of a provider in the <xref href=\"System.Web.Configuration.RoleManagerSection.Providers\"></xref>. The default is \"AspNetSqlRoleProvider\".","nodes":[{"content":"The name of a provider in the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.RoleManagerSection.Providers\"&gt;&lt;/xref&gt;</ph>.","pos":[0,105],"source":"The name of a provider in the <xref href=\"System.Web.Configuration.RoleManagerSection.Providers\"></xref>."},{"content":"The default is \"AspNetSqlRoleProvider\".","pos":[106,145]}]}],"pos":[36765,36911],"yaml":true},{"content":"Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.","nodes":[{"pos":[0,104],"content":"Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.","nodes":[{"content":"Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.","pos":[0,104]}]}],"pos":[38113,38218],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element. If no value is specified in the configuration for the `domain` attribute, the <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property. The default is an empty string.","nodes":[{"pos":[0,513],"content":"The <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element. If no value is specified in the configuration for the `domain` attribute, the <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property. The default is an empty string.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.Domain%2A&gt;</ph> property is set in the configuration for an ASP.NET application by using the <ph id=\"ph2\">`domain`</ph> attribute of the <ph id=\"ph3\">`roleManager`</ph> configuration element.","pos":[0,204],"source":"The <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element."},{"content":"If no value is specified in the configuration for the <ph id=\"ph1\">`domain`</ph> attribute, the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.RoleManagerSection.Domain%2A&gt;</ph> property returns <ph id=\"ph3\">`null`</ph> and the role names cookie domain defaults to the behavior of the <ph id=\"ph4\">&lt;xref:System.Web.HttpCookie.Domain%2A&gt;</ph> property.","pos":[205,481],"source":" If no value is specified in the configuration for the `domain` attribute, the <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property."},{"content":"The default is an empty string.","pos":[482,513]}]}],"pos":[38229,38743],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpCookie.Domain\"></xref> of the cookie used to cache role names. The default is an empty string (`\"\"`).","nodes":[{"pos":[0,132],"content":"The <xref href=\"System.Web.HttpCookie.Domain\"></xref> of the cookie used to cache role names. The default is an empty string (`\"\"`).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCookie.Domain\"&gt;&lt;/xref&gt;</ph> of the cookie used to cache role names.","pos":[0,93],"source":"The <xref href=\"System.Web.HttpCookie.Domain\"></xref> of the cookie used to cache role names."},{"content":"The default is an empty string (<ph id=\"ph1\">`\"\"`</ph>).","pos":[94,132],"source":" The default is an empty string (`\"\"`)."}]}],"pos":[38929,39062],"yaml":true},{"content":"Gets or sets a value indicating whether the ASP.NET role management feature is enabled.","nodes":[{"pos":[0,87],"content":"Gets or sets a value indicating whether the ASP.NET role management feature is enabled.","nodes":[{"content":"Gets or sets a value indicating whether the ASP.NET role management feature is enabled.","pos":[0,87]}]}],"pos":[40150,40238],"yaml":true},{"content":"The <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.","nodes":[{"pos":[0,189],"content":"The <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.Enabled%2A&gt;</ph> property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.","pos":[0,189],"source":"The <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time."}]}],"pos":[40249,40439],"yaml":true,"extradata":"MT"},{"content":"`true` if the ASP.NET role management feature is enabled; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,101],"content":"`true` if the ASP.NET role management feature is enabled; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the ASP.NET role management feature is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,77],"source":"`true` if the ASP.NET role management feature is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[78,101],"source":" The default is `false`."}]}],"pos":[41313,41417],"yaml":true},{"content":"Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.","nodes":[{"pos":[0,80],"content":"Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.","nodes":[{"content":"Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.","pos":[0,80]}]}],"pos":[42560,42641],"yaml":true},{"content":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.","nodes":[{"pos":[0,182],"content":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.","nodes":[{"content":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.","pos":[0,182],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Security.Roles.MaxCachedResults%2A&gt;</ph> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie.","pos":[0,163],"source":"The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie."},{"content":"The default is 25.","pos":[164,182]}]}]}],"pos":[42652,42835],"yaml":true,"extradata":"MT"},{"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.","nodes":[{"pos":[0,100],"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.","nodes":[{"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.","pos":[0,100],"nodes":[{"content":"A value indicating the maximum number of roles ASP.NET caches in the role cookie.","pos":[0,81]},{"content":"The default is 25.","pos":[82,100]}]}]}],"pos":[43086,43187],"yaml":true},{"content":"Gets a <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> object of <xref href=\"System.Configuration.ProviderSettings\"></xref> elements.","nodes":[{"pos":[0,154],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ProviderSettingsCollection\"&gt;&lt;/xref&gt;</ph> object of <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ProviderSettings\"&gt;&lt;/xref&gt;</ph> elements.","source":"Gets a <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> object of <xref href=\"System.Configuration.ProviderSettings\"></xref> elements."}],"pos":[45457,45612],"yaml":true},{"content":"Role management providers are components that provide access to the types of roles for a site. You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file.  \n  \n The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default.","nodes":[{"pos":[0,220],"content":"Role management providers are components that provide access to the types of roles for a site. You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file.","nodes":[{"content":"Role management providers are components that provide access to the types of roles for a site.","pos":[0,94]},{"content":"You can specify role management providers in the <ph id=\"ph1\">`providers`</ph> subsection of the <ph id=\"ph2\">`roleManager`</ph> section of a configuration file.","pos":[95,220],"source":" You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file."}]},{"pos":[227,357],"content":"The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A&gt;</ph> property specifies the provider that is used by default.","pos":[0,130],"source":"The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default."}]}],"pos":[45623,45985],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> that contains the providers settings defined within the `providers` subsection of the `roleManager` section of the configuration file.","nodes":[{"pos":[0,205],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ProviderSettingsCollection\"&gt;&lt;/xref&gt;</ph> that contains the providers settings defined within the <ph id=\"ph2\">`providers`</ph> subsection of the <ph id=\"ph3\">`roleManager`</ph> section of the configuration file.","source":"A <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> that contains the providers settings defined within the `providers` subsection of the `roleManager` section of the configuration file."}],"pos":[46887,47093],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.RoleManagerSection\n  commentId: T:System.Web.Configuration.RoleManagerSection\n  id: RoleManagerSection\n  children:\n  - System.Web.Configuration.RoleManagerSection.#ctor\n  - System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  - System.Web.Configuration.RoleManagerSection.CookieName\n  - System.Web.Configuration.RoleManagerSection.CookiePath\n  - System.Web.Configuration.RoleManagerSection.CookieProtection\n  - System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  - System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  - System.Web.Configuration.RoleManagerSection.CookieTimeout\n  - System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  - System.Web.Configuration.RoleManagerSection.DefaultProvider\n  - System.Web.Configuration.RoleManagerSection.Domain\n  - System.Web.Configuration.RoleManagerSection.Enabled\n  - System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  - System.Web.Configuration.RoleManagerSection.Properties\n  - System.Web.Configuration.RoleManagerSection.Providers\n  langs:\n  - csharp\n  name: RoleManagerSection\n  nameWithType: RoleManagerSection\n  fullName: System.Web.Configuration.RoleManagerSection\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Defines configuration settings that are used to support the role management infrastructure of Web applications. This class cannot be inherited.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection> class provides a way to programmatically access and modify the content of the `roleManager` section of the configuration file.\n  example:\n  - \"This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the <xref:System.Web.Configuration.RoleManagerSection> class. The second demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection> type.  \\n  \\n The following configuration file example shows how to declaratively specify values for several properties of the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n```  \\n<system.web>  \\n  <roleManager   \\n    enabled=\\\"false\\\"   \\n    cacheRolesInCookie=\\\"false\\\"   \\n    cookieName=\\\".ASPXROLES\\\" cookieTimeout=\\\"30\\\"  \\n    cookiePath=\\\"/\\\" cookieRequireSSL=\\\"false\\\"  \\n    cookieSlidingExpiration=\\\"true\\\" createPersistentCookie=\\\"false\\\"  \\n    cookieProtection=\\\"All\\\"   \\n    defaultProvider=\\\"AspNetSqlRoleProvider\\\"  \\n    maxCachedResults=\\\"25\\\"  >  \\n    <providers>  \\n      <add   \\n        name=\\\"AspNetSqlRoleProvider\\\"  \\n        connectionStringName=\\\"LocalSqlServer\\\"   \\n        applicationName=\\\"/\\\"  \\n        type=\\\"System.Web.Security.SqlRoleProvider, System.Web,  \\n          Version=2.0.3600.0, Culture=neutral,  \\n          PublicKeyToken=b03f5f7f11d50a3a\\\" />  \\n      <add   \\n        name=\\\"AspNetWindowsTokenRoleProvider\\\"   \\n        applicationName=\\\"/\\\"  \\n        type=\\\"System.Web.Security.WindowsTokenRoleProvider, System.Web,   \\n          Version=2.0.3600.0, Culture=neutral,   \\n          PublicKeyToken=b03f5f7f11d50a3a\\\" />  \\n    </providers>  \\n  </roleManager>  \\n</system.web>  \\n```  \\n  \\n The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection> type.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#1)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#1)]\"\n  syntax:\n    content: 'public sealed class RoleManagerSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.#ctor\n  commentId: M:System.Web.Configuration.RoleManagerSection.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: RoleManagerSection()\n  nameWithType: RoleManagerSection.RoleManagerSection()\n  fullName: RoleManagerSection.RoleManagerSection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.RoleManagerSection\"></xref> class by using default settings.\n  remarks: \"The <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <xref:System.Web.Configuration.RoleManagerSection> class by using the <xref:System.Configuration.Configuration.GetSection%2A> method.  \\n  \\n The following table shows the default settings that are used for the <xref:System.Web.Configuration.RoleManagerSection.%23ctor%2A> constructor.  \\n  \\n|Property|Default value|  \\n|--------------|-------------------|  \\n|<xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|\\\".ASPXROLES\\\"|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|\\\"/\\\"|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>|`All`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>|`true`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|30, in minutes|  \\n|<xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>|`false`|  \\n|<xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|\\\"AspNetSqlRoleProvider\\\"|  \\n|<xref:System.Web.Configuration.RoleManagerSection.Domain%2A>|An empty string (\\\"\\\")|  \\n|<xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|\"\n  syntax:\n    content: public RoleManagerSection ();\n    parameters: []\n  overload: System.Web.Configuration.RoleManagerSection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  commentId: P:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  id: CacheRolesInCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CacheRolesInCookie\n  nameWithType: RoleManagerSection.CacheRolesInCookie\n  fullName: RoleManagerSection.CacheRolesInCookie\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the current user's roles are cached in a cookie.\n  remarks: \"The <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property returns a Boolean value indicating whether cookie storage for role names is enabled.  \\n  \\n When the <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property is set to `true` in the configuration file, role information for each user is stored in a cookie on the client. When role management checks to determine whether a user is in a particular role, the roles cookie is checked before calling the role provider to check the list of roles at the data source. The cookie is dynamically updated on the client to cache the most recently validated role names.  \\n  \\n You can improve the reliability of the role names that are cached in a cookie by specifying a <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property when you configure the `roleManager` section of the configuration file. The default <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property is `All`, which encrypts role names in the cookie and validates that the cookie contents have not been altered.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#2)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cacheRolesInCookie\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CacheRolesInCookie { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the current user's roles are cached in a cookie; otherwise, `false`. The default is `false`.\"\n  overload: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CookieName\n  commentId: P:System.Web.Configuration.RoleManagerSection.CookieName\n  id: CookieName\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieName\n  nameWithType: RoleManagerSection.CookieName\n  fullName: RoleManagerSection.CookieName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the cookie that is used to cache role names.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> property returns the name of the cookie that is used to cache role names. You can specify the name of the cookie where roles are cached for your application by setting the `cookieName` attribute in the Web.config file for your ASP.NET application. This is useful when you want to uniquely identify a cookie for your application or when a cookie is shared across multiple applications.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#3)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#3)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"cookieName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string CookieName { get; set; }\n    return:\n      type: System.String\n      description: The name of the cookie used to cache role names. The default is \".ASPXROLES\".\n  overload: System.Web.Configuration.RoleManagerSection.CookieName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CookiePath\n  commentId: P:System.Web.Configuration.RoleManagerSection.CookiePath\n  id: CookiePath\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookiePath\n  nameWithType: RoleManagerSection.CookiePath\n  fullName: RoleManagerSection.CookiePath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the virtual path of the cookie that is used to cache role names.\n  remarks: You can specify the path of the cookie where role names are cached for your application by setting the `cookiePath` attribute in the Web.config file for your ASP.NET application. The <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> property returns the value of the `cookiePath` attribute from the Web.config file. The path is case sensitive.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#4)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#4)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"cookiePath\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string CookiePath { get; set; }\n    return:\n      type: System.String\n      description: The path of the cookie used to store role names. The default is \"/\".\n  overload: System.Web.Configuration.RoleManagerSection.CookiePath*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CookieProtection\n  commentId: P:System.Web.Configuration.RoleManagerSection.CookieProtection\n  id: CookieProtection\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieProtection\n  nameWithType: RoleManagerSection.CookieProtection\n  fullName: RoleManagerSection.CookieProtection\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the type of security that is used to protect the cookie that caches role names.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property describes how information in a cookie is securely stored. You can specify the security type of the cookie where roles are cached for your application by setting the `cookieProtection` attribute in the Web.config file for your ASP.NET application. The `cookieProtection` attribute takes a <xref:System.Web.Security.CookieProtection> enumeration value of `All`, `Encryption`, `None`, or `Validation`. The default is `All`. Be sure to use the default value for the <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property if you want both data validation and encryption to help protect the cookie. To improve the protection of your cookie, you can also set the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property to `true`.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#5)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#5)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cookieProtection\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.Web.Security.CookieProtection CookieProtection { get; set; }\n    return:\n      type: System.Web.Security.CookieProtection\n      description: The type of security protection used within the cookie where role names are cached. The default is `All`.\n  overload: System.Web.Configuration.RoleManagerSection.CookieProtection*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  commentId: P:System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  id: CookieRequireSSL\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieRequireSSL\n  nameWithType: RoleManagerSection.CookieRequireSSL\n  fullName: RoleManagerSection.CookieRequireSSL\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the cookie that is used to cache role names requires a Secure Sockets Layer (SSL) connection in order to be returned to the server.\n  remarks: You can specify whether SSL is required to return the role names cookie to the server by setting the `cookieRequireSSL` attribute in the Web.config file for your ASP.NET application.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#6)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#6)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cookieRequireSSL\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CookieRequireSSL { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if an SSL connection is needed in order to return to the server the cookie where role names are cached; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  commentId: P:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  id: CookieSlidingExpiration\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieSlidingExpiration\n  nameWithType: RoleManagerSection.CookieSlidingExpiration\n  fullName: RoleManagerSection.CookieSlidingExpiration\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the cookie that is used to cache role names will be reset periodically.\n  remarks: You can specify whether the cookie that is used to cache role names is periodically reset or expired at a fixed point in time by using the `cookieSlidingExpiration` attribute in the Web.config file for your ASP.NET application. If `true`, the cookie expiration is initially set to the current date and time plus the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property, in minutes. While the user continues to actively use the ASP.NET application, the expiration date and time of the cookie is automatically refreshed, if there is less than half of the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> remaining. The default is `true`.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#7)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#7)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cookieSlidingExpiration\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CookieSlidingExpiration { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the role names cookie expiration date and time will be reset periodically; otherwise, `false`. The default is `true`.'\n  overload: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout\n  commentId: P:System.Web.Configuration.RoleManagerSection.CookieTimeout\n  id: CookieTimeout\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CookieTimeout\n  nameWithType: RoleManagerSection.CookieTimeout\n  fullName: RoleManagerSection.CookieTimeout\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the number of minutes before the cookie that is used to cache role names expires.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property sets a value specifying the number of minutes before the role names cookie expires. The default is 30 minutes. If the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property is `false`, the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property is ignored.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#8)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#8)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"cookieTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.TimeSpanValidator(MaxValueString=\"10675199.02:48:05.4775807\", MinValueString=\"00:00:00\")]\n\n      public TimeSpan CookieTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that is the number of minutes before the cookie used to cache role names expires. The default is 30, in minutes.\n  overload: System.Web.Configuration.RoleManagerSection.CookieTimeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.TimeSpanValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  commentId: P:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  id: CreatePersistentCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: CreatePersistentCookie\n  nameWithType: RoleManagerSection.CreatePersistentCookie\n  fullName: RoleManagerSection.CreatePersistentCookie\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Indicates whether a session-based cookie or a persistent cookie is used to cache role names.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> property indicates whether or not the cookie that is used to cache role names should be a session-based cookie, which means that the cookie is lost when the browser is closed, or a persistent cookie, which means that the cookie is available across browser sessions. The default is `false`, which indicates that a session-based cookie is used to cache role names.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#9)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#9)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"createPersistentCookie\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CreatePersistentCookie { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to make the role names cookie persistent across browser sessions; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider\n  commentId: P:System.Web.Configuration.RoleManagerSection.DefaultProvider\n  id: DefaultProvider\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: DefaultProvider\n  nameWithType: RoleManagerSection.DefaultProvider\n  fullName: RoleManagerSection.DefaultProvider\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the default provider that is used to manage roles.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property must match a named value in the `providers` subsection of the `roleManager` section of a configuration file. An empty string (\"\") is not a valid value for the <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#10)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#10)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"defaultProvider\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string DefaultProvider { get; set; }\n    return:\n      type: System.String\n      description: The name of a provider in the <xref href=\"System.Web.Configuration.RoleManagerSection.Providers\"></xref>. The default is \"AspNetSqlRoleProvider\".\n  overload: System.Web.Configuration.RoleManagerSection.DefaultProvider*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.Domain\n  commentId: P:System.Web.Configuration.RoleManagerSection.Domain\n  id: Domain\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Domain\n  nameWithType: RoleManagerSection.Domain\n  fullName: RoleManagerSection.Domain\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the name of the domain that is associated with the cookie that is used to cache role names.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property is set in the configuration for an ASP.NET application by using the `domain` attribute of the `roleManager` configuration element. If no value is specified in the configuration for the `domain` attribute, the <xref:System.Web.Configuration.RoleManagerSection.Domain%2A> property returns `null` and the role names cookie domain defaults to the behavior of the <xref:System.Web.HttpCookie.Domain%2A> property. The default is an empty string.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"domain\")]\n\n      public string Domain { get; set; }\n    return:\n      type: System.String\n      description: The <xref href=\"System.Web.HttpCookie.Domain\"></xref> of the cookie used to cache role names. The default is an empty string (`\"\"`).\n  overload: System.Web.Configuration.RoleManagerSection.Domain*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.Enabled\n  commentId: P:System.Web.Configuration.RoleManagerSection.Enabled\n  id: Enabled\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: RoleManagerSection.Enabled\n  fullName: RoleManagerSection.Enabled\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a value indicating whether the ASP.NET role management feature is enabled.\n  remarks: The <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> property returns a Boolean value indicating whether or not the ASP.NET role management feature can be accessed at run time.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#12)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#12)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"enabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the ASP.NET role management feature is enabled; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Configuration.RoleManagerSection.Enabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  commentId: P:System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  id: MaxCachedResults\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: MaxCachedResults\n  nameWithType: RoleManagerSection.MaxCachedResults\n  fullName: RoleManagerSection.MaxCachedResults\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the maximum number of roles that ASP.NET caches in the role cookie.\n  remarks: The <xref:System.Web.Security.Roles.MaxCachedResults%2A> property returns an integer indicating the maximum number of roles that ASP.NET caches in the role cookie. The default is 25.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxCachedResults\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public int MaxCachedResults { get; set; }\n    return:\n      type: System.Int32\n      description: A value indicating the maximum number of roles ASP.NET caches in the role cookie. The default is 25.\n  overload: System.Web.Configuration.RoleManagerSection.MaxCachedResults*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.RoleManagerSection.Properties\n  commentId: P:System.Web.Configuration.RoleManagerSection.Properties\n  id: Properties\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: RoleManagerSection.Properties\n  fullName: RoleManagerSection.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Web.Configuration.RoleManagerSection.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.Providers\n  commentId: P:System.Web.Configuration.RoleManagerSection.Providers\n  id: Providers\n  parent: System.Web.Configuration.RoleManagerSection\n  langs:\n  - csharp\n  name: Providers\n  nameWithType: RoleManagerSection.Providers\n  fullName: RoleManagerSection.Providers\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets a <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> object of <xref href=\"System.Configuration.ProviderSettings\"></xref> elements.\n  remarks: \"Role management providers are components that provide access to the types of roles for a site. You can specify role management providers in the `providers` subsection of the `roleManager` section of a configuration file.  \\n  \\n The <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A> property specifies the provider that is used by default.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.Providers%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/CS/rolemanagersection.cs#13)]\\n [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.RoleManagerSection/VB/rolemanagersection.vb#13)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"providers\")]\n\n      public System.Configuration.ProviderSettingsCollection Providers { get; }\n    return:\n      type: System.Configuration.ProviderSettingsCollection\n      description: A <xref href=\"System.Configuration.ProviderSettingsCollection\"></xref> that contains the providers settings defined within the `providers` subsection of the `roleManager` section of the configuration file.\n  overload: System.Web.Configuration.RoleManagerSection.Providers*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationSection\n  nameWithType: ConfigurationSection\n  fullName: System.Configuration.ConfigurationSection\n- uid: System.Web.Configuration.RoleManagerSection.#ctor\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: RoleManagerSection()\n  nameWithType: RoleManagerSection.RoleManagerSection()\n  fullName: RoleManagerSection.RoleManagerSection()\n- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CacheRolesInCookie\n  nameWithType: RoleManagerSection.CacheRolesInCookie\n  fullName: RoleManagerSection.CacheRolesInCookie\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Configuration.RoleManagerSection.CookieName\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieName\n  nameWithType: RoleManagerSection.CookieName\n  fullName: RoleManagerSection.CookieName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.RoleManagerSection.CookiePath\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookiePath\n  nameWithType: RoleManagerSection.CookiePath\n  fullName: RoleManagerSection.CookiePath\n- uid: System.Web.Configuration.RoleManagerSection.CookieProtection\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieProtection\n  nameWithType: RoleManagerSection.CookieProtection\n  fullName: RoleManagerSection.CookieProtection\n- uid: System.Web.Security.CookieProtection\n  parent: System.Web.Security\n  isExternal: false\n  name: CookieProtection\n  nameWithType: CookieProtection\n  fullName: System.Web.Security.CookieProtection\n- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieRequireSSL\n  nameWithType: RoleManagerSection.CookieRequireSSL\n  fullName: RoleManagerSection.CookieRequireSSL\n- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieSlidingExpiration\n  nameWithType: RoleManagerSection.CookieSlidingExpiration\n  fullName: RoleManagerSection.CookieSlidingExpiration\n- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieTimeout\n  nameWithType: RoleManagerSection.CookieTimeout\n  fullName: RoleManagerSection.CookieTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CreatePersistentCookie\n  nameWithType: RoleManagerSection.CreatePersistentCookie\n  fullName: RoleManagerSection.CreatePersistentCookie\n- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: DefaultProvider\n  nameWithType: RoleManagerSection.DefaultProvider\n  fullName: RoleManagerSection.DefaultProvider\n- uid: System.Web.Configuration.RoleManagerSection.Domain\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Domain\n  nameWithType: RoleManagerSection.Domain\n  fullName: RoleManagerSection.Domain\n- uid: System.Web.Configuration.RoleManagerSection.Enabled\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Enabled\n  nameWithType: RoleManagerSection.Enabled\n  fullName: RoleManagerSection.Enabled\n- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: MaxCachedResults\n  nameWithType: RoleManagerSection.MaxCachedResults\n  fullName: RoleManagerSection.MaxCachedResults\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.RoleManagerSection.Properties\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Properties\n  nameWithType: RoleManagerSection.Properties\n  fullName: RoleManagerSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.RoleManagerSection.Providers\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Providers\n  nameWithType: RoleManagerSection.Providers\n  fullName: RoleManagerSection.Providers\n- uid: System.Configuration.ProviderSettingsCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ProviderSettingsCollection\n  nameWithType: ProviderSettingsCollection\n  fullName: System.Configuration.ProviderSettingsCollection\n- uid: System.Web.Configuration.RoleManagerSection.#ctor*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: RoleManagerSection\n  nameWithType: RoleManagerSection.RoleManagerSection\n  fullName: RoleManagerSection.RoleManagerSection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CacheRolesInCookie\n  nameWithType: RoleManagerSection.CacheRolesInCookie\n  fullName: RoleManagerSection.CacheRolesInCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CookieName*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieName\n  nameWithType: RoleManagerSection.CookieName\n  fullName: RoleManagerSection.CookieName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CookiePath*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookiePath\n  nameWithType: RoleManagerSection.CookiePath\n  fullName: RoleManagerSection.CookiePath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CookieProtection*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieProtection\n  nameWithType: RoleManagerSection.CookieProtection\n  fullName: RoleManagerSection.CookieProtection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieRequireSSL\n  nameWithType: RoleManagerSection.CookieRequireSSL\n  fullName: RoleManagerSection.CookieRequireSSL\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieSlidingExpiration\n  nameWithType: RoleManagerSection.CookieSlidingExpiration\n  fullName: RoleManagerSection.CookieSlidingExpiration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CookieTimeout\n  nameWithType: RoleManagerSection.CookieTimeout\n  fullName: RoleManagerSection.CookieTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: CreatePersistentCookie\n  nameWithType: RoleManagerSection.CreatePersistentCookie\n  fullName: RoleManagerSection.CreatePersistentCookie\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: DefaultProvider\n  nameWithType: RoleManagerSection.DefaultProvider\n  fullName: RoleManagerSection.DefaultProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.Domain*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Domain\n  nameWithType: RoleManagerSection.Domain\n  fullName: RoleManagerSection.Domain\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.Enabled*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Enabled\n  nameWithType: RoleManagerSection.Enabled\n  fullName: RoleManagerSection.Enabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: MaxCachedResults\n  nameWithType: RoleManagerSection.MaxCachedResults\n  fullName: RoleManagerSection.MaxCachedResults\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.Properties*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Properties\n  nameWithType: RoleManagerSection.Properties\n  fullName: RoleManagerSection.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Web.Configuration.RoleManagerSection.Providers*\n  parent: System.Web.Configuration.RoleManagerSection\n  isExternal: false\n  name: Providers\n  nameWithType: RoleManagerSection.Providers\n  fullName: RoleManagerSection.Providers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/RoleManagerSection.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationSection.IsModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationSection.IsModified()\n  fullName: ConfigurationSection.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ResetModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationSection.ResetModified()\n  fullName: ConfigurationSection.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: DeserializeSection(XmlReader)\n  nameWithType: ConfigurationSection.DeserializeSection(XmlReader)\n  fullName: ConfigurationSection.DeserializeSection(XmlReader)\n- uid: System.Configuration.ConfigurationSection.GetRuntimeObject\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: GetRuntimeObject()\n  nameWithType: ConfigurationSection.GetRuntimeObject()\n  fullName: ConfigurationSection.GetRuntimeObject()\n- uid: System.Configuration.ConfigurationSection.SectionInformation\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SectionInformation\n  nameWithType: ConfigurationSection.SectionInformation\n  fullName: ConfigurationSection.SectionInformation\n- uid: System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  nameWithType: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  fullName: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  nameWithType: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  fullName: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeSectionInTargetVersion(FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n"}