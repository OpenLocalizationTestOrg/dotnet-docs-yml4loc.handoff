{"nodes":[{"content":"Represents the enumerator for <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> objects in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.","nodes":[{"pos":[0,188],"content":"Represents the enumerator for <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationTrust\"&gt;&lt;/xref&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Represents the enumerator for <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> objects in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection."}],"pos":[761,950],"yaml":true},{"content":"Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.  \n  \n <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called. <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.  \n  \n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception. If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,122],"content":"Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.","pos":[0,122],"nodes":[{"content":"Enumerators only allow reading the data in the collection.","pos":[0,58]},{"content":"Enumerators cannot be used to modify the underlying collection.","pos":[59,122]}]}]},{"pos":[129,747],"content":"Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.","pos":[0,618],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.","pos":[84,210],"source":" The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position."},{"content":"At this position, calling the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property throws an exception.","pos":[211,338],"source":" At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception."},{"content":"Therefore, you must call the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property.","pos":[339,618],"source":" Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property."}]}]},{"pos":[754,1170],"content":"<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called. <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called. <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.","pos":[0,416],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,253],"source":"<xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> to the next element.","pos":[254,416],"source":" <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element."}]}]},{"pos":[1177,1872],"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.","nodes":[{"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[0,211],"source":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, calling <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> throws an exception.","pos":[212,415],"source":" If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception."},{"content":"To reset <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph>.","pos":[416,695],"source":" To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>."}]},{"pos":[1879,2656],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception. If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception. If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.","pos":[0,777],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[73,424],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception."},{"content":"If the collection is modified between calling <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.","pos":[425,777],"source":" If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated."}]}]},{"pos":[2663,3137],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,474],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[155,292]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[293,474]}]}]}],"pos":[961,4111],"yaml":true,"extradata":"MT"},{"content":"Gets the current <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> object in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.","nodes":[{"pos":[0,174],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationTrust\"&gt;&lt;/xref&gt;</ph> object in the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the current <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> object in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection."}],"pos":[5903,6078],"yaml":true},{"content":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.  \n  \n Multiple calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object.","nodes":[{"pos":[0,369],"content":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.","nodes":[{"content":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.","pos":[0,369],"nodes":[{"content":"When the enumerator is created, it does not point to an object, so the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.","pos":[0,207],"source":"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed."},{"content":"You must first call the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.","pos":[208,369],"source":" You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection."}]}]},{"pos":[376,635],"content":"Multiple calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object.","nodes":[{"content":"Multiple calls to <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object.","pos":[0,259],"source":"Multiple calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object."}]}],"pos":[6089,6729],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref>.","nodes":[{"pos":[0,151],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationTrust\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The current <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref>."}],"pos":[6899,7051],"yaml":true},{"content":"Moves to the next element in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.","nodes":[{"pos":[0,115],"content":"Moves to the next element in the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Moves to the next element in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection."}],"pos":[8321,8437],"yaml":true},{"content":"The <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method immediately returns `false` if there are no objects in the collection.  \n  \n <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection. It will then return `false` for each successive call. However, after <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception.  \n  \n Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> positions the enumerator at the first object in the collection.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method immediately returns <ph id=\"ph2\">`false`</ph> if there are no objects in the collection.","source":"The <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method immediately returns `false` if there are no objects in the collection."},{"pos":[157,568],"content":"<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection. It will then return `false` for each successive call. However, after <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> will return <ph id=\"ph2\">`true`</ph> until it has reached the end of the collection.","pos":[0,135],"source":"<xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection."},{"content":"It will then return <ph id=\"ph1\">`false`</ph> for each successive call.","pos":[136,189],"source":" It will then return `false` for each successive call."},{"content":"However, after <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> has returned <ph id=\"ph2\">`false`</ph>, accessing the <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property will throw an exception.","pos":[190,411],"source":" However, after <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception."}]},{"pos":[575,862],"content":"Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> positions the enumerator at the first object in the collection.","nodes":[{"content":"Upon creation, an enumerator is positioned before the first <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object in the collection, and the first call to <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> positions the enumerator at the first object in the collection.","pos":[0,287],"source":"Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> positions the enumerator at the first object in the collection."}]}],"pos":[8448,9317],"yaml":true,"extradata":"MT"},{"content":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id=\"ph2\">`false`</ph> if the enumerator has passed the end of the collection.","source":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection."}],"pos":[9442,9580],"yaml":true},{"content":"Resets the enumerator to the beginning of the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.","nodes":[{"pos":[0,128],"content":"Resets the enumerator to the beginning of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Resets the enumerator to the beginning of the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection."}],"pos":[10833,10962],"yaml":true},{"content":"An enumerator moves in a forward-only direction. Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.  \n  \n The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object.","nodes":[{"pos":[0,183],"content":"An enumerator moves in a forward-only direction. Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.","nodes":[{"content":"An enumerator moves in a forward-only direction. Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.","pos":[0,183],"nodes":[{"content":"An enumerator moves in a forward-only direction.","pos":[0,48]},{"content":"Use this method to return the enumerator to the beginning of the collection of <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> objects.","pos":[49,183],"source":" Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects."}]}]},{"pos":[190,559],"content":"The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object.","nodes":[{"content":"The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object.","pos":[0,369],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.","pos":[0,136],"source":"The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;</ph>, you do not need to call the <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</ph> method to move the cursor forward to the first object.","pos":[137,369],"source":" After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object."}]}]}],"pos":[10973,11537],"yaml":true,"extradata":"MT"},{"content":"Gets the current <xref href=\"System.Object\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.","nodes":[{"pos":[0,141],"content":"Gets the current <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the current <xref href=\"System.Object\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection."}],"pos":[13002,13144],"yaml":true},{"content":"Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead.","nodes":[{"pos":[0,118],"content":"Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead.","nodes":[{"content":"Do not call this method; use the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</ph> property instead.","pos":[0,118],"source":"Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead."}]}],"pos":[13155,13274],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Object\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref>.","nodes":[{"pos":[0,125],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Security.Policy.ApplicationTrustCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The current <xref href=\"System.Object\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref>."}],"pos":[13409,13535],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.ApplicationTrustEnumerator\n  commentId: T:System.Security.Policy.ApplicationTrustEnumerator\n  id: ApplicationTrustEnumerator\n  children:\n  - System.Security.Policy.ApplicationTrustEnumerator.Current\n  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext\n  - System.Security.Policy.ApplicationTrustEnumerator.Reset\n  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  name: ApplicationTrustEnumerator\n  nameWithType: ApplicationTrustEnumerator\n  fullName: System.Security.Policy.ApplicationTrustEnumerator\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Represents the enumerator for <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> objects in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.\n  remarks: \"Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.  \\n  \\n <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called. <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.  \\n  \\n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception. If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerator\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationTrustEnumerator.Current\n  commentId: P:System.Security.Policy.ApplicationTrustEnumerator.Current\n  id: Current\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: ApplicationTrustEnumerator.Current\n  fullName: ApplicationTrustEnumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the current <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> object in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.\n  remarks: \"When the enumerator is created, it does not point to an object, so the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.  \\n  \\n Multiple calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object.\"\n  syntax:\n    content: public System.Security.Policy.ApplicationTrust Current { get; }\n    return:\n      type: System.Security.Policy.ApplicationTrust\n      description: The current <xref href=\"System.Security.Policy.ApplicationTrust\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref>.\n  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext\n  commentId: M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext\n  id: MoveNext\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: ApplicationTrustEnumerator.MoveNext()\n  fullName: ApplicationTrustEnumerator.MoveNext()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Moves to the next element in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.\n  remarks: \"The <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method immediately returns `false` if there are no objects in the collection.  \\n  \\n <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection. It will then return `false` for each successive call. However, after <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception.  \\n  \\n Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> positions the enumerator at the first object in the collection.\"\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'\n  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset\n  commentId: M:System.Security.Policy.ApplicationTrustEnumerator.Reset\n  id: Reset\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: ApplicationTrustEnumerator.Reset()\n  fullName: ApplicationTrustEnumerator.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Resets the enumerator to the beginning of the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.\n  remarks: \"An enumerator moves in a forward-only direction. Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.  \\n  \\n The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method positions the cursor at the first object in the collection. After calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object.\"\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  langs:\n  - csharp\n  name: IEnumerator.Current\n  nameWithType: ApplicationTrustEnumerator.IEnumerator.Current\n  fullName: ApplicationTrustEnumerator.IEnumerator.Current\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Policy\n  summary: Gets the current <xref href=\"System.Object\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref> collection.\n  remarks: Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead.\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: The current <xref href=\"System.Object\"></xref> in the <xref href=\"System.Security.Policy.ApplicationTrustCollection\"></xref>.\n  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.ApplicationTrustEnumerator.Current\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: ApplicationTrustEnumerator.Current\n  fullName: ApplicationTrustEnumerator.Current\n- uid: System.Security.Policy.ApplicationTrust\n  parent: System.Security.Policy\n  isExternal: false\n  name: ApplicationTrust\n  nameWithType: ApplicationTrust\n  fullName: System.Security.Policy.ApplicationTrust\n- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: ApplicationTrustEnumerator.MoveNext()\n  fullName: ApplicationTrustEnumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: ApplicationTrustEnumerator.Reset()\n  fullName: ApplicationTrustEnumerator.Reset()\n- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: IEnumerator.Current\n  nameWithType: ApplicationTrustEnumerator.IEnumerator.Current\n  fullName: ApplicationTrustEnumerator.IEnumerator.Current\n- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: Current\n  nameWithType: ApplicationTrustEnumerator.Current\n  fullName: ApplicationTrustEnumerator.Current\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: ApplicationTrustEnumerator.MoveNext\n  fullName: ApplicationTrustEnumerator.MoveNext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: Reset\n  nameWithType: ApplicationTrustEnumerator.Reset\n  fullName: ApplicationTrustEnumerator.Reset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*\n  parent: System.Security.Policy.ApplicationTrustEnumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current\n  fullName: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Policy/ApplicationTrustEnumerator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n"}