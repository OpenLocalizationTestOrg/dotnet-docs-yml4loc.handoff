{"nodes":[{"content":"Holds the stack of server channel sinks.","nodes":[{"pos":[0,40],"content":"Holds the stack of server channel sinks.","nodes":[{"content":"Holds the stack of server channel sinks.","pos":[0,40]}]}],"pos":[1521,1562],"yaml":true},{"content":"This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/docs/framework/misc/link-demands.md) for more information.","nodes":[{"pos":[0,207],"content":"This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/docs/framework/misc/link-demands.md) for more information.","nodes":[{"content":"This class makes a link demand.","pos":[0,31]},{"content":"A security exception is thrown if the immediate caller does not have infrastructure permission.","pos":[32,127]},{"content":"See <bpt id=\"p1\">[</bpt>Link Demands<ept id=\"p1\">](~/docs/framework/misc/link-demands.md)</ept> for more information.","pos":[128,207],"source":" See [Link Demands](~/docs/framework/misc/link-demands.md) for more information."}]}],"pos":[1573,1781],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"></xref> class."}],"pos":[3587,3705],"yaml":true},{"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","nodes":[{"pos":[0,89],"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","nodes":[{"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","pos":[0,89]}]}],"pos":[5491,5581],"yaml":true},{"content":"This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.","nodes":[{"pos":[0,217],"content":"This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.","nodes":[{"content":"This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.","pos":[0,217],"nodes":[{"content":"This method initializes asynchronous processing on the top sink in the current sink stack.","pos":[0,90]},{"content":"For additional information, see the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A&gt;</ph> method.","pos":[91,217],"source":" For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method."}]}]}],"pos":[5592,5810],"yaml":true,"extradata":"MT"},{"content":"The message to be serialized onto the requested stream.","nodes":[{"pos":[0,55],"content":"The message to be serialized onto the requested stream.","nodes":[{"content":"The message to be serialized onto the requested stream.","pos":[0,55]}]}],"pos":[6105,6161],"yaml":true},{"content":"The headers retrieved from the server response stream.","nodes":[{"pos":[0,54],"content":"The headers retrieved from the server response stream.","nodes":[{"content":"The headers retrieved from the server response stream.","pos":[0,54]}]}],"pos":[6261,6316],"yaml":true},{"content":"The stream coming back from the transport sink.","nodes":[{"pos":[0,47],"content":"The stream coming back from the transport sink.","nodes":[{"content":"The stream coming back from the transport sink.","pos":[0,47]}]}],"pos":[6381,6429],"yaml":true},{"content":"The current sink stack is empty.","nodes":[{"pos":[0,32],"content":"The current sink stack is empty.","nodes":[{"content":"The current sink stack is empty.","pos":[0,32]}]}],"pos":[6661,6694],"yaml":true},{"content":"Returns the <xref href=\"System.IO.Stream\"></xref> onto which the specified message is to be serialized.","nodes":[{"pos":[0,103],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> onto which the specified message is to be serialized.","source":"Returns the <xref href=\"System.IO.Stream\"></xref> onto which the specified message is to be serialized."}],"pos":[8219,8323],"yaml":true},{"content":"This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack. The top sink in the sink stack remains unchanged.","nodes":[{"pos":[0,392],"content":"This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack. The top sink in the sink stack remains unchanged.","nodes":[{"content":"This method returns the stream returned by the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName&gt;</ph> called with the <ph id=\"ph2\">`msg`</ph> and <ph id=\"ph3\">`headers`</ph> parameters (<ph id=\"ph4\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A&gt;</ph> (<ph id=\"ph5\">`msg`</ph>, <ph id=\"ph6\">`headers`</ph>)) on the top sink in the current sink stack.","pos":[0,342],"source":"This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack."},{"content":"The top sink in the sink stack remains unchanged.","pos":[343,392]}]}],"pos":[8334,8727],"yaml":true,"extradata":"MT"},{"content":"The message to be serialized onto the requested stream.","nodes":[{"pos":[0,55],"content":"The message to be serialized onto the requested stream.","nodes":[{"content":"The message to be serialized onto the requested stream.","pos":[0,55]}]}],"pos":[9006,9062],"yaml":true},{"content":"The headers retrieved from the server response stream.","nodes":[{"pos":[0,54],"content":"The headers retrieved from the server response stream.","nodes":[{"content":"The headers retrieved from the server response stream.","pos":[0,54]}]}],"pos":[9162,9217],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref> onto which the specified message is to be serialized.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> onto which the specified message is to be serialized.","source":"The <xref href=\"System.IO.Stream\"></xref> onto which the specified message is to be serialized."}],"pos":[9277,9373],"yaml":true},{"content":"The sink stack is empty.","nodes":[{"pos":[0,24],"content":"The sink stack is empty.","nodes":[{"content":"The sink stack is empty.","pos":[0,24]}]}],"pos":[9602,9627],"yaml":true},{"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","nodes":[{"pos":[0,110],"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","nodes":[{"content":"Pops the information associated with all the sinks from the sink stack up to and including the specified sink.","pos":[0,110]}]}],"pos":[10915,11026],"yaml":true},{"content":"The sink to remove and return from the sink stack.","nodes":[{"pos":[0,50],"content":"The sink to remove and return from the sink stack.","nodes":[{"content":"The sink to remove and return from the sink stack.","pos":[0,50]}]}],"pos":[11241,11292],"yaml":true},{"content":"Information generated on the request side and associated with the specified sink.","nodes":[{"pos":[0,81],"content":"Information generated on the request side and associated with the specified sink.","nodes":[{"content":"Information generated on the request side and associated with the specified sink.","pos":[0,81]}]}],"pos":[11349,11431],"yaml":true},{"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","nodes":[{"pos":[0,95],"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","nodes":[{"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","pos":[0,95]}]}],"pos":[11646,11742],"yaml":true},{"content":"Pushes the specified sink and information associated with it onto the sink stack.","nodes":[{"pos":[0,81],"content":"Pushes the specified sink and information associated with it onto the sink stack.","nodes":[{"content":"Pushes the specified sink and information associated with it onto the sink stack.","pos":[0,81]}]}],"pos":[13102,13184],"yaml":true},{"content":"The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink.","nodes":[{"pos":[0,245],"content":"The information generated on the request side and specified in the <ph id=\"ph1\">`state`</ph> parameter is returned in the <ph id=\"ph2\">`state`</ph> parameter of the <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A&gt;</ph> method on the corresponding sink.","source":"The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink."}],"pos":[13195,13441],"yaml":true,"extradata":"MT"},{"content":"The sink to push onto the sink stack.","nodes":[{"pos":[0,37],"content":"The sink to push onto the sink stack.","nodes":[{"content":"The sink to push onto the sink stack.","pos":[0,37]}]}],"pos":[13669,13707],"yaml":true},{"content":"Information generated on the request side that is needed on the response side.","nodes":[{"pos":[0,78],"content":"Information generated on the request side that is needed on the response side.","nodes":[{"content":"Information generated on the request side that is needed on the response side.","pos":[0,78]}]}],"pos":[13768,13847],"yaml":true},{"content":"Provides a <xref href=\"System.AsyncCallback\"></xref> delegate to handle a callback after a message has been dispatched asynchronously.","nodes":[{"pos":[0,134],"content":"Provides a <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate to handle a callback after a message has been dispatched asynchronously.","source":"Provides a <xref href=\"System.AsyncCallback\"></xref> delegate to handle a callback after a message has been dispatched asynchronously."}],"pos":[15178,15313],"yaml":true},{"content":"The dispatched message represents a request method call on a remote object.  \n  \n The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","nodes":[{"pos":[0,75],"content":"The dispatched message represents a request method call on a remote object.","nodes":[{"content":"The dispatched message represents a request method call on a remote object.","pos":[0,75]}]},{"pos":[82,278],"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","pos":[0,196],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A&gt;</ph> method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,163],"source":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A> method is intended for use only by the .NET Framework remoting infrastructure."},{"content":"You should not call it directly.","pos":[164,196]}]}]}],"pos":[15324,15607],"yaml":true,"extradata":"MT"},{"content":"The status and state of an asynchronous operation on a remote object.","nodes":[{"pos":[0,69],"content":"The status and state of an asynchronous operation on a remote object.","nodes":[{"content":"The status and state of an asynchronous operation on a remote object.","pos":[0,69]}]}],"pos":[15756,15826],"yaml":true},{"content":"Stores a message sink and its associated state for later asynchronous processing.","nodes":[{"pos":[0,81],"content":"Stores a message sink and its associated state for later asynchronous processing.","nodes":[{"content":"Stores a message sink and its associated state for later asynchronous processing.","pos":[0,81]}]}],"pos":[17293,17375],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","nodes":[{"pos":[0,187],"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","pos":[0,187],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A&gt;</ph> method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,154],"source":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A> method is intended for use only by the .NET Framework remoting infrastructure."},{"content":"You should not call it directly.","pos":[155,187]}]}]}],"pos":[17386,17574],"yaml":true,"extradata":"MT"},{"content":"A server channel sink.","nodes":[{"pos":[0,22],"content":"A server channel sink.","nodes":[{"content":"A server channel sink.","pos":[0,22]}]}],"pos":[17803,17826],"yaml":true},{"content":"The state associated with <code>sink</code>.","nodes":[{"pos":[0,44],"content":"The state associated with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sink</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The state associated with <code>sink</code>."}],"pos":[17887,17932],"yaml":true},{"content":"The current sink stack is empty.  \n  \n -or-  \n  \n The specified sink was never pushed onto the current stack.","nodes":[{"pos":[0,32],"content":"The current sink stack is empty.","nodes":[{"content":"The current sink stack is empty.","pos":[0,32]}]},{"pos":[39,43],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[50,109],"content":"The specified sink was never pushed onto the current stack.","nodes":[{"content":"The specified sink was never pushed onto the current stack.","pos":[0,59]}]}],"pos":[18149,18265],"yaml":true},{"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","nodes":[{"pos":[0,148],"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","nodes":[{"content":"Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.","pos":[0,148]}]}],"pos":[19697,19846],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.  \n  \n The method should be only called by a transport sink to complete an asynchronous dispatch.","nodes":[{"pos":[0,198],"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.","pos":[0,198],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A&gt;</ph> method is intended for use only by the .NET Framework remoting infrastructure.","pos":[0,165],"source":"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A> method is intended for use only by the .NET Framework remoting infrastructure."},{"content":"You should not call it directly.","pos":[166,198]}]}]},{"pos":[205,295],"content":"The method should be only called by a transport sink to complete an asynchronous dispatch.","nodes":[{"content":"The method should be only called by a transport sink to complete an asynchronous dispatch.","pos":[0,90]}]}],"pos":[19857,20157],"yaml":true,"extradata":"MT"},{"content":"A server channel sink.","nodes":[{"pos":[0,22],"content":"A server channel sink.","nodes":[{"content":"A server channel sink.","pos":[0,22]}]}],"pos":[20397,20420],"yaml":true},{"content":"The state associated with <code>sink</code>.","nodes":[{"pos":[0,44],"content":"The state associated with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sink</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The state associated with <code>sink</code>."}],"pos":[20481,20526],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  commentId: T:System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  id: ServerChannelSinkStack\n  children:\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  - System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  langs:\n  - csharp\n  name: ServerChannelSinkStack\n  nameWithType: ServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Holds the stack of server channel sinks.\n  remarks: This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/docs/framework/misc/link-demands.md) for more information.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ServerChannelSinkStack : System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: ServerChannelSinkStack()\n  nameWithType: ServerChannelSinkStack.ServerChannelSinkStack()\n  fullName: ServerChannelSinkStack.ServerChannelSinkStack()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ServerChannelSinkStack\"></xref> class.\n  syntax:\n    content: public ServerChannelSinkStack ();\n    parameters: []\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: AsyncProcessResponse(IMessage, ITransportHeaders, Stream)\n  nameWithType: ServerChannelSinkStack.AsyncProcessResponse(IMessage, ITransportHeaders, Stream)\n  fullName: ServerChannelSinkStack.AsyncProcessResponse(IMessage, ITransportHeaders, Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests asynchronous processing of a method call on the sinks in the current sink stack.\n  remarks: This method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method.\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message to be serialized onto the requested stream.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers retrieved from the server response stream.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream coming back from the transport sink.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  id: GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: GetResponseStream(IMessage, ITransportHeaders)\n  nameWithType: ServerChannelSinkStack.GetResponseStream(IMessage, ITransportHeaders)\n  fullName: ServerChannelSinkStack.GetResponseStream(IMessage, ITransportHeaders)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Returns the <xref href=\"System.IO.Stream\"></xref> onto which the specified message is to be serialized.\n  remarks: This method returns the stream returned by the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A?displayProperty=fullName> called with the `msg` and `headers` parameters (<xref:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream%2A> (`msg`, `headers`)) on the top sink in the current sink stack. The top sink in the sink stack remains unchanged.\n  syntax:\n    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message to be serialized onto the requested stream.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers retrieved from the server response stream.\n    return:\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> onto which the specified message is to be serialized.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The sink stack is empty.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  id: Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: Pop(IServerChannelSink)\n  nameWithType: ServerChannelSinkStack.Pop(IServerChannelSink)\n  fullName: ServerChannelSinkStack.Pop(IServerChannelSink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pops the information associated with all the sinks from the sink stack up to and including the specified sink.\n  syntax:\n    content: public object Pop (System.Runtime.Remoting.Channels.IServerChannelSink sink);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The sink to remove and return from the sink stack.\n    return:\n      type: System.Object\n      description: Information generated on the request side and associated with the specified sink.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty, or the specified sink was never pushed onto the current stack.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: Push(IServerChannelSink, Object)\n  nameWithType: ServerChannelSinkStack.Push(IServerChannelSink, Object)\n  fullName: ServerChannelSinkStack.Push(IServerChannelSink, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pushes the specified sink and information associated with it onto the sink stack.\n  remarks: The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse%2A> method on the corresponding sink.\n  syntax:\n    content: public void Push (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The sink to push onto the sink stack.\n    - id: state\n      type: System.Object\n      description: Information generated on the request side that is needed on the response side.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  id: ServerCallback(System.IAsyncResult)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: ServerCallback(IAsyncResult)\n  nameWithType: ServerChannelSinkStack.ServerCallback(IAsyncResult)\n  fullName: ServerChannelSinkStack.ServerCallback(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Provides a <xref href=\"System.AsyncCallback\"></xref> delegate to handle a callback after a message has been dispatched asynchronously.\n  remarks: \"The dispatched message represents a request method call on a remote object.  \\n  \\n The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.\"\n  syntax:\n    content: public void ServerCallback (IAsyncResult ar);\n    parameters:\n    - id: ar\n      type: System.IAsyncResult\n      description: The status and state of an asynchronous operation on a remote object.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: Store(IServerChannelSink, Object)\n  nameWithType: ServerChannelSinkStack.Store(IServerChannelSink, Object)\n  fullName: ServerChannelSinkStack.Store(IServerChannelSink, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Stores a message sink and its associated state for later asynchronous processing.\n  remarks: The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.\n  syntax:\n    content: public void Store (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: A server channel sink.\n    - id: state\n      type: System.Object\n      description: The state associated with <code>sink</code>.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: \"The current sink stack is empty.  \\n  \\n -or-  \\n  \\n The specified sink was never pushed onto the current stack.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  commentId: M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  id: StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  langs:\n  - csharp\n  name: StoreAndDispatch(IServerChannelSink, Object)\n  nameWithType: ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink, Object)\n  fullName: ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Stores a message sink and its associated state, and then dispatches a message asynchronously, using the sink just stored and any other stored sinks.\n  remarks: \"The <xref:System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch%2A> method is intended for use only by the .NET Framework remoting infrastructure. You should not call it directly.  \\n  \\n The method should be only called by a transport sink to complete an asynchronous dispatch.\"\n  syntax:\n    content: public void StoreAndDispatch (System.Runtime.Remoting.Channels.IServerChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: A server channel sink.\n    - id: state\n      type: System.Object\n      description: The state associated with <code>sink</code>.\n  overload: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.RemotingException\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: RemotingException\n  nameWithType: RemotingException\n  fullName: System.Runtime.Remoting.RemotingException\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerChannelSinkStack()\n  nameWithType: ServerChannelSinkStack.ServerChannelSinkStack()\n  fullName: ServerChannelSinkStack.ServerChannelSinkStack()\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse(IMessage, ITransportHeaders, Stream)\n  nameWithType: ServerChannelSinkStack.AsyncProcessResponse(IMessage, ITransportHeaders, Stream)\n  fullName: ServerChannelSinkStack.AsyncProcessResponse(IMessage, ITransportHeaders, Stream)\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: GetResponseStream(IMessage, ITransportHeaders)\n  nameWithType: ServerChannelSinkStack.GetResponseStream(IMessage, ITransportHeaders)\n  fullName: ServerChannelSinkStack.GetResponseStream(IMessage, ITransportHeaders)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Pop(IServerChannelSink)\n  nameWithType: ServerChannelSinkStack.Pop(IServerChannelSink)\n  fullName: ServerChannelSinkStack.Pop(IServerChannelSink)\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Push(IServerChannelSink, Object)\n  nameWithType: ServerChannelSinkStack.Push(IServerChannelSink, Object)\n  fullName: ServerChannelSinkStack.Push(IServerChannelSink, Object)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback(System.IAsyncResult)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerCallback(IAsyncResult)\n  nameWithType: ServerChannelSinkStack.ServerCallback(IAsyncResult)\n  fullName: ServerChannelSinkStack.ServerCallback(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Store(IServerChannelSink, Object)\n  nameWithType: ServerChannelSinkStack.Store(IServerChannelSink, Object)\n  fullName: ServerChannelSinkStack.Store(IServerChannelSink, Object)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: StoreAndDispatch(IServerChannelSink, Object)\n  nameWithType: ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink, Object)\n  fullName: ServerChannelSinkStack.StoreAndDispatch(IServerChannelSink, Object)\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.#ctor*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerChannelSinkStack\n  nameWithType: ServerChannelSinkStack.ServerChannelSinkStack\n  fullName: ServerChannelSinkStack.ServerChannelSinkStack\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: ServerChannelSinkStack.AsyncProcessResponse\n  fullName: ServerChannelSinkStack.AsyncProcessResponse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.GetResponseStream*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: GetResponseStream\n  nameWithType: ServerChannelSinkStack.GetResponseStream\n  fullName: ServerChannelSinkStack.GetResponseStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Pop*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Pop\n  nameWithType: ServerChannelSinkStack.Pop\n  fullName: ServerChannelSinkStack.Pop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Push\n  nameWithType: ServerChannelSinkStack.Push\n  fullName: ServerChannelSinkStack.Push\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.ServerCallback*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: ServerCallback\n  nameWithType: ServerChannelSinkStack.ServerCallback\n  fullName: ServerChannelSinkStack.ServerCallback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.Store*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: Store\n  nameWithType: ServerChannelSinkStack.Store\n  fullName: ServerChannelSinkStack.Store\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Runtime.Remoting.Channels.ServerChannelSinkStack.StoreAndDispatch*\n  parent: System.Runtime.Remoting.Channels.ServerChannelSinkStack\n  isExternal: false\n  name: StoreAndDispatch\n  nameWithType: ServerChannelSinkStack.StoreAndDispatch\n  fullName: ServerChannelSinkStack.StoreAndDispatch\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels/ServerChannelSinkStack.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkStack\n  nameWithType: IServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n"}