{"nodes":[{"content":"Defines methods used to convert <xref href=\"System.Collections.IList\"></xref> collection members to and from instances of <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,157],"content":"Defines methods used to convert <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> collection members to and from instances of <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Defines methods used to convert <xref href=\"System.Collections.IList\"></xref> collection members to and from instances of <xref href=\"System.String\"></xref>."}],"pos":[1092,1250],"yaml":true},{"content":"This class and its derivatives are intended to be used by the <xref:System.Windows.Markup.Primitives.MarkupWriter> for serialization of [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].","nodes":[{"pos":[0,196],"content":"This class and its derivatives are intended to be used by the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.Primitives.MarkupWriter&gt;</ph> for serialization of <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>.","source":"This class and its derivatives are intended to be used by the <xref:System.Windows.Markup.Primitives.MarkupWriter> for serialization of [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]."}],"pos":[1261,1458],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Converters.BaseIListConverter\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Converters.BaseIListConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Converters.BaseIListConverter\"></xref> class."}],"pos":[6509,6622],"yaml":true},{"content":"Determines if a given type can be converted.","nodes":[{"pos":[0,44],"content":"Determines if a given type can be converted.","nodes":[{"content":"Determines if a given type can be converted.","pos":[0,44]}]}],"pos":[8074,8119],"yaml":true},{"content":"<xref:System.String> is the only supported type for conversion.","nodes":[{"pos":[0,63],"content":"<xref:System.String> is the only supported type for conversion.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.String&gt;</ph> is the only supported type for conversion.","pos":[0,63],"source":"<xref:System.String> is the only supported type for conversion."}]}],"pos":[8130,8194],"yaml":true,"extradata":"MT"},{"content":"Provides contextual information required for conversion.","nodes":[{"pos":[0,56],"content":"Provides contextual information required for conversion.","nodes":[{"content":"Provides contextual information required for conversion.","pos":[0,56]}]}],"pos":[8417,8474],"yaml":true},{"content":"Type being evaluated for conversion.","nodes":[{"pos":[0,36],"content":"Type being evaluated for conversion.","nodes":[{"content":"Type being evaluated for conversion.","pos":[0,36]}]}],"pos":[8529,8566],"yaml":true},{"content":"`true` if this type can be converted; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if this type can be converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this type can be converted; otherwise, `false`."}],"pos":[8624,8684],"yaml":true},{"content":"Determines if a given type can be converted to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,84],"content":"Determines if a given type can be converted to a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Determines if a given type can be converted to a <xref href=\"System.String\"></xref>."}],"pos":[10058,10143],"yaml":true},{"content":"<xref:System.String> is the only supported type for conversion.","nodes":[{"pos":[0,63],"content":"<xref:System.String> is the only supported type for conversion.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.String&gt;</ph> is the only supported type for conversion.","pos":[0,63],"source":"<xref:System.String> is the only supported type for conversion."}]}],"pos":[10154,10218],"yaml":true,"extradata":"MT"},{"content":"Provides contextual information required for conversion.","nodes":[{"pos":[0,56],"content":"Provides contextual information required for conversion.","nodes":[{"content":"Provides contextual information required for conversion.","pos":[0,56]}]}],"pos":[10463,10520],"yaml":true},{"content":"Type being evaluated for conversion.","nodes":[{"pos":[0,36],"content":"Type being evaluated for conversion.","nodes":[{"content":"Type being evaluated for conversion.","pos":[0,36]}]}],"pos":[10589,10626],"yaml":true},{"content":"`true` if this type can be converted; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if this type can be converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this type can be converted; otherwise, `false`."}],"pos":[10684,10744],"yaml":true},{"content":"Converts a <xref href=\"System.String\"></xref> to a supported instance of <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,119],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to a supported instance of <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Converts a <xref href=\"System.String\"></xref> to a supported instance of <xref href=\"System.Collections.IList\"></xref>."}],"pos":[12260,12380],"yaml":true},{"content":"Provides contextual information required for conversion.","nodes":[{"pos":[0,56],"content":"Provides contextual information required for conversion.","nodes":[{"content":"Provides contextual information required for conversion.","pos":[0,56]}]}],"pos":[12645,12702],"yaml":true},{"content":"Cultural information to respect during conversion.","nodes":[{"pos":[0,50],"content":"Cultural information to respect during conversion.","nodes":[{"content":"Cultural information to respect during conversion.","pos":[0,50]}]}],"pos":[12779,12830],"yaml":true},{"content":"String used for conversion.","nodes":[{"pos":[0,27],"content":"String used for conversion.","nodes":[{"content":"String used for conversion.","pos":[0,27]}]}],"pos":[12891,12919],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that represents the result of the conversion.","nodes":[{"pos":[0,83],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the result of the conversion.","source":"An <xref href=\"System.Object\"></xref> that represents the result of the conversion."}],"pos":[12976,13060],"yaml":true},{"content":"Occurs if value is `null` and not a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,71],"content":"Occurs if value is <ph id=\"ph1\">`null`</ph> and not a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs if value is `null` and not a <xref href=\"System.String\"></xref>."}],"pos":[13244,13316],"yaml":true},{"content":"Converts a supported instance of <xref href=\"System.Collections.IList\"></xref> to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,119],"content":"Converts a supported instance of <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> to a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Converts a supported instance of <xref href=\"System.Collections.IList\"></xref> to a <xref href=\"System.String\"></xref>."}],"pos":[14780,14900],"yaml":true},{"content":"Provides contextual information required for conversion.","nodes":[{"pos":[0,56],"content":"Provides contextual information required for conversion.","nodes":[{"content":"Provides contextual information required for conversion.","pos":[0,56]}]}],"pos":[15200,15257],"yaml":true},{"content":"Cultural information to respect during conversion.","nodes":[{"pos":[0,50],"content":"Cultural information to respect during conversion.","nodes":[{"content":"Cultural information to respect during conversion.","pos":[0,50]}]}],"pos":[15339,15390],"yaml":true},{"content":"Object being evaluated for conversion.","nodes":[{"pos":[0,38],"content":"Object being evaluated for conversion.","nodes":[{"content":"Object being evaluated for conversion.","pos":[0,38]}]}],"pos":[15451,15490],"yaml":true},{"content":"Destination type being evaluated for conversion.","nodes":[{"pos":[0,48],"content":"Destination type being evaluated for conversion.","nodes":[{"content":"Destination type being evaluated for conversion.","pos":[0,48]}]}],"pos":[15559,15608],"yaml":true},{"content":"String representation of the <xref href=\"System.Collections.IList\"></xref> collection.","nodes":[{"pos":[0,86],"content":"String representation of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> collection.","source":"String representation of the <xref href=\"System.Collections.IList\"></xref> collection."}],"pos":[15665,15752],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Converters.BaseIListConverter\n  commentId: T:System.Windows.Media.Converters.BaseIListConverter\n  id: BaseIListConverter\n  children:\n  - System.Windows.Media.Converters.BaseIListConverter.#ctor\n  - System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: BaseIListConverter\n  nameWithType: BaseIListConverter\n  fullName: System.Windows.Media.Converters.BaseIListConverter\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Converters\n  summary: Defines methods used to convert <xref href=\"System.Collections.IList\"></xref> collection members to and from instances of <xref href=\"System.String\"></xref>.\n  remarks: This class and its derivatives are intended to be used by the <xref:System.Windows.Markup.Primitives.MarkupWriter> for serialization of [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].\n  syntax:\n    content: 'public abstract class BaseIListConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  derivedClasses:\n  - System.Windows.Media.Converters.BoolIListConverter\n  - System.Windows.Media.Converters.CharIListConverter\n  - System.Windows.Media.Converters.DoubleIListConverter\n  - System.Windows.Media.Converters.PointIListConverter\n  - System.Windows.Media.Converters.UShortIListConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Converters.BaseIListConverter.#ctor\n  commentId: M:System.Windows.Media.Converters.BaseIListConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  langs:\n  - csharp\n  name: BaseIListConverter()\n  nameWithType: BaseIListConverter.BaseIListConverter()\n  fullName: BaseIListConverter.BaseIListConverter()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Converters\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Converters.BaseIListConverter\"></xref> class.\n  syntax:\n    content: protected BaseIListConverter ();\n    parameters: []\n  overload: System.Windows.Media.Converters.BaseIListConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: BaseIListConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: BaseIListConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Converters\n  summary: Determines if a given type can be converted.\n  remarks: <xref:System.String> is the only supported type for conversion.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext td, Type t);\n    parameters:\n    - id: td\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information required for conversion.\n    - id: t\n      type: System.Type\n      description: Type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if this type can be converted; otherwise, `false`.'\n  overload: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: BaseIListConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: BaseIListConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Converters\n  summary: Determines if a given type can be converted to a <xref href=\"System.String\"></xref>.\n  remarks: <xref:System.String> is the only supported type for conversion.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information required for conversion.\n    - id: destinationType\n      type: System.Type\n      description: Type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if this type can be converted; otherwise, `false`.'\n  overload: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: BaseIListConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: BaseIListConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Converters\n  summary: Converts a <xref href=\"System.String\"></xref> to a supported instance of <xref href=\"System.Collections.IList\"></xref>.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext td, System.Globalization.CultureInfo ci, object value);\n    parameters:\n    - id: td\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information required for conversion.\n    - id: ci\n      type: System.Globalization.CultureInfo\n      description: Cultural information to respect during conversion.\n    - id: value\n      type: System.Object\n      description: String used for conversion.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that represents the result of the conversion.\n  overload: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs if value is `null` and not a <xref href=\"System.String\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: BaseIListConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: BaseIListConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Converters\n  summary: Converts a supported instance of <xref href=\"System.Collections.IList\"></xref> to a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information required for conversion.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Cultural information to respect during conversion.\n    - id: value\n      type: System.Object\n      description: Object being evaluated for conversion.\n    - id: destinationType\n      type: System.Type\n      description: Destination type being evaluated for conversion.\n    return:\n      type: System.Object\n      description: String representation of the <xref href=\"System.Collections.IList\"></xref> collection.\n  overload: System.Windows.Media.Converters.BaseIListConverter.ConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Media.Converters.BaseIListConverter.#ctor\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: BaseIListConverter()\n  nameWithType: BaseIListConverter.BaseIListConverter()\n  fullName: BaseIListConverter.BaseIListConverter()\n- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: BaseIListConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: BaseIListConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: BaseIListConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: BaseIListConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: BaseIListConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: BaseIListConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: BaseIListConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: BaseIListConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Windows.Media.Converters.BaseIListConverter.#ctor*\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: BaseIListConverter\n  nameWithType: BaseIListConverter.BaseIListConverter\n  fullName: BaseIListConverter.BaseIListConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom*\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: BaseIListConverter.CanConvertFrom\n  fullName: BaseIListConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n- uid: System.Windows.Media.Converters.BaseIListConverter.CanConvertTo*\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: BaseIListConverter.CanConvertTo\n  fullName: BaseIListConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertFrom*\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: BaseIListConverter.ConvertFrom\n  fullName: BaseIListConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n- uid: System.Windows.Media.Converters.BaseIListConverter.ConvertTo*\n  parent: System.Windows.Media.Converters.BaseIListConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: BaseIListConverter.ConvertTo\n  fullName: BaseIListConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Converters/BaseIListConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}