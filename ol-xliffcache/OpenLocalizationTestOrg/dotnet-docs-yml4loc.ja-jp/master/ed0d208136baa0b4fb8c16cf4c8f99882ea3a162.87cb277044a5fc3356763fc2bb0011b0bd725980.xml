{"nodes":[{"content":"Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.","nodes":[{"pos":[0,128],"content":"Represents a query that tests whether a message matches an EndpointAddress using a <bpt id=\"p1\">*</bpt>Longest-Prefix Match<ept id=\"p1\">*</ept> for the URI component.","source":"Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component."}],"pos":[1284,1413],"yaml":true},{"content":"An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.  \n  \n This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*. This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix. For example, if a filter specifies the address \"www.foo.com\", and a message is addressed to \"www.foo.com/customerA\", then the URI part of the filter query condition will be met. However, the header portion of the filter query still has to be done.  \n  \n Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","nodes":[{"pos":[0,365],"content":"An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.","nodes":[{"content":"An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.","pos":[0,365],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> object includes a URI and an optional collection of addressing headers.","pos":[0,117],"source":"An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers."},{"content":"The addressing and message headers are canonicalized to be compared for equality.","pos":[118,199]},{"content":"If a parameter appears more than once in an <ph id=\"ph1\">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>, the corresponding header must appear in the message at least that many times.","pos":[200,365],"source":" If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times."}]}]},{"pos":[372,979],"content":"This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*. This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix. For example, if a filter specifies the address \"www.foo.com\", and a message is addressed to \"www.foo.com/customerA\", then the URI part of the filter query condition will be met. However, the header portion of the filter query still has to be done.","nodes":[{"content":"This filter performs the same query as <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&gt;</ph>, except that the test for whether a message matches an endpoint address is done by a <bpt id=\"p1\">*</bpt>Longest-Prefix Match<ept id=\"p1\">*</ept>.","pos":[0,214],"source":"This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*."},{"content":"This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix.","pos":[215,359]},{"content":"For example, if a filter specifies the address \"www.foo.com\", and a message is addressed to \"www.foo.com/customerA\", then the URI part of the filter query condition will be met.","pos":[360,537]},{"content":"However, the header portion of the filter query still has to be done.","pos":[538,607]}]},{"pos":[986,1243],"content":"Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","nodes":[{"content":"Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","pos":[0,257],"nodes":[{"content":"Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive.","pos":[0,102]},{"content":"URI comparisons done by this class are also case-insensitive.","pos":[103,164]},{"content":"So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.","pos":[165,257]}]}]}],"pos":[1424,2678],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> class.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> class."}],"pos":[4514,4642],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> against which messages are tested.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> against which messages are tested.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> against which messages are tested."}],"pos":[4855,4951],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[5152,5184],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> class.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> class."}],"pos":[6579,6707],"yaml":true},{"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:  \n  \n-   http://localhost/foo.svc  \n  \n-   http://192.168.1.100/foo.svc  \n  \n-   http://[my-machine-name]/foo.svc  \n  \n-   http://[my-machine-name].[my-company].com/foo.svc.  \n  \n If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.","nodes":[{"pos":[0,131],"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:","nodes":[{"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:","pos":[0,131]}]},{"pos":[141,165],"content":"http://localhost/foo.svc","nodes":[{"content":"http://localhost/foo.svc","pos":[0,24]}]},{"pos":[175,203],"content":"http://192.168.1.100/foo.svc","nodes":[{"content":"http://192.168.1.100/foo.svc","pos":[0,28]}]},{"pos":[213,245],"content":"http://[my-machine-name]/foo.svc","nodes":[{"content":"http://[my-machine-name]/foo.svc","pos":[0,32]}]},{"pos":[255,305],"content":"http://[my-machine-name].[my-company].com/foo.svc.","nodes":[{"content":"http://[my-machine-name].[my-company].com/foo.svc.","pos":[0,50]}]},{"pos":[312,432],"content":"If the value of the <ph id=\"ph1\">`includeHostNameInComparison`</ph> parameter is <ph id=\"ph2\">`false`</ph>, the above URIs all resolve to the same endpoint.","source":"If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint."}],"pos":[6718,7163],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> against which messages are tested.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> against which messages are tested.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> against which messages are tested."}],"pos":[7410,7506],"yaml":true},{"content":"`true` if the host name is included in the endpoint address comparison; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if the host name is included in the endpoint address comparison; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the host name is included in the endpoint address comparison; otherwise, `false`."}],"pos":[7590,7684],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[7885,7917],"yaml":true},{"content":"Gets the Endpoint Address that the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> tests messages against.","nodes":[{"pos":[0,145],"content":"Gets the Endpoint Address that the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"&gt;&lt;/xref&gt;</ph> tests messages against.","source":"Gets the Endpoint Address that the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> tests messages against."}],"pos":[8998,9144],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> tests messages against.","nodes":[{"pos":[0,180],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"&gt;&lt;/xref&gt;</ph> tests messages against.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> tests messages against."}],"pos":[9306,9487],"yaml":true},{"content":"Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.","nodes":[{"pos":[0,99],"content":"Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.","nodes":[{"content":"Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.","pos":[0,99]}]}],"pos":[10781,10881],"yaml":true},{"content":"The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.  \n  \n This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.","nodes":[{"pos":[0,153],"content":"The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.","nodes":[{"content":"The method returns an instance of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph> that is optimized to test for specific message endpoints.","pos":[0,153],"source":"The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints."}]},{"pos":[160,259],"content":"This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.","nodes":[{"content":"This method is intended to be used by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt;</ph>.","pos":[0,99],"source":"This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>."}]}],"pos":[10892,11156],"yaml":true,"extradata":"MT"},{"content":"Data associated with the filters in the table.","nodes":[{"pos":[0,46],"content":"Data associated with the filters in the table.","nodes":[{"content":"Data associated with the filters in the table.","pos":[0,46]}]}],"pos":[11374,11421],"yaml":true},{"content":"An object that implements the <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> interface that can contain <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref>s with associated <code>FilterData</code>.","nodes":[{"pos":[0,259],"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> interface that can contain <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"&gt;&lt;/xref&gt;</ph>s with associated <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that implements the <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> interface that can contain <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref>s with associated <code>FilterData</code>."}],"pos":[11527,11787],"yaml":true},{"content":"Gets a value that indicates whether the host name is included in the endpoint address comparison.","nodes":[{"pos":[0,97],"content":"Gets a value that indicates whether the host name is included in the endpoint address comparison.","nodes":[{"content":"Gets a value that indicates whether the host name is included in the endpoint address comparison.","pos":[0,97]}]}],"pos":[13105,13203],"yaml":true},{"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:  \n  \n-   http://localhost/foo.svc  \n  \n-   http://192.168.1.100/foo.svc  \n  \n-   http://[my-machine-name]/foo.svc  \n  \n-   http://[my-machine-name].[my-company].com/foo.svc.  \n  \n The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.","nodes":[{"pos":[0,131],"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:","nodes":[{"content":"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:","pos":[0,131]}]},{"pos":[141,165],"content":"http://localhost/foo.svc","nodes":[{"content":"http://localhost/foo.svc","pos":[0,24]}]},{"pos":[175,203],"content":"http://192.168.1.100/foo.svc","nodes":[{"content":"http://192.168.1.100/foo.svc","pos":[0,28]}]},{"pos":[213,245],"content":"http://[my-machine-name]/foo.svc","nodes":[{"content":"http://[my-machine-name]/foo.svc","pos":[0,32]}]},{"pos":[255,305],"content":"http://[my-machine-name].[my-company].com/foo.svc.","nodes":[{"content":"http://[my-machine-name].[my-company].com/foo.svc.","pos":[0,50]}]},{"pos":[312,443],"content":"The default value of this property is <ph id=\"ph1\">`false`</ph>, so the above URIs all resolve to the same endpoint, unless you change this property.","source":"The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property."}],"pos":[13214,13670],"yaml":true,"extradata":"MT"},{"content":"`true` if the host name is included in the endpoint address comparison; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if the host name is included in the endpoint address comparison; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the host name is included in the endpoint address comparison; otherwise, `false`."}],"pos":[13800,13894],"yaml":true},{"content":"Tests whether a message satisfies the specified endpoint address.","nodes":[{"pos":[0,65],"content":"Tests whether a message satisfies the specified endpoint address.","nodes":[{"content":"Tests whether a message satisfies the specified endpoint address.","pos":[0,65]}]}],"pos":[15226,15292],"yaml":true},{"content":"The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.","nodes":[{"pos":[0,172],"content":"The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.","nodes":[{"content":"The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.","pos":[0,172]}]}],"pos":[15303,15476],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> object to test.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> object to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> object to test."}],"pos":[15676,15754],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.Message\"></xref> object satisfies the endpoint address specified in the filter; otherwise, `false`.","nodes":[{"pos":[0,154],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> object satisfies the endpoint address specified in the filter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.Message\"></xref> object satisfies the endpoint address specified in the filter; otherwise, `false`."}],"pos":[15812,15969],"yaml":true},{"content":"<code>message</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;message&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>message</code> is `null`."}],"pos":[16170,16202],"yaml":true},{"content":"Tests whether a buffered message satisfies the specified endpoint address.","nodes":[{"pos":[0,74],"content":"Tests whether a buffered message satisfies the specified endpoint address.","nodes":[{"content":"Tests whether a buffered message satisfies the specified endpoint address.","pos":[0,74]}]}],"pos":[17446,17521],"yaml":true},{"content":"The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.","nodes":[{"pos":[0,172],"content":"The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.","nodes":[{"content":"The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.","pos":[0,172]}]}],"pos":[17532,17705],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object to test.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> object to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object to test."}],"pos":[17929,18013],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object satisfies the endpoint address; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> object satisfies the endpoint address; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object satisfies the endpoint address; otherwise, `false`."}],"pos":[18071,18210],"yaml":true},{"content":"<code>messageBuffer</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;messageBuffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>messageBuffer</code> is `null`."}],"pos":[18411,18449],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  commentId: T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  id: PrefixEndpointAddressMessageFilter\n  children:\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  langs:\n  - csharp\n  name: PrefixEndpointAddressMessageFilter\n  nameWithType: PrefixEndpointAddressMessageFilter\n  fullName: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.\n  remarks: \"An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers. The addressing and message headers are canonicalized to be compared for equality. If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.  \\n  \\n This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*. This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix. For example, if a filter specifies the address \\\"www.foo.com\\\", and a message is addressed to \\\"www.foo.com/customerA\\\", then the URI part of the filter query condition will be met. However, the header portion of the filter query still has to be done.  \\n  \\n Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive. URI comparisons done by this class are also case-insensitive. So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.\"\n  syntax:\n    content: 'public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Dispatcher.MessageFilter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: PrefixEndpointAddressMessageFilter(EndpointAddress)\n  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)\n  fullName: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> class.\n  syntax:\n    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> against which messages are tested.\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  commentId: M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  id: '#ctor(System.ServiceModel.EndpointAddress,System.Boolean)'\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: PrefixEndpointAddressMessageFilter(EndpointAddress, Boolean)\n  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress, Boolean)\n  fullName: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> class.\n  remarks: \"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:  \\n  \\n-   http://localhost/foo.svc  \\n  \\n-   http://192.168.1.100/foo.svc  \\n  \\n-   http://[my-machine-name]/foo.svc  \\n  \\n-   http://[my-machine-name].[my-company].com/foo.svc.  \\n  \\n If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.\"\n  syntax:\n    content: public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> against which messages are tested.\n    - id: includeHostNameInComparison\n      type: System.Boolean\n      description: '`true` if the host name is included in the endpoint address comparison; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address\n  commentId: P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address\n  id: Address\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: Address\n  nameWithType: PrefixEndpointAddressMessageFilter.Address\n  fullName: PrefixEndpointAddressMessageFilter.Address\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets the Endpoint Address that the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> tests messages against.\n  syntax:\n    content: public System.ServiceModel.EndpointAddress Address { get; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that the <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref> tests messages against.\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1\n  commentId: M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1\n  id: CreateFilterTable``1\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: CreateFilterTable<FilterData>()\n  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>()\n  fullName: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.\n  remarks: \"The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.  \\n  \\n This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.\"\n  syntax:\n    content: protected override System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();\n    parameters: []\n    typeParameters:\n    - id: FilterData\n      description: Data associated with the filters in the table.\n    return:\n      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}\n      description: An object that implements the <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> interface that can contain <xref href=\"System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\"></xref>s with associated <code>FilterData</code>.\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  commentId: P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  id: IncludeHostNameInComparison\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: IncludeHostNameInComparison\n  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  fullName: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets a value that indicates whether the host name is included in the endpoint address comparison.\n  remarks: \"If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:  \\n  \\n-   http://localhost/foo.svc  \\n  \\n-   http://192.168.1.100/foo.svc  \\n  \\n-   http://[my-machine-name]/foo.svc  \\n  \\n-   http://[my-machine-name].[my-company].com/foo.svc.  \\n  \\n The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.\"\n  syntax:\n    content: public bool IncludeHostNameInComparison { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the host name is included in the endpoint address comparison; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  commentId: M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  id: Match(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: Match(Message)\n  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)\n  fullName: PrefixEndpointAddressMessageFilter.Match(Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Tests whether a message satisfies the specified endpoint address.\n  remarks: The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.\n  syntax:\n    content: public override bool Match (System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> object to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.Message\"></xref> object satisfies the endpoint address specified in the filter; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>message</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  commentId: M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  id: Match(System.ServiceModel.Channels.MessageBuffer)\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  langs:\n  - csharp\n  name: Match(MessageBuffer)\n  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)\n  fullName: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Tests whether a buffered message satisfies the specified endpoint address.\n  remarks: The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.\n  syntax:\n    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object satisfies the endpoint address; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>messageBuffer</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: PrefixEndpointAddressMessageFilter(EndpointAddress)\n  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)\n  fullName: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress)\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: PrefixEndpointAddressMessageFilter(EndpointAddress, Boolean)\n  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress, Boolean)\n  fullName: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter(EndpointAddress, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: Address\n  nameWithType: PrefixEndpointAddressMessageFilter.Address\n  fullName: PrefixEndpointAddressMessageFilter.Address\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: CreateFilterTable<FilterData>()\n  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>()\n  fullName: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>()\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  name: IMessageFilterTable<TFilterData>\n  nameWithType: IMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n- uid: FilterData\n  name: FilterData\n  nameWithType: FilterData\n  fullName: FilterData\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: IMessageFilterTable<FilterData>\n  nameWithType: IMessageFilterTable<FilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>\n  spec.csharp:\n  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n    name: IMessageFilterTable\n    nameWithType: IMessageFilterTable\n    fullName: System.ServiceModel.Dispatcher.IMessageFilterTable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: FilterData\n    name: FilterData\n    nameWithType: FilterData\n    fullName: FilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: IncludeHostNameInComparison\n  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  fullName: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: Match(Message)\n  nameWithType: PrefixEndpointAddressMessageFilter.Match(Message)\n  fullName: PrefixEndpointAddressMessageFilter.Match(Message)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: Match(MessageBuffer)\n  nameWithType: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)\n  fullName: PrefixEndpointAddressMessageFilter.Match(MessageBuffer)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match*\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: Match\n  nameWithType: PrefixEndpointAddressMessageFilter.Match\n  fullName: PrefixEndpointAddressMessageFilter.Match\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor*\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: PrefixEndpointAddressMessageFilter\n  nameWithType: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter\n  fullName: PrefixEndpointAddressMessageFilter.PrefixEndpointAddressMessageFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address*\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: Address\n  nameWithType: PrefixEndpointAddressMessageFilter.Address\n  fullName: PrefixEndpointAddressMessageFilter.Address\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1*\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: CreateFilterTable<FilterData>\n  nameWithType: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>\n  fullName: PrefixEndpointAddressMessageFilter.CreateFilterTable<FilterData>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n- uid: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison*\n  parent: System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  isExternal: false\n  name: IncludeHostNameInComparison\n  nameWithType: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  fullName: PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/PrefixEndpointAddressMessageFilter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}