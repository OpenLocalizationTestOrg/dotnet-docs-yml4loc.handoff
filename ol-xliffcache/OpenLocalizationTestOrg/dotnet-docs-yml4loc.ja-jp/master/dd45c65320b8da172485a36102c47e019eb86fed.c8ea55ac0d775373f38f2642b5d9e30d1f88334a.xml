{"nodes":[{"content":"Exposes a <xref href=\"System.IO.Stream\"></xref> object around a pipe, which supports both anonymous and named pipes.","nodes":[{"pos":[0,116],"content":"Exposes a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object around a pipe, which supports both anonymous and named pipes.","source":"Exposes a <xref href=\"System.IO.Stream\"></xref> object around a pipe, which supports both anonymous and named pipes."}],"pos":[2678,2795],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework. Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations. Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.  \n  \n For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md). For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md). For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).","nodes":[{"pos":[0,417],"content":"The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework. Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations. Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework. Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations. Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.","pos":[0,417],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class provides the base class for named and anonymous pipes operations in the .NET Framework.","pos":[0,131],"source":"The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;</ph> classes for named pipe operations.","pos":[132,268],"source":" Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> classes for anonymous pipe operations.","pos":[269,417],"source":" Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations."}]}]},{"pos":[424,889],"content":"For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md). For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md). For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).","nodes":[{"content":"For more information about pipes, see <bpt id=\"p1\">[</bpt>Pipes<ept id=\"p1\">](~/docs/standard/io/pipe-operations.md)</ept>.","pos":[0,85],"source":"For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md)."},{"content":"For an example of anonymous pipes, see <bpt id=\"p1\">[</bpt>How to: Use Anonymous Pipes for Local Interprocess Communication<ept id=\"p1\">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.","pos":[86,279],"source":" For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)."},{"content":"For an example of named pipes, see <bpt id=\"p1\">[</bpt>How to: Use Named Pipes for Network Interprocess Communication<ept id=\"p1\">](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)</ept>.","pos":[280,465],"source":" For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)."}]}],"pos":[2806,3700],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class using the specified <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value and buffer size.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value and buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class using the specified <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value and buffer size."}],"pos":[6783,6965],"yaml":true},{"content":"This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.","nodes":[{"pos":[0,99],"content":"This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.","nodes":[{"content":"This constructor uses a pipe transmission mode of <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Byte&gt;</ph>.","pos":[0,99],"source":"This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>."}]}],"pos":[6976,7076],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.IO.Pipes.PipeDirection\"></xref> values that indicates the direction of the pipe object.","nodes":[{"pos":[0,117],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> values that indicates the direction of the pipe object.","source":"One of the <xref href=\"System.IO.Pipes.PipeDirection\"></xref> values that indicates the direction of the pipe object."}],"pos":[7276,7394],"yaml":true},{"content":"A positive <xref href=\"System.Int32\"></xref> value greater than or equal to 0 that indicates the buffer size.","nodes":[{"pos":[0,109],"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value greater than or equal to 0 that indicates the buffer size.","source":"A positive <xref href=\"System.Int32\"></xref> value greater than or equal to 0 that indicates the buffer size."}],"pos":[7459,7569],"yaml":true},{"content":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>bufferSize</code> is less than 0.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."},{"pos":[102,106],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[113,152],"content":"<ph id=\"ph1\">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.","source":"<code>bufferSize</code> is less than 0."}],"pos":[7743,7904],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class using the specified <xref href=\"System.IO.Pipes.PipeDirection\"></xref>, <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref>, and buffer size.","nodes":[{"pos":[0,235],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph>, and buffer size.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class using the specified <xref href=\"System.IO.Pipes.PipeDirection\"></xref>, <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref>, and buffer size."}],"pos":[9439,9675],"yaml":true},{"content":"One of the <xref href=\"System.IO.Pipes.PipeDirection\"></xref> values that indicates the direction of the pipe object.","nodes":[{"pos":[0,117],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> values that indicates the direction of the pipe object.","source":"One of the <xref href=\"System.IO.Pipes.PipeDirection\"></xref> values that indicates the direction of the pipe object."}],"pos":[9933,10051],"yaml":true},{"content":"One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates the transmission mode of the pipe object.","nodes":[{"pos":[0,132],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph> values that indicates the transmission mode of the pipe object.","source":"One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates the transmission mode of the pipe object."}],"pos":[10146,10279],"yaml":true},{"content":"A positive <xref href=\"System.Int32\"></xref> value greater than or equal to 0 that indicates the buffer size.","nodes":[{"pos":[0,109],"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value greater than or equal to 0 that indicates the buffer size.","source":"A positive <xref href=\"System.Int32\"></xref> value greater than or equal to 0 that indicates the buffer size."}],"pos":[10347,10457],"yaml":true},{"content":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>transmissionMode</code> is not a valid <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value.  \n  \n -or-  \n  \n <code>bufferSize</code> is less than 0.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeDirection\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."},{"pos":[102,106],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[113,222],"content":"<ph id=\"ph1\">&lt;code&gt;transmissionMode&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>transmissionMode</code> is not a valid <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value."},{"pos":[229,233],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[240,279],"content":"<ph id=\"ph1\">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.","source":"<code>bufferSize</code> is less than 0."}],"pos":[10631,10925],"yaml":true},{"content":"Begins an asynchronous read operation.","nodes":[{"pos":[0,38],"content":"Begins an asynchronous read operation.","nodes":[{"content":"Begins an asynchronous read operation.","pos":[0,38]}]}],"pos":[12450,12489],"yaml":true},{"content":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.","nodes":[{"pos":[0,522],"content":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.","nodes":[{"content":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.","pos":[0,522],"nodes":[{"content":"Pass the returned <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> object to the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method to determine how many bytes were read and to release operating system resources used for reading.","pos":[0,208],"source":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> must be called once for every call to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.","pos":[209,339],"source":" <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>."},{"content":"This can be done either in the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> or in a callback that is passed to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.","pos":[340,522],"source":" This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>."}]}]},{"pos":[529,690],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.","pos":[0,161],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations."}]},{"pos":[697,1074],"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.","nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.","pos":[0,377],"nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>, the appropriate exceptions are raised immediately.","pos":[0,156],"source":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately."},{"content":"Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.","pos":[157,274]},{"content":"The exceptions are raised when the code calls the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method.","pos":[275,377],"source":" The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method."}]}]}],"pos":[12500,13581],"yaml":true,"extradata":"MT"},{"content":"The buffer to read data into.","nodes":[{"pos":[0,29],"content":"The buffer to read data into.","nodes":[{"content":"The buffer to read data into.","pos":[0,29]}]}],"pos":[13799,13829],"yaml":true},{"content":"The byte offset in <code>buffer</code> at which to begin reading.","nodes":[{"pos":[0,65],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin reading.","source":"The byte offset in <code>buffer</code> at which to begin reading."}],"pos":[13890,13956],"yaml":true},{"content":"The maximum number of bytes to read.","nodes":[{"pos":[0,36],"content":"The maximum number of bytes to read.","nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]}],"pos":[14016,14053],"yaml":true},{"content":"The method to call when the asynchronous read operation is completed.","nodes":[{"pos":[0,69],"content":"The method to call when the asynchronous read operation is completed.","nodes":[{"content":"The method to call when the asynchronous read operation is completed.","pos":[0,69]}]}],"pos":[14124,14194],"yaml":true},{"content":"A user-provided object that distinguishes this particular asynchronous read request from other requests.","nodes":[{"pos":[0,104],"content":"A user-provided object that distinguishes this particular asynchronous read request from other requests.","nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous read request from other requests.","pos":[0,104]}]}],"pos":[14255,14360],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that references the asynchronous read.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that references the asynchronous read.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that references the asynchronous read."}],"pos":[14423,14513],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[14679,14710],"yaml":true},{"content":"<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.","source":"<code>offset</code> is less than 0."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,87],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.","source":"<code>count</code> is less than 0."}],"pos":[14824,14918],"yaml":true},{"content":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>."}],"pos":[15012,15101],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[15207,15227],"yaml":true},{"content":"The pipe does not support read operations.","nodes":[{"pos":[0,42],"content":"The pipe does not support read operations.","nodes":[{"content":"The pipe does not support read operations.","pos":[0,42]}]}],"pos":[15329,15372],"yaml":true},{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"pos":[0,77],"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","pos":[0,77]}]}],"pos":[15482,15560],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[15648,15698],"yaml":true},{"content":"Begins an asynchronous write operation.","nodes":[{"pos":[0,39],"content":"Begins an asynchronous write operation.","nodes":[{"content":"Begins an asynchronous write operation.","pos":[0,39]}]}],"pos":[17165,17205],"yaml":true},{"content":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.","nodes":[{"pos":[0,317],"content":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.","nodes":[{"content":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.","pos":[0,317],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> must be called once for every call to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.","pos":[0,132],"source":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>."},{"content":"This can be done either in the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> or in a callback that is passed to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.","pos":[133,317],"source":" This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>."}]}]},{"pos":[324,487],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.","pos":[0,163],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations."}]},{"pos":[494,875],"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.","nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.","pos":[0,381],"nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>, the appropriate exceptions are raised immediately.","pos":[0,157],"source":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately."},{"content":"Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.","pos":[158,276]},{"content":"The exceptions are raised when the code calls the  <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> method.","pos":[277,381],"source":" The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method."}]}]}],"pos":[17216,18098],"yaml":true,"extradata":"MT"},{"content":"The buffer that contains the data to write to the current stream.","nodes":[{"pos":[0,65],"content":"The buffer that contains the data to write to the current stream.","nodes":[{"content":"The buffer that contains the data to write to the current stream.","pos":[0,65]}]}],"pos":[18317,18383],"yaml":true},{"content":"The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.","nodes":[{"pos":[0,104],"content":"The zero-based byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin copying bytes to the current stream.","source":"The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream."}],"pos":[18444,18549],"yaml":true},{"content":"The maximum number of bytes to write.","nodes":[{"pos":[0,37],"content":"The maximum number of bytes to write.","nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]}],"pos":[18609,18647],"yaml":true},{"content":"The method to call when the asynchronous write operation is completed.","nodes":[{"pos":[0,70],"content":"The method to call when the asynchronous write operation is completed.","nodes":[{"content":"The method to call when the asynchronous write operation is completed.","pos":[0,70]}]}],"pos":[18718,18789],"yaml":true},{"content":"A user-provided object that distinguishes this particular asynchronous write request from other requests.","nodes":[{"pos":[0,105],"content":"A user-provided object that distinguishes this particular asynchronous write request from other requests.","nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous write request from other requests.","pos":[0,105]}]}],"pos":[18850,18956],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that references the asynchronous write operation.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that references the asynchronous write operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that references the asynchronous write operation."}],"pos":[19019,19120],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[19287,19318],"yaml":true},{"content":"<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.","source":"<code>offset</code> is less than 0."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,87],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.","source":"<code>count</code> is less than 0."}],"pos":[19432,19526],"yaml":true},{"content":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>."}],"pos":[19620,19709],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[19815,19835],"yaml":true},{"content":"The pipe does not support write operations.","nodes":[{"pos":[0,43],"content":"The pipe does not support write operations.","nodes":[{"content":"The pipe does not support write operations.","pos":[0,43]}]}],"pos":[19937,19981],"yaml":true},{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"pos":[0,77],"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","pos":[0,77]}]}],"pos":[20091,20169],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[20257,20307],"yaml":true},{"content":"Gets a value indicating whether the current stream supports read operations.","nodes":[{"pos":[0,76],"content":"Gets a value indicating whether the current stream supports read operations.","nodes":[{"content":"Gets a value indicating whether the current stream supports read operations.","pos":[0,76]}]}],"pos":[21395,21472],"yaml":true},{"content":"If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.","nodes":[{"pos":[0,89],"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is closed, this property returns <ph id=\"ph2\">`false`</ph>.","source":"If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`."}],"pos":[21483,21573],"yaml":true,"extradata":"MT"},{"content":"`true` if the stream supports read operations; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the stream supports read operations; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the stream supports read operations; otherwise, `false`."}],"pos":[21692,21761],"yaml":true},{"content":"Gets a value indicating whether the current stream supports seek operations.","nodes":[{"pos":[0,76],"content":"Gets a value indicating whether the current stream supports seek operations.","nodes":[{"content":"Gets a value indicating whether the current stream supports seek operations.","pos":[0,76]}]}],"pos":[22978,23055],"yaml":true},{"content":"If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.","nodes":[{"pos":[0,89],"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is closed, this property returns <ph id=\"ph2\">`false`</ph>.","source":"If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`."}],"pos":[23066,23156],"yaml":true,"extradata":"MT"},{"content":"`false` in all cases.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">`false`</ph> in all cases.","source":"`false` in all cases."}],"pos":[23275,23299],"yaml":true},{"content":"Gets a value indicating whether the current stream supports write operations.","nodes":[{"pos":[0,77],"content":"Gets a value indicating whether the current stream supports write operations.","nodes":[{"content":"Gets a value indicating whether the current stream supports write operations.","pos":[0,77]}]}],"pos":[24522,24600],"yaml":true},{"content":"If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.","nodes":[{"pos":[0,89],"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is closed, this property returns <ph id=\"ph2\">`false`</ph>.","source":"If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`."}],"pos":[24611,24701],"yaml":true,"extradata":"MT"},{"content":"`true` if the stream supports write operations; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the stream supports write operations; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the stream supports write operations; otherwise, `false`."}],"pos":[24821,24891],"yaml":true},{"content":"Verifies that the pipe is in a proper state for getting or setting properties.","nodes":[{"pos":[0,78],"content":"Verifies that the pipe is in a proper state for getting or setting properties.","nodes":[{"content":"Verifies that the pipe is in a proper state for getting or setting properties.","pos":[0,78]}]}],"pos":[26233,26312],"yaml":true},{"content":"Verifies that the pipe is in a connected state for read operations.","nodes":[{"pos":[0,67],"content":"Verifies that the pipe is in a connected state for read operations.","nodes":[{"content":"Verifies that the pipe is in a connected state for read operations.","pos":[0,67]}]}],"pos":[27658,27726],"yaml":true},{"content":"Verifies that the pipe is in a connected state for write operations.","nodes":[{"pos":[0,68],"content":"Verifies that the pipe is in a connected state for write operations.","nodes":[{"content":"Verifies that the pipe is in a connected state for write operations.","pos":[0,68]}]}],"pos":[29054,29123],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class and optionally releases the managed resources.","nodes":[{"pos":[0,145],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> class and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class and optionally releases the managed resources."}],"pos":[30444,30590],"yaml":true},{"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`. When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references. This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object.","nodes":[{"pos":[0,699],"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`. When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references. This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,141],"source":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[142,311],"source":" <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[312,430],"source":" <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`."},{"content":"When the disposing parameter is <ph id=\"ph1\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object references.","pos":[431,596],"source":" When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references."},{"content":"This method invokes the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.Dispose%2A&gt;</ph> method of each referenced object.","pos":[597,699],"source":" This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object."}]}],"pos":[30601,31301],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[31456,31559],"yaml":true},{"content":"Ends a pending asynchronous read request.","nodes":[{"pos":[0,41],"content":"Ends a pending asynchronous read request.","nodes":[{"content":"Ends a pending asynchronous read request.","pos":[0,41]}]}],"pos":[32879,32921],"yaml":true},{"content":"This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \n  \n Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.","nodes":[{"pos":[0,145],"content":"This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.","nodes":[{"content":"This method returns the number of bytes read into the byte array specified by the earlier call to <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.","pos":[0,145],"source":"This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>."}]},{"pos":[152,674],"content":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.","nodes":[{"content":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.","pos":[0,522],"nodes":[{"content":"Pass the returned <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> object to the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method to determine how many bytes were read and to release operating system resources used for reading.","pos":[0,208],"source":"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading."},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> must be called once for every call to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.","pos":[209,339],"source":" <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>."},{"content":"This can be done either in the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> or in a callback that is passed to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>.","pos":[340,522],"source":" This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>."}]}]},{"pos":[681,842],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.","pos":[0,161],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations."}]},{"pos":[849,1226],"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.","nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.","pos":[0,377],"nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph>, the appropriate exceptions are raised immediately.","pos":[0,156],"source":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately."},{"content":"Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.","pos":[157,274]},{"content":"The exceptions are raised when the code calls the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph> method.","pos":[275,377],"source":" The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method."}]}]}],"pos":[32932,34167],"yaml":true,"extradata":"MT"},{"content":"The reference to the pending asynchronous request.","nodes":[{"pos":[0,50],"content":"The reference to the pending asynchronous request.","nodes":[{"content":"The reference to the pending asynchronous request.","pos":[0,50]}]}],"pos":[34335,34386],"yaml":true},{"content":"The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).","nodes":[{"pos":[0,115],"content":"The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).","nodes":[{"content":"The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).","pos":[0,115],"nodes":[{"content":"The number of bytes that were read.","pos":[0,35]},{"content":"A return value of 0 indicates the end of the stream (the pipe has been closed).","pos":[36,115]}]}]}],"pos":[34442,34558],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[34722,34758],"yaml":true},{"content":"<code>asyncResult</code> did not originate from a <xref href=\"System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.","nodes":[{"pos":[0,213],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> did not originate from a <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method on the current stream.","source":"<code>asyncResult</code> did not originate from a <xref href=\"System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream."}],"pos":[34852,35066],"yaml":true},{"content":"The stream is closed or an internal error has occurred.","nodes":[{"pos":[0,55],"content":"The stream is closed or an internal error has occurred.","nodes":[{"content":"The stream is closed or an internal error has occurred.","pos":[0,55]}]}],"pos":[35154,35210],"yaml":true},{"content":"Ends a pending asynchronous write request.","nodes":[{"pos":[0,42],"content":"Ends a pending asynchronous write request.","nodes":[{"content":"Ends a pending asynchronous write request.","pos":[0,42]}]}],"pos":[36407,36450],"yaml":true},{"content":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.  \n  \n Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \n  \n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.","nodes":[{"pos":[0,317],"content":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.","nodes":[{"content":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.","pos":[0,317],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> must be called once for every call to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.","pos":[0,132],"source":"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>."},{"content":"This can be done either in the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> or in a callback that is passed to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>.","pos":[133,317],"source":" This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>."}]}]},{"pos":[324,487],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.","pos":[0,163],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations."}]},{"pos":[494,874],"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.","nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.","pos":[0,380],"nodes":[{"content":"If the pipe is closed or an invalid argument is passed to <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph>, the appropriate exceptions are raised immediately.","pos":[0,157],"source":"If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately."},{"content":"Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.","pos":[158,276]},{"content":"The exceptions are raised when the code the calls <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph> method.","pos":[277,380],"source":" The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method."}]}]}],"pos":[36461,37342],"yaml":true,"extradata":"MT"},{"content":"The reference to the pending asynchronous request.","nodes":[{"pos":[0,50],"content":"The reference to the pending asynchronous request.","nodes":[{"content":"The reference to the pending asynchronous request.","pos":[0,50]}]}],"pos":[37512,37563],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[37728,37764],"yaml":true},{"content":"<code>asyncResult</code> did not originate from a <xref href=\"System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.","nodes":[{"pos":[0,214],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> did not originate from a <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method on the current stream.","source":"<code>asyncResult</code> did not originate from a <xref href=\"System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream."}],"pos":[37858,38073],"yaml":true},{"content":"The stream is closed or an internal error has occurred.","nodes":[{"pos":[0,55],"content":"The stream is closed or an internal error has occurred.","nodes":[{"content":"The stream is closed or an internal error has occurred.","pos":[0,55]}]}],"pos":[38161,38217],"yaml":true},{"content":"Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.","nodes":[{"pos":[0,109],"content":"Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.","nodes":[{"content":"Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.","pos":[0,109]}]}],"pos":[39297,39407],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called.","nodes":[{"pos":[0,153],"content":"The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.Flush%2A&gt;</ph> method is not supported in the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class and does nothing when it is called.","pos":[0,153],"source":"The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called."}]}],"pos":[39418,39572],"yaml":true,"extradata":"MT"},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[39811,39831],"yaml":true},{"content":"The pipe does not support write operations.","nodes":[{"pos":[0,43],"content":"The pipe does not support write operations.","nodes":[{"content":"The pipe does not support write operations.","pos":[0,43]}]}],"pos":[39933,39977],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[40065,40115],"yaml":true},{"content":"Gets a <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.","nodes":[{"pos":[0,213],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control list (ACL) entries for the pipe described by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object."}],"pos":[41289,41503],"yaml":true},{"content":"An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"pos":[0,298],"content":"An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.","pos":[0,147]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[148,298],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]}],"pos":[41514,41815],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.","nodes":[{"pos":[0,208],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control list (ACL) entries for the pipe described by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object."}],"pos":[41986,42195],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[42372,42392],"yaml":true},{"content":"The underlying call to set security information failed.","nodes":[{"pos":[0,55],"content":"The underlying call to set security information failed.","nodes":[{"content":"The underlying call to set security information failed.","pos":[0,55]}]}],"pos":[42506,42562],"yaml":true},{"content":"The underlying call to set security information failed.","nodes":[{"pos":[0,55],"content":"The underlying call to set security information failed.","nodes":[{"content":"The underlying call to set security information failed.","pos":[0,55]}]}],"pos":[42672,42728],"yaml":true},{"content":"The underlying call to set security information failed.","nodes":[{"pos":[0,55],"content":"The underlying call to set security information failed.","nodes":[{"content":"The underlying call to set security information failed.","pos":[0,55]}]}],"pos":[42830,42886],"yaml":true},{"content":"Gets the size, in bytes, of the inbound buffer for a pipe.","nodes":[{"pos":[0,58],"content":"Gets the size, in bytes, of the inbound buffer for a pipe.","nodes":[{"content":"Gets the size, in bytes, of the inbound buffer for a pipe.","pos":[0,58]}]}],"pos":[43932,43991],"yaml":true},{"content":"If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed.","nodes":[{"pos":[0,98],"content":"If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.InBufferSize%2A&gt;</ph> is 0, the buffer size is allocated as needed.","pos":[0,98],"source":"If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed."}]}],"pos":[44002,44101],"yaml":true,"extradata":"MT"},{"content":"An integer value that represents the inbound buffer size, in bytes.","nodes":[{"pos":[0,67],"content":"An integer value that represents the inbound buffer size, in bytes.","nodes":[{"content":"An integer value that represents the inbound buffer size, in bytes.","pos":[0,67]}]}],"pos":[44221,44289],"yaml":true},{"content":"The stream is unreadable.","nodes":[{"pos":[0,25],"content":"The stream is unreadable.","nodes":[{"content":"The stream is unreadable.","pos":[0,25]}]}],"pos":[44458,44484],"yaml":true},{"content":"The pipe is waiting to connect.","nodes":[{"pos":[0,31],"content":"The pipe is waiting to connect.","nodes":[{"content":"The pipe is waiting to connect.","pos":[0,31]}]}],"pos":[44594,44626],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[44714,44764],"yaml":true},{"content":"Initializes a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object from the specified <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object.","nodes":[{"pos":[0,159],"content":"Initializes a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object from the specified <ph id=\"ph2\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object from the specified <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object."}],"pos":[46292,46452],"yaml":true},{"content":"If the pipe is in a connected state, this method also sets the <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property to `true`.","nodes":[{"pos":[0,131],"content":"If the pipe is in a connected state, this method also sets the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","source":"If the pipe is in a connected state, this method also sets the <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property to `true`."}],"pos":[46463,46595],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object of the pipe to initialize.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"&gt;&lt;/xref&gt;</ph> object of the pipe to initialize.","source":"The <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object of the pipe to initialize."}],"pos":[46840,46942],"yaml":true},{"content":"`true` to expose the handle; otherwise, `false`.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">`true`</ph> to expose the handle; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to expose the handle; otherwise, `false`."}],"pos":[47008,47059],"yaml":true},{"content":"`true` to indicate that the handle was opened asynchronously; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the handle was opened asynchronously; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the handle was opened asynchronously; otherwise, `false`."}],"pos":[47123,47207],"yaml":true},{"content":"A handle cannot be bound to the pipe.","nodes":[{"pos":[0,37],"content":"A handle cannot be bound to the pipe.","nodes":[{"content":"A handle cannot be bound to the pipe.","pos":[0,37]}]}],"pos":[47366,47404],"yaml":true},{"content":"Gets a value indicating whether a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object was opened asynchronously or synchronously.","nodes":[{"pos":[0,132],"content":"Gets a value indicating whether a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object was opened asynchronously or synchronously.","source":"Gets a value indicating whether a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object was opened asynchronously or synchronously."}],"pos":[48492,48625],"yaml":true},{"content":"This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly.","nodes":[{"pos":[0,114],"content":"This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly.","nodes":[{"content":"This property enables your code to use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A&gt;</ph> property correctly.","pos":[0,114],"source":"This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly."}]}],"pos":[48636,48751],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object was opened asynchronously; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object was opened asynchronously; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object was opened asynchronously; otherwise, `false`."}],"pos":[48861,48979],"yaml":true},{"content":"Gets or sets a value indicating whether a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is connected.","nodes":[{"pos":[0,110],"content":"Gets or sets a value indicating whether a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object is connected.","source":"Gets or sets a value indicating whether a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is connected."}],"pos":[50220,50331],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected. If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken.","nodes":[{"pos":[0,256],"content":"The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected. If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph> only if the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object is connected.","pos":[0,143],"source":"The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected."},{"content":"If this property returns <ph id=\"ph1\">`false`</ph>, the pipe may be waiting to connect, or may be disconnected, closed, or broken.","pos":[144,256],"source":" If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken."}]}],"pos":[50342,50599],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is connected; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object is connected; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is connected; otherwise, `false`."}],"pos":[50728,50833],"yaml":true},{"content":"Gets a value indicating whether a handle to a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is exposed.","nodes":[{"pos":[0,112],"content":"Gets a value indicating whether a handle to a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object is exposed.","source":"Gets a value indicating whether a handle to a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is exposed."}],"pos":[52102,52215],"yaml":true},{"content":"The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object.","nodes":[{"pos":[0,147],"content":"The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object.","nodes":[{"content":"The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object.","pos":[0,147],"source":"The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object."}]}],"pos":[52226,52374],"yaml":true,"extradata":"MT"},{"content":"`true` if a handle to the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is exposed; otherwise, `false`.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">`true`</ph> if a handle to the <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object is exposed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if a handle to the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is exposed; otherwise, `false`."}],"pos":[52495,52610],"yaml":true},{"content":"Gets a value indicating whether there is more data in the message returned from the most recent read operation.","nodes":[{"pos":[0,111],"content":"Gets a value indicating whether there is more data in the message returned from the most recent read operation.","nodes":[{"content":"Gets a value indicating whether there is more data in the message returned from the most recent read operation.","pos":[0,111]}]}],"pos":[53831,53943],"yaml":true},{"content":"This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>.","nodes":[{"pos":[0,275],"content":"This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>.","nodes":[{"content":"This property is relevant if the pipe's <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.ReadMode%2A&gt;</ph> property was set to <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> by the most recent call to <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph>.","pos":[0,275],"source":"This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>."}]}],"pos":[53954,54230],"yaml":true,"extradata":"MT"},{"content":"`true` if there are no more characters to read in the message; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if there are no more characters to read in the message; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are no more characters to read in the message; otherwise, `false`."}],"pos":[54350,54435],"yaml":true},{"content":"The pipe is not connected.  \n  \n -or-  \n  \n The pipe handle has not been set.  \n  \n -or-  \n  \n The pipe's <xref href=\"System.IO.Pipes.PipeStream.ReadMode\"></xref> property value is not <xref href=\"System.IO.Pipes.PipeTransmissionMode.Message\"></xref>.","nodes":[{"pos":[0,26],"content":"The pipe is not connected.","nodes":[{"content":"The pipe is not connected.","pos":[0,26]}]},{"pos":[33,37],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[44,77],"content":"The pipe handle has not been set.","nodes":[{"content":"The pipe handle has not been set.","pos":[0,33]}]},{"pos":[84,88],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[95,251],"content":"The pipe's <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream.ReadMode\"&gt;&lt;/xref&gt;</ph> property value is not <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode.Message\"&gt;&lt;/xref&gt;</ph>.","source":"The pipe's <xref href=\"System.IO.Pipes.PipeStream.ReadMode\"></xref> property value is not <xref href=\"System.IO.Pipes.PipeTransmissionMode.Message\"></xref>."}],"pos":[54617,54883],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[54989,55009],"yaml":true},{"content":"Gets the length of a stream, in bytes.","nodes":[{"pos":[0,38],"content":"Gets the length of a stream, in bytes.","nodes":[{"content":"Gets the length of a stream, in bytes.","pos":[0,38]}]}],"pos":[56155,56194],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property.","nodes":[{"pos":[0,118],"content":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class does not support the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.Length%2A&gt;</ph> property.","pos":[0,118],"source":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property."}]}],"pos":[56205,56324],"yaml":true,"extradata":"MT"},{"content":"0 in all cases.","nodes":[{"pos":[0,15],"content":"0 in all cases.","nodes":[{"content":"0 in all cases.","pos":[0,15]}]}],"pos":[56440,56456],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[56619,56634],"yaml":true},{"content":"Gets the size, in bytes, of the outbound buffer for a pipe.","nodes":[{"pos":[0,59],"content":"Gets the size, in bytes, of the outbound buffer for a pipe.","nodes":[{"content":"Gets the size, in bytes, of the outbound buffer for a pipe.","pos":[0,59]}]}],"pos":[57822,57882],"yaml":true},{"content":"If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed.","nodes":[{"pos":[0,99],"content":"If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.OutBufferSize%2A&gt;</ph> is 0, the buffer size is allocated as needed.","pos":[0,99],"source":"If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed."}]}],"pos":[57893,57993],"yaml":true,"extradata":"MT"},{"content":"The outbound buffer size, in bytes.","nodes":[{"pos":[0,35],"content":"The outbound buffer size, in bytes.","nodes":[{"content":"The outbound buffer size, in bytes.","pos":[0,35]}]}],"pos":[58114,58150],"yaml":true},{"content":"The stream is unwriteable.","nodes":[{"pos":[0,26],"content":"The stream is unwriteable.","nodes":[{"content":"The stream is unwriteable.","pos":[0,26]}]}],"pos":[58320,58347],"yaml":true},{"content":"The pipe is waiting to connect.","nodes":[{"pos":[0,31],"content":"The pipe is waiting to connect.","nodes":[{"content":"The pipe is waiting to connect.","pos":[0,31]}]}],"pos":[58457,58489],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[58577,58627],"yaml":true},{"content":"Gets or sets the current position of the current stream.","nodes":[{"pos":[0,56],"content":"Gets or sets the current position of the current stream.","nodes":[{"content":"Gets or sets the current position of the current stream.","pos":[0,56]}]}],"pos":[59785,59842],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property.","nodes":[{"pos":[0,120],"content":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class does not support the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.Position%2A&gt;</ph> property.","pos":[0,120],"source":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property."}]}],"pos":[59853,59974],"yaml":true,"extradata":"MT"},{"content":"0 in all cases.","nodes":[{"pos":[0,15],"content":"0 in all cases.","nodes":[{"content":"0 in all cases.","pos":[0,15]}]}],"pos":[60097,60113],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[60278,60293],"yaml":true},{"content":"Reads a block of bytes from a stream and writes the data to a specified buffer.","nodes":[{"pos":[0,79],"content":"Reads a block of bytes from a stream and writes the data to a specified buffer.","nodes":[{"content":"Reads a block of bytes from a stream and writes the data to a specified buffer.","pos":[0,79]}]}],"pos":[61614,61694],"yaml":true},{"content":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \n  \n Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>.","nodes":[{"pos":[0,161],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.","pos":[0,161],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations."}]},{"pos":[168,436],"content":"Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;</ph> method blocks until <ph id=\"ph2\">`count`</ph> bytes are read or the end of the stream is reached.","pos":[0,133],"source":"Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached."},{"content":"For asynchronous read operations, see <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</ph>.","pos":[134,268],"source":" For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>."}]}],"pos":[61705,62146],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code> - 1) replaced by the bytes read from the current source.","nodes":[{"pos":[0,206],"content":"When this method returns, contains the specified byte array with the values between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> and (<bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">offset</ph><ept id=\"p2\">&lt;/code&gt;</ept><ph id=\"ph3\"> + </ph><bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept> - 1) replaced by the bytes read from the current source.","source":"When this method returns, contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code> - 1) replaced by the bytes read from the current source."}],"pos":[63149,63356],"yaml":true},{"content":"The byte offset in the <code>buffer</code> array at which the bytes that are read will be placed.","nodes":[{"pos":[0,97],"content":"The byte offset in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> array at which the bytes that are read will be placed.","source":"The byte offset in the <code>buffer</code> array at which the bytes that are read will be placed."}],"pos":[63417,63515],"yaml":true},{"content":"The maximum number of bytes to read.","nodes":[{"pos":[0,36],"content":"The maximum number of bytes to read.","nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]}],"pos":[63575,63612],"yaml":true},{"content":"The total number of bytes that are read into <code>buffer</code>. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.","nodes":[{"pos":[0,213],"content":"The total number of bytes that are read into <code>buffer</code>. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.","nodes":[{"content":"The total number of bytes that are read into <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,65],"source":"The total number of bytes that are read into <code>buffer</code>."},{"content":"This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.","pos":[66,213]}]}],"pos":[63668,63882],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[64043,64074],"yaml":true},{"content":"<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.","source":"<code>offset</code> is less than 0."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,87],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.","source":"<code>count</code> is less than 0."}],"pos":[64188,64282],"yaml":true},{"content":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>."}],"pos":[64376,64465],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[64571,64591],"yaml":true},{"content":"The pipe does not support read operations.","nodes":[{"pos":[0,42],"content":"The pipe does not support read operations.","nodes":[{"content":"The pipe does not support read operations.","pos":[0,42]}]}],"pos":[64693,64736],"yaml":true},{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"pos":[0,77],"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","pos":[0,77]}]}],"pos":[64846,64924],"yaml":true},{"content":"Any I/O error occurred.","nodes":[{"pos":[0,23],"content":"Any I/O error occurred.","nodes":[{"content":"Any I/O error occurred.","pos":[0,23]}]}],"pos":[65012,65036],"yaml":true},{"content":"Reads a byte from a pipe.","nodes":[{"pos":[0,25],"content":"Reads a byte from a pipe.","nodes":[{"content":"Reads a byte from a pipe.","pos":[0,25]}]}],"pos":[67736,67762],"yaml":true},{"content":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.","nodes":[{"pos":[0,161],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports read operations.","pos":[0,161],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations."}]}],"pos":[67773,67935],"yaml":true,"extradata":"MT"},{"content":"The byte, cast to <xref href=\"System.Int32\"></xref>, or -1 indicates the end of the stream (the pipe has been closed).","nodes":[{"pos":[0,118],"content":"The byte, cast to <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>, or -1 indicates the end of the stream (the pipe has been closed).","source":"The byte, cast to <xref href=\"System.Int32\"></xref>, or -1 indicates the end of the stream (the pipe has been closed)."}],"pos":[68066,68185],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[68354,68374],"yaml":true},{"content":"The pipe does not support read operations.","nodes":[{"pos":[0,42],"content":"The pipe does not support read operations.","nodes":[{"content":"The pipe does not support read operations.","pos":[0,42]}]}],"pos":[68476,68519],"yaml":true},{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"pos":[0,77],"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","pos":[0,77]}]}],"pos":[68629,68707],"yaml":true},{"content":"Any I/O error occurred.","nodes":[{"pos":[0,23],"content":"Any I/O error occurred.","nodes":[{"content":"Any I/O error occurred.","pos":[0,23]}]}],"pos":[68795,68819],"yaml":true},{"content":"Gets or sets the reading mode for a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.","nodes":[{"pos":[0,91],"content":"Gets or sets the reading mode for a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the reading mode for a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object."}],"pos":[69977,70069],"yaml":true},{"content":"Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.","nodes":[{"pos":[0,109],"content":"Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.","nodes":[{"content":"Anonymous pipes do not support <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> mode message transmission.","pos":[0,109],"source":"Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission."}]}],"pos":[70080,70190],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates how the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object reads from the pipe.","nodes":[{"pos":[0,174],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph> values that indicates how the <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object reads from the pipe.","source":"One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates how the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object reads from the pipe."}],"pos":[70368,70543],"yaml":true},{"content":"The supplied value is not a valid <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value.","nodes":[{"pos":[0,98],"content":"The supplied value is not a valid <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph> value.","source":"The supplied value is not a valid <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value."}],"pos":[70720,70819],"yaml":true},{"content":"The supplied value is not a supported <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value for this pipe stream.","nodes":[{"pos":[0,123],"content":"The supplied value is not a supported <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph> value for this pipe stream.","source":"The supplied value is not a supported <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value for this pipe stream."}],"pos":[70921,71045],"yaml":true},{"content":"The handle has not been set.  \n  \n -or-  \n  \n The pipe is waiting to connect with a named client.","nodes":[{"pos":[0,28],"content":"The handle has not been set.","nodes":[{"content":"The handle has not been set.","pos":[0,28]}]},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,97],"content":"The pipe is waiting to connect with a named client.","nodes":[{"content":"The pipe is waiting to connect with a named client.","pos":[0,51]}]}],"pos":[71155,71259],"yaml":true},{"content":"The pipe is broken or an I/O error occurred with a named client.","nodes":[{"pos":[0,64],"content":"The pipe is broken or an I/O error occurred with a named client.","nodes":[{"content":"The pipe is broken or an I/O error occurred with a named client.","pos":[0,64]}]}],"pos":[71347,71412],"yaml":true},{"content":"Gets the safe handle for the local end of the pipe that the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object encapsulates.","nodes":[{"pos":[0,136],"content":"Gets the safe handle for the local end of the pipe that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object encapsulates.","source":"Gets the safe handle for the local end of the pipe that the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object encapsulates."}],"pos":[72606,72743],"yaml":true},{"content":"A <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object for the pipe that is encapsulated by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.","nodes":[{"pos":[0,177],"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"&gt;&lt;/xref&gt;</ph> object for the pipe that is encapsulated by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object for the pipe that is encapsulated by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object."}],"pos":[72926,73104],"yaml":true},{"content":"The pipe handle has not been set.","nodes":[{"pos":[0,33],"content":"The pipe handle has not been set.","nodes":[{"content":"The pipe handle has not been set.","pos":[0,33]}]}],"pos":[73283,73317],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[73423,73443],"yaml":true},{"content":"Sets the current position of the current stream to the specified value.","nodes":[{"pos":[0,71],"content":"Sets the current position of the current stream to the specified value.","nodes":[{"content":"Sets the current position of the current stream to the specified value.","pos":[0,71]}]}],"pos":[74737,74809],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called.","nodes":[{"pos":[0,146],"content":"The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.Seek%2A&gt;</ph> method is not supported in pipes and raises a <ph id=\"ph2\">&lt;xref:System.NotSupportedException&gt;</ph> when it is called.","pos":[0,146],"source":"The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called."}]}],"pos":[74820,74967],"yaml":true,"extradata":"MT"},{"content":"The point, relative to <code>origin</code>, to begin seeking from.","nodes":[{"pos":[0,66],"content":"The point, relative to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>, to begin seeking from.","source":"The point, relative to <code>origin</code>, to begin seeking from."}],"pos":[75137,75204],"yaml":true},{"content":"Specifies the beginning, the end, or the current position as a reference point for <code>offset</code>, using a value of type <xref href=\"System.IO.SeekOrigin\"></xref>.","nodes":[{"pos":[0,168],"content":"Specifies the beginning, the end, or the current position as a reference point for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept>, using a value of type <ph id=\"ph2\">&lt;xref href=\"System.IO.SeekOrigin\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies the beginning, the end, or the current position as a reference point for <code>offset</code>, using a value of type <xref href=\"System.IO.SeekOrigin\"></xref>."}],"pos":[75273,75442],"yaml":true},{"content":"The new position in the stream.","nodes":[{"pos":[0,31],"content":"The new position in the stream.","nodes":[{"content":"The new position in the stream.","pos":[0,31]}]}],"pos":[75498,75530],"yaml":true},{"content":"Applies the access control list (ACL) entries specified by a <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to the pipe specified by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.","nodes":[{"pos":[0,210],"content":"Applies the access control list (ACL) entries specified by a <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object to the pipe specified by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeStream\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the access control list (ACL) entries specified by a <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to the pipe specified by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object."}],"pos":[76892,77103],"yaml":true},{"content":"An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"pos":[0,298],"content":"An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.","pos":[0,147]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[148,298],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]}],"pos":[77114,77415],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that specifies an access control list (ACL) entry to apply to the current pipe.","nodes":[{"pos":[0,138],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object that specifies an access control list (ACL) entry to apply to the current pipe.","source":"A <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that specifies an access control list (ACL) entry to apply to the current pipe."}],"pos":[77611,77750],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[77927,77947],"yaml":true},{"content":"<code>pipeSecurity</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;pipeSecurity&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>pipeSecurity</code> is `null`."}],"pos":[78049,78086],"yaml":true},{"content":"The underlying call to set security information failed.","nodes":[{"pos":[0,55],"content":"The underlying call to set security information failed.","nodes":[{"content":"The underlying call to set security information failed.","pos":[0,55]}]}],"pos":[78200,78256],"yaml":true},{"content":"The underlying call to set security information failed.","nodes":[{"pos":[0,55],"content":"The underlying call to set security information failed.","nodes":[{"content":"The underlying call to set security information failed.","pos":[0,55]}]}],"pos":[78366,78422],"yaml":true},{"content":"The underlying call to set security information failed.","nodes":[{"pos":[0,55],"content":"The underlying call to set security information failed.","nodes":[{"content":"The underlying call to set security information failed.","pos":[0,55]}]}],"pos":[78524,78580],"yaml":true},{"content":"Sets the length of the current stream to the specified value.","nodes":[{"pos":[0,61],"content":"Sets the length of the current stream to the specified value.","nodes":[{"content":"Sets the length of the current stream to the specified value.","pos":[0,61]}]}],"pos":[79669,79731],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method.","nodes":[{"pos":[0,119],"content":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> class does not support the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.SetLength%2A&gt;</ph> method.","pos":[0,119],"source":"The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method."}]}],"pos":[79742,79862],"yaml":true,"extradata":"MT"},{"content":"The new length of the stream.","nodes":[{"pos":[0,29],"content":"The new length of the stream.","nodes":[{"content":"The new length of the stream.","pos":[0,29]}]}],"pos":[80006,80036],"yaml":true},{"content":"Gets the pipe transmission mode supported by the current pipe.","nodes":[{"pos":[0,62],"content":"Gets the pipe transmission mode supported by the current pipe.","nodes":[{"content":"Gets the pipe transmission mode supported by the current pipe.","pos":[0,62]}]}],"pos":[81309,81372],"yaml":true},{"content":"Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.","nodes":[{"pos":[0,109],"content":"Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.","nodes":[{"content":"Anonymous pipes do not support <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> mode message transmission.","pos":[0,109],"source":"Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission."}]}],"pos":[81383,81493],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates the transmission mode supported by the current pipe.","nodes":[{"pos":[0,143],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeTransmissionMode\"&gt;&lt;/xref&gt;</ph> values that indicates the transmission mode supported by the current pipe.","source":"One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates the transmission mode supported by the current pipe."}],"pos":[81674,81818],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[81995,82015],"yaml":true},{"content":"The handle has not been set.  \n  \n -or-  \n  \n The pipe is waiting to connect in an anonymous client/server operation or with a named client.","nodes":[{"pos":[0,28],"content":"The handle has not been set.","nodes":[{"content":"The handle has not been set.","pos":[0,28]}]},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,140],"content":"The pipe is waiting to connect in an anonymous client/server operation or with a named client.","nodes":[{"content":"The pipe is waiting to connect in an anonymous client/server operation or with a named client.","pos":[0,94]}]}],"pos":[82125,82272],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[82360,82410],"yaml":true},{"content":"Waits for the other end of the pipe to read all sent bytes.","nodes":[{"pos":[0,59],"content":"Waits for the other end of the pipe to read all sent bytes.","nodes":[{"content":"Waits for the other end of the pipe to read all sent bytes.","pos":[0,59]}]}],"pos":[83620,83680],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes.","nodes":[{"pos":[0,128],"content":"The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A&gt;</ph> method blocks until the other end of the pipe has read all sent bytes.","pos":[0,128],"source":"The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes."}]}],"pos":[83691,83820],"yaml":true,"extradata":"MT"},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[84072,84092],"yaml":true},{"content":"The pipe does not support write operations.","nodes":[{"pos":[0,43],"content":"The pipe does not support write operations.","nodes":[{"content":"The pipe does not support write operations.","pos":[0,43]}]}],"pos":[84194,84238],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[84326,84376],"yaml":true},{"content":"Writes a block of bytes to the current stream using data from a buffer.","nodes":[{"pos":[0,71],"content":"Writes a block of bytes to the current stream using data from a buffer.","nodes":[{"content":"Writes a block of bytes to the current stream using data from a buffer.","pos":[0,71]}]}],"pos":[85703,85775],"yaml":true},{"content":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \n  \n Calling the <xref:System.IO.Pipes.PipeStream.Write%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.","nodes":[{"pos":[0,163],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.","pos":[0,163],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations."}]},{"pos":[170,441],"content":"Calling the <xref:System.IO.Pipes.PipeStream.Write%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.Write%2A&gt;</ph> method blocks until <ph id=\"ph2\">`count`</ph> bytes are read or the end of the stream is reached.","pos":[0,134],"source":"Calling the <xref:System.IO.Pipes.PipeStream.Write%2A> method blocks until `count` bytes are read or the end of the stream is reached."},{"content":"For asynchronous read operations, see <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</ph>.","pos":[135,271],"source":" For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>."}]}],"pos":[85786,86232],"yaml":true,"extradata":"MT"},{"content":"The buffer that contains data to write to the pipe.","nodes":[{"pos":[0,51],"content":"The buffer that contains data to write to the pipe.","nodes":[{"content":"The buffer that contains data to write to the pipe.","pos":[0,51]}]}],"pos":[86400,86452],"yaml":true},{"content":"The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.","nodes":[{"pos":[0,104],"content":"The zero-based byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin copying bytes to the current stream.","source":"The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream."}],"pos":[86513,86618],"yaml":true},{"content":"The maximum number of bytes to write to the current stream.","nodes":[{"pos":[0,59],"content":"The maximum number of bytes to write to the current stream.","nodes":[{"content":"The maximum number of bytes to write to the current stream.","pos":[0,59]}]}],"pos":[86678,86738],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[86900,86931],"yaml":true},{"content":"<code>offset</code> is less than 0.  \n  \n -or-  \n  \n <code>count</code> is less than 0.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.","source":"<code>offset</code> is less than 0."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,87],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.","source":"<code>count</code> is less than 0."}],"pos":[87045,87139],"yaml":true},{"content":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>count</code> is greater than the number of bytes available in <code>buffer</code>."}],"pos":[87233,87322],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[87428,87448],"yaml":true},{"content":"The pipe does not support write operations.","nodes":[{"pos":[0,43],"content":"The pipe does not support write operations.","nodes":[{"content":"The pipe does not support write operations.","pos":[0,43]}]}],"pos":[87550,87594],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[87682,87732],"yaml":true},{"content":"Writes a byte to the current stream.","nodes":[{"pos":[0,36],"content":"Writes a byte to the current stream.","nodes":[{"content":"Writes a byte to the current stream.","pos":[0,36]}]}],"pos":[90478,90515],"yaml":true},{"content":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.","nodes":[{"pos":[0,163],"content":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeStream&gt;</ph> object supports write operations.","pos":[0,163],"source":"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations."}]}],"pos":[90526,90690],"yaml":true,"extradata":"MT"},{"content":"The byte to write to the stream.","nodes":[{"pos":[0,32],"content":"The byte to write to the stream.","nodes":[{"content":"The byte to write to the stream.","pos":[0,32]}]}],"pos":[90833,90866],"yaml":true},{"content":"The pipe is closed.","nodes":[{"pos":[0,19],"content":"The pipe is closed.","nodes":[{"content":"The pipe is closed.","pos":[0,19]}]}],"pos":[91036,91056],"yaml":true},{"content":"The pipe does not support write operations.","nodes":[{"pos":[0,43],"content":"The pipe does not support write operations.","nodes":[{"content":"The pipe does not support write operations.","pos":[0,43]}]}],"pos":[91158,91202],"yaml":true},{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"pos":[0,77],"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","nodes":[{"content":"The pipe is disconnected, waiting to connect, or the handle has not been set.","pos":[0,77]}]}],"pos":[91312,91390],"yaml":true},{"content":"The pipe is broken or another I/O error occurred.","nodes":[{"pos":[0,49],"content":"The pipe is broken or another I/O error occurred.","nodes":[{"content":"The pipe is broken or another I/O error occurred.","pos":[0,49]}]}],"pos":[91478,91528],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.PipeStream\n  commentId: T:System.IO.Pipes.PipeStream\n  id: PipeStream\n  children:\n  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Pipes.PipeStream.CanRead\n  - System.IO.Pipes.PipeStream.CanSeek\n  - System.IO.Pipes.PipeStream.CanWrite\n  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations\n  - System.IO.Pipes.PipeStream.CheckReadOperations\n  - System.IO.Pipes.PipeStream.CheckWriteOperations\n  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)\n  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)\n  - System.IO.Pipes.PipeStream.Flush\n  - System.IO.Pipes.PipeStream.GetAccessControl\n  - System.IO.Pipes.PipeStream.InBufferSize\n  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  - System.IO.Pipes.PipeStream.IsAsync\n  - System.IO.Pipes.PipeStream.IsConnected\n  - System.IO.Pipes.PipeStream.IsHandleExposed\n  - System.IO.Pipes.PipeStream.IsMessageComplete\n  - System.IO.Pipes.PipeStream.Length\n  - System.IO.Pipes.PipeStream.OutBufferSize\n  - System.IO.Pipes.PipeStream.Position\n  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.PipeStream.ReadByte\n  - System.IO.Pipes.PipeStream.ReadMode\n  - System.IO.Pipes.PipeStream.SafePipeHandle\n  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)\n  - System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  - System.IO.Pipes.PipeStream.TransmissionMode\n  - System.IO.Pipes.PipeStream.WaitForPipeDrain\n  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  langs:\n  - csharp\n  name: PipeStream\n  nameWithType: PipeStream\n  fullName: System.IO.Pipes.PipeStream\n  type: Class\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Exposes a <xref href=\"System.IO.Stream\"></xref> object around a pipe, which supports both anonymous and named pipes.\n  remarks: \"The <xref:System.IO.Pipes.PipeStream> class provides the base class for named and anonymous pipes operations in the .NET Framework. Use the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes for named pipe operations. Use the <xref:System.IO.Pipes.AnonymousPipeServerStream> and <xref:System.IO.Pipes.AnonymousPipeClientStream> classes for anonymous pipe operations.  \\n  \\n For more information about pipes, see [Pipes](~/docs/standard/io/pipe-operations.md). For an example of anonymous pipes, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md). For an example of named pipes, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).\"\n  syntax:\n    content: 'public abstract class PipeStream : System.IO.Stream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  derivedClasses:\n  - System.IO.Pipes.AnonymousPipeClientStream\n  - System.IO.Pipes.AnonymousPipeServerStream\n  - System.IO.Pipes.NamedPipeClientStream\n  - System.IO.Pipes.NamedPipeServerStream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteTimeout\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  - System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: PipeStream(PipeDirection, Int32)\n  nameWithType: PipeStream.PipeStream(PipeDirection, Int32)\n  fullName: PipeStream.PipeStream(PipeDirection, Int32)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class using the specified <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value and buffer size.\n  remarks: This constructor uses a pipe transmission mode of <xref:System.IO.Pipes.PipeTransmissionMode.Byte>.\n  syntax:\n    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);\n    parameters:\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the <xref href=\"System.IO.Pipes.PipeDirection\"></xref> values that indicates the direction of the pipe object.\n    - id: bufferSize\n      type: System.Int32\n      description: A positive <xref href=\"System.Int32\"></xref> value greater than or equal to 0 that indicates the buffer size.\n  overload: System.IO.Pipes.PipeStream.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>direction</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>bufferSize</code> is less than 0.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n  nameWithType: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n  fullName: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class using the specified <xref href=\"System.IO.Pipes.PipeDirection\"></xref>, <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref>, and buffer size.\n  syntax:\n    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);\n    parameters:\n    - id: direction\n      type: System.IO.Pipes.PipeDirection\n      description: One of the <xref href=\"System.IO.Pipes.PipeDirection\"></xref> values that indicates the direction of the pipe object.\n    - id: transmissionMode\n      type: System.IO.Pipes.PipeTransmissionMode\n      description: One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates the transmission mode of the pipe object.\n    - id: outBufferSize\n      type: System.Int32\n      description: A positive <xref href=\"System.Int32\"></xref> value greater than or equal to 0 that indicates the buffer size.\n  overload: System.IO.Pipes.PipeStream.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>direction</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeDirection\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>transmissionMode</code> is not a valid <xref href=\\\"System.IO.Pipes.PipeTransmissionMode\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>bufferSize</code> is less than 0.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Begins an asynchronous read operation.\n  remarks: \"Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \\n  \\n Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \\n  \\n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.\"\n  syntax:\n    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to read data into.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>buffer</code> at which to begin reading.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to call when the asynchronous read operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that references the asynchronous read.\n  overload: System.IO.Pipes.PipeStream.BeginRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support read operations.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is disconnected, waiting to connect, or the handle has not been set.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Begins an asynchronous write operation.\n  remarks: \"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.  \\n  \\n Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \\n  \\n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the  <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.\"\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer that contains the data to write to the current stream.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to call when the asynchronous write operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that references the asynchronous write operation.\n  overload: System.IO.Pipes.PipeStream.BeginWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support write operations.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is disconnected, waiting to connect, or the handle has not been set.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.CanRead\n  commentId: P:System.IO.Pipes.PipeStream.CanRead\n  id: CanRead\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: PipeStream.CanRead\n  fullName: PipeStream.CanRead\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets a value indicating whether the current stream supports read operations.\n  remarks: If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the stream supports read operations; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.CanRead*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.CanSeek\n  commentId: P:System.IO.Pipes.PipeStream.CanSeek\n  id: CanSeek\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: PipeStream.CanSeek\n  fullName: PipeStream.CanSeek\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets a value indicating whether the current stream supports seek operations.\n  remarks: If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases.'\n  overload: System.IO.Pipes.PipeStream.CanSeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.CanWrite\n  commentId: P:System.IO.Pipes.PipeStream.CanWrite\n  id: CanWrite\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: PipeStream.CanWrite\n  fullName: PipeStream.CanWrite\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets a value indicating whether the current stream supports write operations.\n  remarks: If the <xref:System.IO.Pipes.PipeStream> object is closed, this property returns `false`.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the stream supports write operations; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.CanWrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations\n  commentId: M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations\n  id: CheckPipePropertyOperations\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: CheckPipePropertyOperations()\n  nameWithType: PipeStream.CheckPipePropertyOperations()\n  fullName: PipeStream.CheckPipePropertyOperations()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Verifies that the pipe is in a proper state for getting or setting properties.\n  syntax:\n    content: protected virtual void CheckPipePropertyOperations ();\n    parameters: []\n  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.CheckReadOperations\n  commentId: M:System.IO.Pipes.PipeStream.CheckReadOperations\n  id: CheckReadOperations\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: CheckReadOperations()\n  nameWithType: PipeStream.CheckReadOperations()\n  fullName: PipeStream.CheckReadOperations()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Verifies that the pipe is in a connected state for read operations.\n  syntax:\n    content: protected void CheckReadOperations ();\n    parameters: []\n  overload: System.IO.Pipes.PipeStream.CheckReadOperations*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.CheckWriteOperations\n  commentId: M:System.IO.Pipes.PipeStream.CheckWriteOperations\n  id: CheckWriteOperations\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: CheckWriteOperations()\n  nameWithType: PipeStream.CheckWriteOperations()\n  fullName: PipeStream.CheckWriteOperations()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Verifies that the pipe is in a connected state for write operations.\n  syntax:\n    content: protected void CheckWriteOperations ();\n    parameters: []\n  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  commentId: M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: PipeStream.Dispose(Boolean)\n  fullName: PipeStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.Pipes.PipeStream\"></xref> class and optionally releases the managed resources.\n  remarks: This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Pipes.PipeStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Pipes.PipeStream.Dispose%2A> with `disposing` set to `false`. When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Pipes.PipeStream> object references. This method invokes the <xref:System.IO.Pipes.PipeStream.Dispose%2A> method of each referenced object.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.Pipes.PipeStream.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)\n  commentId: M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: PipeStream.EndRead(IAsyncResult)\n  fullName: PipeStream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Ends a pending asynchronous read request.\n  remarks: \"This method returns the number of bytes read into the byte array specified by the earlier call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \\n  \\n Pass the returned <xref:System.IAsyncResult> object to the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method to determine how many bytes were read and to release operating system resources used for reading. <xref:System.IO.Pipes.PipeStream.EndRead%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginRead%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.  \\n  \\n Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \\n  \\n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request. The exceptions are raised when the code calls the <xref:System.IO.Pipes.PipeStream.EndRead%2A> method.\"\n  syntax:\n    content: public override int EndRead (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The reference to the pending asynchronous request.\n    return:\n      type: System.Int32\n      description: The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).\n  overload: System.IO.Pipes.PipeStream.EndRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> did not originate from a <xref href=\"System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The stream is closed or an internal error has occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)\n  commentId: M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: PipeStream.EndWrite(IAsyncResult)\n  fullName: PipeStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Ends a pending asynchronous write request.\n  remarks: \"<xref:System.IO.Pipes.PipeStream.EndWrite%2A> must be called once for every call to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>. This can be done either in the same code that called <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> or in a callback that is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.  \\n  \\n Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \\n  \\n If the pipe is closed or an invalid argument is passed to <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, the appropriate exceptions are raised immediately. Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request. The exceptions are raised when the code the calls <xref:System.IO.Pipes.PipeStream.EndWrite%2A> method.\"\n  syntax:\n    content: public override void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The reference to the pending asynchronous request.\n  overload: System.IO.Pipes.PipeStream.EndWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> did not originate from a <xref href=\"System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The stream is closed or an internal error has occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Flush\n  commentId: M:System.IO.Pipes.PipeStream.Flush\n  id: Flush\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: PipeStream.Flush()\n  fullName: PipeStream.Flush()\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.\n  remarks: The <xref:System.IO.Pipes.PipeStream.Flush%2A> method is not supported in the <xref:System.IO.Pipes.PipeStream> class and does nothing when it is called.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.IO.Pipes.PipeStream.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support write operations.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.GetAccessControl\n  commentId: M:System.IO.Pipes.PipeStream.GetAccessControl\n  id: GetAccessControl\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: GetAccessControl()\n  nameWithType: PipeStream.GetAccessControl()\n  fullName: PipeStream.GetAccessControl()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets a <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.\n  remarks: 'An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).'\n  syntax:\n    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();\n    parameters: []\n    return:\n      type: System.IO.Pipes.PipeSecurity\n      description: A <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the pipe described by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.\n  overload: System.IO.Pipes.PipeStream.GetAccessControl*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The underlying call to set security information failed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The underlying call to set security information failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The underlying call to set security information failed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.InBufferSize\n  commentId: P:System.IO.Pipes.PipeStream.InBufferSize\n  id: InBufferSize\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: InBufferSize\n  nameWithType: PipeStream.InBufferSize\n  fullName: PipeStream.InBufferSize\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets the size, in bytes, of the inbound buffer for a pipe.\n  remarks: If <xref:System.IO.Pipes.PipeStream.InBufferSize%2A> is 0, the buffer size is allocated as needed.\n  syntax:\n    content: public virtual int InBufferSize { get; }\n    return:\n      type: System.Int32\n      description: An integer value that represents the inbound buffer size, in bytes.\n  overload: System.IO.Pipes.PipeStream.InBufferSize*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The stream is unreadable.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is waiting to connect.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  commentId: M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Initializes a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object from the specified <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object.\n  remarks: If the pipe is in a connected state, this method also sets the <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property to `true`.\n  syntax:\n    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafePipeHandle\n      description: The <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object of the pipe to initialize.\n    - id: isExposed\n      type: System.Boolean\n      description: '`true` to expose the handle; otherwise, `false`.'\n    - id: isAsync\n      type: System.Boolean\n      description: '`true` to indicate that the handle was opened asynchronously; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.InitializeHandle*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: A handle cannot be bound to the pipe.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.IsAsync\n  commentId: P:System.IO.Pipes.PipeStream.IsAsync\n  id: IsAsync\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: IsAsync\n  nameWithType: PipeStream.IsAsync\n  fullName: PipeStream.IsAsync\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets a value indicating whether a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object was opened asynchronously or synchronously.\n  remarks: This property enables your code to use the <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A> property correctly.\n  syntax:\n    content: public bool IsAsync { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object was opened asynchronously; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.IsAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.IsConnected\n  commentId: P:System.IO.Pipes.PipeStream.IsConnected\n  id: IsConnected\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: IsConnected\n  nameWithType: PipeStream.IsConnected\n  fullName: PipeStream.IsConnected\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets or sets a value indicating whether a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is connected.\n  remarks: The <xref:System.IO.Pipes.PipeStream.IsConnected%2A> property returns `true` only if the <xref:System.IO.Pipes.PipeStream> object is connected. If this property returns `false`, the pipe may be waiting to connect, or may be disconnected, closed, or broken.\n  syntax:\n    content: public bool IsConnected { get; protected set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is connected; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.IsConnected*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.IsHandleExposed\n  commentId: P:System.IO.Pipes.PipeStream.IsHandleExposed\n  id: IsHandleExposed\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: IsHandleExposed\n  nameWithType: PipeStream.IsHandleExposed\n  fullName: PipeStream.IsHandleExposed\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  summary: Gets a value indicating whether a handle to a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is exposed.\n  remarks: The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current <xref:System.IO.Pipes.PipeStream> object.\n  syntax:\n    content: protected bool IsHandleExposed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a handle to the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object is exposed; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.IsHandleExposed*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.IsMessageComplete\n  commentId: P:System.IO.Pipes.PipeStream.IsMessageComplete\n  id: IsMessageComplete\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: IsMessageComplete\n  nameWithType: PipeStream.IsMessageComplete\n  fullName: PipeStream.IsMessageComplete\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets a value indicating whether there is more data in the message returned from the most recent read operation.\n  remarks: This property is relevant if the pipe's <xref:System.IO.Pipes.PipeStream.ReadMode%2A> property was set to <xref:System.IO.Pipes.PipeTransmissionMode.Message> by the most recent call to <xref:System.IO.Pipes.PipeStream.Read%2A> or <xref:System.IO.Pipes.PipeStream.EndRead%2A>.\n  syntax:\n    content: public bool IsMessageComplete { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if there are no more characters to read in the message; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeStream.IsMessageComplete*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The pipe is not connected.  \\n  \\n -or-  \\n  \\n The pipe handle has not been set.  \\n  \\n -or-  \\n  \\n The pipe's <xref href=\\\"System.IO.Pipes.PipeStream.ReadMode\\\"></xref> property value is not <xref href=\\\"System.IO.Pipes.PipeTransmissionMode.Message\\\"></xref>.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Length\n  commentId: P:System.IO.Pipes.PipeStream.Length\n  id: Length\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: PipeStream.Length\n  fullName: PipeStream.Length\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets the length of a stream, in bytes.\n  remarks: The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Length%2A> property.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: 0 in all cases.\n  overload: System.IO.Pipes.PipeStream.Length*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.OutBufferSize\n  commentId: P:System.IO.Pipes.PipeStream.OutBufferSize\n  id: OutBufferSize\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: OutBufferSize\n  nameWithType: PipeStream.OutBufferSize\n  fullName: PipeStream.OutBufferSize\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets the size, in bytes, of the outbound buffer for a pipe.\n  remarks: If <xref:System.IO.Pipes.PipeStream.OutBufferSize%2A> is 0, the buffer size is allocated as needed.\n  syntax:\n    content: public virtual int OutBufferSize { get; }\n    return:\n      type: System.Int32\n      description: The outbound buffer size, in bytes.\n  overload: System.IO.Pipes.PipeStream.OutBufferSize*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The stream is unwriteable.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is waiting to connect.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Position\n  commentId: P:System.IO.Pipes.PipeStream.Position\n  id: Position\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: PipeStream.Position\n  fullName: PipeStream.Position\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets or sets the current position of the current stream.\n  remarks: The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.Position%2A> property.\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: 0 in all cases.\n  overload: System.IO.Pipes.PipeStream.Position*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: PipeStream.Read(Byte[], Int32, Int32)\n  fullName: PipeStream.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Reads a block of bytes from a stream and writes the data to a specified buffer.\n  remarks: \"Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.  \\n  \\n Calling the <xref:System.IO.Pipes.PipeStream.Read%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginRead%2A> and <xref:System.IO.Pipes.PipeStream.EndRead%2A>.\"\n  example:\n  - \"The following example creates an anonymous pipe client and pipe server. The pipe server uses the <xref:System.IO.Pipes.PipeStream.Read%2A> method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \\n  \\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cpp/sample.cpp#1)]\\n [!code-csharp[System.IO.Pipes.PipeStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.pipes.pipestream/cs/sample.cs#1)]\\n [!code-vb[System.IO.Pipes.PipeStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.pipes.pipestream/vb/sample.vb#1)]\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: When this method returns, contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code> - 1) replaced by the bytes read from the current source.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in the <code>buffer</code> array at which the bytes that are read will be placed.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    return:\n      type: System.Int32\n      description: The total number of bytes that are read into <code>buffer</code>. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.\n  overload: System.IO.Pipes.PipeStream.Read*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support read operations.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is disconnected, waiting to connect, or the handle has not been set.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: Any I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: ''\n  overload: System.IO.Pipes.PipeStream.ReadAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.ReadByte\n  commentId: M:System.IO.Pipes.PipeStream.ReadByte\n  id: ReadByte\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: ReadByte()\n  nameWithType: PipeStream.ReadByte()\n  fullName: PipeStream.ReadByte()\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Reads a byte from a pipe.\n  remarks: Use the <xref:System.IO.Pipes.PipeStream.CanRead%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports read operations.\n  syntax:\n    content: public override int ReadByte ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The byte, cast to <xref href=\"System.Int32\"></xref>, or -1 indicates the end of the stream (the pipe has been closed).\n  overload: System.IO.Pipes.PipeStream.ReadByte*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support read operations.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is disconnected, waiting to connect, or the handle has not been set.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: Any I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.ReadMode\n  commentId: P:System.IO.Pipes.PipeStream.ReadMode\n  id: ReadMode\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: ReadMode\n  nameWithType: PipeStream.ReadMode\n  fullName: PipeStream.ReadMode\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets or sets the reading mode for a <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.\n  remarks: Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.\n  syntax:\n    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }\n    return:\n      type: System.IO.Pipes.PipeTransmissionMode\n      description: One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates how the <xref href=\"System.IO.Pipes.PipeStream\"></xref> object reads from the pipe.\n  overload: System.IO.Pipes.PipeStream.ReadMode*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The supplied value is not a valid <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The supplied value is not a supported <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> value for this pipe stream.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The handle has not been set.  \\n  \\n -or-  \\n  \\n The pipe is waiting to connect with a named client.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or an I/O error occurred with a named client.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.SafePipeHandle\n  commentId: P:System.IO.Pipes.PipeStream.SafePipeHandle\n  id: SafePipeHandle\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: SafePipeHandle\n  nameWithType: PipeStream.SafePipeHandle\n  fullName: PipeStream.SafePipeHandle\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets the safe handle for the local end of the pipe that the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object encapsulates.\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafePipeHandle\n      description: A <xref href=\"Microsoft.Win32.SafeHandles.SafePipeHandle\"></xref> object for the pipe that is encapsulated by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.\n  overload: System.IO.Pipes.PipeStream.SafePipeHandle*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe handle has not been set.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: PipeStream.Seek(Int64, SeekOrigin)\n  fullName: PipeStream.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Sets the current position of the current stream to the specified value.\n  remarks: The <xref:System.IO.Pipes.PipeStream.Seek%2A> method is not supported in pipes and raises a <xref:System.NotSupportedException> when it is called.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The point, relative to <code>origin</code>, to begin seeking from.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: Specifies the beginning, the end, or the current position as a reference point for <code>offset</code>, using a value of type <xref href=\"System.IO.SeekOrigin\"></xref>.\n    return:\n      type: System.Int64\n      description: The new position in the stream.\n  overload: System.IO.Pipes.PipeStream.Seek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)\n  commentId: M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)\n  id: SetAccessControl(System.IO.Pipes.PipeSecurity)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: SetAccessControl(PipeSecurity)\n  nameWithType: PipeStream.SetAccessControl(PipeSecurity)\n  fullName: PipeStream.SetAccessControl(PipeSecurity)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Applies the access control list (ACL) entries specified by a <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to the pipe specified by the current <xref href=\"System.IO.Pipes.PipeStream\"></xref> object.\n  remarks: 'An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).'\n  syntax:\n    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);\n    parameters:\n    - id: pipeSecurity\n      type: System.IO.Pipes.PipeSecurity\n      description: A <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object that specifies an access control list (ACL) entry to apply to the current pipe.\n  overload: System.IO.Pipes.PipeStream.SetAccessControl*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pipeSecurity</code> is `null`.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The underlying call to set security information failed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The underlying call to set security information failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The underlying call to set security information failed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  commentId: M:System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: PipeStream.SetLength(Int64)\n  fullName: PipeStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Sets the length of the current stream to the specified value.\n  remarks: The <xref:System.IO.Pipes.PipeStream> class does not support the <xref:System.IO.Pipes.PipeStream.SetLength%2A> method.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The new length of the stream.\n  overload: System.IO.Pipes.PipeStream.SetLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.TransmissionMode\n  commentId: P:System.IO.Pipes.PipeStream.TransmissionMode\n  id: TransmissionMode\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: TransmissionMode\n  nameWithType: PipeStream.TransmissionMode\n  fullName: PipeStream.TransmissionMode\n  type: Property\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Gets the pipe transmission mode supported by the current pipe.\n  remarks: Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> mode message transmission.\n  syntax:\n    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }\n    return:\n      type: System.IO.Pipes.PipeTransmissionMode\n      description: One of the <xref href=\"System.IO.Pipes.PipeTransmissionMode\"></xref> values that indicates the transmission mode supported by the current pipe.\n  overload: System.IO.Pipes.PipeStream.TransmissionMode*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The handle has not been set.  \\n  \\n -or-  \\n  \\n The pipe is waiting to connect in an anonymous client/server operation or with a named client.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain\n  commentId: M:System.IO.Pipes.PipeStream.WaitForPipeDrain\n  id: WaitForPipeDrain\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: WaitForPipeDrain()\n  nameWithType: PipeStream.WaitForPipeDrain()\n  fullName: PipeStream.WaitForPipeDrain()\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Waits for the other end of the pipe to read all sent bytes.\n  remarks: The <xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A> method blocks until the other end of the pipe has read all sent bytes.\n  syntax:\n    content: public void WaitForPipeDrain ();\n    parameters: []\n  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support write operations.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: PipeStream.Write(Byte[], Int32, Int32)\n  fullName: PipeStream.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Writes a block of bytes to the current stream using data from a buffer.\n  remarks: \"Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.  \\n  \\n Calling the <xref:System.IO.Pipes.PipeStream.Write%2A> method blocks until `count` bytes are read or the end of the stream is reached. For asynchronous read operations, see <xref:System.IO.Pipes.PipeStream.BeginWrite%2A> and <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.\"\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer that contains data to write to the pipe.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write to the current stream.\n  overload: System.IO.Pipes.PipeStream.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>count</code> is greater than the number of bytes available in <code>buffer</code>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support write operations.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  namespace: System.IO.Pipes\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.Pipes.PipeStream.WriteAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  commentId: M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  id: WriteByte(System.Byte)\n  parent: System.IO.Pipes.PipeStream\n  langs:\n  - csharp\n  name: WriteByte(Byte)\n  nameWithType: PipeStream.WriteByte(Byte)\n  fullName: PipeStream.WriteByte(Byte)\n  type: Method\n  assemblies:\n  - System.IO.Pipes\n  - System.Core\n  - netstandard\n  namespace: System.IO.Pipes\n  summary: Writes a byte to the current stream.\n  remarks: Use the <xref:System.IO.Pipes.PipeStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Pipes.PipeStream> object supports write operations.\n  syntax:\n    content: public override void WriteByte (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: The byte to write to the stream.\n  overload: System.IO.Pipes.PipeStream.WriteByte*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The pipe is closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The pipe does not support write operations.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The pipe is disconnected, waiting to connect, or the handle has not been set.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The pipe is broken or another I/O error occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: PipeStream(PipeDirection, Int32)\n  nameWithType: PipeStream.PipeStream(PipeDirection, Int32)\n  fullName: PipeStream.PipeStream(PipeDirection, Int32)\n- uid: System.IO.Pipes.PipeDirection\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeDirection\n  nameWithType: PipeDirection\n  fullName: System.IO.Pipes.PipeDirection\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n  nameWithType: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n  fullName: PipeStream.PipeStream(PipeDirection, PipeTransmissionMode, Int32)\n- uid: System.IO.Pipes.PipeTransmissionMode\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeTransmissionMode\n  nameWithType: PipeTransmissionMode\n  fullName: System.IO.Pipes.PipeTransmissionMode\n- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Pipes.PipeStream.CanRead\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PipeStream.CanRead\n  fullName: PipeStream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Pipes.PipeStream.CanSeek\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PipeStream.CanSeek\n  fullName: PipeStream.CanSeek\n- uid: System.IO.Pipes.PipeStream.CanWrite\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PipeStream.CanWrite\n  fullName: PipeStream.CanWrite\n- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckPipePropertyOperations()\n  nameWithType: PipeStream.CheckPipePropertyOperations()\n  fullName: PipeStream.CheckPipePropertyOperations()\n- uid: System.IO.Pipes.PipeStream.CheckReadOperations\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckReadOperations()\n  nameWithType: PipeStream.CheckReadOperations()\n  fullName: PipeStream.CheckReadOperations()\n- uid: System.IO.Pipes.PipeStream.CheckWriteOperations\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckWriteOperations()\n  nameWithType: PipeStream.CheckWriteOperations()\n  fullName: PipeStream.CheckWriteOperations()\n- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: PipeStream.Dispose(Boolean)\n  fullName: PipeStream.Dispose(Boolean)\n- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: PipeStream.EndRead(IAsyncResult)\n  fullName: PipeStream.EndRead(IAsyncResult)\n- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: PipeStream.EndWrite(IAsyncResult)\n  fullName: PipeStream.EndWrite(IAsyncResult)\n- uid: System.IO.Pipes.PipeStream.Flush\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Flush()\n  nameWithType: PipeStream.Flush()\n  fullName: PipeStream.Flush()\n- uid: System.IO.Pipes.PipeStream.GetAccessControl\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: GetAccessControl()\n  nameWithType: PipeStream.GetAccessControl()\n  fullName: PipeStream.GetAccessControl()\n- uid: System.IO.Pipes.PipeSecurity\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeSecurity\n  nameWithType: PipeSecurity\n  fullName: System.IO.Pipes.PipeSecurity\n- uid: System.IO.Pipes.PipeStream.InBufferSize\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: InBufferSize\n  nameWithType: PipeStream.InBufferSize\n  fullName: PipeStream.InBufferSize\n- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)\n  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)\n- uid: Microsoft.Win32.SafeHandles.SafePipeHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafePipeHandle\n  nameWithType: SafePipeHandle\n  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle\n- uid: System.IO.Pipes.PipeStream.IsAsync\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsAsync\n  nameWithType: PipeStream.IsAsync\n  fullName: PipeStream.IsAsync\n- uid: System.IO.Pipes.PipeStream.IsConnected\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsConnected\n  nameWithType: PipeStream.IsConnected\n  fullName: PipeStream.IsConnected\n- uid: System.IO.Pipes.PipeStream.IsHandleExposed\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsHandleExposed\n  nameWithType: PipeStream.IsHandleExposed\n  fullName: PipeStream.IsHandleExposed\n- uid: System.IO.Pipes.PipeStream.IsMessageComplete\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsMessageComplete\n  nameWithType: PipeStream.IsMessageComplete\n  fullName: PipeStream.IsMessageComplete\n- uid: System.IO.Pipes.PipeStream.Length\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Length\n  nameWithType: PipeStream.Length\n  fullName: PipeStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Pipes.PipeStream.OutBufferSize\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: OutBufferSize\n  nameWithType: PipeStream.OutBufferSize\n  fullName: PipeStream.OutBufferSize\n- uid: System.IO.Pipes.PipeStream.Position\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Position\n  nameWithType: PipeStream.Position\n  fullName: PipeStream.Position\n- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: PipeStream.Read(Byte[], Int32, Int32)\n  fullName: PipeStream.Read(Byte[], Int32, Int32)\n- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Pipes.PipeStream.ReadByte\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: PipeStream.ReadByte()\n  fullName: PipeStream.ReadByte()\n- uid: System.IO.Pipes.PipeStream.ReadMode\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadMode\n  nameWithType: PipeStream.ReadMode\n  fullName: PipeStream.ReadMode\n- uid: System.IO.Pipes.PipeStream.SafePipeHandle\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SafePipeHandle\n  nameWithType: PipeStream.SafePipeHandle\n  fullName: PipeStream.SafePipeHandle\n- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: PipeStream.Seek(Int64, SeekOrigin)\n  fullName: PipeStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SetAccessControl(PipeSecurity)\n  nameWithType: PipeStream.SetAccessControl(PipeSecurity)\n  fullName: PipeStream.SetAccessControl(PipeSecurity)\n- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: PipeStream.SetLength(Int64)\n  fullName: PipeStream.SetLength(Int64)\n- uid: System.IO.Pipes.PipeStream.TransmissionMode\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: TransmissionMode\n  nameWithType: PipeStream.TransmissionMode\n  fullName: PipeStream.TransmissionMode\n- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WaitForPipeDrain()\n  nameWithType: PipeStream.WaitForPipeDrain()\n  fullName: PipeStream.WaitForPipeDrain()\n- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: PipeStream.Write(Byte[], Int32, Int32)\n  fullName: PipeStream.Write(Byte[], Int32, Int32)\n- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: PipeStream.WriteByte(Byte)\n  fullName: PipeStream.WriteByte(Byte)\n- uid: System.IO.Pipes.PipeStream.#ctor*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: PipeStream\n  nameWithType: PipeStream.PipeStream\n  fullName: PipeStream.PipeStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.BeginRead*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: BeginRead\n  nameWithType: PipeStream.BeginRead\n  fullName: PipeStream.BeginRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.BeginWrite*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: PipeStream.BeginWrite\n  fullName: PipeStream.BeginWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.CanRead*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanRead\n  nameWithType: PipeStream.CanRead\n  fullName: PipeStream.CanRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.CanSeek*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: PipeStream.CanSeek\n  fullName: PipeStream.CanSeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.CanWrite*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: PipeStream.CanWrite\n  fullName: PipeStream.CanWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckPipePropertyOperations\n  nameWithType: PipeStream.CheckPipePropertyOperations\n  fullName: PipeStream.CheckPipePropertyOperations\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.CheckReadOperations*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckReadOperations\n  nameWithType: PipeStream.CheckReadOperations\n  fullName: PipeStream.CheckReadOperations\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: CheckWriteOperations\n  nameWithType: PipeStream.CheckWriteOperations\n  fullName: PipeStream.CheckWriteOperations\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Dispose*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Dispose\n  nameWithType: PipeStream.Dispose\n  fullName: PipeStream.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.EndRead*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: EndRead\n  nameWithType: PipeStream.EndRead\n  fullName: PipeStream.EndRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.EndWrite*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: PipeStream.EndWrite\n  fullName: PipeStream.EndWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Flush*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Flush\n  nameWithType: PipeStream.Flush\n  fullName: PipeStream.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.GetAccessControl*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: GetAccessControl\n  nameWithType: PipeStream.GetAccessControl\n  fullName: PipeStream.GetAccessControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.InBufferSize*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: InBufferSize\n  nameWithType: PipeStream.InBufferSize\n  fullName: PipeStream.InBufferSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.InitializeHandle*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: InitializeHandle\n  nameWithType: PipeStream.InitializeHandle\n  fullName: PipeStream.InitializeHandle\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.IsAsync*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsAsync\n  nameWithType: PipeStream.IsAsync\n  fullName: PipeStream.IsAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.IsConnected*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsConnected\n  nameWithType: PipeStream.IsConnected\n  fullName: PipeStream.IsConnected\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.IsHandleExposed*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsHandleExposed\n  nameWithType: PipeStream.IsHandleExposed\n  fullName: PipeStream.IsHandleExposed\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.IsMessageComplete*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: IsMessageComplete\n  nameWithType: PipeStream.IsMessageComplete\n  fullName: PipeStream.IsMessageComplete\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Length*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Length\n  nameWithType: PipeStream.Length\n  fullName: PipeStream.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.OutBufferSize*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: OutBufferSize\n  nameWithType: PipeStream.OutBufferSize\n  fullName: PipeStream.OutBufferSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Position*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Position\n  nameWithType: PipeStream.Position\n  fullName: PipeStream.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Read*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Read\n  nameWithType: PipeStream.Read\n  fullName: PipeStream.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.ReadAsync*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadAsync\n  nameWithType: PipeStream.ReadAsync\n  fullName: PipeStream.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.ReadByte*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadByte\n  nameWithType: PipeStream.ReadByte\n  fullName: PipeStream.ReadByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.ReadMode*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: ReadMode\n  nameWithType: PipeStream.ReadMode\n  fullName: PipeStream.ReadMode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.SafePipeHandle*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SafePipeHandle\n  nameWithType: PipeStream.SafePipeHandle\n  fullName: PipeStream.SafePipeHandle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Seek*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Seek\n  nameWithType: PipeStream.Seek\n  fullName: PipeStream.Seek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.SetAccessControl*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SetAccessControl\n  nameWithType: PipeStream.SetAccessControl\n  fullName: PipeStream.SetAccessControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.SetLength*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: SetLength\n  nameWithType: PipeStream.SetLength\n  fullName: PipeStream.SetLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.TransmissionMode*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: TransmissionMode\n  nameWithType: PipeStream.TransmissionMode\n  fullName: PipeStream.TransmissionMode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WaitForPipeDrain\n  nameWithType: PipeStream.WaitForPipeDrain\n  fullName: PipeStream.WaitForPipeDrain\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.Write*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: Write\n  nameWithType: PipeStream.Write\n  fullName: PipeStream.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.WriteAsync*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WriteAsync\n  nameWithType: PipeStream.WriteAsync\n  fullName: PipeStream.WriteAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.IO.Pipes.PipeStream.WriteByte*\n  parent: System.IO.Pipes.PipeStream\n  isExternal: false\n  name: WriteByte\n  nameWithType: PipeStream.WriteByte\n  fullName: PipeStream.WriteByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n- uid: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)\n  parent: System.IO.Pipes.PipesAclExtensions\n  isExternal: false\n  name: GetAccessControl(PipeStream)\n  nameWithType: PipesAclExtensions.GetAccessControl(PipeStream)\n  fullName: PipesAclExtensions.GetAccessControl(PipeStream)\n- uid: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)\n  parent: System.IO.Pipes.PipesAclExtensions\n  isExternal: false\n  name: SetAccessControl(PipeStream, PipeSecurity)\n  nameWithType: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)\n  fullName: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)\n"}