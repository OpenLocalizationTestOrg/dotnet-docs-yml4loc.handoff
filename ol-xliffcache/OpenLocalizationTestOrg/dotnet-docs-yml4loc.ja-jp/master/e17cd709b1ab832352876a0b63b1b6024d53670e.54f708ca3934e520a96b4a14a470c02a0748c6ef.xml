{"nodes":[{"content":"Represents the base class for specifying a conditional value within a <xref href=\"System.Windows.Style\"></xref> object.","nodes":[{"pos":[0,119],"content":"Represents the base class for specifying a conditional value within a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Style\"&gt;&lt;/xref&gt;</ph> object.","source":"Represents the base class for specifying a conditional value within a <xref href=\"System.Windows.Style\"></xref> object."}],"pos":[429,549],"yaml":true},{"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model allows you to specify triggers within your <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, and <xref:System.Windows.DataTemplate>. Essentially, <xref:System.Windows.TriggerBase> is the base class for objects that allow you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.","nodes":[{"pos":[0,492],"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model allows you to specify triggers within your <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, and <xref:System.Windows.DataTemplate>. Essentially, <xref:System.Windows.TriggerBase> is the base class for objects that allow you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> styling and templating model allows you to specify triggers within your <ph id=\"ph2\">&lt;xref:System.Windows.Style&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.DataTemplate&gt;</ph>.","pos":[0,264],"source":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model allows you to specify triggers within your <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, and <xref:System.Windows.DataTemplate>."},{"content":"Essentially, <ph id=\"ph1\">&lt;xref:System.Windows.TriggerBase&gt;</ph> is the base class for objects that allow you to apply changes when certain conditions (such as when a certain property value becomes <ph id=\"ph2\">`true`</ph>, or when an event occurs) are satisfied.","pos":[265,492],"source":" Essentially, <xref:System.Windows.TriggerBase> is the base class for objects that allow you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied."}]}],"pos":[560,1053],"yaml":true,"extradata":"MT"},{"content":"Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes active. This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class.","nodes":[{"pos":[0,219],"content":"Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes active. This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class.","nodes":[{"content":"Gets a collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.TriggerAction\"&gt;&lt;/xref&gt;</ph> objects to apply when the trigger object becomes active.","pos":[0,127],"source":"Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes active."},{"content":"This property does not apply to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventTrigger\"&gt;&lt;/xref&gt;</ph> class.","pos":[128,219],"source":" This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class."}]}],"pos":[6041,6261],"yaml":true},{"content":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.  \n  \n> [!NOTE]\n>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.  \n  \n<a name=\"xamlPropertyElementUsage_EnterActions\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.EnterActions>  \n    OneOrMoreTriggerActions  \n  </object.EnterActions >  \n</object>  \n```  \n  \n<a name=\"xamlValues_EnterActions\"></a>   \n## XAML Values  \n *OneOrMoreTriggerActions*  \n One or more <xref:System.Windows.TriggerAction> objects.","nodes":[{"pos":[0,378],"content":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.","nodes":[{"content":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.","pos":[0,378],"nodes":[{"content":"This property does not apply to the <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> class because an event represents a point in time while <ph id=\"ph2\">&lt;xref:System.Windows.TriggerBase.EnterActions%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.TriggerBase.ExitActions%2A&gt;</ph> correspond to object states.","pos":[0,258],"source":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states."},{"content":"For <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.Windows.EventTrigger.Actions%2A&gt;</ph> property instead.","pos":[259,378],"source":" For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead."}]}]},{"pos":[386,706],"content":"[!NOTE]\n This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.","leadings":["","> "],"nodes":[{"content":" This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.","pos":[8,318],"nodes":[{"content":"This property can only be set in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> via the collection syntax shown, or by accessing the collection object and using its various methods such as Add.","pos":[1,207],"source":" This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add."},{"content":"The property to access the collection object itself is read-only, the collection itself is read-write.","pos":[208,310]}]}]},{"pos":[771,798],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[971,982],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[986,1071],"content":"*OneOrMoreTriggerActions*  \n One or more <xref:System.Windows.TriggerAction> objects.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>OneOrMoreTriggerActions<ept id=\"p1\">*</ept>","pos":[0,25],"source":"*OneOrMoreTriggerActions*"},{"content":"One or more <ph id=\"ph1\">&lt;xref:System.Windows.TriggerAction&gt;</ph> objects.","pos":[29,85],"source":" One or more <xref:System.Windows.TriggerAction> objects."}]}],"pos":[6272,7369],"yaml":true,"extradata":"MT"},{"content":"The default value is `null`.","nodes":[{"pos":[0,28],"content":"The default value is <ph id=\"ph1\">`null`</ph>.","source":"The default value is `null`."}],"pos":[7542,7571],"yaml":true},{"content":"Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes inactive. This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class.","nodes":[{"pos":[0,221],"content":"Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes inactive. This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class.","nodes":[{"content":"Gets a collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.TriggerAction\"&gt;&lt;/xref&gt;</ph> objects to apply when the trigger object becomes inactive.","pos":[0,129],"source":"Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes inactive."},{"content":"This property does not apply to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventTrigger\"&gt;&lt;/xref&gt;</ph> class.","pos":[130,221],"source":" This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class."}]}],"pos":[8546,8768],"yaml":true},{"content":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.  \n  \n> [!NOTE]\n>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.  \n  \n<a name=\"xamlPropertyElementUsage_ExitActions\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.ExitActions>  \n    OneOrMoreTriggerActions  \n  </object.ExitActions >  \n</object>  \n```  \n  \n<a name=\"xamlValues_ExitActions\"></a>   \n## XAML Values  \n *OneOrMoreTriggerActions*  \n One or more <xref:System.Windows.TriggerAction> objects.","nodes":[{"pos":[0,378],"content":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.","nodes":[{"content":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.","pos":[0,378],"nodes":[{"content":"This property does not apply to the <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> class because an event represents a point in time while <ph id=\"ph2\">&lt;xref:System.Windows.TriggerBase.EnterActions%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.TriggerBase.ExitActions%2A&gt;</ph> correspond to object states.","pos":[0,258],"source":"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states."},{"content":"For <ph id=\"ph1\">&lt;xref:System.Windows.EventTrigger&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.Windows.EventTrigger.Actions%2A&gt;</ph> property instead.","pos":[259,378],"source":" For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead."}]}]},{"pos":[386,706],"content":"[!NOTE]\n This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.","leadings":["","> "],"nodes":[{"content":" This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.","pos":[8,318],"nodes":[{"content":"This property can only be set in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> via the collection syntax shown, or by accessing the collection object and using its various methods such as Add.","pos":[1,207],"source":" This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add."},{"content":"The property to access the collection object itself is read-only, the collection itself is read-write.","pos":[208,310]}]}]},{"pos":[770,797],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[967,978],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[982,1067],"content":"*OneOrMoreTriggerActions*  \n One or more <xref:System.Windows.TriggerAction> objects.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>OneOrMoreTriggerActions<ept id=\"p1\">*</ept>","pos":[0,25],"source":"*OneOrMoreTriggerActions*"},{"content":"One or more <ph id=\"ph1\">&lt;xref:System.Windows.TriggerAction&gt;</ph> objects.","pos":[29,85],"source":" One or more <xref:System.Windows.TriggerAction> objects."}]}],"pos":[8779,9872],"yaml":true,"extradata":"MT"},{"content":"The default value is `null`.","nodes":[{"pos":[0,28],"content":"The default value is <ph id=\"ph1\">`null`</ph>.","source":"The default value is `null`."}],"pos":[10044,10073],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.TriggerBase\n  commentId: T:System.Windows.TriggerBase\n  id: TriggerBase\n  children:\n  - System.Windows.TriggerBase.EnterActions\n  - System.Windows.TriggerBase.ExitActions\n  langs:\n  - csharp\n  name: TriggerBase\n  nameWithType: TriggerBase\n  fullName: System.Windows.TriggerBase\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Represents the base class for specifying a conditional value within a <xref href=\"System.Windows.Style\"></xref> object.\n  remarks: The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styling and templating model allows you to specify triggers within your <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, and <xref:System.Windows.DataTemplate>. Essentially, <xref:System.Windows.TriggerBase> is the base class for objects that allow you to apply changes when certain conditions (such as when a certain property value becomes `true`, or when an event occurs) are satisfied.\n  example:\n  - \"There are several different types of triggers: <xref:System.Windows.Trigger>, <xref:System.Windows.MultiTrigger>, <xref:System.Windows.EventTrigger>, <xref:System.Windows.DataTrigger>, and <xref:System.Windows.MultiDataTrigger>.  \\n  \\n The <xref:System.Windows.Trigger> class is the simplest type of triggers. A <xref:System.Windows.Trigger> object allows you to apply changes based on the value of a property. For example, the following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \\n  \\n [!code-xml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  \\n  \\n If you need to apply changes based on the state of multiple properties, you can use the <xref:System.Windows.MultiTrigger>. For an example, see the <xref:System.Windows.MultiTrigger> page.  \\n  \\n The <xref:System.Windows.EventTrigger> class allows you to apply changes when an event occurs. The following example contains two <xref:System.Windows.EventTrigger> objects, one of which occurs when the mouse enters the element and the other occurs when the mouse leaves the element.  \\n  \\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]\\n  \\n These are also the <xref:System.Windows.DataTrigger> and the <xref:System.Windows.MultiDataTrigger> classes. These are similar to <xref:System.Windows.Trigger> and <xref:System.Windows.MultiTrigger> except that they are for data-bound properties.\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public abstract class TriggerBase : System.Windows.DependencyObject\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  derivedClasses:\n  - System.Windows.DataTrigger\n  - System.Windows.EventTrigger\n  - System.Windows.MultiDataTrigger\n  - System.Windows.MultiTrigger\n  - System.Windows.Trigger\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  attributes:\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/TriggerBase.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.TriggerBase.EnterActions\n  commentId: P:System.Windows.TriggerBase.EnterActions\n  id: EnterActions\n  parent: System.Windows.TriggerBase\n  langs:\n  - csharp\n  name: EnterActions\n  nameWithType: TriggerBase.EnterActions\n  fullName: TriggerBase.EnterActions\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes active. This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class.\n  remarks: \"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.  \\n  \\n> [!NOTE]\\n>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.  \\n  \\n<a name=\\\"xamlPropertyElementUsage_EnterActions\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.EnterActions>  \\n    OneOrMoreTriggerActions  \\n  </object.EnterActions >  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_EnterActions\\\"></a>   \\n## XAML Values  \\n *OneOrMoreTriggerActions*  \\n One or more <xref:System.Windows.TriggerAction> objects.\"\n  syntax:\n    content: public System.Windows.TriggerActionCollection EnterActions { get; }\n    return:\n      type: System.Windows.TriggerActionCollection\n      description: The default value is `null`.\n  overload: System.Windows.TriggerBase.EnterActions*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/TriggerBase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.TriggerBase.ExitActions\n  commentId: P:System.Windows.TriggerBase.ExitActions\n  id: ExitActions\n  parent: System.Windows.TriggerBase\n  langs:\n  - csharp\n  name: ExitActions\n  nameWithType: TriggerBase.ExitActions\n  fullName: TriggerBase.ExitActions\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a collection of <xref href=\"System.Windows.TriggerAction\"></xref> objects to apply when the trigger object becomes inactive. This property does not apply to the <xref href=\"System.Windows.EventTrigger\"></xref> class.\n  remarks: \"This property does not apply to the <xref:System.Windows.EventTrigger> class because an event represents a point in time while <xref:System.Windows.TriggerBase.EnterActions%2A> and <xref:System.Windows.TriggerBase.ExitActions%2A> correspond to object states. For <xref:System.Windows.EventTrigger> objects, use the <xref:System.Windows.EventTrigger.Actions%2A> property instead.  \\n  \\n> [!NOTE]\\n>  This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] via the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write.  \\n  \\n<a name=\\\"xamlPropertyElementUsage_ExitActions\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.ExitActions>  \\n    OneOrMoreTriggerActions  \\n  </object.ExitActions >  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_ExitActions\\\"></a>   \\n## XAML Values  \\n *OneOrMoreTriggerActions*  \\n One or more <xref:System.Windows.TriggerAction> objects.\"\n  syntax:\n    content: public System.Windows.TriggerActionCollection ExitActions { get; }\n    return:\n      type: System.Windows.TriggerActionCollection\n      description: The default value is `null`.\n  overload: System.Windows.TriggerBase.ExitActions*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/TriggerBase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.TriggerBase.EnterActions\n  parent: System.Windows.TriggerBase\n  isExternal: false\n  name: EnterActions\n  nameWithType: TriggerBase.EnterActions\n  fullName: TriggerBase.EnterActions\n- uid: System.Windows.TriggerActionCollection\n  parent: System.Windows\n  isExternal: false\n  name: TriggerActionCollection\n  nameWithType: TriggerActionCollection\n  fullName: System.Windows.TriggerActionCollection\n- uid: System.Windows.TriggerBase.ExitActions\n  parent: System.Windows.TriggerBase\n  isExternal: false\n  name: ExitActions\n  nameWithType: TriggerBase.ExitActions\n  fullName: TriggerBase.ExitActions\n- uid: System.Windows.TriggerBase.EnterActions*\n  parent: System.Windows.TriggerBase\n  isExternal: false\n  name: EnterActions\n  nameWithType: TriggerBase.EnterActions\n  fullName: TriggerBase.EnterActions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/TriggerBase.xml\n- uid: System.Windows.TriggerBase.ExitActions*\n  parent: System.Windows.TriggerBase\n  isExternal: false\n  name: ExitActions\n  nameWithType: TriggerBase.ExitActions\n  fullName: TriggerBase.ExitActions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/TriggerBase.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n"}