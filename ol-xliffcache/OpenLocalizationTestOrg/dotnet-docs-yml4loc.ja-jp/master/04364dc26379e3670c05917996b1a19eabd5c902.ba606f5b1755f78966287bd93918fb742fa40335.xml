{"nodes":[{"content":"Provides read-only access to a set of prefix and namespace mappings.","nodes":[{"pos":[0,68],"content":"Provides read-only access to a set of prefix and namespace mappings.","nodes":[{"content":"Provides read-only access to a set of prefix and namespace mappings.","pos":[0,68]}]}],"pos":[644,713],"yaml":true},{"content":"Gets a collection of defined prefix-namespace mappings that are currently in scope.","nodes":[{"pos":[0,83],"content":"Gets a collection of defined prefix-namespace mappings that are currently in scope.","nodes":[{"content":"Gets a collection of defined prefix-namespace mappings that are currently in scope.","pos":[0,83]}]}],"pos":[2637,2721],"yaml":true},{"content":"The collection is keyed by prefix and can be used to enumerate the namespaces currently in scope. The collection is a disconnected copy of the current namespace list.  \n  \n The following table lists the <xref:System.Xml.XmlNamespaceScope> values and how it affects the whether or not the default and built-in namespaces are returned by the <xref:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope%2A> method.  \n  \n|XmlNamespaceScope value|xmlns:xml|xmlns:xmlns|xmlns=\"\"|  \n|-----------------------------|---------------|-----------------|---------------|  \n|<xref:System.Xml.XmlNamespaceScope.All>|yes|no|no|  \n|<xref:System.Xml.XmlNamespaceScope.ExcludeXml>|no|no|no|  \n|<xref:System.Xml.XmlNamespaceScope.Local>|no|no|yes|","nodes":[{"pos":[0,166],"content":"The collection is keyed by prefix and can be used to enumerate the namespaces currently in scope. The collection is a disconnected copy of the current namespace list.","nodes":[{"content":"The collection is keyed by prefix and can be used to enumerate the namespaces currently in scope. The collection is a disconnected copy of the current namespace list.","pos":[0,166],"nodes":[{"content":"The collection is keyed by prefix and can be used to enumerate the namespaces currently in scope.","pos":[0,97]},{"content":"The collection is a disconnected copy of the current namespace list.","pos":[98,166]}]}]},{"pos":[173,411],"content":"The following table lists the <xref:System.Xml.XmlNamespaceScope> values and how it affects the whether or not the default and built-in namespaces are returned by the <xref:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope%2A> method.","nodes":[{"content":"The following table lists the <ph id=\"ph1\">&lt;xref:System.Xml.XmlNamespaceScope&gt;</ph> values and how it affects the whether or not the default and built-in namespaces are returned by the <ph id=\"ph2\">&lt;xref:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope%2A&gt;</ph> method.","pos":[0,238],"source":"The following table lists the <xref:System.Xml.XmlNamespaceScope> values and how it affects the whether or not the default and built-in namespaces are returned by the <xref:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope%2A> method."}]},{"pos":[418,441],"content":"XmlNamespaceScope value","nodes":[{"content":"XmlNamespaceScope value","pos":[0,23]}]},{"pos":[442,451],"content":"xmlns:xml","nodes":[{"content":"xmlns:xml","pos":[0,9]}]},{"pos":[452,463],"content":"xmlns:xmlns","nodes":[{"content":"xmlns:xmlns","pos":[0,11]}]},{"pos":[464,472],"content":"xmlns=\"\"","nodes":[{"content":"xmlns=\"\"","pos":[0,8]}]},{"pos":[561,600],"content":"<xref:System.Xml.XmlNamespaceScope.All>","nodes":[]},{"pos":[601,604],"content":"yes","nodes":[{"content":"yes","pos":[0,3]}]},{"pos":[605,607],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[608,610],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[615,661],"content":"<xref:System.Xml.XmlNamespaceScope.ExcludeXml>","nodes":[]},{"pos":[662,664],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[665,667],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[668,670],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[675,716],"content":"<xref:System.Xml.XmlNamespaceScope.Local>","nodes":[]},{"pos":[717,719],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[720,722],"content":"no","nodes":[{"content":"no","pos":[0,2]}]},{"pos":[723,726],"content":"yes","nodes":[{"content":"yes","pos":[0,3]}]}],"pos":[2732,3472],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlNamespaceScope\"></xref> value that specifies the type of namespace nodes to return.","nodes":[{"pos":[0,112],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceScope\"&gt;&lt;/xref&gt;</ph> value that specifies the type of namespace nodes to return.","source":"An <xref href=\"System.Xml.XmlNamespaceScope\"></xref> value that specifies the type of namespace nodes to return."}],"pos":[3707,3820],"yaml":true},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> that contains the current in-scope namespaces.","nodes":[{"pos":[0,101],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> that contains the current in-scope namespaces.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> that contains the current in-scope namespaces."}],"pos":[3931,4033],"yaml":true},{"content":"Gets the namespace URI mapped to the specified prefix.","nodes":[{"pos":[0,54],"content":"Gets the namespace URI mapped to the specified prefix.","nodes":[{"content":"Gets the namespace URI mapped to the specified prefix.","pos":[0,54]}]}],"pos":[5672,5727],"yaml":true},{"content":"> [!NOTE]\n>  Namespace URI-to-prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.  \n  \n The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupNamespace%2A> method.  \n  \n|Prefix|Return Value|  \n|------------|------------------|  \n|xml|http://www.w3.org/XML/1998/namespace|  \n|xmlns|http://www.w3.org/2000/xmlns/|  \n|`String.Empty` (A default namespace has been assigned).|The currently assigned default namespace.|  \n|`String.Empty` (The default namespace has not been explicitly assigned).|`String.Empty` (The blank prefix is associated with elements that are not in any namespace).|","nodes":[{"pos":[2,182],"content":"[!NOTE]\n Namespace URI-to-prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.","leadings":["","> "],"nodes":[{"content":" Namespace URI-to-prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.","pos":[8,178],"nodes":[{"content":"Namespace URI-to-prefix mappings can change from node to node in an XML document.","pos":[1,82]},{"content":"You cannot depend on the result of a lookup being consistent from one node to the next.","pos":[83,170]}]}]},{"pos":[189,344],"content":"The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupNamespace%2A> method.","nodes":[{"content":"The following table describes how the default and built-in namespaces are handled by the <ph id=\"ph1\">&lt;xref:System.Xml.IXmlNamespaceResolver.LookupNamespace%2A&gt;</ph> method.","pos":[0,155],"source":"The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupNamespace%2A> method."}]},{"pos":[351,357],"content":"Prefix","nodes":[{"content":"Prefix","pos":[0,6]}]},{"pos":[358,370],"content":"Return Value","nodes":[{"content":"Return Value","pos":[0,12]}]},{"pos":[411,414],"content":"xml","nodes":[{"content":"xml","pos":[0,3]}]},{"pos":[415,451],"content":"http://www.w3.org/XML/1998/namespace","nodes":[{"content":"http://www.w3.org/XML/1998/namespace","pos":[0,36]}]},{"pos":[456,461],"content":"xmlns","nodes":[{"content":"xmlns","pos":[0,5]}]},{"pos":[462,491],"content":"http://www.w3.org/2000/xmlns/","nodes":[{"content":"http://www.w3.org/2000/xmlns/","pos":[0,29]}]},{"pos":[496,551],"content":"<ph id=\"ph1\">`String.Empty`</ph> (A default namespace has been assigned).","source":"`String.Empty` (A default namespace has been assigned)."},{"pos":[552,593],"content":"The currently assigned default namespace.","nodes":[{"content":"The currently assigned default namespace.","pos":[0,41]}]},{"pos":[598,670],"content":"<ph id=\"ph1\">`String.Empty`</ph> (The default namespace has not been explicitly assigned).","source":"`String.Empty` (The default namespace has not been explicitly assigned)."},{"pos":[671,763],"content":"<ph id=\"ph1\">`String.Empty`</ph> (The blank prefix is associated with elements that are not in any namespace).","source":"`String.Empty` (The blank prefix is associated with elements that are not in any namespace)."}],"pos":[5738,6515],"yaml":true,"extradata":"MT"},{"content":"The prefix whose namespace URI you wish to find.","nodes":[{"pos":[0,48],"content":"The prefix whose namespace URI you wish to find.","nodes":[{"content":"The prefix whose namespace URI you wish to find.","pos":[0,48]}]}],"pos":[6663,6712],"yaml":true},{"content":"The namespace URI that is mapped to the prefix; `null` if the prefix is not mapped to a namespace URI.","nodes":[{"pos":[0,102],"content":"The namespace URI that is mapped to the prefix; <ph id=\"ph1\">`null`</ph> if the prefix is not mapped to a namespace URI.","source":"The namespace URI that is mapped to the prefix; `null` if the prefix is not mapped to a namespace URI."}],"pos":[6769,6872],"yaml":true},{"content":"Gets the prefix that is mapped to the specified namespace URI.","nodes":[{"pos":[0,62],"content":"Gets the prefix that is mapped to the specified namespace URI.","nodes":[{"content":"Gets the prefix that is mapped to the specified namespace URI.","pos":[0,62]}]}],"pos":[8488,8551],"yaml":true},{"content":"It is possible for a namespace URI to be mapped to multiple prefixes. Because the prefixes are not mapped in a predictable manner, you should not depend on getting back a particular prefix when a namespace URI is mapped to more than one prefix.  \n  \n> [!NOTE]\n>  Namespace URI to prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.  \n  \n The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupPrefix%2A> method.  \n  \n|Namespace|Return value|  \n|---------------|------------------|  \n|http://www.w3.org/XML/1998/namespace|xml|  \n|http://www.w3.org/2000/xmlns/|xmlns|  \n|An empty namespace.|A default namespace that has not been defined.|","nodes":[{"pos":[0,244],"content":"It is possible for a namespace URI to be mapped to multiple prefixes. Because the prefixes are not mapped in a predictable manner, you should not depend on getting back a particular prefix when a namespace URI is mapped to more than one prefix.","nodes":[{"content":"It is possible for a namespace URI to be mapped to multiple prefixes. Because the prefixes are not mapped in a predictable manner, you should not depend on getting back a particular prefix when a namespace URI is mapped to more than one prefix.","pos":[0,244],"nodes":[{"content":"It is possible for a namespace URI to be mapped to multiple prefixes.","pos":[0,69]},{"content":"Because the prefixes are not mapped in a predictable manner, you should not depend on getting back a particular prefix when a namespace URI is mapped to more than one prefix.","pos":[70,244]}]}]},{"pos":[252,432],"content":"[!NOTE]\n Namespace URI to prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.","leadings":["","> "],"nodes":[{"content":" Namespace URI to prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.","pos":[8,178],"nodes":[{"content":"Namespace URI to prefix mappings can change from node to node in an XML document.","pos":[1,82]},{"content":"You cannot depend on the result of a lookup being consistent from one node to the next.","pos":[83,170]}]}]},{"pos":[439,591],"content":"The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupPrefix%2A> method.","nodes":[{"content":"The following table describes how the default and built-in namespaces are handled by the <ph id=\"ph1\">&lt;xref:System.Xml.IXmlNamespaceResolver.LookupPrefix%2A&gt;</ph> method.","pos":[0,152],"source":"The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupPrefix%2A> method."}]},{"pos":[598,607],"content":"Namespace","nodes":[{"content":"Namespace","pos":[0,9]}]},{"pos":[608,620],"content":"Return value","nodes":[{"content":"Return value","pos":[0,12]}]},{"pos":[664,700],"content":"http://www.w3.org/XML/1998/namespace","nodes":[{"content":"http://www.w3.org/XML/1998/namespace","pos":[0,36]}]},{"pos":[701,704],"content":"xml","nodes":[{"content":"xml","pos":[0,3]}]},{"pos":[709,738],"content":"http://www.w3.org/2000/xmlns/","nodes":[{"content":"http://www.w3.org/2000/xmlns/","pos":[0,29]}]},{"pos":[739,744],"content":"xmlns","nodes":[{"content":"xmlns","pos":[0,5]}]},{"pos":[749,768],"content":"An empty namespace.","nodes":[{"content":"An empty namespace.","pos":[0,19]}]},{"pos":[769,815],"content":"A default namespace that has not been defined.","nodes":[{"content":"A default namespace that has not been defined.","pos":[0,46]}]}],"pos":[8562,9392],"yaml":true,"extradata":"MT"},{"content":"The namespace URI whose prefix you wish to find.","nodes":[{"pos":[0,48],"content":"The namespace URI whose prefix you wish to find.","nodes":[{"content":"The namespace URI whose prefix you wish to find.","pos":[0,48]}]}],"pos":[9551,9600],"yaml":true},{"content":"The prefix that is mapped to the namespace URI; `null` if the namespace URI is not mapped to a prefix.","nodes":[{"pos":[0,102],"content":"The prefix that is mapped to the namespace URI; <ph id=\"ph1\">`null`</ph> if the namespace URI is not mapped to a prefix.","source":"The prefix that is mapped to the namespace URI; `null` if the namespace URI is not mapped to a prefix."}],"pos":[9657,9760],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.IXmlNamespaceResolver\n  commentId: T:System.Xml.IXmlNamespaceResolver\n  id: IXmlNamespaceResolver\n  children:\n  - System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  - System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)\n  - System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)\n  langs:\n  - csharp\n  name: IXmlNamespaceResolver\n  nameWithType: IXmlNamespaceResolver\n  fullName: System.Xml.IXmlNamespaceResolver\n  type: Interface\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Provides read-only access to a set of prefix and namespace mappings.\n  syntax:\n    content: public interface IXmlNamespaceResolver\n  derivedClasses:\n  - System.Xml.XmlNamespaceManager\n  - System.Xml.XmlNodeReader\n  - System.Xml.XmlTextReader\n  - System.Xml.XmlValidatingReader\n  - System.Xml.XPath.XPathNavigator\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  commentId: M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  id: GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  parent: System.Xml.IXmlNamespaceResolver\n  langs:\n  - csharp\n  name: GetNamespacesInScope(XmlNamespaceScope)\n  nameWithType: IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)\n  fullName: IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets a collection of defined prefix-namespace mappings that are currently in scope.\n  remarks: \"The collection is keyed by prefix and can be used to enumerate the namespaces currently in scope. The collection is a disconnected copy of the current namespace list.  \\n  \\n The following table lists the <xref:System.Xml.XmlNamespaceScope> values and how it affects the whether or not the default and built-in namespaces are returned by the <xref:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope%2A> method.  \\n  \\n|XmlNamespaceScope value|xmlns:xml|xmlns:xmlns|xmlns=\\\"\\\"|  \\n|-----------------------------|---------------|-----------------|---------------|  \\n|<xref:System.Xml.XmlNamespaceScope.All>|yes|no|no|  \\n|<xref:System.Xml.XmlNamespaceScope.ExcludeXml>|no|no|no|  \\n|<xref:System.Xml.XmlNamespaceScope.Local>|no|no|yes|\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);\n    parameters:\n    - id: scope\n      type: System.Xml.XmlNamespaceScope\n      description: An <xref href=\"System.Xml.XmlNamespaceScope\"></xref> value that specifies the type of namespace nodes to return.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: An <xref href=\"System.Collections.IDictionary\"></xref> that contains the current in-scope namespaces.\n  overload: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)\n  commentId: M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)\n  id: LookupNamespace(System.String)\n  parent: System.Xml.IXmlNamespaceResolver\n  langs:\n  - csharp\n  name: LookupNamespace(String)\n  nameWithType: IXmlNamespaceResolver.LookupNamespace(String)\n  fullName: IXmlNamespaceResolver.LookupNamespace(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the namespace URI mapped to the specified prefix.\n  remarks: \"> [!NOTE]\\n>  Namespace URI-to-prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.  \\n  \\n The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupNamespace%2A> method.  \\n  \\n|Prefix|Return Value|  \\n|------------|------------------|  \\n|xml|http://www.w3.org/XML/1998/namespace|  \\n|xmlns|http://www.w3.org/2000/xmlns/|  \\n|`String.Empty` (A default namespace has been assigned).|The currently assigned default namespace.|  \\n|`String.Empty` (The default namespace has not been explicitly assigned).|`String.Empty` (The blank prefix is associated with elements that are not in any namespace).|\"\n  syntax:\n    content: public string LookupNamespace (string prefix);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: The prefix whose namespace URI you wish to find.\n    return:\n      type: System.String\n      description: The namespace URI that is mapped to the prefix; `null` if the prefix is not mapped to a namespace URI.\n  overload: System.Xml.IXmlNamespaceResolver.LookupNamespace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)\n  commentId: M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)\n  id: LookupPrefix(System.String)\n  parent: System.Xml.IXmlNamespaceResolver\n  langs:\n  - csharp\n  name: LookupPrefix(String)\n  nameWithType: IXmlNamespaceResolver.LookupPrefix(String)\n  fullName: IXmlNamespaceResolver.LookupPrefix(String)\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets the prefix that is mapped to the specified namespace URI.\n  remarks: \"It is possible for a namespace URI to be mapped to multiple prefixes. Because the prefixes are not mapped in a predictable manner, you should not depend on getting back a particular prefix when a namespace URI is mapped to more than one prefix.  \\n  \\n> [!NOTE]\\n>  Namespace URI to prefix mappings can change from node to node in an XML document. You cannot depend on the result of a lookup being consistent from one node to the next.  \\n  \\n The following table describes how the default and built-in namespaces are handled by the <xref:System.Xml.IXmlNamespaceResolver.LookupPrefix%2A> method.  \\n  \\n|Namespace|Return value|  \\n|---------------|------------------|  \\n|http://www.w3.org/XML/1998/namespace|xml|  \\n|http://www.w3.org/2000/xmlns/|xmlns|  \\n|An empty namespace.|A default namespace that has not been defined.|\"\n  syntax:\n    content: public string LookupPrefix (string namespaceName);\n    parameters:\n    - id: namespaceName\n      type: System.String\n      description: The namespace URI whose prefix you wish to find.\n    return:\n      type: System.String\n      description: The prefix that is mapped to the namespace URI; `null` if the namespace URI is not mapped to a prefix.\n  overload: System.Xml.IXmlNamespaceResolver.LookupPrefix*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)\n  parent: System.Xml.IXmlNamespaceResolver\n  isExternal: false\n  name: GetNamespacesInScope(XmlNamespaceScope)\n  nameWithType: IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)\n  fullName: IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.XmlNamespaceScope\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamespaceScope\n  nameWithType: XmlNamespaceScope\n  fullName: System.Xml.XmlNamespaceScope\n- uid: System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)\n  parent: System.Xml.IXmlNamespaceResolver\n  isExternal: false\n  name: LookupNamespace(String)\n  nameWithType: IXmlNamespaceResolver.LookupNamespace(String)\n  fullName: IXmlNamespaceResolver.LookupNamespace(String)\n- uid: System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)\n  parent: System.Xml.IXmlNamespaceResolver\n  isExternal: false\n  name: LookupPrefix(String)\n  nameWithType: IXmlNamespaceResolver.LookupPrefix(String)\n  fullName: IXmlNamespaceResolver.LookupPrefix(String)\n- uid: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope*\n  parent: System.Xml.IXmlNamespaceResolver\n  isExternal: false\n  name: GetNamespacesInScope\n  nameWithType: IXmlNamespaceResolver.GetNamespacesInScope\n  fullName: IXmlNamespaceResolver.GetNamespacesInScope\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n- uid: System.Xml.IXmlNamespaceResolver.LookupNamespace*\n  parent: System.Xml.IXmlNamespaceResolver\n  isExternal: false\n  name: LookupNamespace\n  nameWithType: IXmlNamespaceResolver.LookupNamespace\n  fullName: IXmlNamespaceResolver.LookupNamespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n- uid: System.Xml.IXmlNamespaceResolver.LookupPrefix*\n  parent: System.Xml.IXmlNamespaceResolver\n  isExternal: false\n  name: LookupPrefix\n  nameWithType: IXmlNamespaceResolver.LookupPrefix\n  fullName: IXmlNamespaceResolver.LookupPrefix\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/IXmlNamespaceResolver.xml\n"}