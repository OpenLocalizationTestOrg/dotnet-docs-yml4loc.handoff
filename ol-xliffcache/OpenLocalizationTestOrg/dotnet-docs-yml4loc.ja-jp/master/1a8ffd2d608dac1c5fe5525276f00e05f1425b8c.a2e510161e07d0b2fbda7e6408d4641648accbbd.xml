{"nodes":[{"content":"Enables serialization of custom exception data in security-transparent code.","nodes":[{"pos":[0,76],"content":"Enables serialization of custom exception data in security-transparent code.","nodes":[{"content":"Enables serialization of custom exception data in security-transparent code.","pos":[0,76]}]}],"pos":[585,662],"yaml":true},{"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the <xref:System.Runtime.Serialization.ISafeSerializationData> interface and add custom data as shown in the example below.  \n  \n The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data.","nodes":[{"pos":[0,527],"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the <xref:System.Runtime.Serialization.ISafeSerializationData> interface and add custom data as shown in the example below.","nodes":[{"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the <xref:System.Runtime.Serialization.ISafeSerializationData> interface and add custom data as shown in the example below.","pos":[0,527],"nodes":[{"content":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <ph id=\"ph1\">&lt;xref:System.Exception.GetObjectData%2A&gt;</ph> method.","pos":[0,183],"source":"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method."},{"content":"Starting with .NET Framework 4.0, that method is marked with the <ph id=\"ph1\">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> attribute which prevents execution in security-transparent code.","pos":[184,362],"source":" Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code."},{"content":"To work around this condition, implement the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISafeSerializationData&gt;</ph> interface and add custom data as shown in the example below.","pos":[363,527],"source":" To work around this condition, implement the <xref:System.Runtime.Serialization.ISafeSerializationData> interface and add custom data as shown in the example below."}]}]},{"pos":[534,765],"content":"The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A&gt;</ph> method is called after serialization, and uses the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ph> to restore the custom data.","pos":[0,231],"source":"The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data."}]}],"pos":[673,1443],"yaml":true,"extradata":"MT"},{"content":"This method is called when the instance is deserialized.","nodes":[{"pos":[0,56],"content":"This method is called when the instance is deserialized.","nodes":[{"content":"This method is called when the instance is deserialized.","pos":[0,56]}]}],"pos":[3356,3413],"yaml":true},{"content":"The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class.","nodes":[{"pos":[0,151],"content":"The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class.","nodes":[{"content":"The state object is stored in a private variable defined in the implementation of the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISafeSerializationData&gt;</ph> class.","pos":[0,151],"source":"The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class."}]}],"pos":[3424,3576],"yaml":true,"extradata":"MT"},{"content":"An object that contains the state of the instance.","nodes":[{"pos":[0,50],"content":"An object that contains the state of the instance.","nodes":[{"content":"An object that contains the state of the instance.","pos":[0,50]}]}],"pos":[4098,4149],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.ISafeSerializationData\n  commentId: T:System.Runtime.Serialization.ISafeSerializationData\n  id: ISafeSerializationData\n  children:\n  - System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  langs:\n  - csharp\n  name: ISafeSerializationData\n  nameWithType: ISafeSerializationData\n  fullName: System.Runtime.Serialization.ISafeSerializationData\n  type: Interface\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.Serialization\n  summary: Enables serialization of custom exception data in security-transparent code.\n  remarks: \"In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the <xref:System.Exception.GetObjectData%2A> method. Starting with .NET Framework 4.0, that method is marked with the <xref:System.Security.SecurityCriticalAttribute> attribute which prevents execution in security-transparent code. To work around this condition, implement the <xref:System.Runtime.Serialization.ISafeSerializationData> interface and add custom data as shown in the example below.  \\n  \\n The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> method is called after serialization, and uses the <xref:System.Runtime.Serialization.SafeSerializationEventArgs> to restore the custom data.\"\n  example:\n  - \"The following example contains an implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> interface that is used to store custom data that is serialized.  \\n  \\n [!code-csharp[ISafeSerializationData#1](~/samples/snippets/csharp/VS_Snippets_CFX/isafeserializationdata/cs/source.cs#1)]\\n [!code-vb[ISafeSerializationData#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/isafeserializationdata/vb/source.vb#1)]\"\n  syntax:\n    content: public interface ISafeSerializationData\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ISafeSerializationData.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  commentId: M:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  id: CompleteDeserialization(System.Object)\n  parent: System.Runtime.Serialization.ISafeSerializationData\n  langs:\n  - csharp\n  name: CompleteDeserialization(Object)\n  nameWithType: ISafeSerializationData.CompleteDeserialization(Object)\n  fullName: ISafeSerializationData.CompleteDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.Serialization\n  summary: This method is called when the instance is deserialized.\n  remarks: The state object is stored in a private variable defined in the implementation of the <xref:System.Runtime.Serialization.ISafeSerializationData> class.\n  example:\n  - \"The following example restores the state of the exception after being deserialized.  \\n  \\n [!code-csharp[ISafeSerializationData#2](~/samples/snippets/csharp/VS_Snippets_CFX/isafeserializationdata/cs/source.cs#2)]\\n [!code-vb[ISafeSerializationData#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/isafeserializationdata/vb/source.vb#2)]\"\n  syntax:\n    content: public void CompleteDeserialization (object deserialized);\n    parameters:\n    - id: deserialized\n      type: System.Object\n      description: An object that contains the state of the instance.\n  overload: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ISafeSerializationData.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization(System.Object)\n  parent: System.Runtime.Serialization.ISafeSerializationData\n  isExternal: false\n  name: CompleteDeserialization(Object)\n  nameWithType: ISafeSerializationData.CompleteDeserialization(Object)\n  fullName: ISafeSerializationData.CompleteDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization*\n  parent: System.Runtime.Serialization.ISafeSerializationData\n  isExternal: false\n  name: CompleteDeserialization\n  nameWithType: ISafeSerializationData.CompleteDeserialization\n  fullName: ISafeSerializationData.CompleteDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ISafeSerializationData.xml\n"}