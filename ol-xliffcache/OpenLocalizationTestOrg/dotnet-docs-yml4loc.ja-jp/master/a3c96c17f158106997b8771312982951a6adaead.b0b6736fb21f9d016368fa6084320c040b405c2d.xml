{"nodes":[{"content":"Represents the exception that is thrown when a requested event log (usually specified by the name of the event log or the path to the event log file) does not exist.","nodes":[{"pos":[0,165],"content":"Represents the exception that is thrown when a requested event log (usually specified by the name of the event log or the path to the event log file) does not exist.","nodes":[{"content":"Represents the exception that is thrown when a requested event log (usually specified by the name of the event log or the path to the event log file) does not exist.","pos":[0,165]}]}],"pos":[921,1087],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class."}],"pos":[3425,3548],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class by specifying the error message that describes the current exception.","nodes":[{"pos":[0,191],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"&gt;&lt;/xref&gt;</ph> class by specifying the error message that describes the current exception.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class by specifying the error message that describes the current exception."}],"pos":[4870,5062],"yaml":true},{"content":"The error message that describes the current exception.","nodes":[{"pos":[0,55],"content":"The error message that describes the current exception.","nodes":[{"content":"The error message that describes the current exception.","pos":[0,55]}]}],"pos":[5215,5271],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class with serialized data.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class with serialized data."}],"pos":[6838,6982],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception thrown.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that holds the serialized object data about the exception thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception thrown."}],"pos":[7295,7440],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination."}],"pos":[7544,7692],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class with an error message and inner exception.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"&gt;&lt;/xref&gt;</ph> class with an error message and inner exception.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class with an error message and inner exception."}],"pos":[9019,9184],"yaml":true},{"content":"The error message that describes the current exception.","nodes":[{"pos":[0,55],"content":"The error message that describes the current exception.","nodes":[{"content":"The error message that describes the current exception.","pos":[0,55]}]}],"pos":[9363,9419],"yaml":true},{"content":"The Exception instance that caused the current exception.","nodes":[{"pos":[0,57],"content":"The Exception instance that caused the current exception.","nodes":[{"content":"The Exception instance that caused the current exception.","pos":[0,57]}]}],"pos":[9492,9550],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  commentId: T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  id: EventLogNotFoundException\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor\n  - System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: EventLogNotFoundException\n  nameWithType: EventLogNotFoundException\n  fullName: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Represents the exception that is thrown when a requested event log (usually specified by the name of the event log or the path to the event log file) does not exist.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'\n  syntax:\n    content: 'public class EventLogNotFoundException : System.Diagnostics.Eventing.Reader.EventLogException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.Diagnostics.Eventing.Reader.EventLogException\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Diagnostics.Eventing.Reader.EventLogException.Message\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  langs:\n  - csharp\n  name: EventLogNotFoundException()\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException()\n  fullName: EventLogNotFoundException.EventLogNotFoundException()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class.\n  syntax:\n    content: public EventLogNotFoundException ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  langs:\n  - csharp\n  name: EventLogNotFoundException(String)\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException(String)\n  fullName: EventLogNotFoundException.EventLogNotFoundException(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class by specifying the error message that describes the current exception.\n  syntax:\n    content: public EventLogNotFoundException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that describes the current exception.\n  overload: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  langs:\n  - csharp\n  name: EventLogNotFoundException(SerializationInfo, StreamingContext)\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException(SerializationInfo, StreamingContext)\n  fullName: EventLogNotFoundException.EventLogNotFoundException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class with serialized data.\n  syntax:\n    content: protected EventLogNotFoundException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);\n    parameters:\n    - id: serializationInfo\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that holds the serialized object data about the exception thrown.\n    - id: streamingContext\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination.\n  overload: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  langs:\n  - csharp\n  name: EventLogNotFoundException(String, Exception)\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException(String, Exception)\n  fullName: EventLogNotFoundException.EventLogNotFoundException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Eventing.Reader.EventLogNotFoundException\"></xref> class with an error message and inner exception.\n  syntax:\n    content: public EventLogNotFoundException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that describes the current exception.\n    - id: innerException\n      type: System.Exception\n      description: The Exception instance that caused the current exception.\n  overload: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\nreferences:\n- uid: System.Diagnostics.Eventing.Reader.EventLogException\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogException\n  nameWithType: EventLogException\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  isExternal: false\n  name: EventLogNotFoundException()\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException()\n  fullName: EventLogNotFoundException.EventLogNotFoundException()\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  isExternal: false\n  name: EventLogNotFoundException(String)\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException(String)\n  fullName: EventLogNotFoundException.EventLogNotFoundException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  isExternal: false\n  name: EventLogNotFoundException(SerializationInfo, StreamingContext)\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException(SerializationInfo, StreamingContext)\n  fullName: EventLogNotFoundException.EventLogNotFoundException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  isExternal: false\n  name: EventLogNotFoundException(String, Exception)\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException(String, Exception)\n  fullName: EventLogNotFoundException.EventLogNotFoundException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor*\n  parent: System.Diagnostics.Eventing.Reader.EventLogNotFoundException\n  isExternal: false\n  name: EventLogNotFoundException\n  nameWithType: EventLogNotFoundException.EventLogNotFoundException\n  fullName: EventLogNotFoundException.EventLogNotFoundException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogNotFoundException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: EventLogException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: EventLogException.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: Message\n  nameWithType: EventLogException.Message\n  fullName: EventLogException.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}