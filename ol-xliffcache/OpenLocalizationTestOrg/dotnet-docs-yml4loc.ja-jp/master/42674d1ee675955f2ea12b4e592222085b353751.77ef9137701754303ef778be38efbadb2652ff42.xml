{"nodes":[{"content":"Directs tracing or debugging output to a <xref href=\"System.IO.TextWriter\"></xref> or to a <xref href=\"System.IO.Stream\"></xref>, such as <xref href=\"System.IO.FileStream\"></xref>.","nodes":[{"pos":[0,180],"content":"Directs tracing or debugging output to a <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> or to a <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, such as <ph id=\"ph3\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph>.","source":"Directs tracing or debugging output to a <xref href=\"System.IO.TextWriter\"></xref> or to a <xref href=\"System.IO.Stream\"></xref>, such as <xref href=\"System.IO.FileStream\"></xref>."}],"pos":[1372,1553],"yaml":true},{"content":"The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.  \n  \n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \n  \n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \n  \n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \n  \n To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted like the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"myListener\"   \n          type=\"System.Diagnostics.TextWriterTraceListener\"   \n          initializeData=\"TextWriterOutput.log\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n> [!NOTE]\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","nodes":[{"pos":[0,218],"content":"The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> class provides the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph> property to get or set the text writer that receives the tracing or debugging output.","pos":[0,218],"source":"The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output."}]},{"pos":[226,752],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]},{"pos":[759,1269],"content":"This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.","nodes":[{"content":"This class also provides methods to <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph> so that it no longer receives tracing or debugging output, to <ph id=\"ph3\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Flush%2A&gt;</ph> the output buffer for the <ph id=\"ph4\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>, and to <ph id=\"ph5\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;</ph> a message to the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Writer%2A&gt;</ph>.","pos":[0,510],"source":"This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>."}]},{"pos":[1276,1478],"content":"You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","nodes":[{"content":"You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","pos":[0,202],"nodes":[{"content":"You must enable tracing or debugging to use a trace listener.","pos":[0,61]},{"content":"The following syntax is compiler specific.","pos":[62,104]},{"content":"If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.","pos":[105,202]}]}]},{"pos":[1488,1727],"content":"To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.","nodes":[{"content":"To enable debugging in C#, add the <ph id=\"ph1\">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id=\"ph2\">`#define DEBUG`</ph> to the top of your file.","pos":[0,163],"source":"To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:DEBUG=True`</ph> flag to the compiler command line.","pos":[164,239],"source":" In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line."}]},{"pos":[1737,1966],"content":"To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.","nodes":[{"content":"To enable tracing in C#, add the <ph id=\"ph1\">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id=\"ph2\">`#define TRACE`</ph> to the top of your file.","pos":[0,153],"source":"To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:TRACE=True`</ph> flag to the compiler command line.","pos":[154,229],"source":" In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line."}]},{"pos":[1973,2305],"content":"To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted like the following example.","nodes":[{"content":"To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted like the following example.","pos":[0,332],"nodes":[{"content":"To add a trace listener, edit the configuration file that corresponds to the name of your application.","pos":[0,102]},{"content":"Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.","pos":[103,261]},{"content":"The configuration file should be formatted like the following example.","pos":[262,332]}]}]},{"pos":[2705,2838],"content":"[!NOTE]\n If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","leadings":["","> "],"nodes":[{"content":"If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","pos":[9,131]}]}],"pos":[1564,4450],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with <xref href=\"System.IO.TextWriter\"></xref> as the output recipient.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with <ph id=\"ph2\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> as the output recipient.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with <xref href=\"System.IO.TextWriter\"></xref> as the output recipient."}],"pos":[9614,9790],"yaml":true},{"content":"This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output. Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\", or <xref:System.String.Empty?displayProperty=fullName>).","nodes":[{"pos":[0,270],"content":"This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output. Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\", or <xref:System.String.Empty?displayProperty=fullName>).","nodes":[{"content":"This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output. Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\", or <xref:System.String.Empty?displayProperty=fullName>).","pos":[0,270],"nodes":[{"content":"This constructor uses the <ph id=\"ph1\">&lt;xref:System.IO.TextWriter&gt;</ph> stream as the recipient of the tracing or debugging output.","pos":[0,113],"source":"This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is initialized to an empty string (\"\", or <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>).","pos":[114,270],"source":" Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\", or <xref:System.String.Empty?displayProperty=fullName>)."}]}]}],"pos":[9801,10072],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class, using the stream as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class, using the stream as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class, using the stream as the recipient of the debugging and tracing output."}],"pos":[12695,12871],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"pos":[0,114],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]}],"pos":[12882,12997],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that represents the stream the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> writes to.","source":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to."}],"pos":[14134,14280],"yaml":true},{"content":"The stream is `null`.","nodes":[{"pos":[0,21],"content":"The stream is <ph id=\"ph1\">`null`</ph>.","source":"The stream is `null`."}],"pos":[14458,14480],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class using the specified writer as recipient of the tracing or debugging output.","nodes":[{"pos":[0,179],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class using the specified writer as recipient of the tracing or debugging output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class using the specified writer as recipient of the tracing or debugging output."}],"pos":[15896,16076],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"pos":[0,114],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]}],"pos":[16087,16202],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref>.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> that receives the output from the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref>."}],"pos":[17581,17724],"yaml":true},{"content":"The writer is `null`.","nodes":[{"pos":[0,21],"content":"The writer is <ph id=\"ph1\">`null`</ph>.","source":"The writer is `null`."}],"pos":[17902,17924],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class, using the file as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class, using the file as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class, using the file as the recipient of the debugging and tracing output."}],"pos":[19307,19481],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"pos":[0,114],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]}],"pos":[19492,19607],"yaml":true,"extradata":"MT"},{"content":"The name of the file the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.","nodes":[{"pos":[0,99],"content":"The name of the file the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> writes to.","source":"The name of the file the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to."}],"pos":[20730,20830],"yaml":true},{"content":"The file is `null`.","nodes":[{"pos":[0,19],"content":"The file is <ph id=\"ph1\">`null`</ph>.","source":"The file is `null`."}],"pos":[21008,21028],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the stream as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,199],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with the specified name, using the stream as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the stream as the recipient of the debugging and tracing output."}],"pos":[22422,22622],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (\"\"), if the `name` parameter is `null`.","nodes":[{"pos":[0,176],"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the <ph id=\"ph2\">`name`</ph> parameter or to an empty string (\"\"), if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (\"\"), if the `name` parameter is `null`."}],"pos":[22633,22810],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.","nodes":[{"pos":[0,145],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that represents the stream the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> writes to.","source":"A <xref href=\"System.IO.Stream\"></xref> that represents the stream the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to."}],"pos":[23983,24129],"yaml":true},{"content":"The name of the new instance.","nodes":[{"pos":[0,29],"content":"The name of the new instance.","nodes":[{"content":"The name of the new instance.","pos":[0,29]}]}],"pos":[24189,24219],"yaml":true},{"content":"The stream is `null`.","nodes":[{"pos":[0,21],"content":"The stream is <ph id=\"ph1\">`null`</ph>.","source":"The stream is `null`."}],"pos":[24397,24419],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the specified writer as recipient of the tracing or debugging output.","nodes":[{"pos":[0,204],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with the specified name, using the specified writer as recipient of the tracing or debugging output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the specified writer as recipient of the tracing or debugging output."}],"pos":[25901,26106],"yaml":true},{"content":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref>.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> that receives the output from the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref>."}],"pos":[27484,27627],"yaml":true},{"content":"The name of the new instance.","nodes":[{"pos":[0,29],"content":"The name of the new instance.","nodes":[{"content":"The name of the new instance.","pos":[0,29]}]}],"pos":[27687,27717],"yaml":true},{"content":"The writer is `null`.","nodes":[{"pos":[0,21],"content":"The writer is <ph id=\"ph1\">`null`</ph>.","source":"The writer is `null`."}],"pos":[27895,27917],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the file as the recipient of the debugging and tracing output.","nodes":[{"pos":[0,197],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> class with the specified name, using the file as the recipient of the debugging and tracing output.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the file as the recipient of the debugging and tracing output."}],"pos":[29366,29564],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (\"\"), if the `name` parameter is `null`.","nodes":[{"pos":[0,176],"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the <ph id=\"ph2\">`name`</ph> parameter or to an empty string (\"\"), if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (\"\"), if the `name` parameter is `null`."}],"pos":[29575,29752],"yaml":true,"extradata":"MT"},{"content":"The name of the file the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.","nodes":[{"pos":[0,99],"content":"The name of the file the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> writes to.","source":"The name of the file the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to."}],"pos":[30912,31012],"yaml":true},{"content":"The name of the new instance.","nodes":[{"pos":[0,29],"content":"The name of the new instance.","nodes":[{"content":"The name of the new instance.","pos":[0,29]}]}],"pos":[31072,31102],"yaml":true},{"content":"The stream is `null`.","nodes":[{"pos":[0,21],"content":"The stream is <ph id=\"ph1\">`null`</ph>.","source":"The stream is `null`."}],"pos":[31280,31302],"yaml":true},{"content":"Closes the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> so that it no longer receives tracing or debugging output.","nodes":[{"pos":[0,140],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"&gt;&lt;/xref&gt;</ph> so that it no longer receives tracing or debugging output.","source":"Closes the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> so that it no longer receives tracing or debugging output."}],"pos":[32497,32638],"yaml":true},{"content":"Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.","nodes":[{"pos":[0,248],"content":"Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.","nodes":[{"content":"Calling a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Write%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A&gt;</ph> method after calling <ph id=\"ph3\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> automatically reopens the stream.","pos":[0,248],"source":"Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream."}]}],"pos":[32649,32898],"yaml":true,"extradata":"MT"},{"content":"Disposes this <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> object.","nodes":[{"pos":[0,85],"content":"Disposes this <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener\"&gt;&lt;/xref&gt;</ph> object.","source":"Disposes this <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> object."}],"pos":[35229,35315],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.","nodes":[{"pos":[0,232],"content":"Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener.Close%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> class to release the managed resources of a <ph id=\"ph3\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> object.","pos":[0,232],"source":"Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object."}]}],"pos":[35326,35559],"yaml":true,"extradata":"MT"},{"content":"`true` to release managed resources; if `false`, <xref href=\"System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\"></xref> has no effect.","nodes":[{"pos":[0,151],"content":"<ph id=\"ph1\">`true`</ph> to release managed resources; if <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\"&gt;&lt;/xref&gt;</ph> has no effect.","source":"`true` to release managed resources; if `false`, <xref href=\"System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\"></xref> has no effect."}],"pos":[35714,35868],"yaml":true},{"content":"Flushes the output buffer for the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref>.","nodes":[{"pos":[0,105],"content":"Flushes the output buffer for the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"&gt;&lt;/xref&gt;</ph>.","source":"Flushes the output buffer for the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref>."}],"pos":[37208,37314],"yaml":true},{"content":"Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref>.","nodes":[{"pos":[0,107],"content":"Writes a message to this instance's <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"&gt;&lt;/xref&gt;</ph>.","source":"Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref>."}],"pos":[39705,39813],"yaml":true},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[40829,40849],"yaml":true},{"content":"Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> followed by a line terminator. The default line terminator is a carriage return followed by a line feed (\\r\\n).","nodes":[{"pos":[0,218],"content":"Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> followed by a line terminator. The default line terminator is a carriage return followed by a line feed (\\r\\n).","nodes":[{"content":"Writes a message to this instance's <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"&gt;&lt;/xref&gt;</ph> followed by a line terminator.","pos":[0,137],"source":"Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> followed by a line terminator."},{"content":"The default line terminator is a carriage return followed by a line feed (\\r\\n).","pos":[138,218]}]}],"pos":[42274,42493],"yaml":true},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[43537,43557],"yaml":true},{"content":"Gets or sets the text writer that receives the tracing or debugging output.","nodes":[{"pos":[0,75],"content":"Gets or sets the text writer that receives the tracing or debugging output.","nodes":[{"content":"Gets or sets the text writer that receives the tracing or debugging output.","pos":[0,75]}]}],"pos":[44901,44977],"yaml":true},{"content":"A <xref href=\"System.IO.TextWriter\"></xref> that represents the writer that receives the tracing or debugging output.","nodes":[{"pos":[0,117],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> that represents the writer that receives the tracing or debugging output.","source":"A <xref href=\"System.IO.TextWriter\"></xref> that represents the writer that receives the tracing or debugging output."}],"pos":[45918,46036],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.TextWriterTraceListener\n  commentId: T:System.Diagnostics.TextWriterTraceListener\n  id: TextWriterTraceListener\n  children:\n  - System.Diagnostics.TextWriterTraceListener.#ctor\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)\n  - System.Diagnostics.TextWriterTraceListener.Close\n  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TextWriterTraceListener.Flush\n  - System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  - System.Diagnostics.TextWriterTraceListener.Writer\n  langs:\n  - csharp\n  name: TextWriterTraceListener\n  nameWithType: TextWriterTraceListener\n  fullName: System.Diagnostics.TextWriterTraceListener\n  type: Class\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Directs tracing or debugging output to a <xref href=\"System.IO.TextWriter\"></xref> or to a <xref href=\"System.IO.Stream\"></xref>, such as <xref href=\"System.IO.FileStream\"></xref>.\n  remarks: \"The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.  \\n  \\n This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.  \\n  \\n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \\n  \\n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \\n  \\n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \\n  \\n To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted like the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"myListener\\\"   \\n          type=\\\"System.Diagnostics.TextWriterTraceListener\\\"   \\n          initializeData=\\\"TextWriterOutput.log\\\" />  \\n        <remove name=\\\"Default\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n> [!NOTE]\\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.\"\n  example:\n  - \"The following example implements an instance of the <xref:System.Diagnostics.TextWriterTraceListener> class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. First the example creates a file for output. Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>. Then, the code outputs one line of text to the file. Finally, the example flushes the output buffer.  \\n  \\n After running this sample, you can open the `TestFile.txt` file to see the output.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public class TextWriterTraceListener : System.Diagnostics.TraceListener'\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceListener\n  derivedClasses:\n  - System.Diagnostics.ConsoleTraceListener\n  - System.Diagnostics.DelimitedListTraceListener\n  - System.Diagnostics.EventSchemaTraceListener\n  - System.Diagnostics.XmlWriterTraceListener\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.TraceListener.Attributes\n  - System.Diagnostics.TraceListener.Dispose\n  - System.Diagnostics.TraceListener.Fail(System.String)\n  - System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  - System.Diagnostics.TraceListener.Filter\n  - System.Diagnostics.TraceListener.GetSupportedAttributes\n  - System.Diagnostics.TraceListener.IndentLevel\n  - System.Diagnostics.TraceListener.IndentSize\n  - System.Diagnostics.TraceListener.IsThreadSafe\n  - System.Diagnostics.TraceListener.Name\n  - System.Diagnostics.TraceListener.NeedIndent\n  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  - System.Diagnostics.TraceListener.TraceOutputOptions\n  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  - System.Diagnostics.TraceListener.Write(System.Object)\n  - System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  - System.Diagnostics.TraceListener.Write(System.String,System.String)\n  - System.Diagnostics.TraceListener.WriteIndent\n  - System.Diagnostics.TraceListener.WriteLine(System.Object)\n  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener()\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener()\n  fullName: TextWriterTraceListener.TextWriterTraceListener()\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with <xref href=\"System.IO.TextWriter\"></xref> as the output recipient.\n  remarks: This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output. Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (\"\", or <xref:System.String.Empty?displayProperty=fullName>).\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor. It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>. It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]\"\n  syntax:\n    content: public TextWriterTraceListener ();\n    parameters: []\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener(Stream)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(Stream)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class, using the stream as the recipient of the debugging and tracing output.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstream.cs#1)]\\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstream.vb#1)]\"\n  syntax:\n    content: public TextWriterTraceListener (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that represents the stream the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The stream is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener(TextWriter)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(TextWriter)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class using the specified writer as recipient of the tracing or debugging output.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]\"\n  syntax:\n    content: public TextWriterTraceListener (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref>.\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The writer is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener(String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class, using the file as the recipient of the debugging and tracing output.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstring.cs#3)]\\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstring.vb#3)]\"\n  syntax:\n    content: public TextWriterTraceListener (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The file is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  id: '#ctor(System.IO.Stream,System.String)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener(Stream, String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream, String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(Stream, String)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the stream as the recipient of the debugging and tracing output.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (\"\"), if the `name` parameter is `null`.\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstreamname.cs#2)]\\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstreamname.vb#2)]\"\n  syntax:\n    content: public TextWriterTraceListener (System.IO.Stream stream, string name);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that represents the stream the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.\n    - id: name\n      type: System.String\n      description: The name of the new instance.\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The stream is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  id: '#ctor(System.IO.TextWriter,System.String)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener(TextWriter, String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter, String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(TextWriter, String)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the specified writer as recipient of the tracing or debugging output.\n  remarks: ''\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconwritername.cs#5)]\\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconwritername.vb#5)]\"\n  syntax:\n    content: public TextWriterTraceListener (System.IO.TextWriter writer, string name);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref href=\"System.IO.TextWriter\"></xref> that receives the output from the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref>.\n    - id: name\n      type: System.String\n      description: The name of the new instance.\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The writer is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: TextWriterTraceListener(String, String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String, String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(String, String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> class with the specified name, using the file as the recipient of the debugging and tracing output.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (\"\"), if the `name` parameter is `null`.\n  example:\n  - \"The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstringname.cs#4)]\\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstringname.vb#4)]\"\n  syntax:\n    content: public TextWriterTraceListener (string fileName, string name);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file the <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> writes to.\n    - id: name\n      type: System.String\n      description: The name of the new instance.\n  overload: System.Diagnostics.TextWriterTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The stream is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.Close\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Close\n  id: Close\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: TextWriterTraceListener.Close()\n  fullName: TextWriterTraceListener.Close()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: Closes the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> so that it no longer receives tracing or debugging output.\n  remarks: Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.\n  example:\n  - \"The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Diagnostics.TextWriterTraceListener.Close*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: TextWriterTraceListener.Dispose(Boolean)\n  fullName: TextWriterTraceListener.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Disposes this <xref href=\"System.Diagnostics.TextWriterTraceListener\"></xref> object.\n  remarks: Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release managed resources; if `false`, <xref href=\"System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\"></xref> has no effect.'\n  overload: System.Diagnostics.TextWriterTraceListener.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.Flush\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Flush\n  id: Flush\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: TextWriterTraceListener.Flush()\n  fullName: TextWriterTraceListener.Flush()\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Flushes the output buffer for the <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Diagnostics.TextWriterTraceListener.Flush*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: TextWriterTraceListener.Write(String)\n  fullName: TextWriterTraceListener.Write(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Write (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to write.\n  overload: System.Diagnostics.TextWriterTraceListener.Write*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  commentId: M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: WriteLine(String)\n  nameWithType: TextWriterTraceListener.WriteLine(String)\n  fullName: TextWriterTraceListener.WriteLine(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a message to this instance's <xref href=\"System.Diagnostics.TextWriterTraceListener.Writer\"></xref> followed by a line terminator. The default line terminator is a carriage return followed by a line feed (\\r\\n).\n  remarks: ''\n  example:\n  - \"The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteLine (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to write.\n  overload: System.Diagnostics.TextWriterTraceListener.WriteLine*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TextWriterTraceListener.Writer\n  commentId: P:System.Diagnostics.TextWriterTraceListener.Writer\n  id: Writer\n  parent: System.Diagnostics.TextWriterTraceListener\n  langs:\n  - csharp\n  name: Writer\n  nameWithType: TextWriterTraceListener.Writer\n  fullName: TextWriterTraceListener.Writer\n  type: Property\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets or sets the text writer that receives the tracing or debugging output.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.  \\n  \\n [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CS/source.cs#1)]\\n [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.IO.TextWriter Writer { get; set; }\n    return:\n      type: System.IO.TextWriter\n      description: A <xref href=\"System.IO.TextWriter\"></xref> that represents the writer that receives the tracing or debugging output.\n  overload: System.Diagnostics.TextWriterTraceListener.Writer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.TraceListener\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListener\n  nameWithType: TraceListener\n  fullName: System.Diagnostics.TraceListener\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener()\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener()\n  fullName: TextWriterTraceListener.TextWriterTraceListener()\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener(Stream)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener(TextWriter)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener(String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener(Stream, String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream, String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(Stream, String)\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener(TextWriter, String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter, String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(TextWriter, String)\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener(String, String)\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String, String)\n  fullName: TextWriterTraceListener.TextWriterTraceListener(String, String)\n- uid: System.Diagnostics.TextWriterTraceListener.Close\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Close()\n  nameWithType: TextWriterTraceListener.Close()\n  fullName: TextWriterTraceListener.Close()\n- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TextWriterTraceListener.Dispose(Boolean)\n  fullName: TextWriterTraceListener.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.TextWriterTraceListener.Flush\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Flush()\n  nameWithType: TextWriterTraceListener.Flush()\n  fullName: TextWriterTraceListener.Flush()\n- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Write(String)\n  nameWithType: TextWriterTraceListener.Write(String)\n  fullName: TextWriterTraceListener.Write(String)\n- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: TextWriterTraceListener.WriteLine(String)\n  fullName: TextWriterTraceListener.WriteLine(String)\n- uid: System.Diagnostics.TextWriterTraceListener.Writer\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Writer\n  nameWithType: TextWriterTraceListener.Writer\n  fullName: TextWriterTraceListener.Writer\n- uid: System.Diagnostics.TextWriterTraceListener.#ctor*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: TextWriterTraceListener\n  nameWithType: TextWriterTraceListener.TextWriterTraceListener\n  fullName: TextWriterTraceListener.TextWriterTraceListener\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Diagnostics.TextWriterTraceListener.Close*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Close\n  nameWithType: TextWriterTraceListener.Close\n  fullName: TextWriterTraceListener.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Diagnostics.TextWriterTraceListener.Dispose*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Dispose\n  nameWithType: TextWriterTraceListener.Dispose\n  fullName: TextWriterTraceListener.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Diagnostics.TextWriterTraceListener.Flush*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Flush\n  nameWithType: TextWriterTraceListener.Flush\n  fullName: TextWriterTraceListener.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Diagnostics.TextWriterTraceListener.Write*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Write\n  nameWithType: TextWriterTraceListener.Write\n  fullName: TextWriterTraceListener.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Diagnostics.TextWriterTraceListener.WriteLine*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: WriteLine\n  nameWithType: TextWriterTraceListener.WriteLine\n  fullName: TextWriterTraceListener.WriteLine\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Diagnostics.TextWriterTraceListener.Writer*\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Writer\n  nameWithType: TextWriterTraceListener.Writer\n  fullName: TextWriterTraceListener.Writer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TextWriterTraceListener.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Diagnostics.TraceListener.Attributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Attributes\n  nameWithType: TraceListener.Attributes\n  fullName: TraceListener.Attributes\n- uid: System.Diagnostics.TraceListener.Dispose\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Dispose()\n  nameWithType: TraceListener.Dispose()\n  fullName: TraceListener.Dispose()\n- uid: System.Diagnostics.TraceListener.Fail(System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Fail(String)\n  nameWithType: TraceListener.Fail(String)\n  fullName: TraceListener.Fail(String)\n- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Fail(String, String)\n  nameWithType: TraceListener.Fail(String, String)\n  fullName: TraceListener.Fail(String, String)\n- uid: System.Diagnostics.TraceListener.Filter\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Filter\n  nameWithType: TraceListener.Filter\n  fullName: TraceListener.Filter\n- uid: System.Diagnostics.TraceListener.GetSupportedAttributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: GetSupportedAttributes()\n  nameWithType: TraceListener.GetSupportedAttributes()\n  fullName: TraceListener.GetSupportedAttributes()\n- uid: System.Diagnostics.TraceListener.IndentLevel\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentLevel\n  nameWithType: TraceListener.IndentLevel\n  fullName: TraceListener.IndentLevel\n- uid: System.Diagnostics.TraceListener.IndentSize\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentSize\n  nameWithType: TraceListener.IndentSize\n  fullName: TraceListener.IndentSize\n- uid: System.Diagnostics.TraceListener.IsThreadSafe\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IsThreadSafe\n  nameWithType: TraceListener.IsThreadSafe\n  fullName: TraceListener.IsThreadSafe\n- uid: System.Diagnostics.TraceListener.Name\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Name\n  nameWithType: TraceListener.Name\n  fullName: TraceListener.Name\n- uid: System.Diagnostics.TraceListener.NeedIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: NeedIndent\n  nameWithType: TraceListener.NeedIndent\n  fullName: TraceListener.NeedIndent\n- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  nameWithType: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: TraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n- uid: System.Diagnostics.TraceListener.TraceOutputOptions\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceOutputOptions\n  nameWithType: TraceListener.TraceOutputOptions\n  fullName: TraceListener.TraceOutputOptions\n- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  nameWithType: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  fullName: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n- uid: System.Diagnostics.TraceListener.Write(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object)\n  nameWithType: TraceListener.Write(Object)\n  fullName: TraceListener.Write(Object)\n- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object, String)\n  nameWithType: TraceListener.Write(Object, String)\n  fullName: TraceListener.Write(Object, String)\n- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(String, String)\n  nameWithType: TraceListener.Write(String, String)\n  fullName: TraceListener.Write(String, String)\n- uid: System.Diagnostics.TraceListener.WriteIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteIndent()\n  nameWithType: TraceListener.WriteIndent()\n  fullName: TraceListener.WriteIndent()\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object)\n  nameWithType: TraceListener.WriteLine(Object)\n  fullName: TraceListener.WriteLine(Object)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object, String)\n  nameWithType: TraceListener.WriteLine(Object, String)\n  fullName: TraceListener.WriteLine(Object, String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(String, String)\n  nameWithType: TraceListener.WriteLine(String, String)\n  fullName: TraceListener.WriteLine(String, String)\n"}