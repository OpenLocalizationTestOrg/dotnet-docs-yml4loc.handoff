### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector
  commentId: T:System.ServiceModel.Dispatcher.IClientMessageInspector
  id: IClientMessageInspector
  children:
  - System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  - System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  langs:
  - csharp
  name: IClientMessageInspector
  nameWithType: IClientMessageInspector
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector
  type: Interface
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Defines a message inspector object that can be added to the <xref href="System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors"></xref> collection to view or modify messages.
  remarks: Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> interface and add it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object. For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>.
  example:
  - "The following code example shows an implementation that writes strings to the console when the implementation is called.  \n  \n [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]\n [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  \n  \n The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> to insert the client message inspector in the client endpoint.  \n  \n [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]\n [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  \n  \n Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.  \n  \n [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]"
  syntax:
    content: public interface IClientMessageInspector
  implements: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  commentId: M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  id: AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  name: AfterReceiveReply(Message, Object)
  nameWithType: IClientMessageInspector.AfterReceiveReply(Message, Object)
  fullName: IClientMessageInspector.AfterReceiveReply(Message, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.
  remarks: "Implement <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A> to inspect or modify a reply message after it has been received by the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object but before it is deserialized into objects that are returned to the client application.  \n  \n The `correlationState` is the object returned by the user when <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> is called for this message. The best practice is to make this a <xref:System.Guid?displayProperty=fullName> to ensure that no two `correlationState` objects are the same."
  example:
  - "The following code example shows an implementation that writes strings to the console when the implementation is called.  \n  \n [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]\n [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  \n  \n The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> to insert the client message inspector in the client endpoint.  \n  \n [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]\n [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  \n  \n Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.  \n  \n [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]"
  syntax:
    content: public void AfterReceiveReply (ref System.ServiceModel.Channels.Message reply, object correlationState);
    parameters:
    - id: reply
      type: System.ServiceModel.Channels.Message
      description: The message to be transformed into types and handed back to the client application.
    - id: correlationState
      type: System.Object
      description: Correlation state data.
  overload: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  commentId: M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  id: BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  name: BeforeSendRequest(Message, IClientChannel)
  nameWithType: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)
  fullName: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Enables inspection or modification of a message before a request message is sent to a service.
  remarks: Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> to inspect or modify a request message before it is sent.
  example:
  - "The following code example shows an implementation that writes strings to the console when the implementation is called.  \n  \n [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]\n [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  \n  \n The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> to insert the client message inspector in the client endpoint.  \n  \n [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]\n [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  \n  \n Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.  \n  \n [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]"
  syntax:
    content: public object BeforeSendRequest (ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel);
    parameters:
    - id: request
      type: System.ServiceModel.Channels.Message
      description: The message to be sent to the service.
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object channel.
    return:
      type: System.Object
      description: "The object that is returned as the <code>correlationState</code> argument of the <xref href=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\"></xref> method. This is `null` if no correlation state is used.  \n  \n The best practice is to make this a <xref href=\"System.Guid\"></xref> to ensure that no two <code>correlationState</code> objects are the same."
  overload: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: AfterReceiveReply(Message, Object)
  nameWithType: IClientMessageInspector.AfterReceiveReply(Message, Object)
  fullName: IClientMessageInspector.AfterReceiveReply(Message, Object)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: BeforeSendRequest(Message, IClientChannel)
  nameWithType: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)
  fullName: IClientMessageInspector.BeforeSendRequest(Message, IClientChannel)
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: false
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: AfterReceiveReply
  nameWithType: IClientMessageInspector.AfterReceiveReply
  fullName: IClientMessageInspector.AfterReceiveReply
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest*
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: BeforeSendRequest
  nameWithType: IClientMessageInspector.BeforeSendRequest
  fullName: IClientMessageInspector.BeforeSendRequest
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IClientMessageInspector.xml
