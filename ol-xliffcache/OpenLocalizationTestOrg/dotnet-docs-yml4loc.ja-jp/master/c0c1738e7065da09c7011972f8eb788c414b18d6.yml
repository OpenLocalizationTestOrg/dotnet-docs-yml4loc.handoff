### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  id: HttpClientHandler
  children:
  - System.Net.Http.HttpClientHandler.#ctor
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.ClientCertificates
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Properties
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  - System.Net.Http.HttpClientHandler.SslProtocols
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  langs:
  - csharp
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
  type: Class
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: The default message handler used by <xref href="System.Net.Http.HttpClient"></xref>.
  remarks: The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.
  example:
  - '[!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]'
  syntax:
    content: 'public class HttpClientHandler : System.Net.Http.HttpMessageHandler'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  derivedClasses:
  - System.Net.Http.WebRequestHandler
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpMessageHandler.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.#ctor
  commentId: M:System.Net.Http.HttpClientHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: HttpClientHandler()
  nameWithType: HttpClientHandler.HttpClientHandler()
  fullName: HttpClientHandler.HttpClientHandler()
  type: Constructor
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Creates an instance of a <xref href="System.Net.Http.HttpClientHandler"></xref> class.
  syntax:
    content: public HttpClientHandler ();
    parameters: []
  overload: System.Net.Http.HttpClientHandler.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  commentId: P:System.Net.Http.HttpClientHandler.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: HttpClientHandler.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler should follow redirection responses.
  remarks: "Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource. The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.  \n  \n If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.  \n  \n The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module."
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the if the handler should follow redirection responses; otherwise `false`. The default value is `true`.'
  overload: System.Net.Http.HttpClientHandler.AllowAutoRedirect*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  commentId: P:System.Net.Http.HttpClientHandler.AutomaticDecompression
  id: AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: HttpClientHandler.AutomaticDecompression
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.
  remarks: >-
    For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.


    For the .NET Core implementation of <xref:System.Net.Http> provided by the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/), the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.


    When the NuGet package (v4.1.0 and later) is used on the .NET Framework (Desktop), the default matches the .NET Core implementation of <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.
  syntax:
    content: public System.Net.DecompressionMethods AutomaticDecompression { get; set; }
    return:
      type: System.Net.DecompressionMethods
      description: The automatic decompression method used by the handler.
  overload: System.Net.Http.HttpClientHandler.AutomaticDecompression*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  commentId: P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: CheckCertificateRevocationList
  nameWithType: HttpClientHandler.CheckCertificateRevocationList
  fullName: HttpClientHandler.CheckCertificateRevocationList
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public bool CheckCertificateRevocationList { get; set; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  commentId: P:System.Net.Http.HttpClientHandler.ClientCertificateOptions
  id: ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: HttpClientHandler.ClientCertificateOptions
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.
  syntax:
    content: public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }
    return:
      type: System.Net.Http.ClientCertificateOption
      description: The collection of security certificates associated with this handler.
  overload: System.Net.Http.HttpClientHandler.ClientCertificateOptions*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.ClientCertificates
  commentId: P:System.Net.Http.HttpClientHandler.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: HttpClientHandler.ClientCertificates
  fullName: HttpClientHandler.ClientCertificates
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: ''
  overload: System.Net.Http.HttpClientHandler.ClientCertificates*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  commentId: P:System.Net.Http.HttpClientHandler.CookieContainer
  id: CookieContainer
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: HttpClientHandler.CookieContainer
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets the cookie container used to store server cookies by the handler.
  remarks: "The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.  \n  \n If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies. The user can set custom cookies before sending requests using this property. If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server. Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception."
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: The cookie container used to store server cookies by the handler.
  overload: System.Net.Http.HttpClientHandler.CookieContainer*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.Credentials
  commentId: P:System.Net.Http.HttpClientHandler.Credentials
  id: Credentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: HttpClientHandler.Credentials
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets authentication information used by this handler.
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: The authentication credentials associated with the handler. The default is `null`.
  overload: System.Net.Http.HttpClientHandler.Credentials*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  commentId: P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  id: DefaultProxyCredentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: DefaultProxyCredentials
  nameWithType: HttpClientHandler.DefaultProxyCredentials
  fullName: HttpClientHandler.DefaultProxyCredentials
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public System.Net.ICredentials DefaultProxyCredentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: ''
  overload: System.Net.Http.HttpClientHandler.DefaultProxyCredentials*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: HttpClientHandler.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Http.HttpClientHandler"></xref> and optionally disposes of the managed resources.
  remarks: "This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.'
  overload: System.Net.Http.HttpClientHandler.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  commentId: P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  id: MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: HttpClientHandler.MaxAutomaticRedirections
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets the maximum number of redirects that the handler follows.
  remarks: The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.
  syntax:
    content: public int MaxAutomaticRedirections { get; set; }
    return:
      type: System.Int32
      description: The maximum number of redirection responses that the handler follows. The default value is 50.
  overload: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  commentId: P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  id: MaxConnectionsPerServer
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxConnectionsPerServer
  nameWithType: HttpClientHandler.MaxConnectionsPerServer
  fullName: HttpClientHandler.MaxConnectionsPerServer
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public int MaxConnectionsPerServer { get; set; }
    return:
      type: System.Int32
      description: ''
  overload: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  commentId: P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  id: MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: HttpClientHandler.MaxRequestContentBufferSize
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets the maximum request content buffer size used by the handler.
  remarks: An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.
  syntax:
    content: public long MaxRequestContentBufferSize { get; set; }
    return:
      type: System.Int64
      description: The maximum request content buffer size in bytes. The default value is 2 gigabytes.
  overload: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  commentId: P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  id: MaxResponseHeadersLength
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxResponseHeadersLength
  nameWithType: HttpClientHandler.MaxResponseHeadersLength
  fullName: HttpClientHandler.MaxResponseHeadersLength
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public int MaxResponseHeadersLength { get; set; }
    return:
      type: System.Int32
      description: ''
  overload: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  commentId: P:System.Net.Http.HttpClientHandler.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: HttpClientHandler.PreAuthenticate
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler sends an Authorization header with the request.
  remarks: "After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property. The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.  \n  \n If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.  \n  \n With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server."
  syntax:
    content: public bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: '`true` for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, `false`. The default is `false`.'
  overload: System.Net.Http.HttpClientHandler.PreAuthenticate*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.Properties
  commentId: P:System.Net.Http.HttpClientHandler.Properties
  id: Properties
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Properties
  nameWithType: HttpClientHandler.Properties
  fullName: HttpClientHandler.Properties
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: ''
  overload: System.Net.Http.HttpClientHandler.Properties*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.Proxy
  commentId: P:System.Net.Http.HttpClientHandler.Proxy
  id: Proxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: HttpClientHandler.Proxy
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets proxy information used by the handler.
  remarks: "The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.  \n  \n The local computer or application config file may specify that a default proxy be used. If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\". So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:  \n  \n1.  The destination contains a flat name (no dots in the URL).  \n  \n2.  The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.  \n  \n3.  The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>)."
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: The proxy information used by the handler. The default value is `null`.
  overload: System.Net.Http.HttpClientHandler.Proxy*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Creates an instance of  <xref href="System.Net.Http.HttpResponseMessage"></xref> based on the information provided in the <xref href="System.Net.Http.HttpRequestMessage"></xref> as an operation that will not block.
  remarks: This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: The task object representing the asynchronous operation.
  overload: System.Net.Http.HttpClientHandler.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>request</code> was `null`.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  commentId: P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  id: ServerCertificateCustomValidationCallback
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: ServerCertificateCustomValidationCallback
  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback
  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public Func<System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool> ServerCertificateCustomValidationCallback { get; set; }
    return:
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}
      description: ''
  overload: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SslProtocols
  commentId: P:System.Net.Http.HttpClientHandler.SslProtocols
  id: SslProtocols
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SslProtocols
  nameWithType: HttpClientHandler.SslProtocols
  fullName: HttpClientHandler.SslProtocols
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  syntax:
    content: public System.Security.Authentication.SslProtocols SslProtocols { get; set; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: ''
  overload: System.Net.Http.HttpClientHandler.SslProtocols*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  commentId: P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  id: SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: HttpClientHandler.SupportsAutomaticDecompression
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports automatic response content decompression.
  syntax:
    content: public virtual bool SupportsAutomaticDecompression { get; }
    return:
      type: System.Boolean
      description: '`true` if the if the handler supports automatic response content decompression; otherwise `false`. The default value is `true`.'
  overload: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  commentId: P:System.Net.Http.HttpClientHandler.SupportsProxy
  id: SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: HttpClientHandler.SupportsProxy
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports proxy settings.
  syntax:
    content: public virtual bool SupportsProxy { get; }
    return:
      type: System.Boolean
      description: '`true` if the if the handler supports proxy settings; otherwise `false`. The default value is `true`.'
  overload: System.Net.Http.HttpClientHandler.SupportsProxy*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  commentId: P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  id: SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: HttpClientHandler.SupportsRedirectConfiguration
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports configuration settings for the <xref href="System.Net.Http.HttpClientHandler.AllowAutoRedirect"></xref> and <xref href="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections"></xref> properties.
  syntax:
    content: public virtual bool SupportsRedirectConfiguration { get; }
    return:
      type: System.Boolean
      description: '`true` if the if the handler supports configuration settings for the <xref href="System.Net.Http.HttpClientHandler.AllowAutoRedirect"></xref> and <xref href="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections"></xref> properties; otherwise `false`. The default value is `true`.'
  overload: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.UseCookies
  commentId: P:System.Net.Http.HttpClientHandler.UseCookies
  id: UseCookies
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: HttpClientHandler.UseCookies
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler uses the  <xref href="System.Net.Http.HttpClientHandler.CookieContainer"></xref> property  to store server cookies and uses these cookies when sending requests.
  syntax:
    content: public bool UseCookies { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the if the handler supports uses the  <xref href="System.Net.Http.HttpClientHandler.CookieContainer"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise `false`. The default value is `true`.'
  overload: System.Net.Http.HttpClientHandler.UseCookies*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  commentId: P:System.Net.Http.HttpClientHandler.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: HttpClientHandler.UseDefaultCredentials
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets a value that controls whether default credentials are sent with requests by the handler.
  remarks: Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the default credentials are used; otherwise `false`. The default value is `false`.'
  overload: System.Net.Http.HttpClientHandler.UseDefaultCredentials*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpClientHandler.UseProxy
  commentId: P:System.Net.Http.HttpClientHandler.UseProxy
  id: UseProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: HttpClientHandler.UseProxy
  type: Property
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler uses a proxy for requests.
  syntax:
    content: public bool UseProxy { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the handler should use a proxy for requests; otherwise `false`. The default value is `true`.'
  overload: System.Net.Http.HttpClientHandler.UseProxy*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Net.Http.HttpClientHandler.#ctor
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: HttpClientHandler()
  nameWithType: HttpClientHandler.HttpClientHandler()
  fullName: HttpClientHandler.HttpClientHandler()
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: HttpClientHandler.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: HttpClientHandler.AutomaticDecompression
- uid: System.Net.DecompressionMethods
  parent: System.Net
  isExternal: false
  name: DecompressionMethods
  nameWithType: DecompressionMethods
  fullName: System.Net.DecompressionMethods
- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: HttpClientHandler.CheckCertificateRevocationList
  fullName: HttpClientHandler.CheckCertificateRevocationList
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: HttpClientHandler.ClientCertificateOptions
- uid: System.Net.Http.ClientCertificateOption
  parent: System.Net.Http
  isExternal: false
  name: ClientCertificateOption
  nameWithType: ClientCertificateOption
  fullName: System.Net.Http.ClientCertificateOption
- uid: System.Net.Http.HttpClientHandler.ClientCertificates
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpClientHandler.ClientCertificates
  fullName: HttpClientHandler.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: HttpClientHandler.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: false
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.Http.HttpClientHandler.Credentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: HttpClientHandler.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: DefaultProxyCredentials
  nameWithType: HttpClientHandler.DefaultProxyCredentials
  fullName: HttpClientHandler.DefaultProxyCredentials
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: HttpClientHandler.Dispose(Boolean)
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: HttpClientHandler.MaxAutomaticRedirections
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxConnectionsPerServer
  nameWithType: HttpClientHandler.MaxConnectionsPerServer
  fullName: HttpClientHandler.MaxConnectionsPerServer
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: HttpClientHandler.MaxRequestContentBufferSize
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxResponseHeadersLength
  nameWithType: HttpClientHandler.MaxResponseHeadersLength
  fullName: HttpClientHandler.MaxResponseHeadersLength
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: HttpClientHandler.PreAuthenticate
- uid: System.Net.Http.HttpClientHandler.Properties
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Properties
  nameWithType: HttpClientHandler.Properties
  fullName: HttpClientHandler.Properties
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClientHandler.Proxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: HttpClientHandler.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: false
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Net.Http.HttpResponseMessage
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ServerCertificateCustomValidationCallback
  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback
  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback
- uid: System.Func`5
  name: Func<T1,T2,T3,T4,TResult>
  nameWithType: Func<T1,T2,T3,T4,TResult>
  fullName: System.Func<T1,T2,T3,T4,TResult>
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.X509Chain
  name: X509Chain
  nameWithType: X509Chain
  fullName: System.Security.Cryptography.X509Certificates.X509Chain
- uid: System.Net.Security.SslPolicyErrors
  name: SslPolicyErrors
  nameWithType: SslPolicyErrors
  fullName: System.Net.Security.SslPolicyErrors
- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}
  parent: System
  isExternal: false
  name: Func<HttpRequestMessage,X509Certificate2,X509Chain,SslPolicyErrors,Boolean>
  nameWithType: Func<HttpRequestMessage,X509Certificate2,X509Chain,SslPolicyErrors,Boolean>
  fullName: System.Func<System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean>
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.Cryptography.X509Certificates.X509Chain
    name: X509Chain
    nameWithType: X509Chain
    fullName: System.Security.Cryptography.X509Certificates.X509Chain
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Net.Security.SslPolicyErrors
    name: SslPolicyErrors
    nameWithType: SslPolicyErrors
    fullName: System.Net.Security.SslPolicyErrors
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClientHandler.SslProtocols
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SslProtocols
  nameWithType: HttpClientHandler.SslProtocols
  fullName: HttpClientHandler.SslProtocols
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: false
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: HttpClientHandler.SupportsAutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: HttpClientHandler.SupportsProxy
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: HttpClientHandler.SupportsRedirectConfiguration
- uid: System.Net.Http.HttpClientHandler.UseCookies
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: HttpClientHandler.UseCookies
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: HttpClientHandler.UseDefaultCredentials
- uid: System.Net.Http.HttpClientHandler.UseProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: HttpClientHandler.UseProxy
- uid: System.Net.Http.HttpClientHandler.#ctor*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: HttpClientHandler
  nameWithType: HttpClientHandler.HttpClientHandler
  fullName: HttpClientHandler.HttpClientHandler
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: HttpClientHandler.AllowAutoRedirect
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: HttpClientHandler.AutomaticDecompression
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: HttpClientHandler.CheckCertificateRevocationList
  fullName: HttpClientHandler.CheckCertificateRevocationList
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: HttpClientHandler.ClientCertificateOptions
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.ClientCertificates*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpClientHandler.ClientCertificates
  fullName: HttpClientHandler.ClientCertificates
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.CookieContainer*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: HttpClientHandler.CookieContainer
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.Credentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: HttpClientHandler.Credentials
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: DefaultProxyCredentials
  nameWithType: HttpClientHandler.DefaultProxyCredentials
  fullName: HttpClientHandler.DefaultProxyCredentials
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.Dispose*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose
  nameWithType: HttpClientHandler.Dispose
  fullName: HttpClientHandler.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: HttpClientHandler.MaxAutomaticRedirections
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxConnectionsPerServer
  nameWithType: HttpClientHandler.MaxConnectionsPerServer
  fullName: HttpClientHandler.MaxConnectionsPerServer
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: HttpClientHandler.MaxRequestContentBufferSize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxResponseHeadersLength
  nameWithType: HttpClientHandler.MaxResponseHeadersLength
  fullName: HttpClientHandler.MaxResponseHeadersLength
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: HttpClientHandler.PreAuthenticate
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.Properties*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Properties
  nameWithType: HttpClientHandler.Properties
  fullName: HttpClientHandler.Properties
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.Proxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: HttpClientHandler.Proxy
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SendAsync*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync
  nameWithType: HttpClientHandler.SendAsync
  fullName: HttpClientHandler.SendAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ServerCertificateCustomValidationCallback
  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback
  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SslProtocols*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SslProtocols
  nameWithType: HttpClientHandler.SslProtocols
  fullName: HttpClientHandler.SslProtocols
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: HttpClientHandler.SupportsAutomaticDecompression
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SupportsProxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: HttpClientHandler.SupportsProxy
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: HttpClientHandler.SupportsRedirectConfiguration
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.UseCookies*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: HttpClientHandler.UseCookies
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: HttpClientHandler.UseDefaultCredentials
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Net.Http.HttpClientHandler.UseProxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: HttpClientHandler.UseProxy
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: Dispose()
  nameWithType: HttpMessageHandler.Dispose()
  fullName: HttpMessageHandler.Dispose()
