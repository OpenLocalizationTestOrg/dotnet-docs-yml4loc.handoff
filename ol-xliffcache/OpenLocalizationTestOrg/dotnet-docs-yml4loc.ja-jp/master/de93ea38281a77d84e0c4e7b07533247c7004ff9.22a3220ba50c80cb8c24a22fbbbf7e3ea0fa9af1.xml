{"nodes":[{"content":"Provides data for the event that is raised when a faulted <xref href=\"System.Threading.Tasks.Task\"></xref>'s exception goes unobserved.","nodes":[{"pos":[0,135],"content":"Provides data for the event that is raised when a faulted <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph>'s exception goes unobserved.","source":"Provides data for the event that is raised when a faulted <xref href=\"System.Threading.Tasks.Task\"></xref>'s exception goes unobserved."}],"pos":[853,989],"yaml":true},{"content":"The Exception property is used to examine the exception without marking it as observed, whereas the <xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A> method is used to mark the exception as observed. Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.","nodes":[{"pos":[0,360],"content":"The Exception property is used to examine the exception without marking it as observed, whereas the <xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A> method is used to mark the exception as observed. Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.","nodes":[{"content":"The Exception property is used to examine the exception without marking it as observed, whereas the <xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A> method is used to mark the exception as observed. Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.","pos":[0,360],"nodes":[{"content":"The Exception property is used to examine the exception without marking it as observed, whereas the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A&gt;</ph> method is used to mark the exception as observed.","pos":[0,227],"source":"The Exception property is used to examine the exception without marking it as observed, whereas the <xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A> method is used to mark the exception as observed."},{"content":"Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.","pos":[228,360]}]}]}],"pos":[1000,1361],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs\"></xref> class with the unobserved exception.","nodes":[{"pos":[0,147],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs\"&gt;&lt;/xref&gt;</ph> class with the unobserved exception.","source":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs\"></xref> class with the unobserved exception."}],"pos":[3636,3784],"yaml":true},{"content":"The Exception that has gone unobserved.","nodes":[{"pos":[0,39],"content":"The Exception that has gone unobserved.","nodes":[{"content":"The Exception that has gone unobserved.","pos":[0,39]}]}],"pos":[3972,4012],"yaml":true},{"content":"The Exception that went unobserved.","nodes":[{"pos":[0,35],"content":"The Exception that went unobserved.","nodes":[{"content":"The Exception that went unobserved.","pos":[0,35]}]}],"pos":[5701,5737],"yaml":true},{"content":"The Exception that went unobserved.","nodes":[{"pos":[0,35],"content":"The Exception that went unobserved.","nodes":[{"content":"The Exception that went unobserved.","pos":[0,35]}]}],"pos":[5874,5910],"yaml":true},{"content":"Gets whether this exception has been marked as \"observed.\"","nodes":[{"pos":[0,58],"content":"Gets whether this exception has been marked as \"observed.\"","nodes":[{"content":"Gets whether this exception has been marked as \"observed.\"","pos":[0,58]}]}],"pos":[7597,7656],"yaml":true},{"content":"true if this exception has been marked as \"observed\"; otherwise false.","nodes":[{"pos":[0,70],"content":"true if this exception has been marked as \"observed\"; otherwise false.","nodes":[{"content":"true if this exception has been marked as \"observed\"; otherwise false.","pos":[0,70]}]}],"pos":[7767,7838],"yaml":true},{"content":"Marks the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\"></xref> as \"observed,\" thus preventing it from triggering exception escalation policy which, by default, terminates the process.","nodes":[{"pos":[0,217],"content":"Marks the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\"&gt;&lt;/xref&gt;</ph> as \"observed,\" thus preventing it from triggering exception escalation policy which, by default, terminates the process.","source":"Marks the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\"></xref> as \"observed,\" thus preventing it from triggering exception escalation policy which, by default, terminates the process."}],"pos":[9546,9764],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  commentId: T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  id: UnobservedTaskExceptionEventArgs\n  children:\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  langs:\n  - csharp\n  name: UnobservedTaskExceptionEventArgs\n  nameWithType: UnobservedTaskExceptionEventArgs\n  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  type: Class\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading.Tasks\n  summary: Provides data for the event that is raised when a faulted <xref href=\"System.Threading.Tasks.Task\"></xref>'s exception goes unobserved.\n  remarks: The Exception property is used to examine the exception without marking it as observed, whereas the <xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A> method is used to mark the exception as observed. Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.\n  syntax:\n    content: 'public class UnobservedTaskExceptionEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  commentId: M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  id: '#ctor(System.AggregateException)'\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  name: UnobservedTaskExceptionEventArgs(AggregateException)\n  nameWithType: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(AggregateException)\n  fullName: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(AggregateException)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading.Tasks\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs\"></xref> class with the unobserved exception.\n  syntax:\n    content: public UnobservedTaskExceptionEventArgs (AggregateException exception);\n    parameters:\n    - id: exception\n      type: System.AggregateException\n      description: The Exception that has gone unobserved.\n  overload: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  commentId: P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  id: Exception\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: UnobservedTaskExceptionEventArgs.Exception\n  fullName: UnobservedTaskExceptionEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading.Tasks\n  summary: The Exception that went unobserved.\n  syntax:\n    content: public AggregateException Exception { get; }\n    return:\n      type: System.AggregateException\n      description: The Exception that went unobserved.\n  overload: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  commentId: P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  id: Observed\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  name: Observed\n  nameWithType: UnobservedTaskExceptionEventArgs.Observed\n  fullName: UnobservedTaskExceptionEventArgs.Observed\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading.Tasks\n  summary: Gets whether this exception has been marked as \"observed.\"\n  syntax:\n    content: public bool Observed { get; }\n    return:\n      type: System.Boolean\n      description: true if this exception has been marked as \"observed\"; otherwise false.\n  overload: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  commentId: M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  id: SetObserved\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  name: SetObserved()\n  nameWithType: UnobservedTaskExceptionEventArgs.SetObserved()\n  fullName: UnobservedTaskExceptionEventArgs.SetObserved()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Threading.Tasks\n  summary: Marks the <xref href=\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\"></xref> as \"observed,\" thus preventing it from triggering exception escalation policy which, by default, terminates the process.\n  syntax:\n    content: public void SetObserved ();\n    parameters: []\n  overload: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: UnobservedTaskExceptionEventArgs(AggregateException)\n  nameWithType: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(AggregateException)\n  fullName: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(AggregateException)\n- uid: System.AggregateException\n  parent: System\n  isExternal: false\n  name: AggregateException\n  nameWithType: AggregateException\n  fullName: System.AggregateException\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: UnobservedTaskExceptionEventArgs.Exception\n  fullName: UnobservedTaskExceptionEventArgs.Exception\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: Observed\n  nameWithType: UnobservedTaskExceptionEventArgs.Observed\n  fullName: UnobservedTaskExceptionEventArgs.Observed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: SetObserved()\n  nameWithType: UnobservedTaskExceptionEventArgs.SetObserved()\n  fullName: UnobservedTaskExceptionEventArgs.SetObserved()\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor*\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: UnobservedTaskExceptionEventArgs\n  nameWithType: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs\n  fullName: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception*\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: UnobservedTaskExceptionEventArgs.Exception\n  fullName: UnobservedTaskExceptionEventArgs.Exception\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed*\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: Observed\n  nameWithType: UnobservedTaskExceptionEventArgs.Observed\n  fullName: UnobservedTaskExceptionEventArgs.Observed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved*\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  isExternal: false\n  name: SetObserved\n  nameWithType: UnobservedTaskExceptionEventArgs.SetObserved\n  fullName: UnobservedTaskExceptionEventArgs.SetObserved\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/UnobservedTaskExceptionEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}