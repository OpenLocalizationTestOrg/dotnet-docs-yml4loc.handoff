{"nodes":[{"content":"Specifies the key derivation function that the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"></xref> class will use to convert secret agreements into key material.","nodes":[{"pos":[0,178],"content":"Specifies the key derivation function that the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"&gt;&lt;/xref&gt;</ph> class will use to convert secret agreements into key material.","source":"Specifies the key derivation function that the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"></xref> class will use to convert secret agreements into key material."}],"pos":[761,940],"yaml":true},{"content":"The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.  \n  \n The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.","nodes":[{"pos":[0,476],"content":"The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.","nodes":[{"content":"The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.","pos":[0,476],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&gt;</ph> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material.","pos":[0,191],"source":"The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material."},{"content":"The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange.","pos":[192,325]},{"content":"It is the seed value for the key material that is generated by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A&gt;</ph> method.","pos":[326,476],"source":" It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method."}]}]},{"pos":[483,702],"content":"The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property uses this enumeration to get the key derivation function for the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class.","pos":[0,219],"source":"The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class."}]}],"pos":[951,1658],"yaml":true,"extradata":"MT"},{"content":"A hash algorithm is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\"></xref> property specifies the name of the algorithm to use. If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm.","nodes":[{"pos":[0,321],"content":"A hash algorithm is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\"></xref> property specifies the name of the algorithm to use. If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm.","nodes":[{"content":"A hash algorithm is used to generate key material.","pos":[0,50]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> property specifies the name of the algorithm to use.","pos":[51,190],"source":" The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\"></xref> property specifies the name of the algorithm to use."},{"content":"If the algorithm name is not specified, <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph> is used as the default algorithm.","pos":[191,321],"source":" If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm."}]}],"pos":[2856,3178],"yaml":true},{"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.  \n  \n The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.","nodes":[{"pos":[0,210],"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.","nodes":[{"content":"You can also specify the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> properties, but they are not required.","pos":[0,210],"source":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required."}]},{"pos":[217,334],"content":"The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.","nodes":[{"content":"The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.","pos":[0,117]}]}],"pos":[3189,3528],"yaml":true,"extradata":"MT"},{"content":"A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\"></xref> property specifies the key to use. Either this property must be set or the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\"></xref> property must be set to `true`; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\"></xref>. If both properties are set, the secret agreement is used as the HMAC key.","nodes":[{"pos":[0,652],"content":"A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\"></xref> property specifies the key to use. Either this property must be set or the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\"></xref> property must be set to `true`; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\"></xref>. If both properties are set, the secret agreement is used as the HMAC key.","nodes":[{"content":"A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material.","pos":[0,91]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\"&gt;&lt;/xref&gt;</ph> property specifies the key to use.","pos":[92,207],"source":" The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\"></xref> property specifies the key to use."},{"content":"Either this property must be set or the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\"&gt;&lt;/xref&gt;</ph> property must be set to <ph id=\"ph2\">`true`</ph>; otherwise, a <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CryptographicException\"&gt;&lt;/xref&gt;</ph> is thrown when you use <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\"&gt;&lt;/xref&gt;</ph>.","pos":[208,578],"source":" Either this property must be set or the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\"></xref> property must be set to `true`; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\"></xref>."},{"content":"If both properties are set, the secret agreement is used as the HMAC key.","pos":[579,652]}]}],"pos":[4647,5300],"yaml":true},{"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.  \n  \n The amount of key material that is generated is equivalent to the size of the HMAC value.","nodes":[{"pos":[0,210],"content":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.","nodes":[{"content":"You can also specify the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> properties, but they are not required.","pos":[0,210],"source":"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required."}]},{"pos":[217,306],"content":"The amount of key material that is generated is equivalent to the size of the HMAC value.","nodes":[{"content":"The amount of key material that is generated is equivalent to the size of the HMAC value.","pos":[0,89]}]}],"pos":[5311,5622],"yaml":true,"extradata":"MT"},{"content":"The Transport Layer Security (TLS) protocol is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Seed\"></xref> and <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Label\"></xref> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\"></xref>.","nodes":[{"pos":[0,459],"content":"The Transport Layer Security (TLS) protocol is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Seed\"></xref> and <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Label\"></xref> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\"></xref>.","nodes":[{"content":"The Transport Layer Security (TLS) protocol is used to generate key material.","pos":[0,77]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Seed\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Label\"&gt;&lt;/xref&gt;</ph> properties must be set; otherwise, a <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CryptographicException\"&gt;&lt;/xref&gt;</ph> is thrown when you use <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\"&gt;&lt;/xref&gt;</ph>.","pos":[78,459],"source":" The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Seed\"></xref> and <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Label\"></xref> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\"></xref>."}]}],"pos":[6735,7195],"yaml":true},{"content":"This value generates 160 bits of key material.","nodes":[{"pos":[0,46],"content":"This value generates 160 bits of key material.","nodes":[{"content":"This value generates 160 bits of key material.","pos":[0,46]}]}],"pos":[7206,7253],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  commentId: T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  id: ECDiffieHellmanKeyDerivationFunction\n  children:\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  langs:\n  - csharp\n  name: ECDiffieHellmanKeyDerivationFunction\n  nameWithType: ECDiffieHellmanKeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  type: Enum\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Specifies the key derivation function that the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng\"></xref> class will use to convert secret agreements into key material.\n  remarks: \"The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material. The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange. It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.  \\n  \\n The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.\"\n  syntax:\n    content: public enum ECDiffieHellmanKeyDerivationFunction\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECDiffieHellmanKeyDerivationFunction.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  commentId: F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  id: Hash\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  langs:\n  - csharp\n  name: Hash\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash\n  fullName: ECDiffieHellmanKeyDerivationFunction.Hash\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: A hash algorithm is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\"></xref> property specifies the name of the algorithm to use. If the algorithm name is not specified, <xref href=\"System.Security.Cryptography.SHA256\"></xref> is used as the default algorithm.\n  remarks: \"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.  \\n  \\n The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.\"\n  syntax:\n    content: Hash\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECDiffieHellmanKeyDerivationFunction.xml\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  commentId: F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  id: Hmac\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  langs:\n  - csharp\n  name: Hmac\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac\n  fullName: ECDiffieHellmanKeyDerivationFunction.Hmac\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\"></xref> property specifies the key to use. Either this property must be set or the <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\"></xref> property must be set to `true`; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\"></xref>. If both properties are set, the secret agreement is used as the HMAC key.\n  remarks: \"You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.  \\n  \\n The amount of key material that is generated is equivalent to the size of the HMAC value.\"\n  syntax:\n    content: Hmac\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECDiffieHellmanKeyDerivationFunction.xml\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  commentId: F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  id: Tls\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  langs:\n  - csharp\n  name: Tls\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls\n  fullName: ECDiffieHellmanKeyDerivationFunction.Tls\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: The Transport Layer Security (TLS) protocol is used to generate key material. The <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Seed\"></xref> and <xref href=\"System.Security.Cryptography.ECDiffieHellmanCng.Label\"></xref> properties must be set; otherwise, a <xref href=\"System.Security.Cryptography.CryptographicException\"></xref> is thrown when you use <xref href=\"System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\"></xref>.\n  remarks: This value generates 160 bits of key material.\n  syntax:\n    content: Tls\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ECDiffieHellmanKeyDerivationFunction.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  isExternal: false\n  name: Hash\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash\n  fullName: ECDiffieHellmanKeyDerivationFunction.Hash\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanKeyDerivationFunction\n  nameWithType: ECDiffieHellmanKeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  isExternal: false\n  name: Hmac\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac\n  fullName: ECDiffieHellmanKeyDerivationFunction.Hmac\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls\n  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  isExternal: false\n  name: Tls\n  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls\n  fullName: ECDiffieHellmanKeyDerivationFunction.Tls\n"}