{"nodes":[{"content":"Represents the data context of the current workflow environment and provides a bridge to bring workflow arguments and variables into the scope of Windows Presentation Foundation (WPF) data binding.","nodes":[{"pos":[0,197],"content":"Represents the data context of the current workflow environment and provides a bridge to bring workflow arguments and variables into the scope of Windows Presentation Foundation (WPF) data binding.","nodes":[{"content":"Represents the data context of the current workflow environment and provides a bridge to bring workflow arguments and variables into the scope of Windows Presentation Foundation (WPF) data binding.","pos":[0,197]}]}],"pos":[562,760],"yaml":true},{"content":"Releases the resources used by the <xref href=\"System.Activities.WorkflowDataContext\"></xref>.","nodes":[{"pos":[0,94],"content":"Releases the resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowDataContext\"&gt;&lt;/xref&gt;</ph>.","source":"Releases the resources used by the <xref href=\"System.Activities.WorkflowDataContext\"></xref>."}],"pos":[3082,3177],"yaml":true},{"content":"Returns the collection of properties managed by this <xref href=\"System.Activities.WorkflowDataContext\"></xref>.","nodes":[{"pos":[0,112],"content":"Returns the collection of properties managed by this <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowDataContext\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the collection of properties managed by this <xref href=\"System.Activities.WorkflowDataContext\"></xref>."}],"pos":[4283,4396],"yaml":true},{"content":"The collection of properties managed by this <xref href=\"System.Activities.WorkflowDataContext\"></xref>.","nodes":[{"pos":[0,104],"content":"The collection of properties managed by this <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowDataContext\"&gt;&lt;/xref&gt;</ph>.","source":"The collection of properties managed by this <xref href=\"System.Activities.WorkflowDataContext\"></xref>."}],"pos":[4617,4722],"yaml":true},{"content":"Occurs when a property value changes.","nodes":[{"pos":[0,37],"content":"Occurs when a property value changes.","nodes":[{"content":"Occurs when a property value changes.","pos":[0,37]}]}],"pos":[5773,5811],"yaml":true},{"content":"The <xref:System.Activities.WorkflowDataContext.PropertyChanged> event can indicate all properties on the object have changed by using either `null` (`Nothing` in Visual Basic) or <xref:String.Empty?displayProperty=fullName> as the property name in the <xref:System.ComponentModel.PropertyChangedEventArgs>. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ComponentModel.INotifyPropertyChanged>.","nodes":[{"pos":[0,409],"content":"The <xref:System.Activities.WorkflowDataContext.PropertyChanged> event can indicate all properties on the object have changed by using either `null` (`Nothing` in Visual Basic) or <xref:String.Empty?displayProperty=fullName> as the property name in the <xref:System.ComponentModel.PropertyChangedEventArgs>. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ComponentModel.INotifyPropertyChanged>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowDataContext.PropertyChanged&gt;</ph> event can indicate all properties on the object have changed by using either <ph id=\"ph2\">`null`</ph> (<ph id=\"ph3\">`Nothing`</ph> in Visual Basic) or <ph id=\"ph4\">&lt;xref:String.Empty?displayProperty=fullName&gt;</ph> as the property name in the <ph id=\"ph5\">&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;</ph>.","pos":[0,307],"source":"The <xref:System.Activities.WorkflowDataContext.PropertyChanged> event can indicate all properties on the object have changed by using either `null` (`Nothing` in Visual Basic) or <xref:String.Empty?displayProperty=fullName> as the property name in the <xref:System.ComponentModel.PropertyChangedEventArgs>."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.","pos":[308,409],"source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ComponentModel.INotifyPropertyChanged>."}]}],"pos":[5822,6232],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.WorkflowDataContext\n  commentId: T:System.Activities.WorkflowDataContext\n  id: WorkflowDataContext\n  children:\n  - System.Activities.WorkflowDataContext.Dispose\n  - System.Activities.WorkflowDataContext.GetProperties\n  - System.Activities.WorkflowDataContext.PropertyChanged\n  langs:\n  - csharp\n  name: WorkflowDataContext\n  nameWithType: WorkflowDataContext\n  fullName: System.Activities.WorkflowDataContext\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Represents the data context of the current workflow environment and provides a bridge to bring workflow arguments and variables into the scope of Windows Presentation Foundation (WPF) data binding.\n  syntax:\n    content: 'public sealed class WorkflowDataContext : System.ComponentModel.CustomTypeDescriptor, IDisposable, System.ComponentModel.INotifyPropertyChanged'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.CustomTypeDescriptor\n  implements:\n  - System.ComponentModel.INotifyPropertyChanged\n  - System.IDisposable\n  inheritedMembers:\n  - System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  - System.ComponentModel.CustomTypeDescriptor.GetClassName\n  - System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  - System.ComponentModel.CustomTypeDescriptor.GetConverter\n  - System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  - System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n  - System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  - System.ComponentModel.CustomTypeDescriptor.GetEvents\n  - System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])\n  - System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])\n  - System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowDataContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowDataContext.Dispose\n  commentId: M:System.Activities.WorkflowDataContext.Dispose\n  id: Dispose\n  parent: System.Activities.WorkflowDataContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: WorkflowDataContext.Dispose()\n  fullName: WorkflowDataContext.Dispose()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Releases the resources used by the <xref href=\"System.Activities.WorkflowDataContext\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Activities.WorkflowDataContext.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowDataContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowDataContext.GetProperties\n  commentId: M:System.Activities.WorkflowDataContext.GetProperties\n  id: GetProperties\n  parent: System.Activities.WorkflowDataContext\n  langs:\n  - csharp\n  name: GetProperties()\n  nameWithType: WorkflowDataContext.GetProperties()\n  fullName: WorkflowDataContext.GetProperties()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns the collection of properties managed by this <xref href=\"System.Activities.WorkflowDataContext\"></xref>.\n  syntax:\n    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties ();\n    parameters: []\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: The collection of properties managed by this <xref href=\"System.Activities.WorkflowDataContext\"></xref>.\n  overload: System.Activities.WorkflowDataContext.GetProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowDataContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowDataContext.PropertyChanged\n  commentId: E:System.Activities.WorkflowDataContext.PropertyChanged\n  id: PropertyChanged\n  parent: System.Activities.WorkflowDataContext\n  langs:\n  - csharp\n  name: PropertyChanged\n  nameWithType: WorkflowDataContext.PropertyChanged\n  fullName: WorkflowDataContext.PropertyChanged\n  type: Event\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Occurs when a property value changes.\n  remarks: The <xref:System.Activities.WorkflowDataContext.PropertyChanged> event can indicate all properties on the object have changed by using either `null` (`Nothing` in Visual Basic) or <xref:String.Empty?displayProperty=fullName> as the property name in the <xref:System.ComponentModel.PropertyChangedEventArgs>. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ComponentModel.INotifyPropertyChanged>.\n  syntax:\n    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;\n    return:\n      type: System.ComponentModel.PropertyChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowDataContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ComponentModel.CustomTypeDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: CustomTypeDescriptor\n  nameWithType: CustomTypeDescriptor\n  fullName: System.ComponentModel.CustomTypeDescriptor\n- uid: System.Activities.WorkflowDataContext.Dispose\n  parent: System.Activities.WorkflowDataContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: WorkflowDataContext.Dispose()\n  fullName: WorkflowDataContext.Dispose()\n- uid: System.Activities.WorkflowDataContext.GetProperties\n  parent: System.Activities.WorkflowDataContext\n  isExternal: false\n  name: GetProperties()\n  nameWithType: WorkflowDataContext.GetProperties()\n  fullName: WorkflowDataContext.GetProperties()\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.Activities.WorkflowDataContext.PropertyChanged\n  parent: System.Activities.WorkflowDataContext\n  isExternal: false\n  name: PropertyChanged\n  nameWithType: WorkflowDataContext.PropertyChanged\n  fullName: WorkflowDataContext.PropertyChanged\n- uid: System.ComponentModel.PropertyChangedEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyChangedEventHandler\n  nameWithType: PropertyChangedEventHandler\n  fullName: System.ComponentModel.PropertyChangedEventHandler\n- uid: System.Activities.WorkflowDataContext.Dispose*\n  parent: System.Activities.WorkflowDataContext\n  isExternal: false\n  name: Dispose\n  nameWithType: WorkflowDataContext.Dispose\n  fullName: WorkflowDataContext.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowDataContext.xml\n- uid: System.Activities.WorkflowDataContext.GetProperties*\n  parent: System.Activities.WorkflowDataContext\n  isExternal: false\n  name: GetProperties\n  nameWithType: WorkflowDataContext.GetProperties\n  fullName: WorkflowDataContext.GetProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowDataContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetAttributes()\n  nameWithType: CustomTypeDescriptor.GetAttributes()\n  fullName: CustomTypeDescriptor.GetAttributes()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetClassName()\n  nameWithType: CustomTypeDescriptor.GetClassName()\n  fullName: CustomTypeDescriptor.GetClassName()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetComponentName()\n  nameWithType: CustomTypeDescriptor.GetComponentName()\n  fullName: CustomTypeDescriptor.GetComponentName()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetConverter()\n  nameWithType: CustomTypeDescriptor.GetConverter()\n  fullName: CustomTypeDescriptor.GetConverter()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetDefaultEvent()\n  nameWithType: CustomTypeDescriptor.GetDefaultEvent()\n  fullName: CustomTypeDescriptor.GetDefaultEvent()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetDefaultProperty()\n  nameWithType: CustomTypeDescriptor.GetDefaultProperty()\n  fullName: CustomTypeDescriptor.GetDefaultProperty()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetEditor(Type)\n  nameWithType: CustomTypeDescriptor.GetEditor(Type)\n  fullName: CustomTypeDescriptor.GetEditor(Type)\n- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetEvents()\n  nameWithType: CustomTypeDescriptor.GetEvents()\n  fullName: CustomTypeDescriptor.GetEvents()\n- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetEvents(Attribute[])\n  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])\n  fullName: CustomTypeDescriptor.GetEvents(Attribute[])\n- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetProperties(Attribute[])\n  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])\n  fullName: CustomTypeDescriptor.GetProperties(Attribute[])\n- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.CustomTypeDescriptor\n  isExternal: false\n  name: GetPropertyOwner(PropertyDescriptor)\n  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)\n  fullName: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)\n- uid: System.ComponentModel.INotifyPropertyChanged\n  parent: System.ComponentModel\n  isExternal: false\n  name: INotifyPropertyChanged\n  nameWithType: INotifyPropertyChanged\n  fullName: System.ComponentModel.INotifyPropertyChanged\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}