{"nodes":[{"content":"An instance of this class is returned by the <xref href=\"System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)\"></xref> method of an <xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"></xref> expression.","nodes":[{"pos":[0,282],"content":"An instance of this class is returned by the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method of an <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"&gt;&lt;/xref&gt;</ph> expression.","source":"An instance of this class is returned by the <xref href=\"System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)\"></xref> method of an <xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"></xref> expression."}],"pos":[607,890],"yaml":true},{"content":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.  \n  \n The information in the <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","nodes":[{"pos":[0,348],"content":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.","nodes":[{"content":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.","pos":[0,348],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.Rules.RuleExpressionInfo&gt;</ph> provides the return type of the expression.","pos":[0,195],"source":"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> provides the return type of the expression."},{"content":"For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.","pos":[196,348]}]}]},{"pos":[355,591],"content":"The information in the <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","nodes":[{"content":"The information in the <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","pos":[0,236],"nodes":[{"content":"The information in the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.Rules.RuleExpressionInfo&gt;</ph> can be used to validate the use of the expression.","pos":[0,132],"source":"The information in the <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> can be used to validate the use of the expression."},{"content":"For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.","pos":[133,236]}]}]}],"pos":[901,1497],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> class."}],"pos":[2950,3064],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the expression.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the expression.","source":"The <xref href=\"System.Type\"></xref> of the expression."}],"pos":[3220,3276],"yaml":true},{"content":"Gets the type of the expression.","nodes":[{"pos":[0,32],"content":"Gets the type of the expression.","nodes":[{"content":"Gets the type of the expression.","pos":[0,32]}]}],"pos":[4371,4404],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the expression.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the expression.","source":"The <xref href=\"System.Type\"></xref> of the expression."}],"pos":[4518,4574],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo\n  commentId: T:System.Workflow.Activities.Rules.RuleExpressionInfo\n  id: RuleExpressionInfo\n  children:\n  - System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  - System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  langs:\n  - csharp\n  name: RuleExpressionInfo\n  nameWithType: RuleExpressionInfo\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: An instance of this class is returned by the <xref href=\"System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)\"></xref> method of an <xref href=\"System.Workflow.Activities.Rules.IRuleExpression\"></xref> expression.\n  remarks: \"The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> provides the return type of the expression. For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.  \\n  \\n The information in the <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> can be used to validate the use of the expression. For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.\"\n  syntax:\n    content: public class RuleExpressionInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionInfo.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  langs:\n  - csharp\n  name: RuleExpressionInfo(Type)\n  nameWithType: RuleExpressionInfo.RuleExpressionInfo(Type)\n  fullName: RuleExpressionInfo.RuleExpressionInfo(Type)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> class.\n  syntax:\n    content: public RuleExpressionInfo (Type expressionType);\n    parameters:\n    - id: expressionType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the expression.\n  overload: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionInfo.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  commentId: P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  id: ExpressionType\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  langs:\n  - csharp\n  name: ExpressionType\n  nameWithType: RuleExpressionInfo.ExpressionType\n  fullName: RuleExpressionInfo.ExpressionType\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Gets the type of the expression.\n  syntax:\n    content: public Type ExpressionType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the expression.\n  overload: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionInfo.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: RuleExpressionInfo(Type)\n  nameWithType: RuleExpressionInfo.RuleExpressionInfo(Type)\n  fullName: RuleExpressionInfo.RuleExpressionInfo(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: ExpressionType\n  nameWithType: RuleExpressionInfo.ExpressionType\n  fullName: RuleExpressionInfo.ExpressionType\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor*\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: RuleExpressionInfo\n  nameWithType: RuleExpressionInfo.RuleExpressionInfo\n  fullName: RuleExpressionInfo.RuleExpressionInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionInfo.xml\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType*\n  parent: System.Workflow.Activities.Rules.RuleExpressionInfo\n  isExternal: false\n  name: ExpressionType\n  nameWithType: RuleExpressionInfo.ExpressionType\n  fullName: RuleExpressionInfo.ExpressionType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}