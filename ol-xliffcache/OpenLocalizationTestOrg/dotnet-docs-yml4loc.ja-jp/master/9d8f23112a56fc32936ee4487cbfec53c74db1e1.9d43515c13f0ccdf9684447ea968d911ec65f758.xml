{"nodes":[{"content":"Represents a method that creates a non-default value to add as part of a key/value pair to a <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\"></xref> object.","nodes":[{"pos":[0,176],"content":"Represents a method that creates a non-default value to add as part of a key/value pair to a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\"&gt;&lt;/xref&gt;</ph> object.","source":"Represents a method that creates a non-default value to add as part of a key/value pair to a <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\"></xref> object."}],"pos":[642,819],"yaml":true},{"content":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=fullName> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object. The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached. The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.  \n  \n The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key. It enables that instance to be initialized using non-default values. If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=fullName> method adds a key/value pair in which the value is initialized using default values.","nodes":[{"pos":[0,724],"content":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=fullName> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object. The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached. The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.","nodes":[{"content":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=fullName> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object. The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached. The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.","pos":[0,724],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback&gt;</ph> delegate encapsulates a callback method that is invoked by the <ph id=\"ph2\">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=fullName&gt;</ph> method when the key passed to the method is not found in the <ph id=\"ph3\">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object.","pos":[0,384],"source":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=fullName> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached.","pos":[385,596],"source":" The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached."},{"content":"The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.","pos":[597,724]}]}]},{"pos":[731,1223],"content":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key. It enables that instance to be initialized using non-default values. If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=fullName> method adds a key/value pair in which the value is initialized using default values.","nodes":[{"content":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key. It enables that instance to be initialized using non-default values. If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=fullName> method adds a key/value pair in which the value is initialized using default values.","pos":[0,492],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback&gt;</ph> method is used to return an instance of a reference type that can be attached to the specified key.","pos":[0,187],"source":"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key."},{"content":"It enables that instance to be initialized using non-default values.","pos":[188,256]},{"content":"If the key is not found in the table, the <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=fullName&gt;</ph> method adds a key/value pair in which the value is initialized using default values.","pos":[257,492],"source":" If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=fullName> method adds a key/value pair in which the value is initialized using default values."}]}]}],"pos":[830,2058],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback\n  commentId: T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback\n  id: ConditionalWeakTable`2.CreateValueCallback\n  langs:\n  - csharp\n  name: ConditionalWeakTable<TKey,TValue>.CreateValueCallback\n  nameWithType: ConditionalWeakTable<TKey,TValue>.CreateValueCallback\n  fullName: System.Runtime.CompilerServices.ConditionalWeakTable<TKey,TValue>.CreateValueCallback\n  type: Delegate\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.CompilerServices\n  summary: Represents a method that creates a non-default value to add as part of a key/value pair to a <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\"></xref> object.\n  remarks: \"The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=fullName> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object. The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached. The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.  \\n  \\n The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key. It enables that instance to be initialized using non-default values. If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=fullName> method adds a key/value pair in which the value is initialized using default values.\"\n  example:\n  - \"The following example defines a `MainClass` class and a `MainInfo` class. `MainInfo` provides information about the `MainClass` instance. It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method. The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its corresponding `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table. The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and a call to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value that belongs to an existing key.  \\n  \\n [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]\\n [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]\"\n  syntax:\n    content: 'public delegate TValue ConditionalWeakTable<TKey,TValue>.CreateValueCallback(TKey key) where TKey : class where TValue : class;'\n    typeParameters:\n    - id: TKey\n      description: ''\n    - id: TValue\n      description: ''\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/ConditionalWeakTable`2+CreateValueCallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}