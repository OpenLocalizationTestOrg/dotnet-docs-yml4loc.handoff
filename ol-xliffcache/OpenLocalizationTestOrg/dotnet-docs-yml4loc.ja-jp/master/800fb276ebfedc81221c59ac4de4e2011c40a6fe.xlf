<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">800fb276ebfedc81221c59ac4de4e2011c40a6fe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.HttpServerUtility.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c778cdd245eb43c1346d8adedc6663a62055773c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c396013497b5b59d7a92236dfdbbe9568b99192</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides helper methods for processing Web requests.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class are exposed through the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Server%2A&gt;</ph> object provided by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Clears the previous exception.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The class or type of object to create an instance of.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The new object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An instance of the object could not be created.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a server instance of a COM object identified by the object's type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the object to create.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The new object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a server instance of a COM object identified by the object's class identifier (CLSID).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The class identifier of the object to create an instance of.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The new object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An instance of the object could not be created.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original page after execution of the new page is completed.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An error occurred while executing the handler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is not a virtual path.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections; <ph id="ph4">`false`</ph> to clear the <ph id="ph5">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph6">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An error occurred while executing the handler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is not a virtual path.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> captures output from the executed handler.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original request after execution of the virtual path specified is completed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> to capture the output.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An error occurred while executing the handler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is not a virtual path.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> captures output from the page and a Boolean parameter specifies whether to clear the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original request after execution of the specified virtual path is completed.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> to capture the output.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections; <ph id="ph4">`false`</ph> to clear the <ph id="ph5">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph6">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> ends with a period (.).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An error occurred while executing the handler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is not a virtual path.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> captures output from the executed handler and a Boolean parameter specifies whether to clear the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The HTTP handler that implements the <ph id="ph1">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> to transfer the current request to.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> to capture the output.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections; <ph id="ph4">`false`</ph> to clear the <ph id="ph5">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph6">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An error occurred while executing the handler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handler</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handler</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the previous exception.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The previous exception that was thrown.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Decodes an HTML-encoded string and returns the decoded string.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> decodes text that has been transmitted to the server.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName&gt;</ph> to decode strings.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The HTML string to decode.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The decoded text.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Decodes an HTML-encoded string and sends the resulting output to a <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> decodes text that has been transmitted to the server.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName&gt;</ph> to decode strings.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The HTML string to decode.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream that contains the decoded string.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>HTML-encodes a string and returns the encoded string.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName&gt;</ph> to encode strings.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The text string to encode.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The HTML-encoded text.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>HTML-encodes a string and sends the resulting output to a <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HTML encoding of these two characters is <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, respectively, which causes the browser to display the less than sign and greater than sign correctly.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName&gt;</ph> to encode strings.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The string to encode.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream that contains the encoded string.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets the server's computer name.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The name of the local computer.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The computer name cannot be found.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Returns the physical file path that corresponds to the specified virtual path.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`path`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> method returns the full physical path of the directory that contains the current request for the path.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The relative path does not need to specify an existing file or folder for this method to return a value.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you cannot specify a path outside of the Web application.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> method potentially contains sensitive information about the hosting environment.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value should not be displayed to users.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Web application that resides at <ph id="ph1">`C:\ExampleSites\TestMapPath`</ph> would return the following results:</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Request from</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returned value</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>RootLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>C:\ExampleSites\TestMapPath</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>RootLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>"/DownOneLevel/DownLevelPage.aspx"</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>RootLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>"/NotRealFolder"</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>C:\ExampleSites\TestMapPath\NotRealFolder</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>RootLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>"../OutsideApplication"</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>/DownOneLevel/DownLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>C:\ExampleSites\TestMapPath\DownOneLevel</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>/DownOneLevel/DownLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>"../RootLevelPage.aspx"</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>C:\ExampleSites\TestMapPath\RootLevelPage.aspx</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The virtual path in the Web application.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The physical file path on the Web server that corresponds to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets and sets the request time-out value in seconds.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> property can be set in the Web.config file by setting the <ph id="ph2">`executionTimeout`</ph> attribute of the  element.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the time-out programmatically with the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> property takes precedence over the Web.config setting.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">`debug`</ph> attribute of the  element to <ph id="ph2">`true`</ph> in the Web.config file, the value of <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> will be ignored.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The time-out value setting for requests.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The time-out period is <ph id="ph1">`null`</ph> or otherwise could not be set.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The page transferred to should be another .aspx page.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method preserves the <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Specifies whether to clear the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The page transferred to should be another .aspx page.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections; <ph id="ph4">`false`</ph> to clear the <ph id="ph5">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph6">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The current page request is a callback.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <ph id="ph1">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> interface and specifies whether to clear the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method, and does not rerun authentication and authorization logic for the new resource.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The HTTP handler that implements the <ph id="ph1">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> to transfer the current request to.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections; <ph id="ph4">`false`</ph> to clear the <ph id="ph5">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> and <ph id="ph6">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The current page request is a callback.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overload calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> overload with the <ph id="ph2">`preserveForm`</ph> parameter set to <ph id="ph3">`false`</ph>, the <ph id="ph4">`method`</ph> parameter set to <ph id="ph5">`null`</ph>, the <ph id="ph6">`headers`</ph> parameter set to <ph id="ph7">`null`</ph>, and the <ph id="ph8">`preserveUser`</ph> parameter set to <ph id="ph9">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL and preserves query string parameters.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> overload with the <ph id="ph2">`preserveForm`</ph> parameter set to the value passed in, the <ph id="ph3">`method`</ph> parameter set to <ph id="ph4">`null`</ph>, the <ph id="ph5">`headers`</ph> parameter set to <ph id="ph6">`null`</ph>, and the <ph id="ph7">`preserveUser`</ph> parameter set to <ph id="ph8">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collection; <ph id="ph3">`false`</ph> to clear the <ph id="ph4">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used when running with the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> method to transfer a request for an ASPX page to a request for an XML page.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> method performs an asynchronous child execution of the specified URL with the following conditions:</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`path`</ph> parameter specifies a query string, it will be used as the new query string.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no query string is included, the query string of the request will be re-used.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter is specified, it will be used.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is <ph id="ph1">`null`</ph>, the HTTP method of the original request will be used.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`preserveForm`</ph> parameter is <ph id="ph2">`true`</ph>, the current entity body of the request will be available to the target request.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows form posts and uploads to be transferred.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user identity is currently set on the original request, the identity will be transferred to the new request.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows authenticated requests to re-use the result of the authentication for the new request.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want the user to be transferred, set the user to <ph id="ph1">`null`</ph> on the original request before transferring.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`headers`</ph> parameter is specified, the new request will execute with the specified headers.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;</ph> method overload with the <ph id="ph2">`preserveUser`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collection; <ph id="ph3">`false`</ph> to clear the <ph id="ph4">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the execution of the new request.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> of request headers for the new request.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The request requires <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> running in integrated mode.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The path.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collection; <ph id="ph3">`false`</ph> to clear the <ph id="ph4">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the new request.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> object that contains request headers for the new request.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preserve the user identity; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The other method overloads of this method call this overload with this parameter set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>URL-decodes a string and returns the decoded string.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;</ph> to decode strings.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The text string to decode.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The decoded text.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Decodes an HTML string received in a URL and sends the resulting output to a <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;</ph> to decode strings.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The HTML string to decode.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream that contains the decoded string.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>URL-encodes a string and returns the encoded string.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;</ph> to encode strings.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The text to URL-encode.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The URL-encoded text.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>URL-encodes a string and sends the resulting output to a <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;</ph> method at run time from an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;</ph> to encode strings.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The text string to encode.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> output stream that contains the encoded string.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Do not use; intended only for browser compatibility.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">&lt;xref href="System.Web.HttpServerUtility.UrlEncode(System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The text to URL-encode.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The URL encoded text.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Decodes a URL string token to its equivalent byte array using base 64 digits.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method to decode tokens transmitted on the URL and encoded by using the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method will return an empty byte array if the <ph id="ph2">`input`</ph> parameter has a length of less than one.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The URL string token to decode.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The byte array containing the decoded URL string token.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> method converts a byte array into an equivalent string representation encoded with base 64 digits.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting string token can be transmitted on the URL.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> will return an empty string if the <ph id="ph2">`input`</ph> parameter has a length of less than one.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The byte array to encode.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The string containing the encoded token if the byte array <bpt id="p1">*</bpt>length<ept id="p1">*</ept> is greater than one; otherwise, an empty string ("").</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>