{"nodes":[{"content":"The abstract base class that represents a binding terminal that supports the flow of data out of an <xref href=\"System.Activities.ActivityDelegate\"></xref>.","nodes":[{"pos":[0,156],"content":"The abstract base class that represents a binding terminal that supports the flow of data out of an <ph id=\"ph1\">&lt;xref href=\"System.Activities.ActivityDelegate\"&gt;&lt;/xref&gt;</ph>.","source":"The abstract base class that represents a binding terminal that supports the flow of data out of an <xref href=\"System.Activities.ActivityDelegate\"></xref>."}],"pos":[401,558],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DelegateOutArgument\n  commentId: T:System.Activities.DelegateOutArgument\n  id: DelegateOutArgument\n  children: []\n  langs:\n  - csharp\n  name: DelegateOutArgument\n  nameWithType: DelegateOutArgument\n  fullName: System.Activities.DelegateOutArgument\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: The abstract base class that represents a binding terminal that supports the flow of data out of an <xref href=\"System.Activities.ActivityDelegate\"></xref>.\n  syntax:\n    content: 'public abstract class DelegateOutArgument : System.Activities.DelegateArgument'\n  inheritance:\n  - System.Object\n  - System.Activities.LocationReference\n  - System.Activities.DelegateArgument\n  derivedClasses:\n  - System.Activities.DelegateOutArgument`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.DelegateArgument.Direction\n  - System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)\n  - System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.DelegateArgument.Name\n  - System.Activities.DelegateArgument.NameCore\n  - System.Activities.LocationReference.Type\n  - System.Activities.LocationReference.TypeCore\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/DelegateOutArgument.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.DelegateArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateArgument\n  nameWithType: DelegateArgument\n  fullName: System.Activities.DelegateArgument\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateArgument\n  isExternal: false\n  name: GetLocation(ActivityContext)\n  nameWithType: DelegateArgument.GetLocation(ActivityContext)\n  fullName: DelegateArgument.GetLocation(ActivityContext)\n- uid: System.Activities.DelegateArgument.Name\n  parent: System.Activities.DelegateArgument\n  isExternal: false\n  name: Name\n  nameWithType: DelegateArgument.Name\n  fullName: DelegateArgument.Name\n- uid: System.Activities.DelegateArgument.NameCore\n  parent: System.Activities.DelegateArgument\n  isExternal: false\n  name: NameCore\n  nameWithType: DelegateArgument.NameCore\n  fullName: DelegateArgument.NameCore\n- uid: System.Activities.LocationReference.Type\n  parent: System.Activities.LocationReference\n  isExternal: false\n  name: Type\n  nameWithType: LocationReference.Type\n  fullName: LocationReference.Type\n- uid: System.Activities.LocationReference.TypeCore\n  parent: System.Activities.LocationReference\n  isExternal: false\n  name: TypeCore\n  nameWithType: LocationReference.TypeCore\n  fullName: LocationReference.TypeCore\n- uid: System.Activities.DelegateArgument.Direction\n  parent: System.Activities.DelegateArgument\n  isExternal: false\n  name: Direction\n  nameWithType: DelegateArgument.Direction\n  fullName: DelegateArgument.Direction\n- uid: System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateArgument\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: DelegateArgument.Get(ActivityContext)\n  fullName: DelegateArgument.Get(ActivityContext)\n"}