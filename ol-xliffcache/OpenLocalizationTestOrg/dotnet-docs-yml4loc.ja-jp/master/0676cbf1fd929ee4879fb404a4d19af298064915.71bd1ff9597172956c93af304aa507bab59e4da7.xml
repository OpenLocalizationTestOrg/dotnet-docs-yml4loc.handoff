{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref>, <xref href=\"System.Windows.Forms.Control.MouseDown\"></xref>, and <xref href=\"System.Windows.Forms.Control.MouseMove\"></xref> events.","nodes":[{"pos":[0,213],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseUp\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.MouseDown\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.Control.MouseMove\"&gt;&lt;/xref&gt;</ph> events.","source":"Provides data for the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref>, <xref href=\"System.Windows.Forms.Control.MouseDown\"></xref>, and <xref href=\"System.Windows.Forms.Control.MouseMove\"></xref> events."}],"pos":[789,1003],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control. The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control. The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control. A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.  \n  \n It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.  \n  \n These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.  \n  \n For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,612],"content":"The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control. The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control. The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control. A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.","nodes":[{"content":"The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control. The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control. The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control. A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.","pos":[0,612],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event occurs when the user presses the mouse button while the pointer is over a control.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> event occurs when the user releases the mouse button while the pointer remains over the control.","pos":[139,283],"source":" The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseMove&gt;</ph> event occurs when the user moves the mouse pointer over a control.","pos":[284,400],"source":" The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MouseEventArgs&gt;</ph> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.","pos":[401,612],"source":" A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved."}]}]},{"pos":[619,852],"content":"It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.","nodes":[{"content":"It is possible to receive a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event without a corresponding <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph>, if the user switches focus to another application before releasing the mouse button.","pos":[0,233],"source":"It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button."}]},{"pos":[859,1016],"content":"These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.","nodes":[{"content":"These three events exist for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.AxHost&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.NotifyIcon&gt;</ph> classes.","pos":[0,157],"source":"These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes."}]},{"pos":[1023,1147],"content":"For information about the event model, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[1014,2170],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> class."}],"pos":[5935,6033],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> values that indicate which mouse button was pressed.","nodes":[{"pos":[0,118],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseButtons\"&gt;&lt;/xref&gt;</ph> values that indicate which mouse button was pressed.","source":"One of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> values that indicate which mouse button was pressed."}],"pos":[6257,6376],"yaml":true},{"content":"The number of times a mouse button was pressed.","nodes":[{"pos":[0,47],"content":"The number of times a mouse button was pressed.","nodes":[{"content":"The number of times a mouse button was pressed.","pos":[0,47]}]}],"pos":[6437,6485],"yaml":true},{"content":"The x-coordinate of a mouse click, in pixels.","nodes":[{"pos":[0,45],"content":"The x-coordinate of a mouse click, in pixels.","nodes":[{"content":"The x-coordinate of a mouse click, in pixels.","pos":[0,45]}]}],"pos":[6541,6587],"yaml":true},{"content":"The y-coordinate of a mouse click, in pixels.","nodes":[{"pos":[0,45],"content":"The y-coordinate of a mouse click, in pixels.","nodes":[{"content":"The y-coordinate of a mouse click, in pixels.","pos":[0,45]}]}],"pos":[6643,6689],"yaml":true},{"content":"A signed count of the number of detents the wheel has rotated.","nodes":[{"pos":[0,62],"content":"A signed count of the number of detents the wheel has rotated.","nodes":[{"content":"A signed count of the number of detents the wheel has rotated.","pos":[0,62]}]}],"pos":[6749,6812],"yaml":true},{"content":"Gets which mouse button was pressed.","nodes":[{"pos":[0,36],"content":"Gets which mouse button was pressed.","nodes":[{"content":"Gets which mouse button was pressed.","pos":[0,36]}]}],"pos":[7772,7809],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MouseButtons\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> values."}],"pos":[8566,8640],"yaml":true},{"content":"Gets the number of times the mouse button was pressed and released.","nodes":[{"pos":[0,67],"content":"Gets the number of times the mouse button was pressed and released.","nodes":[{"content":"Gets the number of times the mouse button was pressed and released.","pos":[0,67]}]}],"pos":[9623,9691],"yaml":true},{"content":"Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.","nodes":[{"pos":[0,185],"content":"Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.","nodes":[{"content":"Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.","pos":[0,185]}]}],"pos":[9702,9888],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> that contains the number of times the mouse button was pressed and released.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the number of times the mouse button was pressed and released.","source":"An <xref href=\"System.Int32\"></xref> that contains the number of times the mouse button was pressed and released."}],"pos":[11337,11451],"yaml":true},{"content":"Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant. A detent is one notch of the mouse wheel.","nodes":[{"pos":[0,155],"content":"Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant. A detent is one notch of the mouse wheel.","nodes":[{"content":"Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant. A detent is one notch of the mouse wheel.","pos":[0,155],"nodes":[{"content":"Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.","pos":[0,113]},{"content":"A detent is one notch of the mouse wheel.","pos":[114,155]}]}]}],"pos":[12428,12584],"yaml":true},{"content":"The mouse wheel combines the features of a wheel and a mouse button. The wheel has discrete, evenly spaced notches. When you rotate the wheel, a wheel message is sent as each notch is encountered. One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120. A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).  \n  \n Currently, a value of 120 is the standard for one detent. If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller. Most applications should check for a positive or negative value rather than an aggregate total.","nodes":[{"pos":[0,451],"content":"The mouse wheel combines the features of a wheel and a mouse button. The wheel has discrete, evenly spaced notches. When you rotate the wheel, a wheel message is sent as each notch is encountered. One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120. A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).","nodes":[{"content":"The mouse wheel combines the features of a wheel and a mouse button. The wheel has discrete, evenly spaced notches. When you rotate the wheel, a wheel message is sent as each notch is encountered. One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120. A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).","pos":[0,451],"nodes":[{"content":"The mouse wheel combines the features of a wheel and a mouse button.","pos":[0,68]},{"content":"The wheel has discrete, evenly spaced notches.","pos":[69,115]},{"content":"When you rotate the wheel, a wheel message is sent as each notch is encountered.","pos":[116,196]},{"content":"One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120.","pos":[197,285]},{"content":"A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).","pos":[286,451]}]}]},{"pos":[458,705],"content":"Currently, a value of 120 is the standard for one detent. If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller. Most applications should check for a positive or negative value rather than an aggregate total.","nodes":[{"content":"Currently, a value of 120 is the standard for one detent. If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller. Most applications should check for a positive or negative value rather than an aggregate total.","pos":[0,247],"nodes":[{"content":"Currently, a value of 120 is the standard for one detent.","pos":[0,57]},{"content":"If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller.","pos":[58,151]},{"content":"Most applications should check for a positive or negative value rather than an aggregate total.","pos":[152,247]}]}]}],"pos":[12595,13305],"yaml":true,"extradata":"MT"},{"content":"A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.","nodes":[{"pos":[0,108],"content":"A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.","nodes":[{"content":"A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.","pos":[0,108]}]}],"pos":[14753,14862],"yaml":true},{"content":"Gets the location of the mouse during the generating mouse event.","nodes":[{"pos":[0,65],"content":"Gets the location of the mouse during the generating mouse event.","nodes":[{"content":"Gets the location of the mouse during the generating mouse event.","pos":[0,65]}]}],"pos":[15834,15900],"yaml":true},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.","nodes":[{"pos":[0,148],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.","source":"A <xref href=\"System.Drawing.Point\"></xref> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form."}],"pos":[16620,16769],"yaml":true},{"content":"Gets the x-coordinate of the mouse during the generating mouse event.","nodes":[{"pos":[0,69],"content":"Gets the x-coordinate of the mouse during the generating mouse event.","nodes":[{"content":"Gets the x-coordinate of the mouse during the generating mouse event.","pos":[0,69]}]}],"pos":[17702,17772],"yaml":true},{"content":"The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.","nodes":[{"pos":[0,415],"content":"The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.","nodes":[{"content":"The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.","pos":[0,415],"nodes":[{"content":"The mouse coordinates vary based on the event being raised.","pos":[0,59]},{"content":"For example, when the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName&gt;</ph> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.","pos":[60,268],"source":" For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event."},{"content":"Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.","pos":[269,415]}]}]}],"pos":[17783,18199],"yaml":true,"extradata":"MT"},{"content":"The x-coordinate of the mouse, in pixels.","nodes":[{"pos":[0,41],"content":"The x-coordinate of the mouse, in pixels.","nodes":[{"content":"The x-coordinate of the mouse, in pixels.","pos":[0,41]}]}],"pos":[18797,18839],"yaml":true},{"content":"Gets the y-coordinate of the mouse during the generating mouse event.","nodes":[{"pos":[0,69],"content":"Gets the y-coordinate of the mouse during the generating mouse event.","nodes":[{"content":"Gets the y-coordinate of the mouse during the generating mouse event.","pos":[0,69]}]}],"pos":[19787,19857],"yaml":true},{"content":"The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.","nodes":[{"pos":[0,415],"content":"The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.","nodes":[{"content":"The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.","pos":[0,415],"nodes":[{"content":"The mouse coordinates vary based on the event being raised.","pos":[0,59]},{"content":"For example, when the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName&gt;</ph> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.","pos":[60,268],"source":" For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event."},{"content":"Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.","pos":[269,415]}]}]}],"pos":[19868,20284],"yaml":true,"extradata":"MT"},{"content":"The y-coordinate of the mouse, in pixels.","nodes":[{"pos":[0,41],"content":"The y-coordinate of the mouse, in pixels.","nodes":[{"content":"The y-coordinate of the mouse, in pixels.","pos":[0,41]}]}],"pos":[20951,20993],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.MouseEventArgs\n  commentId: T:System.Windows.Forms.MouseEventArgs\n  id: MouseEventArgs\n  children:\n  - System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.MouseEventArgs.Button\n  - System.Windows.Forms.MouseEventArgs.Clicks\n  - System.Windows.Forms.MouseEventArgs.Delta\n  - System.Windows.Forms.MouseEventArgs.Location\n  - System.Windows.Forms.MouseEventArgs.X\n  - System.Windows.Forms.MouseEventArgs.Y\n  langs:\n  - csharp\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Forms.MouseEventArgs\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides data for the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref>, <xref href=\"System.Windows.Forms.Control.MouseDown\"></xref>, and <xref href=\"System.Windows.Forms.Control.MouseMove\"></xref> events.\n  remarks: \"The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control. The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control. The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control. A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.  \\n  \\n It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.  \\n  \\n These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.  \\n  \\n For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code examples handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control. This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control that is named `textBox1`.  \\n  \\n [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]\\n [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  \\n  \\n The following code example uses the `Location` property to track clicks of the left mouse button and to draw a series of straight line segments in response to user input. The example does not redraw the lines if you hide the form and then redisplay it; this code has been omitted for simplicity.  \\n  \\n [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]\\n [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  \\n  \\n The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.  \\n  \\n [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]\\n [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MouseEventArgs : EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  derivedClasses:\n  - System.Windows.Forms.DataGridViewCellMouseEventArgs\n  - System.Windows.Forms.HandledMouseEventArgs\n  - System.Windows.Forms.StatusBarPanelClickEventArgs\n  - System.Windows.Forms.TreeNodeMouseClickEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: MouseEventArgs(MouseButtons, Int32, Int32, Int32, Int32)\n  nameWithType: MouseEventArgs.MouseEventArgs(MouseButtons, Int32, Int32, Int32, Int32)\n  fullName: MouseEventArgs.MouseEventArgs(MouseButtons, Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.MouseEventArgs\"></xref> class.\n  syntax:\n    content: public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);\n    parameters:\n    - id: button\n      type: System.Windows.Forms.MouseButtons\n      description: One of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> values that indicate which mouse button was pressed.\n    - id: clicks\n      type: System.Int32\n      description: The number of times a mouse button was pressed.\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of a mouse click, in pixels.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of a mouse click, in pixels.\n    - id: delta\n      type: System.Int32\n      description: A signed count of the number of detents the wheel has rotated.\n  overload: System.Windows.Forms.MouseEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.MouseEventArgs.Button\n  commentId: P:System.Windows.Forms.MouseEventArgs.Button\n  id: Button\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: Button\n  nameWithType: MouseEventArgs.Button\n  fullName: MouseEventArgs.Button\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets which mouse button was pressed.\n  remarks: ''\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control. This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.  \\n  \\n [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]\\n [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.MouseButtons Button { get; }\n    return:\n      type: System.Windows.Forms.MouseButtons\n      description: One of the <xref href=\"System.Windows.Forms.MouseButtons\"></xref> values.\n  overload: System.Windows.Forms.MouseEventArgs.Button*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.MouseEventArgs.Clicks\n  commentId: P:System.Windows.Forms.MouseEventArgs.Clicks\n  id: Clicks\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: Clicks\n  nameWithType: MouseEventArgs.Clicks\n  fullName: MouseEventArgs.Clicks\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the number of times the mouse button was pressed and released.\n  remarks: Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event. This report helps you learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]\\n [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]\"\n  syntax:\n    content: public int Clicks { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> that contains the number of times the mouse button was pressed and released.\n  overload: System.Windows.Forms.MouseEventArgs.Clicks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.MouseEventArgs.Delta\n  commentId: P:System.Windows.Forms.MouseEventArgs.Delta\n  id: Delta\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: Delta\n  nameWithType: MouseEventArgs.Delta\n  fullName: MouseEventArgs.Delta\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant. A detent is one notch of the mouse wheel.\n  remarks: \"The mouse wheel combines the features of a wheel and a mouse button. The wheel has discrete, evenly spaced notches. When you rotate the wheel, a wheel message is sent as each notch is encountered. One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120. A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).  \\n  \\n Currently, a value of 120 is the standard for one detent. If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller. Most applications should check for a positive or negative value rather than an aggregate total.\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event. This report helps you learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]\\n [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]\"\n  syntax:\n    content: public int Delta { get; }\n    return:\n      type: System.Int32\n      description: A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.\n  overload: System.Windows.Forms.MouseEventArgs.Delta*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.MouseEventArgs.Location\n  commentId: P:System.Windows.Forms.MouseEventArgs.Location\n  id: Location\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: Location\n  nameWithType: MouseEventArgs.Location\n  fullName: MouseEventArgs.Location\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the location of the mouse during the generating mouse event.\n  remarks: ''\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.Location%2A> property to track left mouse clicks and draw a series of straight line segments in response to user input. The example does not persist the drawn lines if you hide the form and then redisplay it; this code was omitted for simplicity.  \\n  \\n [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]\\n [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Point Location { get; }\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.\n  overload: System.Windows.Forms.MouseEventArgs.Location*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.MouseEventArgs.X\n  commentId: P:System.Windows.Forms.MouseEventArgs.X\n  id: X\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: X\n  nameWithType: MouseEventArgs.X\n  fullName: MouseEventArgs.X\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the x-coordinate of the mouse during the generating mouse event.\n  remarks: The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.  \\n  \\n [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]\\n [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]\"\n  syntax:\n    content: public int X { get; }\n    return:\n      type: System.Int32\n      description: The x-coordinate of the mouse, in pixels.\n  overload: System.Windows.Forms.MouseEventArgs.X*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.MouseEventArgs.Y\n  commentId: P:System.Windows.Forms.MouseEventArgs.Y\n  id: Y\n  parent: System.Windows.Forms.MouseEventArgs\n  langs:\n  - csharp\n  name: Y\n  nameWithType: MouseEventArgs.Y\n  fullName: MouseEventArgs.Y\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the y-coordinate of the mouse during the generating mouse event.\n  remarks: The mouse coordinates vary based on the event being raised. For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event. Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window. To use this code, call `TrackCoordinates` from the form constructor.  \\n  \\n [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]\\n [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]\"\n  syntax:\n    content: public int Y { get; }\n    return:\n      type: System.Int32\n      description: The y-coordinate of the mouse, in pixels.\n  overload: System.Windows.Forms.MouseEventArgs.Y*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: MouseEventArgs(MouseButtons, Int32, Int32, Int32, Int32)\n  nameWithType: MouseEventArgs.MouseEventArgs(MouseButtons, Int32, Int32, Int32, Int32)\n  fullName: MouseEventArgs.MouseEventArgs(MouseButtons, Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.MouseButtons\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseButtons\n  nameWithType: MouseButtons\n  fullName: System.Windows.Forms.MouseButtons\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.MouseEventArgs.Button\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Button\n  nameWithType: MouseEventArgs.Button\n  fullName: MouseEventArgs.Button\n- uid: System.Windows.Forms.MouseEventArgs.Clicks\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Clicks\n  nameWithType: MouseEventArgs.Clicks\n  fullName: MouseEventArgs.Clicks\n- uid: System.Windows.Forms.MouseEventArgs.Delta\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Delta\n  nameWithType: MouseEventArgs.Delta\n  fullName: MouseEventArgs.Delta\n- uid: System.Windows.Forms.MouseEventArgs.Location\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Location\n  nameWithType: MouseEventArgs.Location\n  fullName: MouseEventArgs.Location\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.MouseEventArgs.X\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: X\n  nameWithType: MouseEventArgs.X\n  fullName: MouseEventArgs.X\n- uid: System.Windows.Forms.MouseEventArgs.Y\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Y\n  nameWithType: MouseEventArgs.Y\n  fullName: MouseEventArgs.Y\n- uid: System.Windows.Forms.MouseEventArgs.#ctor*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs.MouseEventArgs\n  fullName: MouseEventArgs.MouseEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Windows.Forms.MouseEventArgs.Button*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Button\n  nameWithType: MouseEventArgs.Button\n  fullName: MouseEventArgs.Button\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Windows.Forms.MouseEventArgs.Clicks*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Clicks\n  nameWithType: MouseEventArgs.Clicks\n  fullName: MouseEventArgs.Clicks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Windows.Forms.MouseEventArgs.Delta*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Delta\n  nameWithType: MouseEventArgs.Delta\n  fullName: MouseEventArgs.Delta\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Windows.Forms.MouseEventArgs.Location*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Location\n  nameWithType: MouseEventArgs.Location\n  fullName: MouseEventArgs.Location\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Windows.Forms.MouseEventArgs.X*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: X\n  nameWithType: MouseEventArgs.X\n  fullName: MouseEventArgs.X\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Windows.Forms.MouseEventArgs.Y*\n  parent: System.Windows.Forms.MouseEventArgs\n  isExternal: false\n  name: Y\n  nameWithType: MouseEventArgs.Y\n  fullName: MouseEventArgs.Y\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}