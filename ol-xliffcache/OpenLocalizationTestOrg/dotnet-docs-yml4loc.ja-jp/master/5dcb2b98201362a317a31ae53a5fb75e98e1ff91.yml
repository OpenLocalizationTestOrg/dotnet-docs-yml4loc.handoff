### YamlMime:ManagedReference
items:
- uid: System.StringComparison
  commentId: T:System.StringComparison
  id: StringComparison
  children:
  - System.StringComparison.CurrentCulture
  - System.StringComparison.CurrentCultureIgnoreCase
  - System.StringComparison.InvariantCulture
  - System.StringComparison.InvariantCultureIgnoreCase
  - System.StringComparison.Ordinal
  - System.StringComparison.OrdinalIgnoreCase
  langs:
  - csharp
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
  type: Enum
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Specifies the culture, case, and sort rules to be used by certain overloads of the <xref href="System.String.Compare(System.String,System.String)"></xref> and <xref href="System.String.Equals(System.Object)"></xref> methods.
  remarks: "The <xref:System.StringComparison> enumeration is used to specify whether a string comparison should use the current culture or the invariant culture, word or ordinal sort rules, and be case-sensitive or case-insensitive.  \n  \n> [!IMPORTANT]\n>  When you call a string comparison method such as <xref:System.String.Compare%2A?displayProperty=fullName>, <xref:System.String.Equals%2A?displayProperty=fullName>, or <xref:System.String.IndexOf%2A?displayProperty=fullName>, you should always call an overload that includes a parameter of type <xref:System.StringComparison> so that you can specify the type of comparison that the method performs. For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).  \n  \n An operation that uses word sort rules performs a culture-sensitive comparison wherein certain nonalphanumeric Unicode characters might have special weights assigned to them. Using word sort rules and the conventions of a specific culture, the hyphen (\"-\") might have a very small weight assigned to it so that \"coop\" and \"co-op\" appear next to each other in a sorted list.  \n  \n An operation that uses ordinal sort rules performs a comparison based on the numeric value (Unicode code point) of each <xref:System.Char> in the string. An ordinal comparison is fast but culture-insensitive. When you use ordinal sort rules to sort strings that start with Unicode characters (U+), the string U+xxxx comes before the string U+yyyy if the value of xxxx is numerically less than yyyy.  \n  \n For more information about comparisons, see the <xref:System.String?displayProperty=fullName> class remarks. For more information about culture, see the <xref:System.Globalization.CultureInfo?displayProperty=fullName> class remarks. For guidelines on when to use ordinal or culture-sensitive comparison rules or the rules of the invariant culture, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md)."
  example:
  - "The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.  The comparisons use the conventions of the English (United States) and Sami, Nothern (Sweden) cultures. Note that the strings \"encyclopÃ¦dia\" and \"encyclopedia\" are considered equivalent in the en-US culture but not in the Sami, Northern (Sweden) culture.  \n  \n [!code-csharp[System.String.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex3.cs#3)]\n [!code-vb[System.String.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex3.vb#3)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum StringComparison
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.StringComparison.CurrentCulture
  commentId: F:System.StringComparison.CurrentCulture
  id: CurrentCulture
  parent: System.StringComparison
  langs:
  - csharp
  name: CurrentCulture
  nameWithType: StringComparison.CurrentCulture
  fullName: StringComparison.CurrentCulture
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compare strings using culture-sensitive sort rules and the current culture.
  syntax:
    content: CurrentCulture
    return:
      type: System.StringComparison
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
- uid: System.StringComparison.CurrentCultureIgnoreCase
  commentId: F:System.StringComparison.CurrentCultureIgnoreCase
  id: CurrentCultureIgnoreCase
  parent: System.StringComparison
  langs:
  - csharp
  name: CurrentCultureIgnoreCase
  nameWithType: StringComparison.CurrentCultureIgnoreCase
  fullName: StringComparison.CurrentCultureIgnoreCase
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compare strings using culture-sensitive sort rules, the current culture, and ignoring the case of the strings being compared.
  syntax:
    content: CurrentCultureIgnoreCase
    return:
      type: System.StringComparison
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
- uid: System.StringComparison.InvariantCulture
  commentId: F:System.StringComparison.InvariantCulture
  id: InvariantCulture
  parent: System.StringComparison
  langs:
  - csharp
  name: InvariantCulture
  nameWithType: StringComparison.InvariantCulture
  fullName: StringComparison.InvariantCulture
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Compare strings using culture-sensitive sort rules and the invariant culture.
  syntax:
    content: InvariantCulture
    return:
      type: System.StringComparison
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
- uid: System.StringComparison.InvariantCultureIgnoreCase
  commentId: F:System.StringComparison.InvariantCultureIgnoreCase
  id: InvariantCultureIgnoreCase
  parent: System.StringComparison
  langs:
  - csharp
  name: InvariantCultureIgnoreCase
  nameWithType: StringComparison.InvariantCultureIgnoreCase
  fullName: StringComparison.InvariantCultureIgnoreCase
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Compare strings using culture-sensitive sort rules, the invariant culture, and ignoring the case of the strings being compared.
  syntax:
    content: InvariantCultureIgnoreCase
    return:
      type: System.StringComparison
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
- uid: System.StringComparison.Ordinal
  commentId: F:System.StringComparison.Ordinal
  id: Ordinal
  parent: System.StringComparison
  langs:
  - csharp
  name: Ordinal
  nameWithType: StringComparison.Ordinal
  fullName: StringComparison.Ordinal
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compare strings using ordinal (binary) sort rules.
  syntax:
    content: Ordinal
    return:
      type: System.StringComparison
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
- uid: System.StringComparison.OrdinalIgnoreCase
  commentId: F:System.StringComparison.OrdinalIgnoreCase
  id: OrdinalIgnoreCase
  parent: System.StringComparison
  langs:
  - csharp
  name: OrdinalIgnoreCase
  nameWithType: StringComparison.OrdinalIgnoreCase
  fullName: StringComparison.OrdinalIgnoreCase
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compare strings using ordinal (binary) sort rules and ignoring the case of the strings being compared.
  syntax:
    content: OrdinalIgnoreCase
    return:
      type: System.StringComparison
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/StringComparison.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.StringComparison.CurrentCulture
  parent: System.StringComparison
  isExternal: false
  name: CurrentCulture
  nameWithType: StringComparison.CurrentCulture
  fullName: StringComparison.CurrentCulture
- uid: System.StringComparison
  parent: System
  isExternal: false
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.StringComparison.CurrentCultureIgnoreCase
  parent: System.StringComparison
  isExternal: false
  name: CurrentCultureIgnoreCase
  nameWithType: StringComparison.CurrentCultureIgnoreCase
  fullName: StringComparison.CurrentCultureIgnoreCase
- uid: System.StringComparison.InvariantCulture
  parent: System.StringComparison
  isExternal: false
  name: InvariantCulture
  nameWithType: StringComparison.InvariantCulture
  fullName: StringComparison.InvariantCulture
- uid: System.StringComparison.InvariantCultureIgnoreCase
  parent: System.StringComparison
  isExternal: false
  name: InvariantCultureIgnoreCase
  nameWithType: StringComparison.InvariantCultureIgnoreCase
  fullName: StringComparison.InvariantCultureIgnoreCase
- uid: System.StringComparison.Ordinal
  parent: System.StringComparison
  isExternal: false
  name: Ordinal
  nameWithType: StringComparison.Ordinal
  fullName: StringComparison.Ordinal
- uid: System.StringComparison.OrdinalIgnoreCase
  parent: System.StringComparison
  isExternal: false
  name: OrdinalIgnoreCase
  nameWithType: StringComparison.OrdinalIgnoreCase
  fullName: StringComparison.OrdinalIgnoreCase
