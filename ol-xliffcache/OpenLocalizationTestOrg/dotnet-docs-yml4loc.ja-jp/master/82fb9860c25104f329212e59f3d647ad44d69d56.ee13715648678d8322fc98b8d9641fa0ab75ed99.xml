{"nodes":[{"content":"Provides access to the run-time transaction in a workflow instance.","nodes":[{"pos":[0,67],"content":"Provides access to the run-time transaction in a workflow instance.","nodes":[{"content":"Provides access to the run-time transaction in a workflow instance.","pos":[0,67]}]}],"pos":[2427,2495],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.RuntimeTransactionHandle\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.RuntimeTransactionHandle\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.RuntimeTransactionHandle\"></xref> class."}],"pos":[4421,4526],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.RuntimeTransactionHandle\"></xref> class using the specified root transaction.","nodes":[{"pos":[0,141],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.RuntimeTransactionHandle\"&gt;&lt;/xref&gt;</ph> class using the specified root transaction.","source":"Initializes a new instance of the <xref href=\"System.Activities.RuntimeTransactionHandle\"></xref> class using the specified root transaction."}],"pos":[5825,5967],"yaml":true},{"content":"The root transaction.","nodes":[{"pos":[0,21],"content":"The root transaction.","nodes":[{"content":"The root transaction.","pos":[0,21]}]}],"pos":[6178,6200],"yaml":true},{"content":"Gets or sets whether the workflow instance should be aborted if the transaction fails.","nodes":[{"pos":[0,86],"content":"Gets or sets whether the workflow instance should be aborted if the transaction fails.","nodes":[{"content":"Gets or sets whether the workflow instance should be aborted if the transaction fails.","pos":[0,86]}]}],"pos":[7389,7476],"yaml":true},{"content":"If <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `false`, transaction failure results in the exception that causes the failure to be propagated as normal. The default value for <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `true`.","nodes":[{"pos":[0,318],"content":"If <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `false`, transaction failure results in the exception that causes the failure to be propagated as normal. The default value for <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `true`.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, transaction failure results in the exception that causes the failure to be propagated as normal.","pos":[0,198],"source":"If <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `false`, transaction failure results in the exception that causes the failure to be propagated as normal."},{"content":"The default value for <ph id=\"ph1\">&lt;xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[199,318],"source":" The default value for <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `true`."}]}],"pos":[7487,7806],"yaml":true,"extradata":"MT"},{"content":"`true` if the workflow instance should be aborted if the transaction fails; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the workflow instance should be aborted if the transaction fails; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the workflow instance should be aborted if the transaction fails; otherwise, `false`."}],"pos":[7947,8045],"yaml":true},{"content":"Completes the current run-time transaction.","nodes":[{"pos":[0,43],"content":"Completes the current run-time transaction.","nodes":[{"content":"Completes the current run-time transaction.","pos":[0,43]}]}],"pos":[9368,9412],"yaml":true},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[9623,9658],"yaml":true},{"content":"Completes the current run-time transaction and schedules the bookmark callback when the transaction is complete.","nodes":[{"pos":[0,112],"content":"Completes the current run-time transaction and schedules the bookmark callback when the transaction is complete.","nodes":[{"content":"Completes the current run-time transaction and schedules the bookmark callback when the transaction is complete.","pos":[0,112]}]}],"pos":[11126,11239],"yaml":true},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[11495,11530],"yaml":true},{"content":"The bookmark callback to be invoked when the transaction completes.","nodes":[{"pos":[0,67],"content":"The bookmark callback to be invoked when the transaction completes.","nodes":[{"content":"The bookmark callback to be invoked when the transaction completes.","pos":[0,67]}]}],"pos":[11615,11683],"yaml":true},{"content":"Returns a reference to the current run-time transaction.","nodes":[{"pos":[0,56],"content":"Returns a reference to the current run-time transaction.","nodes":[{"content":"Returns a reference to the current run-time transaction.","pos":[0,56]}]}],"pos":[13022,13079],"yaml":true},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[13325,13360],"yaml":true},{"content":"The current transaction.","nodes":[{"pos":[0,24],"content":"The current transaction.","nodes":[{"content":"The current transaction.","pos":[0,24]}]}],"pos":[13435,13460],"yaml":true},{"content":"Returns a reference to the current run-time transaction.","nodes":[{"pos":[0,56],"content":"Returns a reference to the current run-time transaction.","nodes":[{"content":"Returns a reference to the current run-time transaction.","pos":[0,56]}]}],"pos":[14771,14828],"yaml":true},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[15064,15099],"yaml":true},{"content":"The current transaction.","nodes":[{"pos":[0,24],"content":"The current transaction.","nodes":[{"content":"The current transaction.","pos":[0,24]}]}],"pos":[15174,15199],"yaml":true},{"content":"Returns a reference to the current run-time transaction.","nodes":[{"pos":[0,56],"content":"Returns a reference to the current run-time transaction.","nodes":[{"content":"Returns a reference to the current run-time transaction.","pos":[0,56]}]}],"pos":[16522,16579],"yaml":true},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[16819,16854],"yaml":true},{"content":"The current run-time transaction.","nodes":[{"pos":[0,33],"content":"The current run-time transaction.","nodes":[{"content":"The current run-time transaction.","pos":[0,33]}]}],"pos":[16929,16963],"yaml":true},{"content":"Initiates the creation of a <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> for use with a new transaction.","nodes":[{"pos":[0,131],"content":"Initiates the creation of a <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivityTransactionContext\"&gt;&lt;/xref&gt;</ph> for use with a new transaction.","source":"Initiates the creation of a <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> for use with a new transaction."}],"pos":[21627,21759],"yaml":true},{"content":"This method is used when the activity creates a new transaction for use by the runtime. The workflow could potentially persist one or more times before the callback is called. This method allows transaction scopes in multiple branches of a parallel to queue up simultaneous requests without blocking each other from persisting at the completion of the transaction. To avoid errors if the workflow persists, make sure the state object can be serialized.","nodes":[{"pos":[0,452],"content":"This method is used when the activity creates a new transaction for use by the runtime. The workflow could potentially persist one or more times before the callback is called. This method allows transaction scopes in multiple branches of a parallel to queue up simultaneous requests without blocking each other from persisting at the completion of the transaction. To avoid errors if the workflow persists, make sure the state object can be serialized.","nodes":[{"content":"This method is used when the activity creates a new transaction for use by the runtime. The workflow could potentially persist one or more times before the callback is called. This method allows transaction scopes in multiple branches of a parallel to queue up simultaneous requests without blocking each other from persisting at the completion of the transaction. To avoid errors if the workflow persists, make sure the state object can be serialized.","pos":[0,452],"nodes":[{"content":"This method is used when the activity creates a new transaction for use by the runtime.","pos":[0,87]},{"content":"The workflow could potentially persist one or more times before the callback is called.","pos":[88,175]},{"content":"This method allows transaction scopes in multiple branches of a parallel to queue up simultaneous requests without blocking each other from persisting at the completion of the transaction.","pos":[176,364]},{"content":"To avoid errors if the workflow persists, make sure the state object can be serialized.","pos":[365,452]}]}]}],"pos":[21770,22223],"yaml":true,"extradata":"MT"},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[22530,22565],"yaml":true},{"content":"The method to be called when the <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> is created.","nodes":[{"pos":[0,116],"content":"The method to be called when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivityTransactionContext\"&gt;&lt;/xref&gt;</ph> is created.","source":"The method to be called when the <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> is created."}],"pos":[22695,22812],"yaml":true},{"content":"An optional user-provided state that contains information about the request.","nodes":[{"pos":[0,76],"content":"An optional user-provided state that contains information about the request.","nodes":[{"content":"An optional user-provided state that contains information about the request.","pos":[0,76]}]}],"pos":[22873,22950],"yaml":true},{"content":"Initiates the creation of a <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> for use with an existing transaction.","nodes":[{"pos":[0,137],"content":"Initiates the creation of a <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivityTransactionContext\"&gt;&lt;/xref&gt;</ph> for use with an existing transaction.","source":"Initiates the creation of a <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> for use with an existing transaction."}],"pos":[24754,24892],"yaml":true},{"content":"This method is used when the activity has a transaction that it requires the runtime to use. The workflow cannot persist between a call to <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> and the subsequent callback. Calling <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> again before the first call completes is not allowed and all calls after the first call result in exceptions. This method allows transactions flowed in from the host to be provided to the runtime without risking an intermediate persistence point. The state object that can be serialized is not necessary because the instance is guaranteed not to persist when this method is used.","nodes":[{"pos":[0,713],"content":"This method is used when the activity has a transaction that it requires the runtime to use. The workflow cannot persist between a call to <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> and the subsequent callback. Calling <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> again before the first call completes is not allowed and all calls after the first call result in exceptions. This method allows transactions flowed in from the host to be provided to the runtime without risking an intermediate persistence point. The state object that can be serialized is not necessary because the instance is guaranteed not to persist when this method is used.","nodes":[{"content":"This method is used when the activity has a transaction that it requires the runtime to use. The workflow cannot persist between a call to <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> and the subsequent callback. Calling <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> again before the first call completes is not allowed and all calls after the first call result in exceptions. This method allows transactions flowed in from the host to be provided to the runtime without risking an intermediate persistence point. The state object that can be serialized is not necessary because the instance is guaranteed not to persist when this method is used.","pos":[0,713],"nodes":[{"content":"This method is used when the activity has a transaction that it requires the runtime to use.","pos":[0,92]},{"content":"The workflow cannot persist between a call to <ph id=\"ph1\">&lt;xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A&gt;</ph> and the subsequent callback.","pos":[93,246],"source":" The workflow cannot persist between a call to <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> and the subsequent callback."},{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A&gt;</ph> again before the first call completes is not allowed and all calls after the first call result in exceptions.","pos":[247,443],"source":" Calling <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> again before the first call completes is not allowed and all calls after the first call result in exceptions."},{"content":"This method allows transactions flowed in from the host to be provided to the runtime without risking an intermediate persistence point.","pos":[444,580]},{"content":"The state object that can be serialized is not necessary because the instance is guaranteed not to persist when this method is used.","pos":[581,713]}]}]}],"pos":[24903,25617],"yaml":true,"extradata":"MT"},{"content":"The current execution environment.","nodes":[{"pos":[0,34],"content":"The current execution environment.","nodes":[{"content":"The current execution environment.","pos":[0,34]}]}],"pos":[25924,25959],"yaml":true},{"content":"The method to be called when the <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> is created.","nodes":[{"pos":[0,116],"content":"The method to be called when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.NativeActivityTransactionContext\"&gt;&lt;/xref&gt;</ph> is created.","source":"The method to be called when the <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> is created."}],"pos":[26089,26206],"yaml":true},{"content":"An optional user-provided state that contains information about the request.","nodes":[{"pos":[0,76],"content":"An optional user-provided state that contains information about the request.","nodes":[{"content":"An optional user-provided state that contains information about the request.","pos":[0,76]}]}],"pos":[26267,26344],"yaml":true},{"content":"Gets or sets a value that indicates whether this run-time transaction is suppressed.","nodes":[{"pos":[0,84],"content":"Gets or sets a value that indicates whether this run-time transaction is suppressed.","nodes":[{"content":"Gets or sets a value that indicates whether this run-time transaction is suppressed.","pos":[0,84]}]}],"pos":[27469,27554],"yaml":true},{"content":"`true` if the run-time transaction is suppressed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the run-time transaction is suppressed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the run-time transaction is suppressed; otherwise, `false`."}],"pos":[27681,27753],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Activities.IExecutionProperty.CleanupWorkflowThread\"></xref>.","nodes":[{"pos":[0,118],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Activities.IExecutionProperty.CleanupWorkflowThread\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Activities.IExecutionProperty.CleanupWorkflowThread\"></xref>."}],"pos":[29070,29189],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Activities.IExecutionProperty.SetupWorkflowThread\"></xref>.","nodes":[{"pos":[0,116],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Activities.IExecutionProperty.SetupWorkflowThread\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Activities.IExecutionProperty.SetupWorkflowThread\"></xref>."}],"pos":[30625,30742],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"></xref>.","nodes":[{"pos":[0,155],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"></xref>."}],"pos":[32348,32504],"yaml":true},{"content":"For a description of this parameter, see <xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"></xref>.","nodes":[{"pos":[0,158],"content":"For a description of this parameter, see <ph id=\"ph1\">&lt;xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this parameter, see <xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"></xref>."}],"pos":[32723,32882],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"></xref>.","nodes":[{"pos":[0,157],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"></xref>."}],"pos":[34410,34568],"yaml":true},{"content":"For a description of this parameter, see <xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"></xref>.","nodes":[{"pos":[0,160],"content":"For a description of this parameter, see <ph id=\"ph1\">&lt;xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this parameter, see <xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"></xref>."}],"pos":[34789,34950],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.RuntimeTransactionHandle\n  commentId: T:System.Activities.RuntimeTransactionHandle\n  id: RuntimeTransactionHandle\n  children:\n  - System.Activities.RuntimeTransactionHandle.#ctor\n  - System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)\n  - System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)\n  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)\n  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)\n  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)\n  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)\n  - System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)\n  - System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)\n  - System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  - System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  - System.Activities.RuntimeTransactionHandle.SuppressTransaction\n  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread\n  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread\n  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)\n  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)\n  langs:\n  - csharp\n  name: RuntimeTransactionHandle\n  nameWithType: RuntimeTransactionHandle\n  fullName: System.Activities.RuntimeTransactionHandle\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Provides access to the run-time transaction in a workflow instance.\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public sealed class RuntimeTransactionHandle : System.Activities.Handle, System.Activities.IExecutionProperty, System.Activities.IPropertyRegistrationCallback\n  inheritance:\n  - System.Object\n  - System.Activities.Handle\n  implements:\n  - System.Activities.IExecutionProperty\n  - System.Activities.IPropertyRegistrationCallback\n  inheritedMembers:\n  - System.Activities.Handle.ExecutionPropertyName\n  - System.Activities.Handle.Owner\n  - System.Activities.Handle.ThrowIfUninitialized\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.Serialization.DataContractAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.#ctor\n  commentId: M:System.Activities.RuntimeTransactionHandle.#ctor\n  id: '#ctor'\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: RuntimeTransactionHandle()\n  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()\n  fullName: RuntimeTransactionHandle.RuntimeTransactionHandle()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.RuntimeTransactionHandle\"></xref> class.\n  syntax:\n    content: public RuntimeTransactionHandle ();\n    parameters: []\n  overload: System.Activities.RuntimeTransactionHandle.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)\n  commentId: M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)\n  id: '#ctor(System.Transactions.Transaction)'\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: RuntimeTransactionHandle(Transaction)\n  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)\n  fullName: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Activities.RuntimeTransactionHandle\"></xref> class using the specified root transaction.\n  syntax:\n    content: public RuntimeTransactionHandle (System.Transactions.Transaction rootTransaction);\n    parameters:\n    - id: rootTransaction\n      type: System.Transactions.Transaction\n      description: The root transaction.\n  overload: System.Activities.RuntimeTransactionHandle.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  commentId: P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  id: AbortInstanceOnTransactionFailure\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  fullName: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets whether the workflow instance should be aborted if the transaction fails.\n  remarks: If <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `false`, transaction failure results in the exception that causes the failure to be propagated as normal. The default value for <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `true`.\n  syntax:\n    content: public bool AbortInstanceOnTransactionFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the workflow instance should be aborted if the transaction fails; otherwise, `false`.'\n  overload: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)\n  id: CompleteTransaction(System.Activities.NativeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: CompleteTransaction(NativeActivityContext)\n  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)\n  fullName: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Completes the current run-time transaction.\n  syntax:\n    content: public void CompleteTransaction (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The current execution environment.\n  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)\n  commentId: M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)\n  id: CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: CompleteTransaction(NativeActivityContext, BookmarkCallback)\n  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext, BookmarkCallback)\n  fullName: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext, BookmarkCallback)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Completes the current run-time transaction and schedules the bookmark callback when the transaction is complete.\n  syntax:\n    content: public void CompleteTransaction (System.Activities.NativeActivityContext context, System.Activities.BookmarkCallback callback);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The current execution environment.\n    - id: callback\n      type: System.Activities.BookmarkCallback\n      description: The bookmark callback to be invoked when the transaction completes.\n  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)\n  id: GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: GetCurrentTransaction(AsyncCodeActivityContext)\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a reference to the current run-time transaction.\n  syntax:\n    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.AsyncCodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: The current execution environment.\n    return:\n      type: System.Transactions.Transaction\n      description: The current transaction.\n  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)\n  id: GetCurrentTransaction(System.Activities.CodeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: GetCurrentTransaction(CodeActivityContext)\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a reference to the current run-time transaction.\n  syntax:\n    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: The current execution environment.\n    return:\n      type: System.Transactions.Transaction\n      description: The current transaction.\n  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)\n  id: GetCurrentTransaction(System.Activities.NativeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: GetCurrentTransaction(NativeActivityContext)\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a reference to the current run-time transaction.\n  syntax:\n    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The current execution environment.\n    return:\n      type: System.Transactions.Transaction\n      description: The current run-time transaction.\n  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)\n  id: OnInitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: OnInitialize(HandleInitializationContext)\n  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)\n  fullName: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override void OnInitialize (System.Activities.HandleInitializationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.HandleInitializationContext\n      description: ''\n  overload: System.Activities.RuntimeTransactionHandle.OnInitialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)\n  id: OnUninitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: OnUninitialize(HandleInitializationContext)\n  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)\n  fullName: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override void OnUninitialize (System.Activities.HandleInitializationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.HandleInitializationContext\n      description: ''\n  overload: System.Activities.RuntimeTransactionHandle.OnUninitialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  commentId: M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  id: RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: RequestTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  fullName: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initiates the creation of a <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> for use with a new transaction.\n  remarks: This method is used when the activity creates a new transaction for use by the runtime. The workflow could potentially persist one or more times before the callback is called. This method allows transaction scopes in multiple branches of a parallel to queue up simultaneous requests without blocking each other from persisting at the completion of the transaction. To avoid errors if the workflow persists, make sure the state object can be serialized.\n  syntax:\n    content: public void RequestTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The current execution environment.\n    - id: callback\n      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}\n      description: The method to be called when the <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> is created.\n    - id: state\n      type: System.Object\n      description: An optional user-provided state that contains information about the request.\n  overload: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  commentId: M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  id: RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: RequireTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  fullName: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Initiates the creation of a <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> for use with an existing transaction.\n  remarks: This method is used when the activity has a transaction that it requires the runtime to use. The workflow cannot persist between a call to <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> and the subsequent callback. Calling <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> again before the first call completes is not allowed and all calls after the first call result in exceptions. This method allows transactions flowed in from the host to be provided to the runtime without risking an intermediate persistence point. The state object that can be serialized is not necessary because the instance is guaranteed not to persist when this method is used.\n  syntax:\n    content: public void RequireTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The current execution environment.\n    - id: callback\n      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}\n      description: The method to be called when the <xref href=\"System.Activities.NativeActivityTransactionContext\"></xref> is created.\n    - id: state\n      type: System.Object\n      description: An optional user-provided state that contains information about the request.\n  overload: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction\n  commentId: P:System.Activities.RuntimeTransactionHandle.SuppressTransaction\n  id: SuppressTransaction\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: SuppressTransaction\n  nameWithType: RuntimeTransactionHandle.SuppressTransaction\n  fullName: RuntimeTransactionHandle.SuppressTransaction\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets a value that indicates whether this run-time transaction is suppressed.\n  syntax:\n    content: public bool SuppressTransaction { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the run-time transaction is suppressed; otherwise, `false`.'\n  overload: System.Activities.RuntimeTransactionHandle.SuppressTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread\n  commentId: M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread\n  id: System#Activities#IExecutionProperty#CleanupWorkflowThread\n  isEii: true\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: IExecutionProperty.CleanupWorkflowThread()\n  nameWithType: RuntimeTransactionHandle.IExecutionProperty.CleanupWorkflowThread()\n  fullName: RuntimeTransactionHandle.IExecutionProperty.CleanupWorkflowThread()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: For a description of this member, see <xref href=\"System.Activities.IExecutionProperty.CleanupWorkflowThread\"></xref>.\n  syntax:\n    content: void IExecutionProperty.CleanupWorkflowThread ();\n    parameters: []\n  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread\n  commentId: M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread\n  id: System#Activities#IExecutionProperty#SetupWorkflowThread\n  isEii: true\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: IExecutionProperty.SetupWorkflowThread()\n  nameWithType: RuntimeTransactionHandle.IExecutionProperty.SetupWorkflowThread()\n  fullName: RuntimeTransactionHandle.IExecutionProperty.SetupWorkflowThread()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: For a description of this member, see <xref href=\"System.Activities.IExecutionProperty.SetupWorkflowThread\"></xref>.\n  syntax:\n    content: void IExecutionProperty.SetupWorkflowThread ();\n    parameters: []\n  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)\n  id: System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)\n  isEii: true\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: IPropertyRegistrationCallback.Register(RegistrationContext)\n  nameWithType: RuntimeTransactionHandle.IPropertyRegistrationCallback.Register(RegistrationContext)\n  fullName: RuntimeTransactionHandle.IPropertyRegistrationCallback.Register(RegistrationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: For a description of this member, see <xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"></xref>.\n  syntax:\n    content: void IPropertyRegistrationCallback.Register (System.Activities.RegistrationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.RegistrationContext\n      description: For a description of this parameter, see <xref href=\"System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)\"></xref>.\n  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)\n  commentId: M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)\n  id: System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)\n  isEii: true\n  parent: System.Activities.RuntimeTransactionHandle\n  langs:\n  - csharp\n  name: IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  nameWithType: RuntimeTransactionHandle.IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  fullName: RuntimeTransactionHandle.IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: For a description of this member, see <xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"></xref>.\n  syntax:\n    content: void IPropertyRegistrationCallback.Unregister (System.Activities.RegistrationContext context);\n    parameters:\n    - id: context\n      type: System.Activities.RegistrationContext\n      description: For a description of this parameter, see <xref href=\"System.Activities.IPropertyRegistrationCallback.UnRegister(System.Activities.RegistrationContext)\"></xref>.\n  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Handle\n  parent: System.Activities\n  isExternal: false\n  name: Handle\n  nameWithType: Handle\n  fullName: System.Activities.Handle\n- uid: System.Activities.RuntimeTransactionHandle.#ctor\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RuntimeTransactionHandle()\n  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()\n  fullName: RuntimeTransactionHandle.RuntimeTransactionHandle()\n- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RuntimeTransactionHandle(Transaction)\n  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)\n  fullName: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  fullName: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: CompleteTransaction(NativeActivityContext)\n  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)\n  fullName: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: CompleteTransaction(NativeActivityContext, BookmarkCallback)\n  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext, BookmarkCallback)\n  fullName: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext, BookmarkCallback)\n- uid: System.Activities.BookmarkCallback\n  parent: System.Activities\n  isExternal: false\n  name: BookmarkCallback\n  nameWithType: BookmarkCallback\n  fullName: System.Activities.BookmarkCallback\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: GetCurrentTransaction(AsyncCodeActivityContext)\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)\n- uid: System.Activities.AsyncCodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: AsyncCodeActivityContext\n  nameWithType: AsyncCodeActivityContext\n  fullName: System.Activities.AsyncCodeActivityContext\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: GetCurrentTransaction(CodeActivityContext)\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: GetCurrentTransaction(NativeActivityContext)\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)\n- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: OnInitialize(HandleInitializationContext)\n  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)\n  fullName: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)\n- uid: System.Activities.HandleInitializationContext\n  parent: System.Activities\n  isExternal: false\n  name: HandleInitializationContext\n  nameWithType: HandleInitializationContext\n  fullName: System.Activities.HandleInitializationContext\n- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: OnUninitialize(HandleInitializationContext)\n  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)\n  fullName: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)\n- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RequestTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  fullName: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n- uid: System.Action`2\n  name: Action<T1,T2>\n  nameWithType: Action<T1,T2>\n  fullName: System.Action<T1,T2>\n- uid: System.Activities.NativeActivityTransactionContext\n  name: NativeActivityTransactionContext\n  nameWithType: NativeActivityTransactionContext\n  fullName: System.Activities.NativeActivityTransactionContext\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}\n  parent: System\n  isExternal: false\n  name: Action<NativeActivityTransactionContext,Object>\n  nameWithType: Action<NativeActivityTransactionContext,Object>\n  fullName: System.Action<System.Activities.NativeActivityTransactionContext,System.Object>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.NativeActivityTransactionContext\n    name: NativeActivityTransactionContext\n    nameWithType: NativeActivityTransactionContext\n    fullName: System.Activities.NativeActivityTransactionContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RequireTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n  fullName: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext, Action<NativeActivityTransactionContext,Object>, Object)\n- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: SuppressTransaction\n  nameWithType: RuntimeTransactionHandle.SuppressTransaction\n  fullName: RuntimeTransactionHandle.SuppressTransaction\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: IExecutionProperty.CleanupWorkflowThread()\n  nameWithType: RuntimeTransactionHandle.IExecutionProperty.CleanupWorkflowThread()\n  fullName: RuntimeTransactionHandle.IExecutionProperty.CleanupWorkflowThread()\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: IExecutionProperty.SetupWorkflowThread()\n  nameWithType: RuntimeTransactionHandle.IExecutionProperty.SetupWorkflowThread()\n  fullName: RuntimeTransactionHandle.IExecutionProperty.SetupWorkflowThread()\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: IPropertyRegistrationCallback.Register(RegistrationContext)\n  nameWithType: RuntimeTransactionHandle.IPropertyRegistrationCallback.Register(RegistrationContext)\n  fullName: RuntimeTransactionHandle.IPropertyRegistrationCallback.Register(RegistrationContext)\n- uid: System.Activities.RegistrationContext\n  parent: System.Activities\n  isExternal: false\n  name: RegistrationContext\n  nameWithType: RegistrationContext\n  fullName: System.Activities.RegistrationContext\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  nameWithType: RuntimeTransactionHandle.IPropertyRegistrationCallback.Unregister(RegistrationContext)\n  fullName: RuntimeTransactionHandle.IPropertyRegistrationCallback.Unregister(RegistrationContext)\n- uid: System.Activities.RuntimeTransactionHandle.#ctor*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RuntimeTransactionHandle\n  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle\n  fullName: RuntimeTransactionHandle.RuntimeTransactionHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: AbortInstanceOnTransactionFailure\n  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  fullName: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: CompleteTransaction\n  nameWithType: RuntimeTransactionHandle.CompleteTransaction\n  fullName: RuntimeTransactionHandle.CompleteTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: GetCurrentTransaction\n  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction\n  fullName: RuntimeTransactionHandle.GetCurrentTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.OnInitialize*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: OnInitialize\n  nameWithType: RuntimeTransactionHandle.OnInitialize\n  fullName: RuntimeTransactionHandle.OnInitialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: OnUninitialize\n  nameWithType: RuntimeTransactionHandle.OnUninitialize\n  fullName: RuntimeTransactionHandle.OnUninitialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RequestTransactionContext\n  nameWithType: RuntimeTransactionHandle.RequestTransactionContext\n  fullName: RuntimeTransactionHandle.RequestTransactionContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: RequireTransactionContext\n  nameWithType: RuntimeTransactionHandle.RequireTransactionContext\n  fullName: RuntimeTransactionHandle.RequireTransactionContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: SuppressTransaction\n  nameWithType: RuntimeTransactionHandle.SuppressTransaction\n  fullName: RuntimeTransactionHandle.SuppressTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: System.Activities.IExecutionProperty.CleanupWorkflowThread\n  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread\n  fullName: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: System.Activities.IExecutionProperty.SetupWorkflowThread\n  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread\n  fullName: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: System.Activities.IPropertyRegistrationCallback.Register\n  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register\n  fullName: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*\n  parent: System.Activities.RuntimeTransactionHandle\n  isExternal: false\n  name: System.Activities.IPropertyRegistrationCallback.Unregister\n  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister\n  fullName: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/RuntimeTransactionHandle.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Handle.ExecutionPropertyName\n  parent: System.Activities.Handle\n  isExternal: false\n  name: ExecutionPropertyName\n  nameWithType: Handle.ExecutionPropertyName\n  fullName: Handle.ExecutionPropertyName\n- uid: System.Activities.Handle.Owner\n  parent: System.Activities.Handle\n  isExternal: false\n  name: Owner\n  nameWithType: Handle.Owner\n  fullName: Handle.Owner\n- uid: System.Activities.Handle.ThrowIfUninitialized\n  parent: System.Activities.Handle\n  isExternal: false\n  name: ThrowIfUninitialized()\n  nameWithType: Handle.ThrowIfUninitialized()\n  fullName: Handle.ThrowIfUninitialized()\n- uid: System.Activities.IExecutionProperty\n  parent: System.Activities\n  isExternal: false\n  name: IExecutionProperty\n  nameWithType: IExecutionProperty\n  fullName: System.Activities.IExecutionProperty\n- uid: System.Activities.IPropertyRegistrationCallback\n  parent: System.Activities\n  isExternal: false\n  name: IPropertyRegistrationCallback\n  nameWithType: IPropertyRegistrationCallback\n  fullName: System.Activities.IPropertyRegistrationCallback\n"}