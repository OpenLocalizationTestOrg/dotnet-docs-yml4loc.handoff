### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Utilities.CommandLineBuilder
  commentId: T:Microsoft.Build.Utilities.CommandLineBuilder
  id: CommandLineBuilder
  children:
  - Microsoft.Build.Utilities.CommandLineBuilder.#ctor
  - Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.CommandLine
  - Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)
  - Microsoft.Build.Utilities.CommandLineBuilder.Length
  - Microsoft.Build.Utilities.CommandLineBuilder.ToString
  - Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)
  langs:
  - csharp
  name: CommandLineBuilder
  nameWithType: CommandLineBuilder
  fullName: Microsoft.Build.Utilities.CommandLineBuilder
  type: Class
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Comprises utility methods for constructing a command line.
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]"
  syntax:
    content: public class CommandLineBuilder
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Build.Tasks.CommandLineBuilderExtension
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.#ctor
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: CommandLineBuilder()
  nameWithType: CommandLineBuilder.CommandLineBuilder()
  fullName: CommandLineBuilder.CommandLineBuilder()
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Initializes a new instance of the <xref href="Microsoft.Build.Utilities.CommandLineBuilder"></xref> class.
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]"
  syntax:
    content: public CommandLineBuilder ();
    parameters: []
  overload: Microsoft.Build.Utilities.CommandLineBuilder.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: CommandLineBuilder(Boolean)
  nameWithType: CommandLineBuilder.CommandLineBuilder(Boolean)
  fullName: CommandLineBuilder.CommandLineBuilder(Boolean)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Default constructor
  syntax:
    content: public CommandLineBuilder (bool quoteHyphensOnCommandLine);
    parameters:
    - id: quoteHyphensOnCommandLine
      type: System.Boolean
      description: If true, hyphens should be quoted.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)
  id: AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendFileNameIfNotNull(ITaskItem)
  nameWithType: CommandLineBuilder.AppendFileNameIfNotNull(ITaskItem)
  fullName: CommandLineBuilder.AppendFileNameIfNotNull(ITaskItem)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with the file name of the specified <xref href="Microsoft.Build.Framework.ITaskItem"></xref> object.
  remarks: "This method appends the command line with a task item specification, and surrounds task item specification with quotations marks as necessary.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the task item specification."
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]"
  syntax:
    content: public void AppendFileNameIfNotNull (Microsoft.Build.Framework.ITaskItem fileItem);
    parameters:
    - id: fileItem
      type: Microsoft.Build.Framework.ITaskItem
      description: The task item specification to append to the command line. If it is `null`, then this method has no effect.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)
  id: AppendFileNameIfNotNull(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendFileNameIfNotNull(String)
  nameWithType: CommandLineBuilder.AppendFileNameIfNotNull(String)
  fullName: CommandLineBuilder.AppendFileNameIfNotNull(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.
  remarks: "This method appends the command line with a file name, and surrounds the file name with quotation marks as necessary.  \n  \n If the first character of the file name is a dash, then `.\\` is added to the beginning of the file name to distinguish it from a switch.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the file name."
  example:
  - '`AppendFileNameIfNotNull("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.'
  syntax:
    content: public void AppendFileNameIfNotNull (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: The file name to append. If it is `null`, then this method has no effect.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)
  id: AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendFileNamesIfNotNull(ITaskItem[], String)
  nameWithType: CommandLineBuilder.AppendFileNamesIfNotNull(ITaskItem[], String)
  fullName: CommandLineBuilder.AppendFileNamesIfNotNull(ITaskItem[], String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with the list of file names in the specified <xref href="Microsoft.Build.Framework.ITaskItem"></xref> array, separated by the specified delimiter.
  remarks: "This method appends the command line with file names, and surrounds the file names with quotation marks as necessary. The file names are separated by the specified delimiter.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the file names."
  example:
  - See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.
  syntax:
    content: public void AppendFileNamesIfNotNull (Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter);
    parameters:
    - id: fileItems
      type: Microsoft.Build.Framework.ITaskItem[]
      description: The task item specifications to append. If the array is `null`, then this method has no effect.
    - id: delimiter
      type: System.String
      description: The delimiter to put between task item specifications in the command line.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)
  id: AppendFileNamesIfNotNull(System.String[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendFileNamesIfNotNull(String[], String)
  nameWithType: CommandLineBuilder.AppendFileNamesIfNotNull(String[], String)
  fullName: CommandLineBuilder.AppendFileNamesIfNotNull(String[], String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with the list of file names in the specified `string` array, separated by the specified delimiter.
  remarks: "This method appends the command line with file names, and surrounds the file names with quotation marks as necessary. The file names are separated by the specified delimiter.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the file names."
  example:
  - '`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` yields `Alpha.cs,Beta.cs`.'
  syntax:
    content: public void AppendFileNamesIfNotNull (string[] fileNames, string delimiter);
    parameters:
    - id: fileNames
      type: System.String[]
      description: The file names to append. If the array is `null`, then this method has no effect.
    - id: delimiter
      type: System.String
      description: The delimiter to put between file names in the command line.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)
  id: AppendFileNameWithQuoting(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendFileNameWithQuoting(String)
  nameWithType: CommandLineBuilder.AppendFileNameWithQuoting(String)
  fullName: CommandLineBuilder.AppendFileNameWithQuoting(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.
  remarks: "If the first character of the file name is a dash, then `.\\` is added to the beginning of the file name to distinguish it from a switch.  \n  \n This method does not append the command line with a space, before executing."
  example:
  - '`AppendFileNameWithQuoting("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.'
  syntax:
    content: protected void AppendFileNameWithQuoting (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: The file name to append.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)
  id: AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendQuotedTextToBuffer(StringBuilder, String)
  nameWithType: CommandLineBuilder.AppendQuotedTextToBuffer(StringBuilder, String)
  fullName: CommandLineBuilder.AppendQuotedTextToBuffer(StringBuilder, String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends given text to the buffer after first quoting the text if necessary.
  syntax:
    content: protected void AppendQuotedTextToBuffer (System.Text.StringBuilder buffer, string unquotedTextToAppend);
    parameters:
    - id: buffer
      type: System.Text.StringBuilder
      description: The buffer to append to.
    - id: unquotedTextToAppend
      type: System.String
      description: The text to be quoted.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty
  id: AppendSpaceIfNotEmpty
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSpaceIfNotEmpty()
  nameWithType: CommandLineBuilder.AppendSpaceIfNotEmpty()
  fullName: CommandLineBuilder.AppendSpaceIfNotEmpty()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Adds a space to the specified string, given the string is not empty.
  remarks: This method is only available to inherited classes.
  syntax:
    content: protected void AppendSpaceIfNotEmpty ();
    parameters: []
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)
  id: AppendSwitch(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitch(String)
  nameWithType: CommandLineBuilder.AppendSwitch(String)
  fullName: CommandLineBuilder.AppendSwitch(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with the specified switch.
  remarks: If the command line is not empty, then this method also appends the command line with a space, before the switch.
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]"
  syntax:
    content: public void AppendSwitch (string switchName);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)
  id: AppendSwitchIfNotNull(System.String,System.String[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchIfNotNull(String, String[], String)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, String[], String)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, String[], String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes an array of string parameters.
  remarks: "This method encapsulates individual file names with quotation marks as necessary.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the switch."
  example:
  - '`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;\"Be ta.cs\"`.'
  syntax:
    content: public void AppendSwitchIfNotNull (string switchName, string[] parameters, string delimiter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameters
      type: System.String[]
      description: An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is `null`, then this method has no effect.
    - id: delimiter
      type: System.String
      description: The delimiter that separates individual parameters. This value can be empty, but it cannot be `null`.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  id: AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchIfNotNull(String, ITaskItem[], String)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem[], String)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem[], String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes an array of task item specifications that act as string parameters.
  remarks: "This method encapsulates individual file names with quotation marks as necessary.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the switch."
  example:
  - See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.
  syntax:
    content: public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameters
      type: Microsoft.Build.Framework.ITaskItem[]
      description: An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is `null`, then this method has no effect.
    - id: delimiter
      type: System.String
      description: The delimiter that separates individual parameters. This value can be empty, but it cannot be `null`.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  id: AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchIfNotNull(String, ITaskItem)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes a task item specification that acts a single string parameter.
  remarks: "This method encapsulates individual file names with quotation marks as necessary.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the switch."
  example:
  - See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.
  syntax:
    content: public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameter
      type: Microsoft.Build.Framework.ITaskItem
      description: The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is `null`, then this method has no effect.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)
  id: AppendSwitchIfNotNull(System.String,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchIfNotNull(String, String)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, String)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes a single string parameter.
  remarks: "This method encapsulates individual file names with quotation marks as necessary.  \n  \n If the command line is not empty, then this method also appends the command line with a space, before the switch."
  example:
  - '`AppendSwitchIfNotNull("/source:", "File Name.cs")` yields `/source:\"File Name.cs\"`.'
  syntax:
    content: public void AppendSwitchIfNotNull (string switchName, string parameter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameter
      type: System.String
      description: The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is `null`, then this method has no effect.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  id: AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchUnquotedIfNotNull(String, ITaskItem)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.
  remarks: If the command line is not empty, then this method also appends the command line with a space, before the switch.
  example:
  - See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.
  syntax:
    content: public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameter
      type: Microsoft.Build.Framework.ITaskItem
      description: The switch parameter to append to the command line. Quotation marks will not be added. If this value is `null`, then this method has no effect.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)
  id: AppendSwitchUnquotedIfNotNull(System.String,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchUnquotedIfNotNull(String, String)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.
  remarks: If the command line is not empty, then this method also appends the command line with a space, before the switch.
  example:
  - '`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` yields `/source:File Name.cs`.'
  syntax:
    content: public void AppendSwitchUnquotedIfNotNull (string switchName, string parameter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameter
      type: System.String
      description: The switch parameter to append to the command line. Quotation marks will not be added. If this value is `null`, then this method has no effect.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  id: AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchUnquotedIfNotNull(String, ITaskItem[], String)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem[], String)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem[], String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.
  remarks: If the command line is not empty, then this method also appends the command line with a space, before the switch.
  example:
  - See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.
  syntax:
    content: public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameters
      type: Microsoft.Build.Framework.ITaskItem[]
      description: An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is `null`, then this method has no effect.
    - id: delimiter
      type: System.String
      description: The delimiter that separates individual parameters. This value can be empty, but it cannot be `null`.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)
  id: AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendSwitchUnquotedIfNotNull(String, String[], String)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String[], String)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String[], String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.
  remarks: If the command line is not empty, then this method also appends the command line with a space, before the switch.
  example:
  - '`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;Be ta.cs`.'
  syntax:
    content: public void AppendSwitchUnquotedIfNotNull (string switchName, string[] parameters, string delimiter);
    parameters:
    - id: switchName
      type: System.String
      description: The name of the switch to append to the command line. This value cannot be `null`.
    - id: parameters
      type: System.String[]
      description: An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is `null`, then this method has no effect.
    - id: delimiter
      type: System.String
      description: The delimiter that separates individual parameters. This value can be empty, but it cannot be `null`.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)
  id: AppendTextUnquoted(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendTextUnquoted(String)
  nameWithType: CommandLineBuilder.AppendTextUnquoted(String)
  fullName: CommandLineBuilder.AppendTextUnquoted(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with string, without attempting to encapsulate the string with quotation marks.
  remarks: This method does not append the command line with a space, before executing.
  example:
  - '`AppendTextUnquoted(@"Folder name\filename.cs")` yields `Folder name\\filename.cs`.'
  syntax:
    content: public void AppendTextUnquoted (string textToAppend);
    parameters:
    - id: textToAppend
      type: System.String
      description: The string to append to the command line.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)
  id: AppendTextWithQuoting(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: AppendTextWithQuoting(String)
  nameWithType: CommandLineBuilder.AppendTextWithQuoting(String)
  fullName: CommandLineBuilder.AppendTextWithQuoting(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Appends the command line with string, and surrounds the string with quotations marks as necessary.
  remarks: This method does not append the command line with a space, before executing.
  example:
  - '`AppendTextWithQuoting(@"Folder name\filename.cs")` yields `\"Folder name\\filename.cs\"`.'
  syntax:
    content: protected void AppendTextWithQuoting (string textToAppend);
    parameters:
    - id: textToAppend
      type: System.String
      description: The string to append to the command line.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.CommandLine
  commentId: P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine
  id: CommandLine
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: CommandLine
  nameWithType: CommandLineBuilder.CommandLine
  fullName: CommandLineBuilder.CommandLine
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Gets the <xref href="System.Text.StringBuilder"></xref> instance representing the command line for inheriting classes.
  syntax:
    content: protected System.Text.StringBuilder CommandLine { get; }
    return:
      type: System.Text.StringBuilder
      description: A <xref href="System.Text.StringBuilder"></xref> for inheriting classes.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.CommandLine*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)
  id: IsQuotingRequired(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: IsQuotingRequired(String)
  nameWithType: CommandLineBuilder.IsQuotingRequired(String)
  fullName: CommandLineBuilder.IsQuotingRequired(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.
  syntax:
    content: protected virtual bool IsQuotingRequired (string parameter);
    parameters:
    - id: parameter
      type: System.String
      description: The string to examine for characters that require quotation marks.
    return:
      type: System.Boolean
      description: '`true`, if the switch parameter should be surrounded with quotation marks; otherwise, `false`.'
  overload: Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.Length
  commentId: P:Microsoft.Build.Utilities.CommandLineBuilder.Length
  id: Length
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: Length
  nameWithType: CommandLineBuilder.Length
  fullName: CommandLineBuilder.Length
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Represents the length of the command line.
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.Build.Utilities.CommandLineBuilder.Length*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.ToString
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.ToString
  id: ToString
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: ToString()
  nameWithType: CommandLineBuilder.ToString()
  fullName: CommandLineBuilder.ToString()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Returns the command line as a string.
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n msbuild_ToolTask#1"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that represents the command line.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
- uid: Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)
  commentId: M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)
  id: VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  langs:
  - csharp
  name: VerifyThrowNoEmbeddedDoubleQuotes(String, String)
  nameWithType: CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(String, String)
  fullName: CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(String, String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: Returns an error if the command line parameter contains a double-quote (") character. Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.
  remarks: <xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> is a virtual method so that your applications can override this method if you want to allow double-quotes escaped in filenames.
  syntax:
    content: protected virtual void VerifyThrowNoEmbeddedDoubleQuotes (string switchName, string parameter);
    parameters:
    - id: switchName
      type: System.String
      description: A string representing the switch name for the error message.
    - id: parameter
      type: System.String
      description: A string representing the switch parameter to scan for double-quotes.
  overload: Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
  ms.author: susanno
  manager: douge
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Build.Utilities.CommandLineBuilder.#ctor
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: CommandLineBuilder()
  nameWithType: CommandLineBuilder.CommandLineBuilder()
  fullName: CommandLineBuilder.CommandLineBuilder()
- uid: Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: CommandLineBuilder(Boolean)
  nameWithType: CommandLineBuilder.CommandLineBuilder(Boolean)
  fullName: CommandLineBuilder.CommandLineBuilder(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNameIfNotNull(ITaskItem)
  nameWithType: CommandLineBuilder.AppendFileNameIfNotNull(ITaskItem)
  fullName: CommandLineBuilder.AppendFileNameIfNotNull(ITaskItem)
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNameIfNotNull(String)
  nameWithType: CommandLineBuilder.AppendFileNameIfNotNull(String)
  fullName: CommandLineBuilder.AppendFileNameIfNotNull(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNamesIfNotNull(ITaskItem[], String)
  nameWithType: CommandLineBuilder.AppendFileNamesIfNotNull(ITaskItem[], String)
  fullName: CommandLineBuilder.AppendFileNamesIfNotNull(ITaskItem[], String)
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem[]
  nameWithType: ITaskItem[]
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: Microsoft.Build.Framework.ITaskItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNamesIfNotNull(String[], String)
  nameWithType: CommandLineBuilder.AppendFileNamesIfNotNull(String[], String)
  fullName: CommandLineBuilder.AppendFileNamesIfNotNull(String[], String)
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNameWithQuoting(String)
  nameWithType: CommandLineBuilder.AppendFileNameWithQuoting(String)
  fullName: CommandLineBuilder.AppendFileNameWithQuoting(String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendQuotedTextToBuffer(StringBuilder, String)
  nameWithType: CommandLineBuilder.AppendQuotedTextToBuffer(StringBuilder, String)
  fullName: CommandLineBuilder.AppendQuotedTextToBuffer(StringBuilder, String)
- uid: System.Text.StringBuilder
  parent: System.Text
  isExternal: false
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSpaceIfNotEmpty()
  nameWithType: CommandLineBuilder.AppendSpaceIfNotEmpty()
  fullName: CommandLineBuilder.AppendSpaceIfNotEmpty()
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitch(String)
  nameWithType: CommandLineBuilder.AppendSwitch(String)
  fullName: CommandLineBuilder.AppendSwitch(String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchIfNotNull(String, String[], String)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, String[], String)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, String[], String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchIfNotNull(String, ITaskItem[], String)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem[], String)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem[], String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchIfNotNull(String, ITaskItem)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, ITaskItem)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchIfNotNull(String, String)
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull(String, String)
  fullName: CommandLineBuilder.AppendSwitchIfNotNull(String, String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchUnquotedIfNotNull(String, ITaskItem)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchUnquotedIfNotNull(String, String)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchUnquotedIfNotNull(String, ITaskItem[], String)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem[], String)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, ITaskItem[], String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchUnquotedIfNotNull(String, String[], String)
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String[], String)
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull(String, String[], String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendTextUnquoted(String)
  nameWithType: CommandLineBuilder.AppendTextUnquoted(String)
  fullName: CommandLineBuilder.AppendTextUnquoted(String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendTextWithQuoting(String)
  nameWithType: CommandLineBuilder.AppendTextWithQuoting(String)
  fullName: CommandLineBuilder.AppendTextWithQuoting(String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.CommandLine
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: CommandLine
  nameWithType: CommandLineBuilder.CommandLine
  fullName: CommandLineBuilder.CommandLine
- uid: Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: IsQuotingRequired(String)
  nameWithType: CommandLineBuilder.IsQuotingRequired(String)
  fullName: CommandLineBuilder.IsQuotingRequired(String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.Length
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: Length
  nameWithType: CommandLineBuilder.Length
  fullName: CommandLineBuilder.Length
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Utilities.CommandLineBuilder.ToString
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: ToString()
  nameWithType: CommandLineBuilder.ToString()
  fullName: CommandLineBuilder.ToString()
- uid: Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: VerifyThrowNoEmbeddedDoubleQuotes(String, String)
  nameWithType: CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(String, String)
  fullName: CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(String, String)
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNameIfNotNull
  nameWithType: CommandLineBuilder.AppendFileNameIfNotNull
  fullName: CommandLineBuilder.AppendFileNameIfNotNull
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.#ctor*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: CommandLineBuilder
  nameWithType: CommandLineBuilder.CommandLineBuilder
  fullName: CommandLineBuilder.CommandLineBuilder
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNamesIfNotNull
  nameWithType: CommandLineBuilder.AppendFileNamesIfNotNull
  fullName: CommandLineBuilder.AppendFileNamesIfNotNull
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendFileNameWithQuoting
  nameWithType: CommandLineBuilder.AppendFileNameWithQuoting
  fullName: CommandLineBuilder.AppendFileNameWithQuoting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendQuotedTextToBuffer
  nameWithType: CommandLineBuilder.AppendQuotedTextToBuffer
  fullName: CommandLineBuilder.AppendQuotedTextToBuffer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSpaceIfNotEmpty
  nameWithType: CommandLineBuilder.AppendSpaceIfNotEmpty
  fullName: CommandLineBuilder.AppendSpaceIfNotEmpty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitch
  nameWithType: CommandLineBuilder.AppendSwitch
  fullName: CommandLineBuilder.AppendSwitch
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchIfNotNull
  nameWithType: CommandLineBuilder.AppendSwitchIfNotNull
  fullName: CommandLineBuilder.AppendSwitchIfNotNull
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendSwitchUnquotedIfNotNull
  nameWithType: CommandLineBuilder.AppendSwitchUnquotedIfNotNull
  fullName: CommandLineBuilder.AppendSwitchUnquotedIfNotNull
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendTextUnquoted
  nameWithType: CommandLineBuilder.AppendTextUnquoted
  fullName: CommandLineBuilder.AppendTextUnquoted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: AppendTextWithQuoting
  nameWithType: CommandLineBuilder.AppendTextWithQuoting
  fullName: CommandLineBuilder.AppendTextWithQuoting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.CommandLine*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: CommandLine
  nameWithType: CommandLineBuilder.CommandLine
  fullName: CommandLineBuilder.CommandLine
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: IsQuotingRequired
  nameWithType: CommandLineBuilder.IsQuotingRequired
  fullName: CommandLineBuilder.IsQuotingRequired
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.Length*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: Length
  nameWithType: CommandLineBuilder.Length
  fullName: CommandLineBuilder.Length
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.ToString*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: ToString
  nameWithType: CommandLineBuilder.ToString
  fullName: CommandLineBuilder.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes*
  parent: Microsoft.Build.Utilities.CommandLineBuilder
  isExternal: false
  name: VerifyThrowNoEmbeddedDoubleQuotes
  nameWithType: CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes
  fullName: CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Utilities/CommandLineBuilder.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
