### YamlMime:ManagedReference
items:
- uid: System.Web.Routing.RouteBase
  commentId: T:System.Web.Routing.RouteBase
  id: RouteBase
  children:
  - System.Web.Routing.RouteBase.#ctor
  - System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)
  - System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  - System.Web.Routing.RouteBase.RouteExistingFiles
  langs:
  - csharp
  name: RouteBase
  nameWithType: RouteBase
  fullName: System.Web.Routing.RouteBase
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: Serves as the base class for all classes that represent an ASP.NET route.
  remarks: The <xref:System.Web.Routing.RouteBase> class enables you to create customized classes for defining routes in your application. Typically, you will use the <xref:System.Web.Routing.Route> class when you define routes. The <xref:System.Web.Routing.Route> class derives from the <xref:System.Web.Routing.RouteBase> class. However, if you want to provide different functionality than what is provided by the <xref:System.Web.Routing.Route> class, you create a class that derives from <xref:System.Web.Routing.RouteBase> and implement the properties and methods that you need.
  syntax:
    content: public abstract class RouteBase
  inheritance:
  - System.Object
  derivedClasses:
  - System.Web.Routing.Route
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Routing.RouteBase.#ctor
  commentId: M:System.Web.Routing.RouteBase.#ctor
  id: '#ctor'
  parent: System.Web.Routing.RouteBase
  langs:
  - csharp
  name: RouteBase()
  nameWithType: RouteBase.RouteBase()
  fullName: RouteBase.RouteBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.
  syntax:
    content: protected RouteBase ();
    parameters: []
  overload: System.Web.Routing.RouteBase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)
  commentId: M:System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)
  id: GetRouteData(System.Web.HttpContextBase)
  parent: System.Web.Routing.RouteBase
  langs:
  - csharp
  name: GetRouteData(HttpContextBase)
  nameWithType: RouteBase.GetRouteData(HttpContextBase)
  fullName: RouteBase.GetRouteData(HttpContextBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: When overridden in a derived class, returns route information about the request.
  syntax:
    content: public abstract System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);
    parameters:
    - id: httpContext
      type: System.Web.HttpContextBase
      description: An object that encapsulates information about the HTTP request.
    return:
      type: System.Web.Routing.RouteData
      description: An object that contains the values from the route definition if the route matches the current request, or `null` if the route does not match the request.
  overload: System.Web.Routing.RouteBase.GetRouteData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  commentId: M:System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  id: GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.Routing.RouteBase
  langs:
  - csharp
  name: GetVirtualPath(RequestContext, RouteValueDictionary)
  nameWithType: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)
  fullName: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: When overridden in a derived class, checks whether the route matches the specified values, and if so, generates a URL and retrieves information about the route.
  remarks: To generate a URL, you use the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> class. That method calls the <xref:System.Web.Routing.RouteBase.GetVirtualPath%2A> method for each route in the collection to determine whether that route matches the values in `values` and can therefore generate the URL.
  syntax:
    content: public abstract System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);
    parameters:
    - id: requestContext
      type: System.Web.Routing.RequestContext
      description: An object that encapsulates information about the requested route.
    - id: values
      type: System.Web.Routing.RouteValueDictionary
      description: An object that contains the parameters for a route.
    return:
      type: System.Web.Routing.VirtualPathData
      description: An object that contains the generated URL and information about the route, or `null` if the route does not match <code>values</code>.
  overload: System.Web.Routing.RouteBase.GetVirtualPath*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Routing.RouteBase.RouteExistingFiles
  commentId: P:System.Web.Routing.RouteBase.RouteExistingFiles
  id: RouteExistingFiles
  parent: System.Web.Routing.RouteBase
  langs:
  - csharp
  name: RouteExistingFiles
  nameWithType: RouteBase.RouteExistingFiles
  fullName: RouteBase.RouteExistingFiles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Routing
  summary: Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.
  syntax:
    content: public bool RouteExistingFiles { get; set; }
    return:
      type: System.Boolean
      description: '`true` if ASP.NET routing handles all requests, even those that match an existing file; otherwise, `false`. The default value is `false`.'
  overload: System.Web.Routing.RouteBase.RouteExistingFiles*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Routing.RouteBase.#ctor
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: RouteBase()
  nameWithType: RouteBase.RouteBase()
  fullName: RouteBase.RouteBase()
- uid: System.Web.Routing.RouteBase.GetRouteData(System.Web.HttpContextBase)
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: GetRouteData(HttpContextBase)
  nameWithType: RouteBase.GetRouteData(HttpContextBase)
  fullName: RouteBase.GetRouteData(HttpContextBase)
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: false
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.HttpContextBase
  parent: System.Web
  isExternal: false
  name: HttpContextBase
  nameWithType: HttpContextBase
  fullName: System.Web.HttpContextBase
- uid: System.Web.Routing.RouteBase.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: GetVirtualPath(RequestContext, RouteValueDictionary)
  nameWithType: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)
  fullName: RouteBase.GetVirtualPath(RequestContext, RouteValueDictionary)
- uid: System.Web.Routing.VirtualPathData
  parent: System.Web.Routing
  isExternal: false
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: System.Web.Routing.VirtualPathData
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: false
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.Routing.RouteBase.RouteExistingFiles
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: RouteExistingFiles
  nameWithType: RouteBase.RouteExistingFiles
  fullName: RouteBase.RouteExistingFiles
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Routing.RouteBase.#ctor*
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: RouteBase
  nameWithType: RouteBase.RouteBase
  fullName: RouteBase.RouteBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
- uid: System.Web.Routing.RouteBase.GetRouteData*
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: GetRouteData
  nameWithType: RouteBase.GetRouteData
  fullName: RouteBase.GetRouteData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
- uid: System.Web.Routing.RouteBase.GetVirtualPath*
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: GetVirtualPath
  nameWithType: RouteBase.GetVirtualPath
  fullName: RouteBase.GetVirtualPath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
- uid: System.Web.Routing.RouteBase.RouteExistingFiles*
  parent: System.Web.Routing.RouteBase
  isExternal: false
  name: RouteExistingFiles
  nameWithType: RouteBase.RouteExistingFiles
  fullName: RouteBase.RouteExistingFiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Routing/RouteBase.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
