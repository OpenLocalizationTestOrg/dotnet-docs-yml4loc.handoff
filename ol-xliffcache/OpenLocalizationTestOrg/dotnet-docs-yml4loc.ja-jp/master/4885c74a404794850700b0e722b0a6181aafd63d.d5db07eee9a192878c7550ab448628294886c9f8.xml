{"nodes":[{"content":"A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.","nodes":[{"pos":[0,135],"content":"A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.","nodes":[{"content":"A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.","pos":[0,135]}]}],"pos":[3005,3141],"yaml":true},{"content":"This generic class enables more advanced scenarios where there is a requirement to create a channel factory that can be used to create more than one type of channel.  \n  \n When adding behaviors programmatically, the behavior is added to the appropriate `Behaviors` property on the <xref:System.ServiceModel.ChannelFactory> prior to the creation of any channel. See the example section for a code sample.  \n  \n Frequently client or calling applications (for example, middle-tier applications are client applications, too) using this type also have complex state management needs as well as performance needs. For more information about these scenarios, please see [Middle-Tier Client Applications](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md).","nodes":[{"pos":[0,165],"content":"This generic class enables more advanced scenarios where there is a requirement to create a channel factory that can be used to create more than one type of channel.","nodes":[{"content":"This generic class enables more advanced scenarios where there is a requirement to create a channel factory that can be used to create more than one type of channel.","pos":[0,165]}]},{"pos":[172,403],"content":"When adding behaviors programmatically, the behavior is added to the appropriate `Behaviors` property on the <xref:System.ServiceModel.ChannelFactory> prior to the creation of any channel. See the example section for a code sample.","nodes":[{"content":"When adding behaviors programmatically, the behavior is added to the appropriate <ph id=\"ph1\">`Behaviors`</ph> property on the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> prior to the creation of any channel.","pos":[0,188],"source":"When adding behaviors programmatically, the behavior is added to the appropriate `Behaviors` property on the <xref:System.ServiceModel.ChannelFactory> prior to the creation of any channel."},{"content":"See the example section for a code sample.","pos":[189,231]}]},{"pos":[410,770],"content":"Frequently client or calling applications (for example, middle-tier applications are client applications, too) using this type also have complex state management needs as well as performance needs. For more information about these scenarios, please see [Middle-Tier Client Applications](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md).","nodes":[{"content":"Frequently client or calling applications (for example, middle-tier applications are client applications, too) using this type also have complex state management needs as well as performance needs.","pos":[0,197]},{"content":"For more information about these scenarios, please see <bpt id=\"p1\">[</bpt>Middle-Tier Client Applications<ept id=\"p1\">](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md)</ept>.","pos":[198,360],"source":" For more information about these scenarios, please see [Middle-Tier Client Applications](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md)."}]}],"pos":[3152,3929],"yaml":true,"extradata":"MT"},{"content":"The type of channel produced by the channel factory. This type must be either <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.","nodes":[{"pos":[0,212],"content":"The type of channel produced by the channel factory. This type must be either <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.","nodes":[{"content":"The type of channel produced by the channel factory.","pos":[0,52]},{"content":"This type must be either <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IOutputChannel\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IRequestChannel\"&gt;&lt;/xref&gt;</ph>.","pos":[53,212],"source":" This type must be either <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>."}]}],"pos":[4794,5007],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class."}],"pos":[10294,10393],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class."}],"pos":[12077,12176],"yaml":true},{"content":"Use this constructor when you want to pass the binding information programmatically rather than using an application configuration file.","nodes":[{"pos":[0,136],"content":"Use this constructor when you want to pass the binding information programmatically rather than using an application configuration file.","nodes":[{"content":"Use this constructor when you want to pass the binding information programmatically rather than using an application configuration file.","pos":[0,136]}]}],"pos":[12187,12324],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> specified for the channels produced by the factory.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> specified for the channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> specified for the channels produced by the factory."}],"pos":[12519,12633],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class that produces channels with a specified endpoint.","nodes":[{"pos":[0,147],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class that produces channels with a specified endpoint.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class that produces channels with a specified endpoint."}],"pos":[14012,14160],"yaml":true},{"content":"Use this constructor when you want to pass the service endpoint information programmatically rather than using an application configuration file.","nodes":[{"pos":[0,145],"content":"Use this constructor when you want to pass the service endpoint information programmatically rather than using an application configuration file.","nodes":[{"content":"Use this constructor when you want to pass the service endpoint information programmatically rather than using an application configuration file.","pos":[0,145]}]}],"pos":[14171,14317],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> for the channels produced by the factory.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> for the channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> for the channels produced by the factory."}],"pos":[14665,14780],"yaml":true},{"content":"The <code>endpoint</code> is `null`.","nodes":[{"pos":[0,36],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">endpoint</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The <code>endpoint</code> is `null`."}],"pos":[14952,14989],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified endpoint configuration name.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with a specified endpoint configuration name.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified endpoint configuration name."}],"pos":[16166,16310],"yaml":true},{"content":"Use this constructor when there is more than one target endpoint in the application configuration file.","nodes":[{"pos":[0,103],"content":"Use this constructor when there is more than one target endpoint in the application configuration file.","nodes":[{"content":"Use this constructor when there is more than one target endpoint in the application configuration file.","pos":[0,103]}]}],"pos":[16321,16425],"yaml":true,"extradata":"MT"},{"content":"The configuration name used for the endpoint.","nodes":[{"pos":[0,45],"content":"The configuration name used for the endpoint.","nodes":[{"content":"The configuration name used for the endpoint.","pos":[0,45]}]}],"pos":[16732,16778],"yaml":true},{"content":"<code>endpointConfigurationName</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>endpointConfigurationName</code> is `null`."}],"pos":[16950,17000],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class."}],"pos":[18165,18264],"yaml":true},{"content":"Use this constructor when you want to pass the channel type information programmatically rather than using an application configuration file. The `channelType` parameter must be an interface.","nodes":[{"pos":[0,191],"content":"Use this constructor when you want to pass the channel type information programmatically rather than using an application configuration file. The `channelType` parameter must be an interface.","nodes":[{"content":"Use this constructor when you want to pass the channel type information programmatically rather than using an application configuration file.","pos":[0,141]},{"content":"The <ph id=\"ph1\">`channelType`</ph> parameter must be an interface.","pos":[142,191],"source":" The `channelType` parameter must be an interface."}]}],"pos":[18275,18467],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of channel produced by the factory.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of channel produced by the factory.","source":"The <xref href=\"System.Type\"></xref> of channel produced by the factory."}],"pos":[18616,18689],"yaml":true},{"content":"The <code>channelType</code> is `null`.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">channelType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The <code>channelType</code> is `null`."}],"pos":[18861,18901],"yaml":true},{"content":"The <code>channelType</code> is a class or value type and is not an interface.","nodes":[{"pos":[0,78],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">channelType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a class or value type and is not an interface.","source":"The <code>channelType</code> is a class or value type and is not an interface."}],"pos":[19011,19090],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified binding and endpoint address.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with a specified binding and endpoint address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified binding and endpoint address."}],"pos":[20498,20643],"yaml":true},{"content":"Use this constructor when you want to pass the binding and address information programmatically rather than using an application configuration file.","nodes":[{"pos":[0,148],"content":"Use this constructor when you want to pass the binding and address information programmatically rather than using an application configuration file.","nodes":[{"content":"Use this constructor when you want to pass the binding and address information programmatically rather than using an application configuration file.","pos":[0,148]}]}],"pos":[20654,20803],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to configure the endpoint.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint."}],"pos":[21178,21272],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[21363,21467],"yaml":true},{"content":"The <code>binding</code> is `null`.","nodes":[{"pos":[0,35],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binding</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The <code>binding</code> is `null`."}],"pos":[21639,21675],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified binding and remote address.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with a specified binding and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified binding and remote address."}],"pos":[22990,23133],"yaml":true},{"content":"Use this constructor when you want to pass the information about the remote address information with a string rather than as a typed object.","nodes":[{"pos":[0,140],"content":"Use this constructor when you want to pass the information about the remote address information with a string rather than as a typed object.","nodes":[{"content":"Use this constructor when you want to pass the information about the remote address information with a string rather than as a typed object.","pos":[0,140]}]}],"pos":[23144,23285],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to configure the endpoint.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint."}],"pos":[23631,23725],"yaml":true},{"content":"The address that provides the location of the service.","nodes":[{"pos":[0,54],"content":"The address that provides the location of the service.","nodes":[{"content":"The address that provides the location of the service.","pos":[0,54]}]}],"pos":[23794,23849],"yaml":true},{"content":"<code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>remoteAddress</code> is `null`."}],"pos":[24021,24059],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class associated with a specified name for the endpoint configuration and remote address.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class associated with a specified name for the endpoint configuration and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class associated with a specified name for the endpoint configuration and remote address."}],"pos":[25395,25577],"yaml":true},{"content":"The configuration name used for the endpoint.","nodes":[{"pos":[0,45],"content":"The configuration name used for the endpoint.","nodes":[{"content":"The configuration name used for the endpoint.","pos":[0,45]}]}],"pos":[25949,25995],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[26086,26190],"yaml":true},{"content":"<code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`."}],"pos":[26362,26442],"yaml":true},{"content":"Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.","nodes":[{"pos":[0,167],"content":"Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.","nodes":[{"content":"Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.","pos":[0,167]}]}],"pos":[27882,28050],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to configure the endpoint.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint."}],"pos":[28457,28551],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the channel sends messages.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the channel sends messages.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the channel sends messages."}],"pos":[28703,28812],"yaml":true},{"content":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.","nodes":[{"pos":[0,116],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> created by the factory.","source":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory."}],"pos":[28864,28981],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory\"&gt;&lt;/xref&gt;</ph> has duplex operations it does not support.","source":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support."}],"pos":[29169,29272],"yaml":true},{"content":"Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.","nodes":[{"pos":[0,130],"content":"Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.","nodes":[{"content":"Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.","pos":[0,130]}]}],"pos":[30574,30705],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[31066,31170],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the channel sends messages.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the channel sends messages.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the channel sends messages."}],"pos":[31226,31335],"yaml":true},{"content":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.","nodes":[{"pos":[0,116],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> created by the factory.","source":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory."}],"pos":[31387,31504],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[31684,31716],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory\"&gt;&lt;/xref&gt;</ph> has duplex operations it does not support.","source":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support."}],"pos":[31826,31929],"yaml":true},{"content":"Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.","nodes":[{"pos":[0,134],"content":"Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.","nodes":[{"content":"Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.","pos":[0,134]}]}],"pos":[33321,33456],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to configure the endpoint.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint."}],"pos":[33854,33948],"yaml":true},{"content":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.","nodes":[{"pos":[0,116],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> created by the factory.","source":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory."}],"pos":[34096,34213],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory\"&gt;&lt;/xref&gt;</ph> has duplex operations it does not support.","source":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support."}],"pos":[34401,34504],"yaml":true},{"content":"Creates a channel that is used to send messages to a service at a specific endpoint address.","nodes":[{"pos":[0,92],"content":"Creates a channel that is used to send messages to a service at a specific endpoint address.","nodes":[{"content":"Creates a channel that is used to send messages to a service at a specific endpoint address.","pos":[0,92]}]}],"pos":[35758,35851],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[36195,36299],"yaml":true},{"content":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.","nodes":[{"pos":[0,116],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> created by the factory.","source":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory."}],"pos":[36351,36468],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[36648,36680],"yaml":true},{"content":"Creates a channel of a specified type to a specified endpoint address.","nodes":[{"pos":[0,70],"content":"Creates a channel of a specified type to a specified endpoint address.","nodes":[{"content":"Creates a channel of a specified type to a specified endpoint address.","pos":[0,70]}]}],"pos":[37778,37849],"yaml":true},{"content":"Creates a channel of type `TChannel`, the generic parameter for the class.","nodes":[{"pos":[0,74],"content":"Creates a channel of type <ph id=\"ph1\">`TChannel`</ph>, the generic parameter for the class.","source":"Creates a channel of type `TChannel`, the generic parameter for the class."}],"pos":[37860,37935],"yaml":true,"extradata":"MT"},{"content":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.","nodes":[{"pos":[0,116],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> created by the factory.","source":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory."}],"pos":[38192,38309],"yaml":true},{"content":"Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.","nodes":[{"pos":[0,109],"content":"Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.","nodes":[{"content":"Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.","pos":[0,109]}]}],"pos":[39551,39661],"yaml":true},{"content":"The name of the endpoint configuration used for the service.","nodes":[{"pos":[0,60],"content":"The name of the endpoint configuration used for the service.","nodes":[{"content":"The name of the endpoint configuration used for the service.","pos":[0,60]}]}],"pos":[40000,40061],"yaml":true},{"content":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.","nodes":[{"pos":[0,116],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> created by the factory.","source":"The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory."}],"pos":[40113,40230],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ChannelFactory\"&gt;&lt;/xref&gt;</ph> has duplex operations it does not support.","source":"The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support."}],"pos":[40418,40521],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an act as security token.","nodes":[{"pos":[0,91],"content":"Creates a channel that is used to send messages to a service with an act as security token.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an act as security token.","pos":[0,91]}]}],"pos":[41871,41963],"yaml":true},{"content":"The security token.","nodes":[{"pos":[0,19],"content":"The security token.","nodes":[{"content":"The security token.","pos":[0,19]}]}],"pos":[42196,42216],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[42268,42297],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address.","nodes":[{"pos":[0,122],"content":"Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address.","pos":[0,122]}]}],"pos":[43777,43900],"yaml":true},{"content":"The security token","nodes":[{"pos":[0,18],"content":"The security token","nodes":[{"content":"The security token","pos":[0,18]}]}],"pos":[44178,44197],"yaml":true},{"content":"The endpoint address that provides the location of the service.","nodes":[{"pos":[0,63],"content":"The endpoint address that provides the location of the service.","nodes":[{"content":"The endpoint address that provides the location of the service.","pos":[0,63]}]}],"pos":[44282,44346],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[44398,44427],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address through a specified transport address.","nodes":[{"pos":[0,160],"content":"Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address through a specified transport address.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address through a specified transport address.","pos":[0,160]}]}],"pos":[45955,46116],"yaml":true},{"content":"The security token","nodes":[{"pos":[0,18],"content":"The security token","nodes":[{"content":"The security token","pos":[0,18]}]}],"pos":[46403,46422],"yaml":true},{"content":"The endpoint address that provides the location of the service.","nodes":[{"pos":[0,63],"content":"The endpoint address that provides the location of the service.","nodes":[{"content":"The endpoint address that provides the location of the service.","pos":[0,63]}]}],"pos":[46507,46571],"yaml":true},{"content":"The transport address to which the channel sends messages.","nodes":[{"pos":[0,58],"content":"The transport address to which the channel sends messages.","nodes":[{"content":"The transport address to which the channel sends messages.","pos":[0,58]}]}],"pos":[46627,46686],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[46738,46767],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an issued security token.","nodes":[{"pos":[0,91],"content":"Creates a channel that is used to send messages to a service with an issued security token.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an issued security token.","pos":[0,91]}]}],"pos":[48094,48186],"yaml":true},{"content":"The issued security token.","nodes":[{"pos":[0,26],"content":"The issued security token.","nodes":[{"content":"The issued security token.","pos":[0,26]}]}],"pos":[48422,48449],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[48501,48530],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address.","nodes":[{"pos":[0,122],"content":"Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address.","pos":[0,122]}]}],"pos":[50017,50140],"yaml":true},{"content":"The issued security token.","nodes":[{"pos":[0,26],"content":"The issued security token.","nodes":[{"content":"The issued security token.","pos":[0,26]}]}],"pos":[50421,50448],"yaml":true},{"content":"The endpoint address that provides the location of the service.","nodes":[{"pos":[0,63],"content":"The endpoint address that provides the location of the service.","nodes":[{"content":"The endpoint address that provides the location of the service.","pos":[0,63]}]}],"pos":[50533,50597],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[50649,50678],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address through a specified transport address.","nodes":[{"pos":[0,160],"content":"Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address through a specified transport address.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address through a specified transport address.","pos":[0,160]}]}],"pos":[52213,52374],"yaml":true},{"content":"The issued security token.","nodes":[{"pos":[0,26],"content":"The issued security token.","nodes":[{"content":"The issued security token.","pos":[0,26]}]}],"pos":[52664,52691],"yaml":true},{"content":"The endpoint address that provides the location of the service.","nodes":[{"pos":[0,63],"content":"The endpoint address that provides the location of the service.","nodes":[{"content":"The endpoint address that provides the location of the service.","pos":[0,63]}]}],"pos":[52776,52840],"yaml":true},{"content":"The transport address to which the channel sends messages.","nodes":[{"pos":[0,58],"content":"The transport address to which the channel sends messages.","nodes":[{"content":"The transport address to which the channel sends messages.","pos":[0,58]}]}],"pos":[52896,52955],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[53007,53036],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address through a specified transport address.","nodes":[{"pos":[0,166],"content":"Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address through a specified transport address.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address through a specified transport address.","pos":[0,166]}]}],"pos":[54595,54762],"yaml":true},{"content":"The security token.","nodes":[{"pos":[0,19],"content":"The security token.","nodes":[{"content":"The security token.","pos":[0,19]}]}],"pos":[55054,55074],"yaml":true},{"content":"The endpoint address that provides the location of the service.","nodes":[{"pos":[0,63],"content":"The endpoint address that provides the location of the service.","nodes":[{"content":"The endpoint address that provides the location of the service.","pos":[0,63]}]}],"pos":[55159,55223],"yaml":true},{"content":"The transport address to which the channel sends messages.","nodes":[{"pos":[0,58],"content":"The transport address to which the channel sends messages.","nodes":[{"content":"The transport address to which the channel sends messages.","pos":[0,58]}]}],"pos":[55279,55338],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[55390,55419],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an on behalf of security token.","nodes":[{"pos":[0,97],"content":"Creates a channel that is used to send messages to a service with an on behalf of security token.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an on behalf of security token.","pos":[0,97]}]}],"pos":[56775,56873],"yaml":true},{"content":"The security token.","nodes":[{"pos":[0,19],"content":"The security token.","nodes":[{"content":"The security token.","pos":[0,19]}]}],"pos":[57111,57131],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[57183,57212],"yaml":true},{"content":"Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address.","nodes":[{"pos":[0,128],"content":"Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address.","nodes":[{"content":"Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address.","pos":[0,128]}]}],"pos":[58727,58856],"yaml":true},{"content":"The security token.","nodes":[{"pos":[0,19],"content":"The security token.","nodes":[{"content":"The security token.","pos":[0,19]}]}],"pos":[59139,59159],"yaml":true},{"content":"The endpoint address that provides the location of the service.","nodes":[{"pos":[0,63],"content":"The endpoint address that provides the location of the service.","nodes":[{"content":"The endpoint address that provides the location of the service.","pos":[0,63]}]}],"pos":[59244,59308],"yaml":true},{"content":"The created channel factory.","nodes":[{"pos":[0,28],"content":"The created channel factory.","nodes":[{"content":"The created channel factory.","pos":[0,28]}]}],"pos":[59360,59389],"yaml":true},{"content":"Creates a description of the service endpoint.","nodes":[{"pos":[0,46],"content":"Creates a description of the service endpoint.","nodes":[{"content":"Creates a description of the service endpoint.","pos":[0,46]}]}],"pos":[60487,60534],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> of the service.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> of the service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> of the service."}],"pos":[60756,60845],"yaml":true},{"content":"The callback contract is `null` but the service endpoint requires one that is non-`null`.","nodes":[{"pos":[0,89],"content":"The callback contract is <ph id=\"ph1\">`null`</ph> but the service endpoint requires one that is non-<ph id=\"ph2\">`null`</ph>.","source":"The callback contract is `null` but the service endpoint requires one that is non-`null`."}],"pos":[61037,61127],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ChannelFactory`1\n  commentId: T:System.ServiceModel.ChannelFactory`1\n  id: ChannelFactory`1\n  children:\n  - System.ServiceModel.ChannelFactory`1.#ctor\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.String)\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.Type)\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateDescription\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>\n  nameWithType: ChannelFactory<TChannel>\n  fullName: System.ServiceModel.ChannelFactory<TChannel>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.\n  remarks: \"This generic class enables more advanced scenarios where there is a requirement to create a channel factory that can be used to create more than one type of channel.  \\n  \\n When adding behaviors programmatically, the behavior is added to the appropriate `Behaviors` property on the <xref:System.ServiceModel.ChannelFactory> prior to the creation of any channel. See the example section for a code sample.  \\n  \\n Frequently client or calling applications (for example, middle-tier applications are client applications, too) using this type also have complex state management needs as well as performance needs. For more information about these scenarios, please see [Middle-Tier Client Applications](~/docs/framework/wcf/feature-details/middle-tier-client-applications.md).\"\n  example:\n  - \"The following sample shows how to create a channel factory and use it to create and manage channels.  \\n  \\n [!code-csharp[S_UEChannels#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#21)]  \\n  \\n The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.  \\n  \\n [!code-csharp[ChannelFactoryBehaviors#10](~/samples/snippets/csharp/VS_Snippets_CFX/channelfactorybehaviors/cs/client.cs#10)]\\n [!code-vb[ChannelFactoryBehaviors#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/channelfactorybehaviors/vb/client.vb#10)]\"\n  syntax:\n    content: 'public class ChannelFactory<TChannel> : System.ServiceModel.ChannelFactory, System.ServiceModel.Channels.IChannelFactory<TChannel>'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel produced by the channel factory. This type must be either <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ChannelFactory\n  derivedClasses:\n  - System.ServiceModel.DuplexChannelFactory`1\n  - System.ServiceModel.Configuration.ConfigurationChannelFactory`1\n  - System.ServiceModel.Security.WSTrustChannelFactory\n  - System.ServiceModel.Web.WebChannelFactory`1\n  implements:\n  - System.ServiceModel.Channels.IChannelFactory{TChannel}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  - System.ServiceModel.ChannelFactory.CreateFactory\n  - System.ServiceModel.ChannelFactory.Credentials\n  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  - System.ServiceModel.ChannelFactory.Endpoint\n  - System.ServiceModel.ChannelFactory.EnsureOpened\n  - System.ServiceModel.ChannelFactory.GetProperty``1\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.OnAbort\n  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnOpened\n  - System.ServiceModel.ChannelFactory.OnOpening\n  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>()\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>()\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class.\n  remarks: ''\n  example:\n  - \"This example shows how to create a new object of the <xref:System.ServiceModel.ChannelFactory%601> class with the `IRequestChannel` interface.  \\n  \\n [!code-csharp[S_UEChannels#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#24)]\"\n  syntax:\n    content: public ChannelFactory ();\n    parameters: []\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  id: '#ctor(System.ServiceModel.Channels.Binding)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(Binding)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class.\n  remarks: Use this constructor when you want to pass the binding information programmatically rather than using an application configuration file.\n  syntax:\n    content: public ChannelFactory (System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> specified for the channels produced by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  id: '#ctor(System.ServiceModel.Description.ServiceEndpoint)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(ServiceEndpoint)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class that produces channels with a specified endpoint.\n  remarks: Use this constructor when you want to pass the service endpoint information programmatically rather than using an application configuration file.\n  example:\n  - '[!code-csharp[S_UEChannels#25](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#25)]'\n  syntax:\n    content: public ChannelFactory (System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> for the channels produced by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>endpoint</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(String)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified endpoint configuration name.\n  remarks: Use this constructor when there is more than one target endpoint in the application configuration file.\n  example:\n  - '[!code-csharp[S_UEChannels#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#23)]'\n  syntax:\n    content: public ChannelFactory (string endpointConfigurationName);\n    parameters:\n    - id: endpointConfigurationName\n      type: System.String\n      description: The configuration name used for the endpoint.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>endpointConfigurationName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.Type)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(Type)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class.\n  remarks: Use this constructor when you want to pass the channel type information programmatically rather than using an application configuration file. The `channelType` parameter must be an interface.\n  syntax:\n    content: protected ChannelFactory (Type channelType);\n    parameters:\n    - id: channelType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of channel produced by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>channelType</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>channelType</code> is a class or value type and is not an interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified binding and endpoint address.\n  remarks: Use this constructor when you want to pass the binding and address information programmatically rather than using an application configuration file.\n  example:\n  - '[!code-csharp[S_UEChannels#26](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#26)]'\n  syntax:\n    content: public ChannelFactory (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>binding</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)\n  id: '#ctor(System.ServiceModel.Channels.Binding,System.String)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(Binding, String)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, String)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class with a specified binding and remote address.\n  remarks: Use this constructor when you want to pass the information about the remote address information with a string rather than as a typed object.\n  example:\n  - '[!code-csharp[S_UEChannels#29](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#29)]'\n  syntax:\n    content: public ChannelFactory (System.ServiceModel.Channels.Binding binding, string remoteAddress);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.\n    - id: remoteAddress\n      type: System.String\n      description: The address that provides the location of the service.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.String,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: ChannelFactory<TChannel>(String, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\"></xref> class associated with a specified name for the endpoint configuration and remote address.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#24)]'\n  syntax:\n    content: public ChannelFactory (string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: endpointConfigurationName\n      type: System.String\n      description: The configuration name used for the endpoint.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.ChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(Binding, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#33](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#33)]'\n  syntax:\n    content: public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.\n    - id: endpointAddress\n      type: System.ServiceModel.EndpointAddress\n      description: ''\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the channel sends messages.\n    return:\n      type: TChannel\n      description: The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#28](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#28)]'\n  syntax:\n    content: public virtual TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the channel sends messages.\n    return:\n      type: TChannel\n      description: The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#31](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#31)]'\n  syntax:\n    content: public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to configure the endpoint.\n    - id: endpointAddress\n      type: System.ServiceModel.EndpointAddress\n      description: ''\n    return:\n      type: TChannel\n      description: The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service at a specific endpoint address.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#27](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#27)]'\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    return:\n      type: TChannel\n      description: The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel\n  id: CreateChannel\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel()\n  nameWithType: ChannelFactory<TChannel>.CreateChannel()\n  fullName: ChannelFactory<TChannel>.CreateChannel()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel of a specified type to a specified endpoint address.\n  remarks: Creates a channel of type `TChannel`, the generic parameter for the class.\n  example:\n  - '[!code-csharp[S_UEChannels#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#30)]'\n  syntax:\n    content: public TChannel CreateChannel ();\n    parameters: []\n    return:\n      type: TChannel\n      description: The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  id: CreateChannel(System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(String)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)\n  fullName: ChannelFactory<TChannel>.CreateChannel(String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#21)]'\n  syntax:\n    content: protected static TChannel CreateChannel (string endpointConfigurationName);\n    parameters:\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name of the endpoint configuration used for the service.\n    return:\n      type: TChannel\n      description: The <code>TChannel</code> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> created by the factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ServiceModel.ChannelFactory\"></xref> has duplex operations it does not support.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  id: CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithActAsToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an act as security token.\n  syntax:\n    content: public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken);\n    parameters:\n    - id: actAsToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  id: CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address.\n  syntax:\n    content: public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: actAsToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The endpoint address that provides the location of the service.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address through a specified transport address.\n  syntax:\n    content: public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken, System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: actAsToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The endpoint address that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The transport address to which the channel sends messages.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  id: CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithIssuedToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an issued security token.\n  syntax:\n    content: public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken);\n    parameters:\n    - id: issuedToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The issued security token.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  id: CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address.\n  syntax:\n    content: public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: issuedToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The issued security token.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The endpoint address that provides the location of the service.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address through a specified transport address.\n  syntax:\n    content: public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken, System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: issuedToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The issued security token.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The endpoint address that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The transport address to which the channel sends messages.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address through a specified transport address.\n  syntax:\n    content: public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf, System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: onBehalfOf\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The endpoint address that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The transport address to which the channel sends messages.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  id: CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an on behalf of security token.\n  syntax:\n    content: public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf);\n    parameters:\n    - id: onBehalfOf\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  id: CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address.\n  syntax:\n    content: public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: onBehalfOf\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The endpoint address that provides the location of the service.\n    return:\n      type: TChannel\n      description: The created channel factory.\n  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.ChannelFactory`1.CreateDescription\n  commentId: M:System.ServiceModel.ChannelFactory`1.CreateDescription\n  id: CreateDescription\n  parent: System.ServiceModel.ChannelFactory`1\n  langs:\n  - csharp\n  name: CreateDescription()\n  nameWithType: ChannelFactory<TChannel>.CreateDescription()\n  fullName: ChannelFactory<TChannel>.CreateDescription()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a description of the service endpoint.\n  syntax:\n    content: protected override System.ServiceModel.Description.ServiceEndpoint CreateDescription ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> of the service.\n  overload: System.ServiceModel.ChannelFactory`1.CreateDescription*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The callback contract is `null` but the service endpoint requires one that is non-`null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ChannelFactory\n  parent: System.ServiceModel\n  isExternal: false\n  name: ChannelFactory\n  nameWithType: ChannelFactory\n  fullName: System.ServiceModel.ChannelFactory\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.ChannelFactory`1.#ctor\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>()\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>()\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>()\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(Binding)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(ServiceEndpoint)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(String)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.Type)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(Type)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, EndpointAddress)\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(Binding, String)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, String)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding, String)\n- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>(String, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel()\n  nameWithType: ChannelFactory<TChannel>.CreateChannel()\n  fullName: ChannelFactory<TChannel>.CreateChannel()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(String)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)\n  fullName: ChannelFactory<TChannel>.CreateChannel(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateDescription\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateDescription()\n  nameWithType: ChannelFactory<TChannel>.CreateDescription()\n  fullName: ChannelFactory<TChannel>.CreateDescription()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel*\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel\n  nameWithType: ChannelFactory<TChannel>.CreateChannel\n  fullName: ChannelFactory<TChannel>.CreateChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n- uid: System.ServiceModel.ChannelFactory`1.#ctor*\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: ChannelFactory<TChannel>\n  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>\n  fullName: ChannelFactory<TChannel>.ChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n- uid: System.ServiceModel.ChannelFactory`1.CreateDescription*\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateDescription\n  nameWithType: ChannelFactory<TChannel>.CreateDescription\n  fullName: ChannelFactory<TChannel>.CreateDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ChannelFactory`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelFactory.DefaultCloseTimeout\n  fullName: ChannelFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelFactory.DefaultOpenTimeout\n  fullName: ChannelFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ChannelFactory.OnAbort\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ChannelFactory.OnAbort()\n  fullName: ChannelFactory.OnAbort()\n- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelFactory.OnClose(TimeSpan)\n  fullName: ChannelFactory.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)\n  fullName: ChannelFactory.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)\n  fullName: ChannelFactory.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ChannelFactory.OnOpen(TimeSpan)\n  fullName: ChannelFactory.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ChannelFactory.OnOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ChannelFactory.OnOpened()\n  fullName: ChannelFactory.OnOpened()\n- uid: System.ServiceModel.ChannelFactory.OnOpening\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpening()\n  nameWithType: ChannelFactory.OnOpening()\n  fullName: ChannelFactory.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: ApplyConfiguration(String)\n  nameWithType: ChannelFactory.ApplyConfiguration(String)\n  fullName: ChannelFactory.ApplyConfiguration(String)\n- uid: System.ServiceModel.ChannelFactory.CreateFactory\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: CreateFactory()\n  nameWithType: ChannelFactory.CreateFactory()\n  fullName: ChannelFactory.CreateFactory()\n- uid: System.ServiceModel.ChannelFactory.Credentials\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Credentials\n  nameWithType: ChannelFactory.Credentials\n  fullName: ChannelFactory.Credentials\n- uid: System.ServiceModel.ChannelFactory.Endpoint\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Endpoint\n  nameWithType: ChannelFactory.Endpoint\n  fullName: ChannelFactory.Endpoint\n- uid: System.ServiceModel.ChannelFactory.EnsureOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: EnsureOpened()\n  nameWithType: ChannelFactory.EnsureOpened()\n  fullName: ChannelFactory.EnsureOpened()\n- uid: System.ServiceModel.ChannelFactory.GetProperty``1\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelFactory.GetProperty<T>()\n  fullName: ChannelFactory.GetProperty<T>()\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(String, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(Binding, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(ServiceEndpoint)\n  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n  fullName: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ChannelFactory.IDisposable.Dispose()\n  fullName: ChannelFactory.IDisposable.Dispose()\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n"}