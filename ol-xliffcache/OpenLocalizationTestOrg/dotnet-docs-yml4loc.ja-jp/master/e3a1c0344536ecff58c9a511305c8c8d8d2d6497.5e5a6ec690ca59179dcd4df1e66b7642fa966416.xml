{"nodes":[{"content":"Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.","nodes":[{"pos":[0,142],"content":"Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.","nodes":[{"content":"Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.","pos":[0,142]}]}],"pos":[3330,3473],"yaml":true},{"content":"In this topic:  \n  \n-   [Introduction](#introduction)  \n  \n-   [Order of Operations](#order_of_operations)  \n  \n-   [Ordering Data](#ordering_data)  \n  \n-   [Grouping Data](#grouping_data)  \n  \n-   [Data Modifications](#data_modifications)  \n  \n-   [Evaluating Values at Run Time](#evaluating_value_at_run_time)  \n  \n-   [Working with Stored Procedures](#working_with_stored_procedures)  \n  \n-   [Declarative Syntax](#declarative_syntax)  \n  \n<a name=\"introduction\"></a>   \n## Introduction  \n Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language. The data object can be an in-memory data collection or an object that represents data from a database. You can retrieve or modify the data without having to write SQL commands for each operation.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text. The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands. For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).  \n  \n When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection. You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection. For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values. In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`.  \n  \n When you are querying a database, you must first create entity classes that represent the database and its tables. You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes. You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table.  \n  \n<a name=\"order_of_operations\"></a>   \n## Order of Operations  \n The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:  \n  \n1.  Where (specify which data records to return).  \n  \n2.  Order By (sort).  \n  \n3.  Group By (aggregate data records that share values).  \n  \n4.  Order Groups By (sort grouped data).  \n  \n5.  Select (specify which fields or properties to return).  \n  \n6.  Auto-sort (sort data records by a property that the user has selected).  \n  \n7.  Auto-page (retrieve a subset of data records that were selected by the user).  \n  \n You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query. If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.  \n  \n<a name=\"ordering_data\"></a>   \n## Ordering Data  \n You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by.  \n  \n> [!NOTE]\n>  When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.  \n  \n<a name=\"grouping_data\"></a>   \n## Grouping Data  \n You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values. When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `Key` property refers to the values in the property or properties that were used to group the data. For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property. The `It` property refers to a collection of individual records in a grouping of data. You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation. For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.  \n  \n You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data. When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.  \n  \n By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties. The Select operation is applied after the Where, Order By, and Group By operations. Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.  \n  \n<a name=\"data_modifications\"></a>   \n## Data Modifications  \n You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties. The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control. In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:  \n  \n-   The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value.  \n  \n-   The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value.  \n  \n-   The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.  \n  \n-   The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.  \n  \n You can restrict which properties are displayed in a data-bound control in two ways. You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls. However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled. If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control. When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`. This prevents the data-bound control from automatically including buttons for editing and deleting the data. Any values that are not displayed in the data-bound control are stored in view state. They are passed unchanged to the data source when the data update is performed.  \n  \n<a name=\"evaluating_value_at_run_time\"></a>   \n## Evaluating Values at Run Time  \n If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections.  \n  \n If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.  \n  \n If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events. You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.  \n  \n To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events.  \n  \n<a name=\"working_with_stored_procedures\"></a>   \n## Working with Stored Procedures  \n You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object. If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).  \n  \n<a name=\"declarative_syntax\"></a>   \n## Declarative Syntax  \n  \n```  \n<asp:LinqDataSource  \n    AutoGenerateOrderByClause=\"True|False\"  \n    AutoGenerateWhereClause=\"True|False\"  \n    AutoPage=\"True|False\"  \n    AutoSort=\"True|False\"  \n    ContextTypeName=\"string\"  \n    EnableDelete=\"True|False\"  \n    EnableInsert=\"True|False\"  \n    EnableTheming=\"True|False\"  \n    EnableUpdate=\"True|False\"  \n    EnableViewState=\"True|False\"  \n    GroupBy=\"string\"  \n    ID=\"string\"  \n    OnContextCreated=\"ContextCreated event handler\"  \n    OnContextCreating=\"ContextCreating event handler\"  \n    OnContextDisposing=\"ContextDisposing event handler\"  \n    OnDataBinding=\"DataBinding event handler\"  \n    OnDeleted=\"Deleted event handler\"  \n    OnDeleting=\"Deleting event handler\"  \n    OnDisposed=\"Disposed event handler\"  \n    OnInit=\"Init event handler\"  \n    OnInserted=\"Inserted event handler\"  \n    OnInserting=\"Inserting event handler\"  \n    OnLoad=\"Load event handler\"  \n    OnPreRender=\"PreRender event handler\"  \n    OnSelected=\"Selected event handler\"  \n    OnSelecting=\"Selecting event handler\"  \n    OnUnload=\"Unload event handler\"  \n    OnUpdated=\"Updated event handler\"  \n    OnUpdating=\"Updating event handler\"  \n    OrderBy=\"string\"  \n    runat=\"server\"  \n    Select=\"string\"  \n    SkinID=\"string\"  \n    StoreOriginalValuesInViewState=\"True|False\"  \n    TableName=\"string\"  \n    Visible=\"True|False\"  \n    Where=\"string\"  \n>  \n        <GroupByParameters />  \n        <InsertParameters />  \n        <OrderByParameters />  \n        <SelectParameters />  \n        <WhereParameters />  \n</asp:LinqDataSource>  \n```","nodes":[{"pos":[0,14],"content":"In this topic:","nodes":[{"content":"In this topic:","pos":[0,14]}]},{"pos":[24,53],"content":"<bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept>","source":"[Introduction](#introduction)"},{"pos":[63,106],"content":"<bpt id=\"p1\">[</bpt>Order of Operations<ept id=\"p1\">](#order_of_operations)</ept>","source":"[Order of Operations](#order_of_operations)"},{"pos":[116,147],"content":"<bpt id=\"p1\">[</bpt>Ordering Data<ept id=\"p1\">](#ordering_data)</ept>","source":"[Ordering Data](#ordering_data)"},{"pos":[157,188],"content":"<bpt id=\"p1\">[</bpt>Grouping Data<ept id=\"p1\">](#grouping_data)</ept>","source":"[Grouping Data](#grouping_data)"},{"pos":[198,239],"content":"<bpt id=\"p1\">[</bpt>Data Modifications<ept id=\"p1\">](#data_modifications)</ept>","source":"[Data Modifications](#data_modifications)"},{"pos":[249,311],"content":"<bpt id=\"p1\">[</bpt>Evaluating Values at Run Time<ept id=\"p1\">](#evaluating_value_at_run_time)</ept>","source":"[Evaluating Values at Run Time](#evaluating_value_at_run_time)"},{"pos":[321,386],"content":"<bpt id=\"p1\">[</bpt>Working with Stored Procedures<ept id=\"p1\">](#working_with_stored_procedures)</ept>","source":"[Working with Stored Procedures](#working_with_stored_procedures)"},{"pos":[396,437],"content":"<bpt id=\"p1\">[</bpt>Declarative Syntax<ept id=\"p1\">](#declarative_syntax)</ept>","source":"[Declarative Syntax](#declarative_syntax)"},{"pos":[477,489],"content":"Introduction","linkify":"Introduction","nodes":[{"content":"Introduction","pos":[0,12]}]},{"pos":[493,911],"content":"Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language. The data object can be an in-memory data collection or an object that represents data from a database. You can retrieve or modify the data without having to write SQL commands for each operation.","nodes":[{"content":"Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language. The data object can be an in-memory data collection or an object that represents data from a database. You can retrieve or modify the data without having to write SQL commands for each operation.","pos":[0,418],"nodes":[{"content":"Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.","pos":[0,222]},{"content":"The data object can be an in-memory data collection or an object that represents data from a database.","pos":[223,325]},{"content":"You can retrieve or modify the data without having to write SQL commands for each operation.","pos":[326,418]}]}]},{"pos":[918,1315],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text. The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands. For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.","pos":[0,144],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically generate the data commands.","pos":[145,266],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands."},{"content":"For more information about LINQ to SQL, see <bpt id=\"p1\">[</bpt>LINQ to SQL<ept id=\"p1\">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.","pos":[267,397],"source":" For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)."}]},{"pos":[1322,2018],"content":"When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection. You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection. For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values. In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`.","nodes":[{"content":"When you are retrieving data from an in-memory data collection, you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that contains the data collection.","pos":[0,199],"source":"When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection."},{"content":"You set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property or field that returns the data collection.","pos":[200,340],"source":" You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection."},{"content":"For example, you might have a class named <ph id=\"ph1\">`Person`</ph> that contains a property named <ph id=\"ph2\">`FavoriteCities`</ph> that returns an array of string values.","pos":[341,479],"source":" For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values."},{"content":"In that case, you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to <ph id=\"ph2\">`Person`</ph> and set the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to <ph id=\"ph4\">`FavoriteCities`</ph>.","pos":[480,696],"source":" In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`."}]},{"pos":[2025,2547],"content":"When you are querying a database, you must first create entity classes that represent the database and its tables. You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes. You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table.","nodes":[{"content":"When you are querying a database, you must first create entity classes that represent the database and its tables.","pos":[0,114]},{"content":"You can use the <ph id=\"ph1\">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.","pos":[115,253],"source":" You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes."},{"content":"You then set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that represents the database and set the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the database table.","pos":[254,522],"source":" You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table."}]},{"pos":[2594,2613],"content":"Order of Operations","linkify":"Order of Operations","nodes":[{"content":"Order of Operations","pos":[0,19]}]},{"pos":[2617,2724],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control applies data operations in the following order:","pos":[0,107],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:"}]},{"pos":[2734,2779],"content":"Where (specify which data records to return).","nodes":[{"content":"Where (specify which data records to return).","pos":[0,45]}]},{"pos":[2789,2805],"content":"Order By (sort).","nodes":[{"content":"Order By (sort).","pos":[0,16]}]},{"pos":[2815,2867],"content":"Group By (aggregate data records that share values).","nodes":[{"content":"Group By (aggregate data records that share values).","pos":[0,52]}]},{"pos":[2877,2913],"content":"Order Groups By (sort grouped data).","nodes":[{"content":"Order Groups By (sort grouped data).","pos":[0,36]}]},{"pos":[2923,2977],"content":"Select (specify which fields or properties to return).","nodes":[{"content":"Select (specify which fields or properties to return).","pos":[0,54]}]},{"pos":[2987,3058],"content":"Auto-sort (sort data records by a property that the user has selected).","nodes":[{"content":"Auto-sort (sort data records by a property that the user has selected).","pos":[0,71]}]},{"pos":[3068,3145],"content":"Auto-page (retrieve a subset of data records that were selected by the user).","nodes":[{"content":"Auto-page (retrieve a subset of data records that were selected by the user).","pos":[0,77]}]},{"pos":[3152,3496],"content":"You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query. If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.","nodes":[{"content":"You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query. If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.","pos":[0,344],"nodes":[{"content":"You can add conditions to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter the data records that are returned from a query.","pos":[0,154],"source":"You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is not set, the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves every record from the data object.","pos":[155,344],"source":" If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object."}]}]},{"pos":[3537,3550],"content":"Ordering Data","linkify":"Ordering Data","nodes":[{"content":"Ordering Data","pos":[0,13]}]},{"pos":[3554,3703],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify the names of properties from the returned data to sort by.","pos":[0,149],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by."}]},{"pos":[3711,4371],"content":"[!NOTE]\n When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.","leadings":["","> "],"nodes":[{"content":" When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.","pos":[8,658],"nodes":[{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id=\"ph2\">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id=\"ph3\">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id=\"ph5\">`true`</ph>, you must provide a value in the <ph id=\"ph6\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.","pos":[1,357],"source":" When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property."},{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","pos":[358,453],"source":" By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`."},{"content":"If you assign a value to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.","pos":[454,650],"source":" If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query."}]}]},{"pos":[4412,4425],"content":"Grouping Data","linkify":"Grouping Data","nodes":[{"content":"Grouping Data","pos":[0,13]}]},{"pos":[4429,5391],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values. When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `Key` property refers to the values in the property or properties that were used to group the data. For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property. The `It` property refers to a collection of individual records in a grouping of data. You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation. For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used to consolidate data records that have the same values.","pos":[0,171],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values."},{"content":"When you group data, you can include <ph id=\"ph1\">`Key`</ph> and <ph id=\"ph2\">`It`</ph>, which are dynamically created properties, in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[172,341],"source":" When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"The <ph id=\"ph1\">`Key`</ph> property refers to the values in the property or properties that were used to group the data.","pos":[342,445],"source":" The `Key` property refers to the values in the property or properties that were used to group the data."},{"content":"For example, if you group by a property named <ph id=\"ph1\">`Category`</ph>, the <ph id=\"ph2\">`Key`</ph> property will contain all unique values in the <ph id=\"ph3\">`Category`</ph> property.","pos":[446,581],"source":" For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property."},{"content":"The <ph id=\"ph1\">`It`</ph> property refers to a collection of individual records in a grouping of data.","pos":[582,667],"source":" The `It` property refers to a collection of individual records in a grouping of data."},{"content":"You can iterate over the <ph id=\"ph1\">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.","pos":[668,796],"source":" You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation."},{"content":"For example, if you group by a property named <ph id=\"ph1\">`Category`</ph>, the <ph id=\"ph2\">`It`</ph> property contains all the individual records that share a common value in the <ph id=\"ph3\">`Category`</ph> property.","pos":[797,962],"source":" For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property."}]},{"pos":[5398,5712],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data. When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.","nodes":[{"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data. When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.","pos":[0,314],"nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify the properties to use for sorting the grouped data.","pos":[0,148],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data."},{"content":"When you group data, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property specifies how the individual records within the grouped data are sorted.","pos":[149,314],"source":" When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted."}]}]},{"pos":[5719,6220],"content":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties. The Select operation is applied after the Where, Order By, and Group By operations. Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.","nodes":[{"content":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties. The Select operation is applied after the Where, Order By, and Group By operations. Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.","pos":[0,501],"nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves values for all the properties from a data object.","pos":[0,131],"source":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object."},{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to specify which properties to return if you want to work with a subset of available properties.","pos":[132,307],"source":" You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties."},{"content":"The Select operation is applied after the Where, Order By, and Group By operations.","pos":[308,391]},{"content":"Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.","pos":[392,501]}]}]},{"pos":[6266,6284],"content":"Data Modifications","linkify":"Data Modifications","nodes":[{"content":"Data Modifications","pos":[0,18]}]},{"pos":[6288,7091],"content":"You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties. The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control. In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:","nodes":[{"content":"You can specify whether data modifications are enabled by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> properties.","pos":[0,277],"source":"You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties."},{"content":"The user interface for modifying data from a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control is typically provided through a data-bound control, such as a <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.","pos":[278,494],"source":" The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control."},{"content":"In addition to setting <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> to <ph id=\"ph4\">`true`</ph>, the following conditions are required to enable automatic data modifications:","pos":[495,803],"source":" In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:"}]},{"pos":[7101,7199],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property cannot be assigned a value.","pos":[0,98],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value."}]},{"pos":[7209,7308],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property cannot be assigned a value.","pos":[0,99],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value."}]},{"pos":[7318,7481],"content":"The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.","nodes":[{"content":"The class that is assigned to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","pos":[0,163],"source":"The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>."}]},{"pos":[7491,7649],"content":"The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.","nodes":[{"content":"The property that is assigned to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id=\"ph2\">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.","pos":[0,158],"source":"The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>."}]},{"pos":[7656,9046],"content":"You can restrict which properties are displayed in a data-bound control in two ways. You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls. However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled. If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control. When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`. This prevents the data-bound control from automatically including buttons for editing and deleting the data. Any values that are not displayed in the data-bound control are stored in view state. They are passed unchanged to the data source when the data update is performed.","nodes":[{"content":"You can restrict which properties are displayed in a data-bound control in two ways.","pos":[0,84]},{"content":"You can either set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties, or you can define the fields for a data-bound control by adding <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> controls.","pos":[85,325],"source":" You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls."},{"content":"However, if you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, it means that automatic update, insert, and delete operations cannot be enabled.","pos":[326,498],"source":" However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled."},{"content":"If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[499,686],"source":" If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.","pos":[687,809]},{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> properties to <ph id=\"ph5\">`false`</ph>.","pos":[810,1115],"source":" When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`."},{"content":"This prevents the data-bound control from automatically including buttons for editing and deleting the data.","pos":[1116,1224]},{"content":"Any values that are not displayed in the data-bound control are stored in view state.","pos":[1225,1310]},{"content":"They are passed unchanged to the data source when the data update is performed.","pos":[1311,1390]}]},{"pos":[9102,9131],"content":"Evaluating Values at Run Time","linkify":"Evaluating Values at Run Time","nodes":[{"content":"Evaluating Values at Run Time","pos":[0,29]}]},{"pos":[9135,9551],"content":"If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections.","nodes":[{"content":"If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collections.","pos":[0,416],"source":"If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections."}]},{"pos":[9558,9706],"content":"If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.","nodes":[{"content":"If you want to specify default values, you can add parameters to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.","pos":[0,148],"source":"If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection."}]},{"pos":[9713,10234],"content":"If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events. You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.","nodes":[{"content":"If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events. You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.","pos":[0,521],"nodes":[{"content":"If you want to examine or modify values before the data operation is executed, you can handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> events.","pos":[0,341],"source":"If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events."},{"content":"You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.","pos":[342,521]}]}]},{"pos":[10241,10548],"content":"To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events.","nodes":[{"content":"To examine values after the data operation has finished, handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> events.","pos":[0,307],"source":"To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events."}]},{"pos":[10606,10636],"content":"Working with Stored Procedures","linkify":"Working with Stored Procedures","nodes":[{"content":"Working with Stored Procedures","pos":[0,30]}]},{"pos":[10640,11612],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object. If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from a stored procedure by creating an event handler for the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.","pos":[0,210],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object.","pos":[211,501],"source":" In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object."},{"content":"If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.","pos":[502,743],"source":" If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property."},{"content":"For more information about creating data context methods, see <bpt id=\"p1\">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id=\"p1\">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>.","pos":[744,972],"source":" For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)."}]},{"pos":[11658,11676],"content":"Declarative Syntax","linkify":"Declarative Syntax","nodes":[{"content":"Declarative Syntax","pos":[0,18]}]}],"pos":[3484,16949],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class."}],"pos":[31108,31211],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control dynamically creates an Order By clause based on values in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.OrderByParameters\"></xref> collection.","nodes":[{"pos":[0,271],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control dynamically creates an Order By clause based on values in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource.OrderByParameters\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control dynamically creates an Order By clause based on values in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.OrderByParameters\"></xref> collection."}],"pos":[32408,32680],"yaml":true},{"content":"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter. Parameters that contain `null` or an empty value are not included in the Order By clause.  \n  \n You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values.","nodes":[{"pos":[0,584],"content":"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter. Parameters that contain `null` or an empty value are not included in the Order By clause.","nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates an Order By clause that is based on the values in the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.","pos":[0,328],"source":"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.","pos":[329,494],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter."},{"content":"Parameters that contain <ph id=\"ph1\">`null`</ph> or an empty value are not included in the Order By clause.","pos":[495,584],"source":" Parameters that contain `null` or an empty value are not included in the Order By clause."}]},{"pos":[591,1118],"content":"You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values.","nodes":[{"content":"You do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property when the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id=\"ph3\">`true`</ph>, because the parser dynamically creates the Order By clause.","pos":[0,250],"source":"You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id=\"ph3\">`true`</ph> and the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is assigned values.","pos":[251,527],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values."}]}],"pos":[32691,33814],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control creates the Order By clause; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,156],"content":"`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control creates the Order By clause; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control creates the Order By clause; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,132],"source":"`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control creates the Order By clause; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[133,156],"source":" The default is `false`."}]}],"pos":[34843,35002],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control dynamically creates a Where clause based on values defined in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.WhereParameters\"></xref> collection.","nodes":[{"pos":[0,273],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control dynamically creates a Where clause based on values defined in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource.WhereParameters\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control dynamically creates a Where clause based on values defined in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.WhereParameters\"></xref> collection."}],"pos":[36156,36430],"yaml":true},{"content":"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried. The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object. If you provide more than one parameter, the parameters are linked with a logical `AND` operation. Parameters that contain `null` or an empty value are not included in the Where clause.  \n  \n The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation. Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation. You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol.  \n  \n You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values.","nodes":[{"pos":[0,994],"content":"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried. The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object. If you provide more than one parameter, the parameters are linked with a logical `AND` operation. Parameters that contain `null` or an empty value are not included in the Where clause.","nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates the Where clause from the parameters in the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.","pos":[0,314],"source":"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection."},{"content":"Each parameter that you add to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection must have its <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> property set to a value that matches a property in the data object that is being queried.","pos":[315,582],"source":" Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried."},{"content":"The automatically generated Where clause will check whether the value specified in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection equals the value of the matching property in the data object.","pos":[583,809],"source":" The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object."},{"content":"If you provide more than one parameter, the parameters are linked with a logical <ph id=\"ph1\">`AND`</ph> operation.","pos":[810,907],"source":" If you provide more than one parameter, the parameters are linked with a logical `AND` operation."},{"content":"Parameters that contain <ph id=\"ph1\">`null`</ph> or an empty value are not included in the Where clause.","pos":[908,994],"source":" Parameters that contain `null` or an empty value are not included in the Where clause."}]},{"pos":[1001,1873],"content":"The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation. Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation. You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol.","nodes":[{"content":"The automatically generated <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause can test only for equality and can link parameters only with the <ph id=\"ph2\">`AND`</ph> operation.","pos":[0,173],"source":"The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation."},{"content":"Do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id=\"ph3\">`OR`</ph> operation.","pos":[174,406],"source":" Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation."},{"content":"You can accomplish these tasks by setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> and adding placeholders in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for each parameter in the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.","pos":[407,749],"source":" You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection."},{"content":"In the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property, preface each placeholder name with the @ symbol.","pos":[750,872],"source":" In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol."}]},{"pos":[1880,2400],"content":"You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values.","nodes":[{"content":"You do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property when the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id=\"ph3\">`true`</ph>, because the parser dynamically creates the Where clause.","pos":[0,245],"source":"You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id=\"ph3\">`true`</ph> and the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is assigned values.","pos":[246,520],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values."}]}],"pos":[36441,38848],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control will create the Where clause; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,157],"content":"`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control will create the Where clause; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control will create the Where clause; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,133],"source":"`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control will create the Where clause; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[134,157],"source":" The default is `false`."}]}],"pos":[40707,40867],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control supports navigation through sections of the data at run time.","nodes":[{"pos":[0,179],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control supports navigation through sections of the data at run time.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control supports navigation through sections of the data at run time."}],"pos":[41929,42109],"yaml":true},{"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control. To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control. It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page.","nodes":[{"pos":[0,716],"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control. To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control. It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> to enable paging in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.","pos":[0,167],"source":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.","pos":[168,344],"source":" To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves only enough records for one page in the data-bound control.","pos":[345,570],"source":" When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control."},{"content":"It uses the <ph id=\"ph1\">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph> methods to retrieve the records for the current page.","pos":[571,716],"source":" It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page."}]}],"pos":[42120,42837],"yaml":true,"extradata":"MT"},{"content":"`true` if the user can page through the data; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,94],"content":"`true` if the user can page through the data; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user can page through the data; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,65],"source":"`true` if the user can page through the data; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[66,94],"source":" The default value is `true`."}]}],"pos":[43939,44036],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control supports sorting the data at run time.","nodes":[{"pos":[0,156],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control supports sorting the data at run time.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control supports sorting the data at run time."}],"pos":[45083,45240],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data. You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.  \n  \n Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control. The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.  \n  \n You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting. When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. Therefore, this determines the final sorting of the data.","nodes":[{"pos":[0,338],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data. You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data. You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.","pos":[0,338],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control supports two approaches for sorting data.","pos":[0,101],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to enable run-time sorting or you can set the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to define the sorting at design time.","pos":[102,338],"source":" You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time."}]}]},{"pos":[345,696],"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control. The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> to enable sorting in a <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is based on the sort expression from a data-bound control.","pos":[0,229],"source":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control."},{"content":"The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.","pos":[230,351]}]},{"pos":[703,1298],"content":"You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting. When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. Therefore, this determines the final sorting of the data.","nodes":[{"content":"You can programmatically set the order in which data is returned by setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to the property or properties used for sorting.","pos":[0,195],"source":"You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is set to a property and the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is <ph id=\"ph3\">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.","pos":[196,537],"source":" When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property."},{"content":"Therefore, this determines the final sorting of the data.","pos":[538,595]}]}],"pos":[45251,46556],"yaml":true,"extradata":"MT"},{"content":"`true` if the user can sort the data; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,86],"content":"`true` if the user can sort the data; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user can sort the data; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,57],"source":"`true` if the user can sort the data; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[58,86],"source":" The default value is `true`."}]}],"pos":[47651,47740],"yaml":true},{"content":"Occurs after an instance of the context type object is created.","nodes":[{"pos":[0,63],"content":"Occurs after an instance of the context type object is created.","nodes":[{"content":"Occurs after an instance of the context type object is created.","pos":[0,63]}]}],"pos":[48820,48884],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created. You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event. You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.  \n  \n The context type object is created during select, update, insert, and delete operations and is reused throughout the request.  \n  \n There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","nodes":[{"pos":[0,592],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created. You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event. You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created. You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event. You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.","pos":[0,592],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph> event to examine the context type object or examine exceptions that are raised while the object is being created.","pos":[0,187],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created."},{"content":"You retrieve the context type object from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is associated with this event.","pos":[188,428],"source":" You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event."},{"content":"You retrieve the exception that was raised during the data operation from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property.","pos":[429,592],"source":" You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property."}]}]},{"pos":[599,724],"content":"The context type object is created during select, update, insert, and delete operations and is reused throughout the request.","nodes":[{"content":"The context type object is created during select, update, insert, and delete operations and is reused throughout the request.","pos":[0,125]}]},{"pos":[731,1250],"content":"There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","nodes":[{"content":"There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","pos":[0,519],"nodes":[{"content":"There is one time when the event is not raised.","pos":[0,47]},{"content":"This is when you programmatically set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object during the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.","pos":[48,260],"source":" This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id=\"ph2\">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.","pos":[261,519],"source":" An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface."}]}]}],"pos":[48895,50152],"yaml":true,"extradata":"MT"},{"content":"Occurs before an instance of the context type object is created.","nodes":[{"pos":[0,64],"content":"Occurs before an instance of the context type object is created.","nodes":[{"content":"Occurs before an instance of the context type object is created.","pos":[0,64]}]}],"pos":[51420,51485],"yaml":true},{"content":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object. It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.  \n  \n The context type object is created during select, update, insert, and delete operations.  \n  \n There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","nodes":[{"pos":[0,722],"content":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object. It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.","nodes":[{"content":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object. It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.","pos":[0,722],"nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control creates an instance of the type that is specified in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.","pos":[0,205],"source":"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control calls the default constructor of the data context object to create an instance of the object.","pos":[206,359],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object."},{"content":"It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.","pos":[360,573],"source":" It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property."},{"content":"In that case, you must handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event and manually create the data context object.","pos":[574,722],"source":" In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object."}]}]},{"pos":[729,817],"content":"The context type object is created during select, update, insert, and delete operations.","nodes":[{"content":"The context type object is created during select, update, insert, and delete operations.","pos":[0,88]}]},{"pos":[824,1360],"content":"There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","nodes":[{"content":"There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.","pos":[0,536],"nodes":[{"content":"There is one time when the event is not raised.","pos":[0,47]},{"content":"This is when you programmatically set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object in an event handler for the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.","pos":[48,277],"source":" This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."},{"content":"An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id=\"ph2\">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.","pos":[278,536],"source":" An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface."}]}]}],"pos":[51496,52863],"yaml":true,"extradata":"MT"},{"content":"Occurs before disposing the context type object.","nodes":[{"pos":[0,48],"content":"Occurs before disposing the context type object.","nodes":[{"content":"Occurs before disposing the context type object.","pos":[0,48]}]}],"pos":[54876,54925],"yaml":true},{"content":"You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.","nodes":[{"pos":[0,203],"content":"You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.","nodes":[{"content":"You handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.","pos":[0,203],"source":"You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed."}]}],"pos":[54936,55140],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.","nodes":[{"pos":[0,112],"content":"Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.","nodes":[{"content":"Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.","pos":[0,112]}]}],"pos":[56415,56528],"yaml":true},{"content":"When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties. The first is a data context class that represents the data source. The second is a property in the data context class that contains the data. You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.  \n  \n For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database. Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database. To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes.  \n  \n When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property. Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.  \n  \n To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>. In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>. If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.  \n  \n For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.","nodes":[{"pos":[0,579],"content":"When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties. The first is a data context class that represents the data source. The second is a property in the data context class that contains the data. You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.","nodes":[{"content":"When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties. The first is a data context class that represents the data source. The second is a property in the data context class that contains the data. You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.","pos":[0,579],"nodes":[{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.","pos":[0,178],"source":"When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties."},{"content":"The first is a data context class that represents the data source.","pos":[179,245]},{"content":"The second is a property in the data context class that contains the data.","pos":[246,320]},{"content":"You set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the data context class and you set the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the data collection that contains the data.","pos":[321,579],"source":" You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data."}]}]},{"pos":[586,1103],"content":"For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database. Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database. To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes.","nodes":[{"content":"For example, when you retrieve data from a database, set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that represents the database.","pos":[0,191],"source":"For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database."},{"content":"Also set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the table in the database.","pos":[192,333],"source":" Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database."},{"content":"To generate classes from a database, use the <ph id=\"ph1\">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.","pos":[334,517],"source":" To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes."}]},{"pos":[1110,1447],"content":"When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property. Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.","nodes":[{"content":"When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property. Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.","pos":[0,337],"nodes":[{"content":"When you retrieve data from an in-memory data collection such as an array, set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that contains the array property.","pos":[0,217],"source":"When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property."},{"content":"Then set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that gets the array.","pos":[218,337],"source":" Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array."}]}]},{"pos":[1454,2105],"content":"To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>. In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>. If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.","nodes":[{"content":"To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>. In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>. If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.","pos":[0,651],"nodes":[{"content":"To enable automatic update, insert, or delete operations through the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the class assigned to the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id=\"ph3\">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.","pos":[0,281],"source":"To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>."},{"content":"In addition, the property assigned to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id=\"ph2\">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.","pos":[282,445],"source":" In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>."},{"content":"If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.","pos":[446,651],"source":" If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property."}]}]},{"pos":[2112,2272],"content":"For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.","nodes":[{"content":"For information about how to select data from an instance of a class, see the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.","pos":[0,160],"source":"For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property."}]}],"pos":[56539,58822],"yaml":true,"extradata":"MT"},{"content":"The name of the class to retrieve data from.","nodes":[{"pos":[0,44],"content":"The name of the class to retrieve data from.","nodes":[{"content":"The name of the class to retrieve data from.","pos":[0,44]}]}],"pos":[60714,60759],"yaml":true},{"content":"Returns a queryable view.","nodes":[{"pos":[0,25],"content":"Returns a queryable view.","nodes":[{"content":"Returns a queryable view.","pos":[0,25]}]}],"pos":[61883,61909],"yaml":true},{"content":"A queryable view.","nodes":[{"pos":[0,17],"content":"A queryable view.","nodes":[{"content":"A queryable view.","pos":[0,17]}]}],"pos":[62137,62155],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceView\"></xref> class that is associated with this control.","nodes":[{"pos":[0,139],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceView\"&gt;&lt;/xref&gt;</ph> class that is associated with this control.","source":"Creates a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceView\"></xref> class that is associated with this control."}],"pos":[63212,63352],"yaml":true},{"content":"To provide a custom view, you can override this method in a derived class.","nodes":[{"pos":[0,74],"content":"To provide a custom view, you can override this method in a derived class.","nodes":[{"content":"To provide a custom view, you can override this method in a derived class.","pos":[0,74]}]}],"pos":[63363,63438],"yaml":true,"extradata":"MT"},{"content":"An object that acts as the interface for data-bound controls.","nodes":[{"pos":[0,61],"content":"An object that acts as the interface for data-bound controls.","nodes":[{"content":"An object that acts as the interface for data-bound controls.","pos":[0,61]}]}],"pos":[63646,63708],"yaml":true},{"content":"Performs a delete operation.","nodes":[{"pos":[0,28],"content":"Performs a delete operation.","nodes":[{"content":"Performs a delete operation.","pos":[0,28]}]}],"pos":[64993,65022],"yaml":true},{"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code. When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data. For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.","nodes":[{"pos":[0,707],"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code. When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data. For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.","nodes":[{"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code. When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data. For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.","pos":[0,707],"nodes":[{"content":"Typically, you do not have to call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method from your code.","pos":[0,119],"source":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code."},{"content":"When you use a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a data-bound control, the data-bound control will automatically call the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when the user takes action to delete a record.","pos":[120,380],"source":" When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record."},{"content":"You explicitly call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to create your own process for deleting data.","pos":[381,529],"source":" You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data."},{"content":"For example, you can call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to delete a record based on an event outside the data-bound control.","pos":[530,707],"source":" For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control."}]}]}],"pos":[65033,65741],"yaml":true,"extradata":"MT"},{"content":"The row key values for the records to be deleted.","nodes":[{"pos":[0,49],"content":"The row key values for the records to be deleted.","nodes":[{"content":"The row key values for the records to be deleted.","pos":[0,49]}]}],"pos":[65956,66006],"yaml":true},{"content":"The row values that are evaluated to detect data conflicts.","nodes":[{"pos":[0,59],"content":"The row values that are evaluated to detect data conflicts.","nodes":[{"content":"The row values that are evaluated to detect data conflicts.","pos":[0,59]}]}],"pos":[66088,66148],"yaml":true},{"content":"The number of records affected by the delete operation.","nodes":[{"pos":[0,55],"content":"The number of records affected by the delete operation.","nodes":[{"content":"The number of records affected by the delete operation.","pos":[0,55]}]}],"pos":[66204,66260],"yaml":true},{"content":"Occurs when a delete operation has finished.","nodes":[{"pos":[0,44],"content":"Occurs when a delete operation has finished.","nodes":[{"content":"Occurs when a delete operation has finished.","pos":[0,44]}]}],"pos":[67279,67324],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished. You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","nodes":[{"pos":[0,341],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished. You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished. You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","pos":[0,341],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.","pos":[0,189],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished."},{"content":"You can retrieve the output parameters from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.","pos":[190,341],"source":" You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers."}]}]}],"pos":[67335,67677],"yaml":true,"extradata":"MT"},{"content":"This property is not used by the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class.","nodes":[{"pos":[0,101],"content":"This property is not used by the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> class.","source":"This property is not used by the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class."}],"pos":[68947,69049],"yaml":true},{"content":"A collection of parameters.","nodes":[{"pos":[0,27],"content":"A collection of parameters.","nodes":[{"content":"A collection of parameters.","pos":[0,27]}]}],"pos":[69381,69409],"yaml":true},{"content":"Occurs before a delete operation.","nodes":[{"pos":[0,33],"content":"Occurs before a delete operation.","nodes":[{"content":"Occurs before a delete operation.","pos":[0,33]}]}],"pos":[70558,70592],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation. The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation. If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.  \n  \n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.","nodes":[{"pos":[0,934],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation. The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation. If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation. The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation. If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.","pos":[0,934],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.","pos":[0,248],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control passes a <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object to event handlers for the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.","pos":[249,477],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains the data that will be deleted and enables you to cancel the delete operation.","pos":[478,638],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation."},{"content":"If the data class throws a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> exception, the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains that exception in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph> property.","pos":[639,934],"source":" If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property."}]}]},{"pos":[941,1619],"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.","nodes":[{"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.","pos":[0,678],"nodes":[{"content":"If an exception is thrown in an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event, you must handle the exception in that event handler.","pos":[0,170],"source":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler."},{"content":"The exception will not be passed to an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event (through the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).","pos":[171,470],"source":" The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.","pos":[471,678],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event."}]}]}],"pos":[70603,72227],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that indicates whether data records can be deleted through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.","nodes":[{"pos":[0,154],"content":"Gets or sets a value that indicates whether data records can be deleted through the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control.","source":"Gets or sets a value that indicates whether data records can be deleted through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control."}],"pos":[74353,74508],"yaml":true},{"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data. You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.","nodes":[{"pos":[0,563],"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data. You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> when you want to enable users to delete a data record through the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.","pos":[0,213],"source":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to delete the data.","pos":[214,426],"source":" When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data."},{"content":"You must include an interface that lets users select a record to delete, such as a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.","pos":[427,563],"source":" You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control."}]},{"pos":[570,959],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.","pos":[0,389],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic delete operations when the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.","pos":[0,263],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set."},{"content":"In that case, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if a delete operation is tried.","pos":[264,389],"source":" In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried."}]}]}],"pos":[74519,75483],"yaml":true,"extradata":"MT"},{"content":"`true` if automatic delete operations are enabled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,100],"content":"`true` if automatic delete operations are enabled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if automatic delete operations are enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,70],"source":"`true` if automatic delete operations are enabled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[71,100],"source":" The default value is `false`."}]}],"pos":[76377,76480],"yaml":true},{"content":"Gets or sets a value that indicates whether data records can be inserted through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.","nodes":[{"pos":[0,155],"content":"Gets or sets a value that indicates whether data records can be inserted through the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control.","source":"Gets or sets a value that indicates whether data records can be inserted through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control."}],"pos":[77555,77711],"yaml":true},{"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data. You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.","nodes":[{"pos":[0,561],"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data. You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> when you want to enable users to insert a new data record through the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.","pos":[0,217],"source":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to insert the data.","pos":[218,430],"source":" When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data."},{"content":"You must include an interface that lets users insert a new record, such as a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.","pos":[431,561],"source":" You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control."}]},{"pos":[568,958],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic insert operations when the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.","pos":[0,263],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set."},{"content":"In that case, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an insert operation is tried.","pos":[264,390],"source":" In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried."}]}]}],"pos":[77722,78685],"yaml":true,"extradata":"MT"},{"content":"`true` if automatic insert operations are enabled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,100],"content":"`true` if automatic insert operations are enabled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if automatic insert operations are enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,70],"source":"`true` if automatic insert operations are enabled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[71,100],"source":" The default value is `false`."}]}],"pos":[79629,79732],"yaml":true},{"content":"Gets or sets the value that indicates whether changes to the data context object are tracked.","nodes":[{"pos":[0,93],"content":"Gets or sets the value that indicates whether changes to the data context object are tracked.","nodes":[{"content":"Gets or sets the value that indicates whether changes to the data context object are tracked.","pos":[0,93]}]}],"pos":[80855,80949],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object.  \n  \n When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed. However, it also disables deferred query execution. This property must be set to `true` if you want to use deferred query execution.","nodes":[{"pos":[0,157],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property is only used when selecting data from a LINQ To SQL data context object.","pos":[0,157],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object."}]},{"pos":[164,530],"content":"When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed. However, it also disables deferred query execution. This property must be set to `true` if you want to use deferred query execution.","nodes":[{"content":"When you are interacting with read-only data, setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> improves performance because the data is not cached to determine if it has changed.","pos":[0,233],"source":"When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed."},{"content":"However, it also disables deferred query execution.","pos":[234,285]},{"content":"This property must be set to <ph id=\"ph1\">`true`</ph> if you want to use deferred query execution.","pos":[286,366],"source":" This property must be set to `true` if you want to use deferred query execution."}]}],"pos":[80960,81495],"yaml":true,"extradata":"MT"},{"content":"`true` if the data context object is tracked for changes; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,100],"content":"`true` if the data context object is tracked for changes; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the data context object is tracked for changes; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,77],"source":"`true` if the data context object is tracked for changes; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[78,100],"source":" The default is `true`."}]}],"pos":[81623,81726],"yaml":true},{"content":"Gets or sets a value that indicates whether data records can be updated through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.","nodes":[{"pos":[0,154],"content":"Gets or sets a value that indicates whether data records can be updated through the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control.","source":"Gets or sets a value that indicates whether data records can be updated through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control."}],"pos":[82809,82964],"yaml":true},{"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data. You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.","nodes":[{"pos":[0,554],"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data. You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> when you want to enable users to update a data record by using the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.","pos":[0,214],"source":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to update the data.","pos":[215,427],"source":" When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data."},{"content":"You must include an interface that lets users update a record, such as a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.","pos":[428,554],"source":" You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control."}]},{"pos":[561,951],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic update operations when the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.","pos":[0,263],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set."},{"content":"In that case, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an update operation is tried.","pos":[264,390],"source":" In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried."}]}]}],"pos":[82975,83931],"yaml":true,"extradata":"MT"},{"content":"`true` if automatic update operations are enabled; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,100],"content":"`true` if automatic update operations are enabled; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if automatic update operations are enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,70],"source":"`true` if automatic update operations are enabled; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[71,100],"source":" The default value is `false`."}]}],"pos":[84825,84928],"yaml":true},{"content":"Gets or sets a value that specifies which properties are used for grouping the retrieved data.","nodes":[{"pos":[0,94],"content":"Gets or sets a value that specifies which properties are used for grouping the retrieved data.","nodes":[{"content":"Gets or sets a value that specifies which properties are used for grouping the retrieved data.","pos":[0,94]}]}],"pos":[85973,86068],"yaml":true},{"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values. For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record.  \n  \n You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma. For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`.  \n  \n The values in the property that are used for grouping are returned through a generated property named `Key`. You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values. You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias. For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`. You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`.  \n  \n You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `It` property contains a collection of records that share a value in the grouped property. You can iterate over the `It` property to retrieve the individual records.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods. You can use the following aggregate methods:  \n  \n-   `Count()`  \n  \n-   `Average(` *column* `)`  \n  \n-   `Sum(` *column* `)`  \n  \n-   `Max(` *column* `)`  \n  \n-   `Min(` *column* `)`  \n  \n-   `Where(` *condition* `)`  \n  \n-   `Any()`  \n  \n-   `All(` *condition* `)`  \n  \n For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af).","nodes":[{"pos":[0,397],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values. For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used for consolidating data records that have the same values.","pos":[0,174],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values."},{"content":"For example, if you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id=\"ph2\">`Name`</ph>, all the records in the query that have the same <ph id=\"ph3\">`Name`</ph> property value are returned as a single consolidated record.","pos":[175,397],"source":" For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record."}]},{"pos":[404,787],"content":"You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma. For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`.","nodes":[{"content":"You can assign more than one property to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property by enclosing all the properties in the <ph id=\"ph2\">`new`</ph> function and separating each property by using a comma.","pos":[0,213],"source":"You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma."},{"content":"For example, to group by the properties <ph id=\"ph1\">`Name`</ph> and then <ph id=\"ph2\">`Category`</ph>, set the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id=\"ph4\">`new(Name, Category)`</ph>.","pos":[214,383],"source":" For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`."}]},{"pos":[794,1468],"content":"The values in the property that are used for grouping are returned through a generated property named `Key`. You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values. You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias. For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`. You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`.","nodes":[{"content":"The values in the property that are used for grouping are returned through a generated property named <ph id=\"ph1\">`Key`</ph>.","pos":[0,108],"source":"The values in the property that are used for grouping are returned through a generated property named `Key`."},{"content":"You include the <ph id=\"ph1\">`Key`</ph> property in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve the grouped values.","pos":[109,245],"source":" You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values."},{"content":"You can set the <ph id=\"ph1\">`Key`</ph> property to an alias by using the <ph id=\"ph2\">`As`</ph> keyword, but you are not required to use an alias.","pos":[246,357],"source":" You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias."},{"content":"For example, you might set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to a property named <ph id=\"ph2\">`Category`</ph>.","pos":[358,488],"source":" For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`."},{"content":"You can retrieve the consolidated values from the <ph id=\"ph1\">`Category`</ph> property by setting the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id=\"ph3\">`new(Key As ProductCategory)`</ph>.","pos":[489,674],"source":" You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`."}]},{"pos":[1475,1802],"content":"You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `It` property contains a collection of records that share a value in the grouped property. You can iterate over the `It` property to retrieve the individual records.","nodes":[{"content":"You can access the individual records in a grouping by including the <ph id=\"ph1\">`It`</ph> property in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[0,157],"source":"You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"The <ph id=\"ph1\">`It`</ph> property contains a collection of records that share a value in the grouped property.","pos":[158,252],"source":" The `It` property contains a collection of records that share a value in the grouped property."},{"content":"You can iterate over the <ph id=\"ph1\">`It`</ph> property to retrieve the individual records.","pos":[253,327],"source":" You can iterate over the `It` property to retrieve the individual records."}]},{"pos":[1809,1965],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods. You can use the following aggregate methods:","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods. You can use the following aggregate methods:","pos":[0,156],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is often used with aggregation methods.","pos":[0,111],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods."},{"content":"You can use the following aggregate methods:","pos":[112,156]}]}]},{"pos":[1994,2017],"content":"<ph id=\"ph1\">`Average(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Average(` *column* `)`"},{"pos":[2027,2046],"content":"<ph id=\"ph1\">`Sum(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Sum(` *column* `)`"},{"pos":[2056,2075],"content":"<ph id=\"ph1\">`Max(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Max(` *column* `)`"},{"pos":[2085,2104],"content":"<ph id=\"ph1\">`Min(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Min(` *column* `)`"},{"pos":[2114,2138],"content":"<ph id=\"ph1\">`Where(`</ph> <bpt id=\"p1\">*</bpt>condition<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Where(` *condition* `)`"},{"pos":[2165,2187],"content":"<ph id=\"ph1\">`All(`</ph> <bpt id=\"p1\">*</bpt>condition<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`All(` *condition* `)`"},{"pos":[2194,2482],"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id=\"p1\">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id=\"p2\">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id=\"p2\">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.","source":"For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)."}],"pos":[86079,88590],"yaml":true,"extradata":"MT"},{"content":"A string that is used to create the Group By clause.","nodes":[{"pos":[0,52],"content":"A string that is used to create the Group By clause.","nodes":[{"content":"A string that is used to create the Group By clause.","pos":[0,52]}]}],"pos":[91345,91398],"yaml":true},{"content":"Gets the collection of parameters that are used to create the Group By clause.","nodes":[{"pos":[0,78],"content":"Gets the collection of parameters that are used to create the Group By clause.","nodes":[{"content":"Gets the collection of parameters that are used to create the Group By clause.","pos":[0,78]}]}],"pos":[92498,92577],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time. Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data. Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property. You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name. For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user.  \n  \n If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property. For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to \"LastName\" without any parameters. If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed.  \n  \n You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.  \n  \n To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter. In the Group By clause, preface each parameter name with the @ symbol.","nodes":[{"pos":[0,834],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time. Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data. Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property. You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name. For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to create the Group By clause at run time.","pos":[0,205],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time."},{"content":"Typically you will not use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data.","pos":[206,331],"source":" Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data."},{"content":"Instead, you can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.","pos":[332,425],"source":" Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property."},{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection only when a value in the Group By clause must be set at run time and that value is not a property name.","pos":[426,621],"source":" You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name."},{"content":"For example, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data based on whether the <ph id=\"ph2\">`LastName`</ph> property in the data records equals a value provided by the user.","pos":[622,834],"source":" For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user."}]},{"pos":[841,1470],"content":"If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property. For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to \"LastName\" without any parameters. If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed.","nodes":[{"content":"If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.","pos":[0,207],"source":"If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property."},{"content":"For example, to return values from a database table grouped by <ph id=\"ph1\">`LastName`</ph>, set <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> to \"LastName\" without any parameters.","pos":[208,383],"source":" For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to \"LastName\" without any parameters."},{"content":"If you want to dynamically group data by a property, create an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property as needed.","pos":[384,629],"source":" If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed."}]},{"pos":[1477,1878],"content":"You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.","nodes":[{"content":"You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.","pos":[0,401],"nodes":[{"content":"You cannot assign the name of a property as the value for a parameter in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection.","pos":[0,157],"source":"You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection."},{"content":"You add parameters to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection when you want to add a condition to the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property that must be set at run time.","pos":[158,401],"source":" You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time."}]}]},{"pos":[1885,2221],"content":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter. In the Group By clause, preface each parameter name with the @ symbol.","nodes":[{"content":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter. In the Group By clause, preface each parameter name with the @ symbol.","pos":[0,336],"nodes":[{"content":"To set values in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property for that named parameter.","pos":[0,265],"source":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter."},{"content":"In the Group By clause, preface each parameter name with the @ symbol.","pos":[266,336]}]}]}],"pos":[92588,94820],"yaml":true,"extradata":"MT"},{"content":"The parameters that are used to create the Group By clause.","nodes":[{"pos":[0,59],"content":"The parameters that are used to create the Group By clause.","nodes":[{"content":"The parameters that are used to create the Group By clause.","pos":[0,59]}]}],"pos":[95153,95213],"yaml":true},{"content":"Performs an insert operation.","nodes":[{"pos":[0,29],"content":"Performs an insert operation.","nodes":[{"content":"Performs an insert operation.","pos":[0,29]}]}],"pos":[96487,96517],"yaml":true},{"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.","nodes":[{"pos":[0,436],"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.","nodes":[{"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.","pos":[0,436],"nodes":[{"content":"Typically, you do not have to call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method from your code.","pos":[0,119],"source":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code."},{"content":"The data-bound control will automatically call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when the user takes action to insert a new record.","pos":[120,286],"source":" The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record."},{"content":"You explicitly call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when you want to create your own process for inserting data.","pos":[287,436],"source":" You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data."}]}]}],"pos":[96528,96965],"yaml":true,"extradata":"MT"},{"content":"The row values to be inserted into the data source.","nodes":[{"pos":[0,51],"content":"The row values to be inserted into the data source.","nodes":[{"content":"The row values to be inserted into the data source.","pos":[0,51]}]}],"pos":[98361,98413],"yaml":true},{"content":"The number of rows affected by the insert operation.","nodes":[{"pos":[0,52],"content":"The number of rows affected by the insert operation.","nodes":[{"content":"The number of rows affected by the insert operation.","pos":[0,52]}]}],"pos":[98469,98522],"yaml":true},{"content":"Occurs when an insert operation has finished.","nodes":[{"pos":[0,45],"content":"Occurs when an insert operation has finished.","nodes":[{"content":"Occurs when an insert operation has finished.","pos":[0,45]}]}],"pos":[99547,99593],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished. You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers. For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.","nodes":[{"pos":[0,517],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished. You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers. For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished. You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers. For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.","pos":[0,517],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.","pos":[0,189],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished."},{"content":"You can retrieve the new values through the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.","pos":[190,337],"source":" You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers."},{"content":"For example, you can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object to retrieve the identity property generated by a database for a new data record.","pos":[338,517],"source":" For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record."}]}]}],"pos":[99604,100122],"yaml":true,"extradata":"MT"},{"content":"Occurs before an insert operation.","nodes":[{"pos":[0,34],"content":"Occurs before an insert operation.","nodes":[{"content":"Occurs before an insert operation.","pos":[0,34]}]}],"pos":[101977,102012],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.  \n  \n If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.  \n  \n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.","nodes":[{"pos":[0,418],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.","pos":[0,418],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.","pos":[0,250],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object passed to event handlers for this event contains the new object to insert in the data source.","pos":[251,418],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source."}]}]},{"pos":[425,952],"content":"If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.","nodes":[{"content":"If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.","pos":[0,527],"nodes":[{"content":"If a validation error occurs during the insert operation, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.","pos":[0,201],"source":"If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class."},{"content":"A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.","pos":[202,362]},{"content":"In an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.","pos":[363,527],"source":" In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action."}]}]},{"pos":[959,1640],"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.","nodes":[{"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.","pos":[0,681],"nodes":[{"content":"If an exception is thrown in an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you must handle the exception in that event handler.","pos":[0,171],"source":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler."},{"content":"The exception will not be passed to an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event (through the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).","pos":[172,472],"source":" The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.","pos":[473,681],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event."}]}]}],"pos":[102023,103670],"yaml":true,"extradata":"MT"},{"content":"Gets the collection of parameters that are used during an insert operation.","nodes":[{"pos":[0,75],"content":"Gets the collection of parameters that are used during an insert operation.","nodes":[{"content":"Gets the collection of parameters that are used during an insert operation.","pos":[0,75]}]}],"pos":[107616,107692],"yaml":true},{"content":"Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control. You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`. You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.  \n  \n The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control. For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields. The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field. They will not be used for the Name and Address field. This is true even if no value is entered for those fields. If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.","nodes":[{"pos":[0,444],"content":"Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control. You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`. You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.","nodes":[{"content":"Typically the values that are needed for an insert operation are passed to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control by the data-bound control.","pos":[0,161],"source":"Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control."},{"content":"You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id=\"ph1\">`null`</ph>.","pos":[162,285],"source":" You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`."},{"content":"You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.","pos":[286,444]}]},{"pos":[451,1342],"content":"The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control. For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields. The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field. They will not be used for the Name and Address field. This is true even if no value is entered for those fields. If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.","nodes":[{"content":"The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control. For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields. The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field. They will not be used for the Name and Address field. This is true even if no value is entered for those fields. If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.","pos":[0,891],"nodes":[{"content":"The values that you provide in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection are used only for fields that are defined in the data source but that are not bound in the data control.","pos":[0,218],"source":"The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control."},{"content":"For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control that is bound to the table is bound only to the Name and Address fields.","pos":[219,443],"source":" For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields."},{"content":"The values in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used only for the PostalCode field.","pos":[444,584],"source":" The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field."},{"content":"They will not be used for the Name and Address field.","pos":[585,638]},{"content":"This is true even if no value is entered for those fields.","pos":[639,697]},{"content":"If the data-bound control autogenerates fields for all fields in the data source, no values from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used.","pos":[698,891],"source":" If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used."}]}]}],"pos":[107703,109050],"yaml":true,"extradata":"MT"},{"content":"The parameters that are used during an insert operation.","nodes":[{"pos":[0,56],"content":"The parameters that are used during an insert operation.","nodes":[{"content":"The parameters that are used during an insert operation.","pos":[0,56]}]}],"pos":[110214,110271],"yaml":true},{"content":"Initializes the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> object.","nodes":[{"pos":[0,85],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> object."}],"pos":[111496,111582],"yaml":true},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[111727,111743],"yaml":true},{"content":"Raises the <xref href=\"System.Web.UI.Control.Unload\"></xref> event.","nodes":[{"pos":[0,67],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Control.Unload\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Web.UI.Control.Unload\"></xref> event."}],"pos":[112856,112924],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> object that contains the event data.","nodes":[{"pos":[0,77],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> object that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> object that contains the event data."}],"pos":[113071,113149],"yaml":true},{"content":"Gets or sets a value that specifies which fields are used for ordering the retrieved data.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that specifies which fields are used for ordering the retrieved data.","nodes":[{"content":"Gets or sets a value that specifies which fields are used for ordering the retrieved data.","pos":[0,90]}]}],"pos":[114173,114264],"yaml":true},{"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting. The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned.  \n  \n You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma. For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to \"LastName, FirstName\".  \n  \n> [!NOTE]\n>  When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.  \n  \n If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time. The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. Therefore, the data is returned according to the sort expression from the data-bound control.","nodes":[{"pos":[0,544],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting. The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify which properties from the returned data to use for sorting.","pos":[0,150],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting."},{"content":"The property for sorting the data must exist in the original data source, but it does not have to be included in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[151,335],"source":" The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"You can add a space and <ph id=\"ph1\">`Ascending`</ph>, <ph id=\"ph2\">`ASC`</ph>, <ph id=\"ph3\">`Descending`</ph>, or <ph id=\"ph4\">`DESC`</ph> to a property in the <ph id=\"ph5\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> string in order to specify how the ordered data is returned.","pos":[336,544],"source":" You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned."}]},{"pos":[551,882],"content":"You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma. For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to \"LastName, FirstName\".","nodes":[{"content":"You can provide more than one property in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property by separating each property by using a comma.","pos":[0,159],"source":"You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma."},{"content":"For example, to order by properties named <ph id=\"ph1\">`LastName`</ph> and <ph id=\"ph2\">`FirstName`</ph>, set the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to \"LastName, FirstName\".","pos":[160,331],"source":" For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to \"LastName, FirstName\"."}]},{"pos":[890,1550],"content":"[!NOTE]\n When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.","leadings":["","> "],"nodes":[{"content":" When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.","pos":[8,658],"nodes":[{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id=\"ph2\">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id=\"ph3\">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id=\"ph5\">`true`</ph>, you must provide a value in the <ph id=\"ph6\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.","pos":[1,357],"source":" When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property."},{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","pos":[358,453],"source":" By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`."},{"content":"If you assign a value to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.","pos":[454,650],"source":" If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query."}]}]},{"pos":[1557,2077],"content":"If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time. The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. Therefore, the data is returned according to the sort expression from the data-bound control.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, a data-bound control can pass a sort expression to the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control at run time.","pos":[0,217],"source":"If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will apply the sort expression from the data-bound control after it applies the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.","pos":[218,426],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property."},{"content":"Therefore, the data is returned according to the sort expression from the data-bound control.","pos":[427,520]}]}],"pos":[114275,116364],"yaml":true,"extradata":"MT"},{"content":"A string that is used to create the Order By clause.","nodes":[{"pos":[0,52],"content":"A string that is used to create the Order By clause.","nodes":[{"content":"A string that is used to create the Order By clause.","pos":[0,52]}]}],"pos":[117057,117110],"yaml":true},{"content":"Gets the collection of parameters that are used to create the Order By clause.","nodes":[{"pos":[0,78],"content":"Gets the collection of parameters that are used to create the Order By clause.","nodes":[{"content":"Gets the collection of parameters that are used to create the Order By clause.","pos":[0,78]}]}],"pos":[118210,118289],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time. Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.  \n  \n If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to \"LastName\" without any parameters.  \n  \n You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application. When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name. You can set a parameter to a value and then compare that value to values in a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","nodes":[{"pos":[0,1030],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time. Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection to create the Order By clause at run time.","pos":[0,205],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time."},{"content":"Typically you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> when you add parameters to the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.","pos":[206,435],"source":" Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, each parameter in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection is added to the Order By clause in the sequence that they are specified in the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.","pos":[436,810],"source":" When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.","pos":[811,1030],"source":" When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder."}]},{"pos":[1037,1521],"content":"If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to \"LastName\" without any parameters.","nodes":[{"content":"If you do not have to set a value at run time in the Order By clause, you do not have to use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.","pos":[0,177],"source":"If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection."},{"content":"You can define the fields to use for ordering the data in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.","pos":[178,308],"source":" You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property."},{"content":"For example, to return values from a database table ordered by <ph id=\"ph1\">`LastName`</ph>, set <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> to \"LastName\" without any parameters.","pos":[309,484],"source":" For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to \"LastName\" without any parameters."}]},{"pos":[1528,2188],"content":"You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application. When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name. You can set a parameter to a value and then compare that value to values in a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","nodes":[{"content":"You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application. When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name. You can set a parameter to a value and then compare that value to values in a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","pos":[0,660],"nodes":[{"content":"You can set parameters in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property, but this approach has limited application.","pos":[0,269],"source":"You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application."},{"content":"When you use this approach, the parameters in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection cannot represent a column name.","pos":[270,431],"source":" When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name."},{"content":"You can set a parameter to a value and then compare that value to values in a property.","pos":[432,519]},{"content":"For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","pos":[520,660]}]}]}],"pos":[118300,120497],"yaml":true,"extradata":"MT"},{"content":"The parameters that are used for creating the Order By clause.","nodes":[{"pos":[0,62],"content":"The parameters that are used for creating the Order By clause.","nodes":[{"content":"The parameters that are used for creating the Order By clause.","pos":[0,62]}]}],"pos":[121735,121798],"yaml":true},{"content":"Gets or sets the fields that are used for ordering grouped data.","nodes":[{"pos":[0,64],"content":"Gets or sets the fields that are used for ordering grouped data.","nodes":[{"content":"Gets or sets the fields that are used for ordering grouped data.","pos":[0,64]}]}],"pos":[122981,123046],"yaml":true},{"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted. For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property.  \n  \n You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.  \n  \n The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data. To specify how the data is sorted, you can add a space and the string \"Ascending\", \"ASC\", \"Descending\", or \"DESC\" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.  \n  \n You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. Separate each property by using a comma.","nodes":[{"pos":[0,264],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted. For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify how the groups of data are sorted.","pos":[0,131],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted."},{"content":"For example, you can group by the <ph id=\"ph1\">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id=\"ph2\">`Price`</ph> property.","pos":[132,264],"source":" For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property."}]},{"pos":[271,656],"content":"You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.","nodes":[{"content":"You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.","pos":[0,385],"nodes":[{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property only when you have grouped the data.","pos":[0,126],"source":"You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data."},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property without setting the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property, the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception.","pos":[127,385],"source":" If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception."}]}]},{"pos":[663,1038],"content":"The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data. To specify how the data is sorted, you can add a space and the string \"Ascending\", \"ASC\", \"Descending\", or \"DESC\" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.","nodes":[{"content":"The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data. To specify how the data is sorted, you can add a space and the string \"Ascending\", \"ASC\", \"Descending\", or \"DESC\" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.","pos":[0,375],"nodes":[{"content":"The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.","pos":[0,162]},{"content":"To specify how the data is sorted, you can add a space and the string \"Ascending\", \"ASC\", \"Descending\", or \"DESC\" to a property name in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> string.","pos":[163,375],"source":" To specify how the data is sorted, you can add a space and the string \"Ascending\", \"ASC\", \"Descending\", or \"DESC\" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string."}]}]},{"pos":[1045,1206],"content":"You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. Separate each property by using a comma.","nodes":[{"content":"You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. Separate each property by using a comma.","pos":[0,161],"nodes":[{"content":"You can specify more than one property in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.","pos":[0,120],"source":"You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property."},{"content":"Separate each property by using a comma.","pos":[121,161]}]}]}],"pos":[123057,124280],"yaml":true,"extradata":"MT"},{"content":"A string that is used to create the Order Groups By clause.","nodes":[{"pos":[0,59],"content":"A string that is used to create the Order Groups By clause.","nodes":[{"content":"A string that is used to create the Order Groups By clause.","pos":[0,59]}]}],"pos":[125993,126053],"yaml":true},{"content":"Gets the collection of parameters that are used to create the Order Groups By clause.","nodes":[{"pos":[0,85],"content":"Gets the collection of parameters that are used to create the Order Groups By clause.","nodes":[{"content":"Gets the collection of parameters that are used to create the Order Groups By clause.","pos":[0,85]}]}],"pos":[127195,127281],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time.  \n  \n You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause. You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.  \n  \n You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values. You can set a parameter to a value and then compare that value to a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","nodes":[{"pos":[0,218],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection to create the Order Groups By clause at run time.","pos":[0,218],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time."}]},{"pos":[225,551],"content":"You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause. You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.","nodes":[{"content":"You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause. You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.","pos":[0,326],"nodes":[{"content":"You add values to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection only when you must set values at run time in the Order Groups By clause.","pos":[0,180],"source":"You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause."},{"content":"You can define the fields that are used to order the data by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.","pos":[181,326],"source":" You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property."}]}]},{"pos":[558,1220],"content":"You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values. You can set a parameter to a value and then compare that value to a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","nodes":[{"content":"You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values. You can set a parameter to a value and then compare that value to a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","pos":[0,662],"nodes":[{"content":"You can set parameters in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.","pos":[0,238],"source":"You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property."},{"content":"However, when you use this approach, the parameters in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection cannot represent a column name; they must represent values.","pos":[239,443],"source":" However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values."},{"content":"You can set a parameter to a value and then compare that value to a property.","pos":[444,521]},{"content":"For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.","pos":[522,662]}]}]}],"pos":[127292,128519],"yaml":true,"extradata":"MT"},{"content":"The parameters that are used to create the Order Groups By clause.","nodes":[{"pos":[0,66],"content":"The parameters that are used to create the Order Groups By clause.","nodes":[{"content":"The parameters that are used to create the Order Groups By clause.","pos":[0,66]}]}],"pos":[128858,128925],"yaml":true},{"content":"Gets or sets the properties and calculated values that are included in the retrieved data.","nodes":[{"pos":[0,90],"content":"Gets or sets the properties and calculated values that are included in the retrieved data.","nodes":[{"content":"Gets or sets the properties and calculated values that are included in the retrieved data.","pos":[0,90]}]}],"pos":[130072,130163],"yaml":true},{"content":"If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.  \n  \n You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data.  \n  \n If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. A class is also created dynamically if you calculate properties that are not properties in the data object. In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query. For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`. The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method.  \n  \n You can use the `As` keyword to assign an alias to a selected value. If you assign an alias, you must include the aliased properties in the `new` method. Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias. For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`.  \n  \n You use the `new` function in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property according to the conditions listed in the following table.  \n  \n|Select|Use of new|Example|  \n|------------|----------------|-------------|  \n|Single property.|`new` not needed.|`Select=\"Category\"`|  \n|Multiple properties.|`new` needed.|`Select=\"new(Cateogry, Name)\"`|  \n|Single or multiple properties that have an alias.|`new` needed.|`Select=\"new(Category As CategoryGroup)\"`|  \n  \n If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. Instead, manage the display through the data-bound control. When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`. Any values that are not displayed in the data-bound control are stored in view state. They are passed unchanged to the data source when the data update is performed.  \n  \n When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can use the following aggregate methods:  \n  \n-   `Count()`  \n  \n-   `Average(` *column* `)`  \n  \n-   `Sum(` *column* `)`  \n  \n-   `Max(` *column* `)`  \n  \n-   `Min(` *column* `)`  \n  \n-   `Where(` *condition* `)`  \n  \n-   `Any()`  \n  \n-   `All(` *condition* `)`  \n  \n For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af).  \n  \n When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `Key` property refers to the values in the property or properties that were used to group the data. For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property. The `It` property refers to a collection of individual records in a grouping of data. You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation. For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.  \n  \n If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword. The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias. You can assign an alias to the `Key` keyword, but this is not required.","nodes":[{"pos":[0,406],"content":"If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.","nodes":[{"content":"If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.","pos":[0,406],"nodes":[{"content":"If you do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves all the properties (data columns) from the data object.","pos":[0,215],"source":"If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object."},{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.","pos":[216,406],"source":" You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved."}]}]},{"pos":[413,613],"content":"You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data.","nodes":[{"content":"You specify which properties to retrieve by setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the names of the properties that you want to include in the returned data.","pos":[0,200],"source":"You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data."}]},{"pos":[620,1722],"content":"If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. A class is also created dynamically if you calculate properties that are not properties in the data object. In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query. For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`. The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method.","nodes":[{"content":"If you retrieve a subset of properties from the data object, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates a class that contains only the properties that you specify in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[0,274],"source":"If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"A class is also created dynamically if you calculate properties that are not properties in the data object.","pos":[275,382]},{"content":"In these cases, the object returned from the query is not an instance of the class that is specified in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.","pos":[383,561],"source":" In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property."},{"content":"Instead, you must use the <ph id=\"ph1\">`new`</ph> method in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to indicate that a new class is returned from the query.","pos":[562,731],"source":" Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query."},{"content":"For example, to return only the <ph id=\"ph1\">`FirstName`</ph> and <ph id=\"ph2\">`LastName`</ph> properties from an object that contains more than these properties, set the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id=\"ph4\">`new(FirstName, LastName)`</ph>.","pos":[732,964],"source":" For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will dynamically create the new class that you specified in the <ph id=\"ph2\">`new`</ph> method.","pos":[965,1102],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method."}]},{"pos":[1729,2289],"content":"You can use the `As` keyword to assign an alias to a selected value. If you assign an alias, you must include the aliased properties in the `new` method. Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias. For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`.","nodes":[{"content":"You can use the <ph id=\"ph1\">`As`</ph> keyword to assign an alias to a selected value.","pos":[0,68],"source":"You can use the `As` keyword to assign an alias to a selected value."},{"content":"If you assign an alias, you must include the aliased properties in the <ph id=\"ph1\">`new`</ph> method.","pos":[69,153],"source":" If you assign an alias, you must include the aliased properties in the `new` method."},{"content":"Any data-bound control that binds to the results from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control must refer to the property by the alias.","pos":[154,308],"source":" Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias."},{"content":"For example, if you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id=\"ph2\">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id=\"ph3\">`SalesRegion`</ph> and <ph id=\"ph4\">`RevenueThousands`</ph>.","pos":[309,560],"source":" For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`."}]},{"pos":[2296,2455],"content":"You use the <ph id=\"ph1\">`new`</ph> function in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property according to the conditions listed in the following table.","source":"You use the `new` function in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property according to the conditions listed in the following table."},{"pos":[2462,2468],"content":"Select","nodes":[{"content":"Select","pos":[0,6]}]},{"pos":[2469,2479],"content":"Use of new","nodes":[{"content":"Use of new","pos":[0,10]}]},{"pos":[2480,2487],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[2540,2556],"content":"Single property.","nodes":[{"content":"Single property.","pos":[0,16]}]},{"pos":[2557,2574],"content":"<ph id=\"ph1\">`new`</ph> not needed.","source":"`new` not needed."},{"pos":[2599,2619],"content":"Multiple properties.","nodes":[{"content":"Multiple properties.","pos":[0,20]}]},{"pos":[2620,2633],"content":"<ph id=\"ph1\">`new`</ph> needed.","source":"`new` needed."},{"pos":[2669,2718],"content":"Single or multiple properties that have an alias.","nodes":[{"content":"Single or multiple properties that have an alias.","pos":[0,49]}]},{"pos":[2719,2732],"content":"<ph id=\"ph1\">`new`</ph> needed.","source":"`new` needed."},{"pos":[2782,3522],"content":"If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. Instead, manage the display through the data-bound control. When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`. Any values that are not displayed in the data-bound control are stored in view state. They are passed unchanged to the data source when the data update is performed.","nodes":[{"content":"If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[0,206],"source":"If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"Instead, manage the display through the data-bound control.","pos":[207,266]},{"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id=\"ph5\">`false`</ph>.","pos":[267,574],"source":" When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`."},{"content":"Any values that are not displayed in the data-bound control are stored in view state.","pos":[575,660]},{"content":"They are passed unchanged to the data source when the data update is performed.","pos":[661,740]}]},{"pos":[3529,3716],"content":"When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can use the following aggregate methods:","nodes":[{"content":"When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can use the following aggregate methods:","pos":[0,187],"nodes":[{"content":"When you group data in the query, you can include aggregate methods in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[0,142],"source":"When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"You can use the following aggregate methods:","pos":[143,187]}]}]},{"pos":[3745,3768],"content":"<ph id=\"ph1\">`Average(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Average(` *column* `)`"},{"pos":[3778,3797],"content":"<ph id=\"ph1\">`Sum(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Sum(` *column* `)`"},{"pos":[3807,3826],"content":"<ph id=\"ph1\">`Max(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Max(` *column* `)`"},{"pos":[3836,3855],"content":"<ph id=\"ph1\">`Min(`</ph> <bpt id=\"p1\">*</bpt>column<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Min(` *column* `)`"},{"pos":[3865,3889],"content":"<ph id=\"ph1\">`Where(`</ph> <bpt id=\"p1\">*</bpt>condition<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`Where(` *condition* `)`"},{"pos":[3916,3938],"content":"<ph id=\"ph1\">`All(`</ph> <bpt id=\"p1\">*</bpt>condition<ept id=\"p1\">*</ept> <ph id=\"ph2\">`)`</ph>","source":"`All(` *condition* `)`"},{"pos":[3945,4233],"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id=\"p1\">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id=\"p2\">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id=\"p2\">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.","source":"For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)."},{"pos":[4240,5030],"content":"When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `Key` property refers to the values in the property or properties that were used to group the data. For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property. The `It` property refers to a collection of individual records in a grouping of data. You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation. For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.","nodes":[{"content":"When you group data, you can include <ph id=\"ph1\">`Key`</ph> and <ph id=\"ph2\">`It`</ph>, which are dynamically created properties, in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[0,169],"source":"When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"The <ph id=\"ph1\">`Key`</ph> property refers to the values in the property or properties that were used to group the data.","pos":[170,273],"source":" The `Key` property refers to the values in the property or properties that were used to group the data."},{"content":"For example, if you group by a property named <ph id=\"ph1\">`Category`</ph>, the <ph id=\"ph2\">`Key`</ph> property will contain each unique value in the <ph id=\"ph3\">`Category`</ph> property.","pos":[274,409],"source":" For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property."},{"content":"The <ph id=\"ph1\">`It`</ph> property refers to a collection of individual records in a grouping of data.","pos":[410,495],"source":" The `It` property refers to a collection of individual records in a grouping of data."},{"content":"You can iterate over the <ph id=\"ph1\">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.","pos":[496,624],"source":" You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation."},{"content":"For example, if you group by a property named <ph id=\"ph1\">`Category`</ph>, the <ph id=\"ph2\">`It`</ph> property contains all the individual records that share a common value in the <ph id=\"ph3\">`Category`</ph> property.","pos":[625,790],"source":" For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property."}]},{"pos":[5037,5397],"content":"If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword. The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias. You can assign an alias to the `Key` keyword, but this is not required.","nodes":[{"content":"If you include the <ph id=\"ph1\">`It`</ph> keyword in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property when you group data, you must assign an alias to the <ph id=\"ph3\">`It`</ph> keyword.","pos":[0,172],"source":"If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will throw an exception if <ph id=\"ph2\">`It`</ph> does not have an alias.","pos":[173,288],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias."},{"content":"You can assign an alias to the <ph id=\"ph1\">`Key`</ph> keyword, but this is not required.","pos":[289,360],"source":" You can assign an alias to the `Key` keyword, but this is not required."}]}],"pos":[130174,135620],"yaml":true,"extradata":"MT"},{"content":"A string that is used to create the Select clause.","nodes":[{"pos":[0,50],"content":"A string that is used to create the Select clause.","nodes":[{"content":"A string that is used to create the Select clause.","pos":[0,50]}]}],"pos":[137145,137196],"yaml":true},{"content":"Occurs when a data retrieval operation has finished.","nodes":[{"pos":[0,52],"content":"Occurs when a data retrieval operation has finished.","nodes":[{"content":"Occurs when a data retrieval operation has finished.","pos":[0,52]}]}],"pos":[138238,138291],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished. The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","nodes":[{"pos":[0,342],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished. The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished. The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","pos":[0,342],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.","pos":[0,205],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished."},{"content":"The object is available from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.","pos":[206,342],"source":" The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers."}]}]}],"pos":[138302,138645],"yaml":true,"extradata":"MT"},{"content":"Occurs before a data-retrieval operation.","nodes":[{"pos":[0,41],"content":"Occurs before a data-retrieval operation.","nodes":[{"content":"Occurs before a data-retrieval operation.","pos":[0,41]}]}],"pos":[139871,139913],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:  \n  \n-   Modify parameters for data retrieval.  \n  \n-   Generate the query programmatically.  \n  \n-   Modify the values for sorting or paging.  \n  \n-   Perform custom sorting or paging.  \n  \n-   Cancel the data-retrieval operation.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation. You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.  \n  \n Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>. For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.  \n  \n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.","nodes":[{"pos":[0,115],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:","nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event in order to perform the following tasks:","pos":[0,115],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:"}]},{"pos":[125,162],"content":"Modify parameters for data retrieval.","nodes":[{"content":"Modify parameters for data retrieval.","pos":[0,37]}]},{"pos":[172,208],"content":"Generate the query programmatically.","nodes":[{"content":"Generate the query programmatically.","pos":[0,36]}]},{"pos":[218,258],"content":"Modify the values for sorting or paging.","nodes":[{"content":"Modify the values for sorting or paging.","pos":[0,40]}]},{"pos":[268,301],"content":"Perform custom sorting or paging.","nodes":[{"content":"Perform custom sorting or paging.","pos":[0,33]}]},{"pos":[311,347],"content":"Cancel the data-retrieval operation.","nodes":[{"content":"Cancel the data-retrieval operation.","pos":[0,36]}]},{"pos":[354,810],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation. You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation. You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.","pos":[0,456],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.","pos":[0,179],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation."},{"content":"You can modify the parameters in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event handler before the query executes, or you can create a new result set and assign that to the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.","pos":[180,456],"source":" You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property."}]}]},{"pos":[817,1210],"content":"Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>. For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.","nodes":[{"content":"Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>. For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.","pos":[0,393],"nodes":[{"content":"Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>.","pos":[0,179],"source":"Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>."},{"content":"For example, when the column header of a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.","pos":[180,393],"source":" For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler."}]}]},{"pos":[1217,1898],"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.","nodes":[{"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.","pos":[0,681],"nodes":[{"content":"If an exception is thrown in an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event, you must handle the exception in that event handler.","pos":[0,171],"source":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler."},{"content":"The exception will not be passed to an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event (through the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).","pos":[172,472],"source":" The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.","pos":[473,681],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event."}]}]}],"pos":[139924,141841],"yaml":true,"extradata":"MT"},{"content":"Gets the collection of parameters that are used during a data-retrieval operation.","nodes":[{"pos":[0,82],"content":"Gets the collection of parameters that are used during a data-retrieval operation.","nodes":[{"content":"Gets the collection of parameters that are used during a data-retrieval operation.","pos":[0,82]}]}],"pos":[144520,144603],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause. For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile. You can then use that property and a value from the data source to calculate a new value.  \n  \n If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection. You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to \"FirstName, LastName\" without any parameters.  \n  \n To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter. In the Select clause, preface each parameter name with the @ symbol.  \n  \n You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name. To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.","nodes":[{"pos":[0,626],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause. For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile. You can then use that property and a value from the data source to calculate a new value.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause. For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile. You can then use that property and a value from the data source to calculate a new value.","pos":[0,626],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to create the Select clause at run time.","pos":[0,202],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time."},{"content":"You add parameters to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection when you want to use run-time values in the Select clause.","pos":[203,366],"source":" You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause."},{"content":"For example, you can add a parameter to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property in the user's profile.","pos":[367,536],"source":" For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile."},{"content":"You can then use that property and a value from the data source to calculate a new value.","pos":[537,626]}]}]},{"pos":[633,1119],"content":"If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection. You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to \"FirstName, LastName\" without any parameters.","nodes":[{"content":"If you do not have to set a value at run time in the Select clause, you do not have to use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.","pos":[0,174],"source":"If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection."},{"content":"You can define the properties to retrieve in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.","pos":[175,291],"source":" You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property."},{"content":"For example, to return the <ph id=\"ph1\">`FirstName`</ph> and <ph id=\"ph2\">`LastName`</ph> values from a database table, set <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> to \"FirstName, LastName\" without any parameters.","pos":[292,486],"source":" For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to \"FirstName, LastName\" without any parameters."}]},{"pos":[1126,1416],"content":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter. In the Select clause, preface each parameter name with the @ symbol.","nodes":[{"content":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter. In the Select clause, preface each parameter name with the @ symbol.","pos":[0,290],"nodes":[{"content":"To set values in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection, you add a placeholder in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property for the named parameter.","pos":[0,221],"source":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter."},{"content":"In the Select clause, preface each parameter name with the @ symbol.","pos":[222,290]}]}]},{"pos":[1423,1874],"content":"You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name. To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.","nodes":[{"content":"You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name. To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.","pos":[0,451],"nodes":[{"content":"You cannot use a parameter in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property name.","pos":[0,142],"source":"You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name."},{"content":"To dynamically set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the name of a property, create an event handler for the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property as needed.","pos":[143,451],"source":" To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed."}]}]}],"pos":[144614,146499],"yaml":true,"extradata":"MT"},{"content":"The parameters that are used to create the Select clause.","nodes":[{"pos":[0,57],"content":"The parameters that are used to create the Select clause.","nodes":[{"content":"The parameters that are used to create the Select clause.","pos":[0,57]}]}],"pos":[147891,147949],"yaml":true},{"content":"Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.","nodes":[{"pos":[0,204],"content":"Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.","nodes":[{"content":"Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.","pos":[0,204]}]}],"pos":[149233,149438],"yaml":true},{"content":"By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state. The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute. You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].  \n  \n Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source. If the values do not match, the data source record has changed. In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation. For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).  \n  \n Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user. You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`. If you do this, you must provide your own way to make sure that the data has not changed. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control. In that case, LINQ to SQL cannot verify the integrity of the data. LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.  \n  \n If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state. In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`. Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed. This helps reduce the size of view state, and no sensitive data is exposed. LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database. For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa).","nodes":[{"pos":[0,502],"content":"By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state. The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute. You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].","nodes":[{"content":"By default, when update and delete operations have been enabled, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values for all the records in view state.","pos":[0,186],"source":"By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores values for all primary keys and all properties not marked with <ph id=\"ph2\">`UpdateCheck.Never`</ph> in the <ph id=\"ph3\">`Column`</ph> attribute.","pos":[187,363],"source":" The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute."},{"content":"You set the <ph id=\"ph1\">`UpdateCheck`</ph> property of the <ph id=\"ph2\">`Column`</ph> attribute in the <ph id=\"ph3\">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.","pos":[364,502],"source":" You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]."}]},{"pos":[509,934],"content":"Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source. If the values do not match, the data source record has changed. In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation. For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).","nodes":[{"content":"Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.","pos":[0,125]},{"content":"If the values do not match, the data source record has changed.","pos":[126,189]},{"content":"In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.","pos":[190,294]},{"content":"For more information about LINQ to SQL, see <bpt id=\"p1\">[</bpt>LINQ to SQL<ept id=\"p1\">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.","pos":[295,425],"source":" For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)."}]},{"pos":[941,1734],"content":"Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user. You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`. If you do this, you must provide your own way to make sure that the data has not changed. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control. In that case, LINQ to SQL cannot verify the integrity of the data. LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.","nodes":[{"content":"Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.","pos":[0,146]},{"content":"You can disable storing values in view state by setting the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[147,309],"source":" You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`."},{"content":"If you do this, you must provide your own way to make sure that the data has not changed.","pos":[310,399]},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph>, the original values are not persisted in view state for the data-bound control.","pos":[400,597],"source":" If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control."},{"content":"In that case, LINQ to SQL cannot verify the integrity of the data.","pos":[598,664]},{"content":"LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.","pos":[665,793]}]},{"pos":[1741,2596],"content":"If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state. In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`. Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed. This helps reduce the size of view state, and no sensitive data is exposed. LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database. For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa).","nodes":[{"content":"If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.","pos":[0,149]},{"content":"In that case, the timestamp property in the entity class is set to <ph id=\"ph1\">`IsVersion=true`</ph> and all the properties are set to <ph id=\"ph2\">`UpdateCheck.Never`</ph>.","pos":[150,288],"source":" In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`."},{"content":"Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.","pos":[289,460]},{"content":"This helps reduce the size of view state, and no sensitive data is exposed.","pos":[461,536]},{"content":"LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.","pos":[537,669]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.","pos":[670,855],"source":" For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)."}]}],"pos":[149449,152054],"yaml":true,"extradata":"MT"},{"content":"`true` if the values will be stored in view state; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,99],"content":"`true` if the values will be stored in view state; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the values will be stored in view state; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,70],"source":"`true` if the values will be stored in view state; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[71,99],"source":" The default value is `true`."}]}],"pos":[152192,152294],"yaml":true},{"content":"Gets or sets the name of the property or field in the data context class that represents a data collection.","nodes":[{"pos":[0,107],"content":"Gets or sets the name of the property or field in the data context class that represents a data collection.","nodes":[{"content":"Gets or sets the name of the property or field in the data context class that represents a data collection.","pos":[0,107]}]}],"pos":[153369,153477],"yaml":true},{"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve. When you are connecting to a database table, the name of the property is usually the same as the name of the table. When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.  \n  \n You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations. If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.  \n  \n To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.  \n  \n For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.","nodes":[{"pos":[0,488],"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve. When you are connecting to a database table, the name of the property is usually the same as the name of the table. When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.","nodes":[{"content":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve. When you are connecting to a database table, the name of the property is usually the same as the name of the table. When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.","pos":[0,488],"nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that represents the data that you want to retrieve.","pos":[0,166],"source":"Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve."},{"content":"When you are connecting to a database table, the name of the property is usually the same as the name of the table.","pos":[167,282]},{"content":"When you are connecting to an in-memory data collection, set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that returns the data collection.","pos":[283,488],"source":" When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection."}]}]},{"pos":[495,915],"content":"You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations. If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.","nodes":[{"content":"You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations. If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.","pos":[0,420],"nodes":[{"content":"You can assign a property that returns any type to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property for retrieval operations.","pos":[0,150],"source":"You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations."},{"content":"If the object that is represented by the property does not implement <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerable&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will automatically wrap the object in an instance of an <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerable&gt;</ph> object.","pos":[151,420],"source":" If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object."}]}]},{"pos":[922,1305],"content":"To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.","nodes":[{"content":"To enable automatic update, insert, or delete operations, the class that is assigned to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and the property that is assigned to the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id=\"ph4\">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.","pos":[0,383],"source":"To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>."}]},{"pos":[1312,1472],"content":"For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.","nodes":[{"content":"For information about how to select data from an instance of a class, see the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.","pos":[0,160],"source":"For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property."}]}],"pos":[153488,154969],"yaml":true,"extradata":"MT"},{"content":"A string that contains the name of the property that contains the data collection.","nodes":[{"pos":[0,82],"content":"A string that contains the name of the property that contains the data collection.","nodes":[{"content":"A string that contains the name of the property that contains the data collection.","pos":[0,82]}]}],"pos":[157018,157101],"yaml":true},{"content":"Performs an update operation.","nodes":[{"pos":[0,29],"content":"Performs an update operation.","nodes":[{"content":"Performs an update operation.","pos":[0,29]}]}],"pos":[158534,158564],"yaml":true},{"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.","nodes":[{"pos":[0,431],"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.","nodes":[{"content":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.","pos":[0,431],"nodes":[{"content":"Typically, you do not have to call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method from your code.","pos":[0,119],"source":"Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code."},{"content":"The data-bound control will automatically call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when the user takes action to update a record.","pos":[120,282],"source":" The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record."},{"content":"You explicitly call the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when you want to create your own process for updating data.","pos":[283,431],"source":" You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data."}]}]}],"pos":[158575,159007],"yaml":true,"extradata":"MT"},{"content":"The row key values for the records to be updated.","nodes":[{"pos":[0,49],"content":"The row key values for the records to be updated.","nodes":[{"content":"The row key values for the records to be updated.","pos":[0,49]}]}],"pos":[160668,160718],"yaml":true},{"content":"The row values to be updated in the data source.","nodes":[{"pos":[0,48],"content":"The row values to be updated in the data source.","nodes":[{"content":"The row values to be updated in the data source.","pos":[0,48]}]}],"pos":[160797,160846],"yaml":true},{"content":"The row values that are evaluated to detect data conflicts.","nodes":[{"pos":[0,59],"content":"The row values that are evaluated to detect data conflicts.","nodes":[{"content":"The row values that are evaluated to detect data conflicts.","pos":[0,59]}]}],"pos":[160928,160988],"yaml":true},{"content":"The number of records affected by the update operation.","nodes":[{"pos":[0,55],"content":"The number of records affected by the update operation.","nodes":[{"content":"The number of records affected by the update operation.","pos":[0,55]}]}],"pos":[161044,161100],"yaml":true},{"content":"Occurs when an update operation has finished.","nodes":[{"pos":[0,45],"content":"Occurs when an update operation has finished.","nodes":[{"content":"Occurs when an update operation has finished.","pos":[0,45]}]}],"pos":[162119,162165],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished. The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","nodes":[{"pos":[0,358],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished. The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished. The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.","pos":[0,358],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.","pos":[0,209],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished."},{"content":"The output parameters are available from the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.","pos":[210,358],"source":" The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers."}]}]}],"pos":[162176,162535],"yaml":true,"extradata":"MT"},{"content":"This collection is not used by the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class.","nodes":[{"pos":[0,103],"content":"This collection is not used by the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> class.","source":"This collection is not used by the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class."}],"pos":[163805,163909],"yaml":true},{"content":"A collection of parameters.","nodes":[{"pos":[0,27],"content":"A collection of parameters.","nodes":[{"content":"A collection of parameters.","pos":[0,27]}]}],"pos":[164241,164269],"yaml":true},{"content":"Occurs before an update operation.","nodes":[{"pos":[0,34],"content":"Occurs before an update operation.","nodes":[{"content":"Occurs before an update operation.","pos":[0,34]}]}],"pos":[165418,165453],"yaml":true},{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation. The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.  \n  \n If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.  \n  \n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.","nodes":[{"pos":[0,413],"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation. The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.","nodes":[{"content":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation. The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.","pos":[0,413],"nodes":[{"content":"Handle the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.","pos":[0,248],"source":"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object that is passed to event handlers contains both the original object and the updated object.","pos":[249,413],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object."}]}]},{"pos":[420,945],"content":"If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.","nodes":[{"content":"If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.","pos":[0,525],"nodes":[{"content":"If a validation error occurs during the update operation, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.","pos":[0,201],"source":"If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class."},{"content":"A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.","pos":[202,361]},{"content":"In an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.","pos":[362,525],"source":" In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action."}]}]},{"pos":[952,1630],"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.","nodes":[{"content":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.","pos":[0,678],"nodes":[{"content":"If an exception is thrown in an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you must handle the exception in that event handler.","pos":[0,170],"source":"If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler."},{"content":"The exception will not be passed to an event handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event (through the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).","pos":[171,470],"source":" The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.","pos":[471,678],"source":" The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event."}]}]}],"pos":[165464,167101],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.","nodes":[{"pos":[0,115],"content":"Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.","nodes":[{"content":"Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.","pos":[0,115]}]}],"pos":[171097,171213],"yaml":true},{"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query. The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.  \n  \n You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set. Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:  \n  \n```  \n<asp:LinqDataSource ... Where=\"Price > 50\"...>  \n```  \n  \n To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:  \n  \n```  \n<asp:LinqDataSource ... Where=\"Price > 50 && Price < 100\"...>  \n<asp:LinqDataSource ... Where=\"Price <= 50 || Price >= 100\"...>  \n```  \n  \n If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks. To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:  \n  \n```  \n<asp:LinqDataSource ... Where='Category = \"Sports\"' ... >  \n```  \n  \n To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:  \n  \n```vb  \nLinqDataSource1.Where = \"Category = \"\"Sports\"\"\"  \n```  \n  \n```csharp  \nLinqDataSource1.Where = \"Category = \\\"Sports\\\"\";  \n```  \n  \n If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value. The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to \"Sports\":  \n  \n```  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") < 0' ... >  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") <= 0' ... >  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") > 0' ... >  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") >= 0' ... >  \n```  \n  \n You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>. For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md). For more information about Where clause syntax, see [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md).  \n  \n In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time. In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value. You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.  \n  \n Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property. Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.  \n  \n For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](http://msdn.microsoft.com/en-us/c1cca3e8-86e4-4e69-a29f-1c05b91f2205).","nodes":[{"pos":[0,289],"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query. The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.","nodes":[{"content":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query. The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.","pos":[0,289],"nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to specify the conditions for the record to be returned from a query.","pos":[0,147],"source":"You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query."},{"content":"The syntax for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is the same as the syntax for a LINQ Where clause in C#.","pos":[148,289],"source":" The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#."}]}]},{"pos":[296,577],"content":"You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set. Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:","nodes":[{"content":"You specify an expression that results in a Boolean value, and if the expression evaluates to <ph id=\"ph1\">`true`</ph> for a given row, the row is included in the result set.","pos":[0,156],"source":"You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set."},{"content":"Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:","pos":[157,281]}]},{"pos":[648,831],"content":"To specify multiple expressions linked by logical <ph id=\"ph1\">`AND`</ph> or <ph id=\"ph2\">`OR`</ph> operators, you use <ph id=\"ph3\">`&amp;&amp;`</ph> as a logical AND operator and <ph id=\"ph4\">`||`</ph> as a logical OR operator, as shown in the following example:","source":"To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:"},{"pos":[983,1280],"content":"If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks. To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:","nodes":[{"content":"If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks. To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:","pos":[0,297],"nodes":[{"content":"If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.","pos":[0,131]},{"content":"To do this in markup, enclose the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause value in single quotation marks, as shown in the following example:","pos":[132,297],"source":" To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:"}]}]},{"pos":[1362,1560],"content":"To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:","nodes":[{"content":"To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:","pos":[0,198]}]},{"pos":[1706,2094],"content":"If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value. The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to \"Sports\":","nodes":[{"content":"If you want to test whether a string is greater than or less than another string, you must use methods of the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> class instead of using <ph id=\"ph2\">`&lt;`</ph> or <ph id=\"ph3\">`&gt;`</ph> operators between the column name and the string value.","pos":[0,220],"source":"If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value."},{"content":"The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to \"Sports\":","pos":[221,388]}]},{"pos":[2410,2926],"content":"You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>. For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md). For more information about Where clause syntax, see [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md).","nodes":[{"content":"You can also use other methods of the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> class, such as <ph id=\"ph2\">&lt;xref:System.String.StartsWith%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.String.EndsWith%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.String.Contains%2A&gt;</ph>.","pos":[0,181],"source":"You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>."},{"content":"For more information about how to compare strings, see <bpt id=\"p1\">[</bpt>Comparing Strings<ept id=\"p1\">](~/docs/standard/base-types/comparing.md)</ept>.","pos":[182,298],"source":" For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md)."},{"content":"For more information about Where clause syntax, see <bpt id=\"p1\">[</bpt>C# Operators<ept id=\"p1\">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept> and <bpt id=\"p2\">[</bpt>where clause<ept id=\"p2\">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>.","pos":[299,516],"source":" For more information about Where clause syntax, see [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md)."}]},{"pos":[2933,3394],"content":"In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time. In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value. You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.","nodes":[{"content":"In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time. In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value. You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.","pos":[0,461],"nodes":[{"content":"In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.","pos":[0,164]},{"content":"In that case, you include a named parameter in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property that acts as a placeholder for the value.","pos":[165,323],"source":" In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value."},{"content":"You then add a parameter that has the matching name to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.","pos":[324,461],"source":" You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection."}]}]},{"pos":[3401,4077],"content":"Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property. Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.","nodes":[{"content":"Alternatively, you can set the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> and define the parameters in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.","pos":[0,236],"source":"Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, you do not have to include the named parameters in the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.","pos":[237,462],"source":" When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property."},{"content":"Instead, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically generates the Where clause from the parameters in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> property.","pos":[463,676],"source":" Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property."}]},{"pos":[4084,4307],"content":"For more information about how to filter data, see <bpt id=\"p1\">[</bpt>Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls<ept id=\"p1\">](http://msdn.microsoft.com/en-us/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>.","source":"For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](http://msdn.microsoft.com/en-us/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)."}],"pos":[171224,175610],"yaml":true,"extradata":"MT"},{"content":"A string that is used to create the Where clause.","nodes":[{"pos":[0,49],"content":"A string that is used to create the Where clause.","nodes":[{"content":"A string that is used to create the Where clause.","pos":[0,49]}]}],"pos":[177369,177419],"yaml":true},{"content":"Gets the collection of parameters that is used to create the Where clause.","nodes":[{"pos":[0,74],"content":"Gets the collection of parameters that is used to create the Where clause.","nodes":[{"content":"Gets the collection of parameters that is used to create the Where clause.","pos":[0,74]}]}],"pos":[178505,178580],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause. For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control. In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.  \n  \n If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property. For example, to return values from a database table where `LastName` equals \"Adams\" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = \"Adams\"'` without any parameters.  \n  \n To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter. In the Where clause, preface each parameter name with the @ symbol.","nodes":[{"pos":[0,686],"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause. For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control. In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause. For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control. In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.","pos":[0,686],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to create the Where clause at run time.","pos":[0,200],"source":"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time."},{"content":"You add parameters to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection when you want to programmatically set one or more of the conditions in the Where clause.","pos":[201,393],"source":" You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause."},{"content":"For example, you might search a database table for records with a last name equal to the value of a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.","pos":[394,543],"source":" For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control."},{"content":"In that case, you add a parameter to the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection for the text box value.","pos":[544,686],"source":" In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value."}]}]},{"pos":[693,1196],"content":"If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property. For example, to return values from a database table where `LastName` equals \"Adams\" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = \"Adams\"'` without any parameters.","nodes":[{"content":"If you do not have to set a value at run time in the Where clause, you do not have to use the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.","pos":[0,172],"source":"If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection."},{"content":"You can define the fields to retrieve in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.","pos":[173,284],"source":" You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property."},{"content":"For example, to return values from a database table where <ph id=\"ph1\">`LastName`</ph> equals \"Adams\" in markup, set the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to <ph id=\"ph3\">`'LastName = \"Adams\"'`</ph> without any parameters.","pos":[285,503],"source":" For example, to return values from a database table where `LastName` equals \"Adams\" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = \"Adams\"'` without any parameters."}]},{"pos":[1203,1526],"content":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter. In the Where clause, preface each parameter name with the @ symbol.","nodes":[{"content":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter. In the Where clause, preface each parameter name with the @ symbol.","pos":[0,323],"nodes":[{"content":"To set values in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for that parameter.","pos":[0,255],"source":"To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter."},{"content":"In the Where clause, preface each parameter name with the @ symbol.","pos":[256,323]}]}]}],"pos":[178591,180128],"yaml":true,"extradata":"MT"},{"content":"A collection of the parameters that are used to create the Where clause in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Where\"></xref> property.","nodes":[{"pos":[0,156],"content":"A collection of the parameters that are used to create the Where clause in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource.Where\"&gt;&lt;/xref&gt;</ph> property.","source":"A collection of the parameters that are used to create the Where clause in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Where\"></xref> property."}],"pos":[181319,181476],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref>.","nodes":[{"pos":[0,101],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.IDynamicDataSource\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref>."}],"pos":[182842,182944],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.","nodes":[{"pos":[0,219],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface."}]}]}],"pos":[182955,183175],"yaml":true,"extradata":"MT"},{"content":"The type that is associated with the class.","nodes":[{"pos":[0,43],"content":"The type that is associated with the class.","nodes":[{"content":"The type that is associated with the class.","pos":[0,43]}]}],"pos":[183326,183370],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref>.","nodes":[{"pos":[0,101],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.IDynamicDataSource\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref>."}],"pos":[184672,184774],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.","nodes":[{"pos":[0,219],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface."}]}]}],"pos":[184785,185005],"yaml":true,"extradata":"MT"},{"content":"The name of the entity.","nodes":[{"pos":[0,23],"content":"The name of the entity.","nodes":[{"content":"The name of the entity.","pos":[0,23]}]}],"pos":[185162,185186],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.LinqDataSource\n  commentId: T:System.Web.UI.WebControls.LinqDataSource\n  id: LinqDataSource\n  children:\n  - System.Web.UI.WebControls.LinqDataSource.#ctor\n  - System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause\n  - System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause\n  - System.Web.UI.WebControls.LinqDataSource.AutoPage\n  - System.Web.UI.WebControls.LinqDataSource.AutoSort\n  - System.Web.UI.WebControls.LinqDataSource.ContextCreated\n  - System.Web.UI.WebControls.LinqDataSource.ContextCreating\n  - System.Web.UI.WebControls.LinqDataSource.ContextDisposing\n  - System.Web.UI.WebControls.LinqDataSource.ContextTypeName\n  - System.Web.UI.WebControls.LinqDataSource.CreateQueryableView\n  - System.Web.UI.WebControls.LinqDataSource.CreateView\n  - System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.WebControls.LinqDataSource.Deleted\n  - System.Web.UI.WebControls.LinqDataSource.DeleteParameters\n  - System.Web.UI.WebControls.LinqDataSource.Deleting\n  - System.Web.UI.WebControls.LinqDataSource.EnableDelete\n  - System.Web.UI.WebControls.LinqDataSource.EnableInsert\n  - System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking\n  - System.Web.UI.WebControls.LinqDataSource.EnableUpdate\n  - System.Web.UI.WebControls.LinqDataSource.GroupBy\n  - System.Web.UI.WebControls.LinqDataSource.GroupByParameters\n  - System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)\n  - System.Web.UI.WebControls.LinqDataSource.Inserted\n  - System.Web.UI.WebControls.LinqDataSource.Inserting\n  - System.Web.UI.WebControls.LinqDataSource.InsertParameters\n  - System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)\n  - System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)\n  - System.Web.UI.WebControls.LinqDataSource.OrderBy\n  - System.Web.UI.WebControls.LinqDataSource.OrderByParameters\n  - System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy\n  - System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters\n  - System.Web.UI.WebControls.LinqDataSource.Select\n  - System.Web.UI.WebControls.LinqDataSource.Selected\n  - System.Web.UI.WebControls.LinqDataSource.Selecting\n  - System.Web.UI.WebControls.LinqDataSource.SelectParameters\n  - System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState\n  - System.Web.UI.WebControls.LinqDataSource.TableName\n  - System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.WebControls.LinqDataSource.Updated\n  - System.Web.UI.WebControls.LinqDataSource.UpdateParameters\n  - System.Web.UI.WebControls.LinqDataSource.Updating\n  - System.Web.UI.WebControls.LinqDataSource.Where\n  - System.Web.UI.WebControls.LinqDataSource.WhereParameters\n  - System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType\n  - System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName\n  langs:\n  - csharp\n  name: LinqDataSource\n  nameWithType: LinqDataSource\n  fullName: System.Web.UI.WebControls.LinqDataSource\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [Order of Operations](#order_of_operations)  \\n  \\n-   [Ordering Data](#ordering_data)  \\n  \\n-   [Grouping Data](#grouping_data)  \\n  \\n-   [Data Modifications](#data_modifications)  \\n  \\n-   [Evaluating Values at Run Time](#evaluating_value_at_run_time)  \\n  \\n-   [Working with Stored Procedures](#working_with_stored_procedures)  \\n  \\n-   [Declarative Syntax](#declarative_syntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language. The data object can be an in-memory data collection or an object that represents data from a database. You can retrieve or modify the data without having to write SQL commands for each operation.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text. The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands. For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).  \\n  \\n When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection. You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection. For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values. In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`.  \\n  \\n When you are querying a database, you must first create entity classes that represent the database and its tables. You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes. You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table.  \\n  \\n<a name=\\\"order_of_operations\\\"></a>   \\n## Order of Operations  \\n The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:  \\n  \\n1.  Where (specify which data records to return).  \\n  \\n2.  Order By (sort).  \\n  \\n3.  Group By (aggregate data records that share values).  \\n  \\n4.  Order Groups By (sort grouped data).  \\n  \\n5.  Select (specify which fields or properties to return).  \\n  \\n6.  Auto-sort (sort data records by a property that the user has selected).  \\n  \\n7.  Auto-page (retrieve a subset of data records that were selected by the user).  \\n  \\n You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query. If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.  \\n  \\n<a name=\\\"ordering_data\\\"></a>   \\n## Ordering Data  \\n You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by.  \\n  \\n> [!NOTE]\\n>  When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.  \\n  \\n<a name=\\\"grouping_data\\\"></a>   \\n## Grouping Data  \\n You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values. When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `Key` property refers to the values in the property or properties that were used to group the data. For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property. The `It` property refers to a collection of individual records in a grouping of data. You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation. For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.  \\n  \\n You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data. When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.  \\n  \\n By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties. The Select operation is applied after the Where, Order By, and Group By operations. Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.  \\n  \\n<a name=\\\"data_modifications\\\"></a>   \\n## Data Modifications  \\n You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties. The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control. In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:  \\n  \\n-   The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value.  \\n  \\n-   The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value.  \\n  \\n-   The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.  \\n  \\n-   The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.  \\n  \\n You can restrict which properties are displayed in a data-bound control in two ways. You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls. However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled. If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control. When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`. This prevents the data-bound control from automatically including buttons for editing and deleting the data. Any values that are not displayed in the data-bound control are stored in view state. They are passed unchanged to the data source when the data update is performed.  \\n  \\n<a name=\\\"evaluating_value_at_run_time\\\"></a>   \\n## Evaluating Values at Run Time  \\n If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections.  \\n  \\n If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.  \\n  \\n If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events. You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.  \\n  \\n To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events.  \\n  \\n<a name=\\\"working_with_stored_procedures\\\"></a>   \\n## Working with Stored Procedures  \\n You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object. If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).  \\n  \\n<a name=\\\"declarative_syntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:LinqDataSource  \\n    AutoGenerateOrderByClause=\\\"True|False\\\"  \\n    AutoGenerateWhereClause=\\\"True|False\\\"  \\n    AutoPage=\\\"True|False\\\"  \\n    AutoSort=\\\"True|False\\\"  \\n    ContextTypeName=\\\"string\\\"  \\n    EnableDelete=\\\"True|False\\\"  \\n    EnableInsert=\\\"True|False\\\"  \\n    EnableTheming=\\\"True|False\\\"  \\n    EnableUpdate=\\\"True|False\\\"  \\n    EnableViewState=\\\"True|False\\\"  \\n    GroupBy=\\\"string\\\"  \\n    ID=\\\"string\\\"  \\n    OnContextCreated=\\\"ContextCreated event handler\\\"  \\n    OnContextCreating=\\\"ContextCreating event handler\\\"  \\n    OnContextDisposing=\\\"ContextDisposing event handler\\\"  \\n    OnDataBinding=\\\"DataBinding event handler\\\"  \\n    OnDeleted=\\\"Deleted event handler\\\"  \\n    OnDeleting=\\\"Deleting event handler\\\"  \\n    OnDisposed=\\\"Disposed event handler\\\"  \\n    OnInit=\\\"Init event handler\\\"  \\n    OnInserted=\\\"Inserted event handler\\\"  \\n    OnInserting=\\\"Inserting event handler\\\"  \\n    OnLoad=\\\"Load event handler\\\"  \\n    OnPreRender=\\\"PreRender event handler\\\"  \\n    OnSelected=\\\"Selected event handler\\\"  \\n    OnSelecting=\\\"Selecting event handler\\\"  \\n    OnUnload=\\\"Unload event handler\\\"  \\n    OnUpdated=\\\"Updated event handler\\\"  \\n    OnUpdating=\\\"Updating event handler\\\"  \\n    OrderBy=\\\"string\\\"  \\n    runat=\\\"server\\\"  \\n    Select=\\\"string\\\"  \\n    SkinID=\\\"string\\\"  \\n    StoreOriginalValuesInViewState=\\\"True|False\\\"  \\n    TableName=\\\"string\\\"  \\n    Visible=\\\"True|False\\\"  \\n    Where=\\\"string\\\"  \\n>  \\n        <GroupByParameters />  \\n        <InsertParameters />  \\n        <OrderByParameters />  \\n        <SelectParameters />  \\n        <WhereParameters />  \\n</asp:LinqDataSource>  \\n```\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that retrieves data from an entity class named `Products`. The entity class could have been generated by using the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility. The <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is set to return only records that have a value in the `Price` property greater than 50. A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  -->  \\n  \\n The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that enables users to update, delete, and insert records in the data source. A <xref:System.Web.UI.WebControls.DetailsView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control and enables users to see and modify the data. Notice that no SQL commands are required in order to select, update, delete, or insert the records.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  -->  \\n  \\n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event that sets the data object based on a value in the Web page.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  \\n  \\n The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns. The `Key` property references an object that has two properties, `ProductCategory` and `Color`. The object represented by `It` is renamed (aliased) to `Products`. The renamed `Products` object contains a collection of the individual records in a grouping. Each instance will contain all the columns from the `Products` table.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  -->  \\n  \\n The following example shows two <xref:System.Web.UI.WebControls.ListView> controls that display the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example. One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data, and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group. The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  -->\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), \"LinqDataSource.bmp\")]\n\n      public class LinqDataSource : System.Web.UI.WebControls.ContextDataSource, System.Web.DynamicData.IDynamicDataSource\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  - System.Web.UI.DataSourceControl\n  - System.Web.UI.WebControls.QueryableDataSource\n  - System.Web.UI.WebControls.ContextDataSource\n  implements:\n  - System.Web.DynamicData.IDynamicDataSource\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnPreRender(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.DataSourceControl.ClientID\n  - System.Web.UI.DataSourceControl.ClientIDMode\n  - System.Web.UI.DataSourceControl.Controls\n  - System.Web.UI.DataSourceControl.CreateControlCollection\n  - System.Web.UI.DataSourceControl.EnableTheming\n  - System.Web.UI.DataSourceControl.FindControl(System.String)\n  - System.Web.UI.DataSourceControl.Focus\n  - System.Web.UI.DataSourceControl.HasControls\n  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)\n  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.DataSourceControl.SkinID\n  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList\n  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)\n  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames\n  - System.Web.UI.DataSourceControl.Visible\n  - System.Web.UI.WebControls.ContextDataSource.EntitySetName\n  - System.Web.UI.WebControls.ContextDataSource.EntityTypeName\n  - System.Web.UI.WebControls.QueryableDataSource.GetView(System.String)\n  - System.Web.UI.WebControls.QueryableDataSource.GetViewNames\n  - System.Web.UI.WebControls.QueryableDataSource.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.QueryableDataSource.QueryCreated\n  - System.Web.UI.WebControls.QueryableDataSource.RaiseViewChanged\n  - System.Web.UI.WebControls.QueryableDataSource.SaveViewState\n  - System.Web.UI.WebControls.QueryableDataSource.TrackViewState\n  - System.Web.UI.WebControls.QueryableDataSource.UpdateParameterVales\n  extensionMethods:\n  - System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)\n  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)\n  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)\n  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)\n  - System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)\n  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.#ctor\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: LinqDataSource()\n  nameWithType: LinqDataSource.LinqDataSource()\n  fullName: LinqDataSource.LinqDataSource()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class.\n  syntax:\n    content: public LinqDataSource ();\n    parameters: []\n  overload: System.Web.UI.WebControls.LinqDataSource.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause\n  id: AutoGenerateOrderByClause\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: AutoGenerateOrderByClause\n  nameWithType: LinqDataSource.AutoGenerateOrderByClause\n  fullName: LinqDataSource.AutoGenerateOrderByClause\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control dynamically creates an Order By clause based on values in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.OrderByParameters\"></xref> collection.\n  remarks: \"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter. Parameters that contain `null` or an empty value are not included in the Order By clause.  \\n  \\n You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> set to `true`. A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  -->\"\n  syntax:\n    content: public bool AutoGenerateOrderByClause { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control creates the Order By clause; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause\n  id: AutoGenerateWhereClause\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: AutoGenerateWhereClause\n  nameWithType: LinqDataSource.AutoGenerateWhereClause\n  fullName: LinqDataSource.AutoGenerateWhereClause\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control dynamically creates a Where clause based on values defined in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.WhereParameters\"></xref> collection.\n  remarks: \"When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried. The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object. If you provide more than one parameter, the parameters are linked with a logical `AND` operation. Parameters that contain `null` or an empty value are not included in the Where clause.  \\n  \\n The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation. Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation. You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol.  \\n  \\n You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> set to `true`. A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data that is returned from the query. A <xref:System.Web.UI.WebControls.DropDownList> control is included that is populated with three values. A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection with the name set to `Category,` which matches one of the properties of the data object. Its <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property is set to the ID of the <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.LinqDataSource> control automatically creates the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter records based on the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control. The query returns the records whose `Category` property matches the value that the user has selected from the <xref:System.Web.UI.WebControls.DropDownList> control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default7.aspx#7)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default7.aspx#7)]  -->\"\n  syntax:\n    content: public bool AutoGenerateWhereClause { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control will create the Where clause; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoPage\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.AutoPage\n  id: AutoPage\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: AutoPage\n  nameWithType: LinqDataSource.AutoPage\n  fullName: LinqDataSource.AutoPage\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control supports navigation through sections of the data at run time.\n  remarks: Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control. To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control. It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page.\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users page through the data.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  -->\"\n  syntax:\n    content: public bool AutoPage { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user can page through the data; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.AutoPage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoSort\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.AutoSort\n  id: AutoSort\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: AutoSort\n  nameWithType: LinqDataSource.AutoSort\n  fullName: LinqDataSource.AutoSort\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control supports sorting the data at run time.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data. You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.  \\n  \\n Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control. The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.  \\n  \\n You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting. When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. Therefore, this determines the final sorting of the data.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users sort the data.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  -->\"\n  syntax:\n    content: public bool AutoSort { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user can sort the data; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.AutoSort*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreated\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.ContextCreated\n  id: ContextCreated\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: ContextCreated\n  nameWithType: LinqDataSource.ContextCreated\n  fullName: LinqDataSource.ContextCreated\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs after an instance of the context type object is created.\n  remarks: \"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created. You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event. You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.  \\n  \\n The context type object is created during select, update, insert, and delete operations and is reused throughout the request.  \\n  \\n There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> ContextCreated;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreating\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.ContextCreating\n  id: ContextCreating\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: ContextCreating\n  nameWithType: LinqDataSource.ContextCreating\n  fullName: LinqDataSource.ContextCreating\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before an instance of the context type object is created.\n  remarks: \"By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object. It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.  \\n  \\n The context type object is created during select, update, insert, and delete operations.  \\n  \\n There is one time when the event is not raised. This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.\"\n  example:\n  - \"The following example shows how to create the data context object by using a non-default constructor during the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs> ContextCreating;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextDisposing\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing\n  id: ContextDisposing\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: ContextDisposing\n  nameWithType: LinqDataSource.ContextDisposing\n  fullName: LinqDataSource.ContextDisposing\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before disposing the context type object.\n  remarks: You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs> ContextDisposing;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextTypeName\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName\n  id: ContextTypeName\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: ContextTypeName\n  nameWithType: LinqDataSource.ContextTypeName\n  fullName: LinqDataSource.ContextTypeName\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.\n  remarks: \"When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties. The first is a data context class that represents the data source. The second is a property in the data context class that contains the data. You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.  \\n  \\n For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database. Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database. To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes.  \\n  \\n When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property. Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.  \\n  \\n To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>. In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>. If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.  \\n  \\n For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.\"\n  example:\n  - \"The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to a class that contains an array of strings. It also shows how to set the property to a class (generated by the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) that represents a database.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  -->  \\n  \\n The class named `ExampleDataContext` that represents the database table is not shown in this example. For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]. A class named `ExampleDataContext` with a property named `Movies` is generated.  \\n  \\n The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]\"\n  syntax:\n    content: public override string ContextTypeName { get; set; }\n    return:\n      type: System.String\n      description: The name of the class to retrieve data from.\n  overload: System.Web.UI.WebControls.LinqDataSource.ContextTypeName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView\n  id: CreateQueryableView\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: CreateQueryableView()\n  nameWithType: LinqDataSource.CreateQueryableView()\n  fullName: LinqDataSource.CreateQueryableView()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Returns a queryable view.\n  syntax:\n    content: protected override System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.QueryableDataSourceView\n      description: A queryable view.\n  overload: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.CreateView\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.CreateView\n  id: CreateView\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: CreateView()\n  nameWithType: LinqDataSource.CreateView()\n  fullName: LinqDataSource.CreateView()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Creates a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceView\"></xref> class that is associated with this control.\n  remarks: To provide a custom view, you can override this method in a derived class.\n  syntax:\n    content: protected virtual System.Web.UI.WebControls.LinqDataSourceView CreateView ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.LinqDataSourceView\n      description: An object that acts as the interface for data-bound controls.\n  overload: System.Web.UI.WebControls.LinqDataSource.CreateView*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Delete(IDictionary, IDictionary)\n  nameWithType: LinqDataSource.Delete(IDictionary, IDictionary)\n  fullName: LinqDataSource.Delete(IDictionary, IDictionary)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Performs a delete operation.\n  remarks: Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code. When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data. For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.\n  syntax:\n    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: The row key values for the records to be deleted.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: The row values that are evaluated to detect data conflicts.\n    return:\n      type: System.Int32\n      description: The number of records affected by the delete operation.\n  overload: System.Web.UI.WebControls.LinqDataSource.Delete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Deleted\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Deleted\n  id: Deleted\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Deleted\n  nameWithType: LinqDataSource.Deleted\n  fullName: LinqDataSource.Deleted\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a delete operation has finished.\n  remarks: Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished. You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Deleted;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.DeleteParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters\n  id: DeleteParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: DeleteParameters\n  nameWithType: LinqDataSource.DeleteParameters\n  fullName: LinqDataSource.DeleteParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: This property is not used by the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A collection of parameters.\n  overload: System.Web.UI.WebControls.LinqDataSource.DeleteParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Deleting\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Deleting\n  id: Deleting\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Deleting\n  nameWithType: LinqDataSource.Deleting\n  fullName: LinqDataSource.Deleting\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before a delete operation.\n  remarks: \"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation. The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation. If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.  \\n  \\n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event. The code cancels the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, when the `OnSale` property is set to `true`, the user must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that a record should be deleted.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Deleting;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableDelete\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.EnableDelete\n  id: EnableDelete\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: EnableDelete\n  nameWithType: LinqDataSource.EnableDelete\n  fullName: LinqDataSource.EnableDelete\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether data records can be deleted through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.\n  remarks: \"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data. You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> set to `true`. A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users delete a data record.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  -->\"\n  syntax:\n    content: public bool EnableDelete { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if automatic delete operations are enabled; otherwise, `false`. The default value is `false`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.EnableDelete*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableInsert\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.EnableInsert\n  id: EnableInsert\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: EnableInsert\n  nameWithType: LinqDataSource.EnableInsert\n  fullName: LinqDataSource.EnableInsert\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether data records can be inserted through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.\n  remarks: \"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data. You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> set to `true`. A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  -->\"\n  syntax:\n    content: public bool EnableInsert { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if automatic insert operations are enabled; otherwise, `false`. The default value is `false`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.EnableInsert*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking\n  id: EnableObjectTracking\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: EnableObjectTracking\n  nameWithType: LinqDataSource.EnableObjectTracking\n  fullName: LinqDataSource.EnableObjectTracking\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the value that indicates whether changes to the data context object are tracked.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object.  \\n  \\n When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed. However, it also disables deferred query execution. This property must be set to `true` if you want to use deferred query execution.\"\n  syntax:\n    content: public bool EnableObjectTracking { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the data context object is tracked for changes; otherwise, `false`. The default is `true`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableUpdate\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate\n  id: EnableUpdate\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: EnableUpdate\n  nameWithType: LinqDataSource.EnableUpdate\n  fullName: LinqDataSource.EnableUpdate\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether data records can be updated through the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.\n  remarks: \"Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control. When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data. You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set. In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> set to `true`. A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users update a data record.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  -->\"\n  syntax:\n    content: public bool EnableUpdate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if automatic update operations are enabled; otherwise, `false`. The default value is `false`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.EnableUpdate*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.GroupBy\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.GroupBy\n  id: GroupBy\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: GroupBy\n  nameWithType: LinqDataSource.GroupBy\n  fullName: LinqDataSource.GroupBy\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that specifies which properties are used for grouping the retrieved data.\n  remarks: \"You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values. For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record.  \\n  \\n You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma. For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`.  \\n  \\n The values in the property that are used for grouping are returned through a generated property named `Key`. You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values. You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias. For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`. You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`.  \\n  \\n You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `It` property contains a collection of records that share a value in the grouped property. You can iterate over the `It` property to retrieve the individual records.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods. You can use the following aggregate methods:  \\n  \\n-   `Count()`  \\n  \\n-   `Average(` *column* `)`  \\n  \\n-   `Sum(` *column* `)`  \\n  \\n-   `Max(` *column* `)`  \\n  \\n-   `Min(` *column* `)`  \\n  \\n-   `Where(` *condition* `)`  \\n  \\n-   `Any()`  \\n  \\n-   `All(` *condition* `)`  \\n  \\n For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af).\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that groups the returned data by a property named `Category`. It returns the shared values and calculates the average price for the grouped records.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  -->  \\n  \\n The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns. The `Key` property references an object that has two properties, `ProductCategory` and `Color`. The object represented by `It` is renamed `Products`. The renamed `Products` object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  -->  \\n  \\n The following example shows two <xref:System.Web.UI.WebControls.ListView> controls for displaying the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example. One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group. The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  -->\"\n  syntax:\n    content: public string GroupBy { get; set; }\n    return:\n      type: System.String\n      description: A string that is used to create the Group By clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.GroupBy*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.GroupByParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters\n  id: GroupByParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: GroupByParameters\n  nameWithType: LinqDataSource.GroupByParameters\n  fullName: LinqDataSource.GroupByParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that are used to create the Group By clause.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time. Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data. Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property. You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name. For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user.  \\n  \\n If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property. For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to \\\"LastName\\\" without any parameters. If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed.  \\n  \\n You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.  \\n  \\n To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter. In the Group By clause, preface each parameter name with the @ symbol.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: The parameters that are used to create the Group By clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.GroupByParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)\n  id: Insert(System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Insert(IDictionary)\n  nameWithType: LinqDataSource.Insert(IDictionary)\n  fullName: LinqDataSource.Insert(IDictionary)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Performs an insert operation.\n  remarks: Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.\n  example:\n  - \"The following example shows how to programmatically insert a new record in the data source after the user clicks a button. The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains default values to the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx.vb#1)]  \\n  \\n The following example shows the markup for the previous example.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx#2)]  -->\"\n  syntax:\n    content: public int Insert (System.Collections.IDictionary values);\n    parameters:\n    - id: values\n      type: System.Collections.IDictionary\n      description: The row values to be inserted into the data source.\n    return:\n      type: System.Int32\n      description: The number of rows affected by the insert operation.\n  overload: System.Web.UI.WebControls.LinqDataSource.Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Inserted\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Inserted\n  id: Inserted\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Inserted\n  nameWithType: LinqDataSource.Inserted\n  fullName: LinqDataSource.Inserted\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when an insert operation has finished.\n  remarks: Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished. You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers. For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.\n  example:\n  - \"The following example shows how to create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event that checks for exceptions and retrieves the identity property for the new record.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Inserted;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Inserting\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Inserting\n  id: Inserting\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Inserting\n  nameWithType: LinqDataSource.Inserting\n  fullName: LinqDataSource.Inserting\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before an insert operation.\n  remarks: \"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.  \\n  \\n If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.  \\n  \\n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that modifies data before the insert operation. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  \\n  \\n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that retrieves validation exceptions.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceInsertEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n               In e.Exception.InnerExceptions  \\n            Label1.Text &= innerException.Key & \\\": \\\" & _  \\n                innerException.Value.Message & \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Inserting(object sender,   \\n        LinqDataSourceInsertEventArgs e)  \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n             e.Exception.InnerExceptions)  \\n        {  \\n        Label1.Text += innerException.Key + \\\": \\\" +   \\n            innerException.Value.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```  \\n  \\n The previous example retrieves validation exceptions. An exception might be thrown if a value does not match the type of the property. It might also be thrown from a customized check such as the one in the following example. The `OnAgeChanging` method checks that the number for the `Age` property is not negative.  \\n  \\n```csharp  \\npartial void  OnAgeChanging(int? value)  \\n{  \\n    if (value < 0)  \\n    {  \\n        throw new Exception(\\\"Age cannot be a negative number.\\\");  \\n    }  \\n}  \\n```  \\n  \\n```vb  \\nPrivate Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  \\n    If (value < 0) Then  \\n        Throw New Exception(\\\"Age cannot be a negative number.\\\")  \\n    End If  \\nEnd Sub  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Inserting;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.InsertParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.InsertParameters\n  id: InsertParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: InsertParameters\n  nameWithType: LinqDataSource.InsertParameters\n  fullName: LinqDataSource.InsertParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that are used during an insert operation.\n  remarks: \"Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control. You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`. You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.  \\n  \\n The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control. For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields. The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field. They will not be used for the Name and Address field. This is true even if no value is entered for those fields. If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with a parameter that provides a default value in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection. If the user does not provide a value for the `Category` property, the default value that is provided by the parameter is saved in the database.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default9.aspx#9)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default9.aspx#9)]  -->\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: The parameters that are used during an insert operation.\n  overload: System.Web.UI.WebControls.LinqDataSource.InsertParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)\n  id: OnInit(System.EventArgs)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: OnInit(EventArgs)\n  nameWithType: LinqDataSource.OnInit(EventArgs)\n  fullName: LinqDataSource.OnInit(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> object.\n  syntax:\n    content: protected override void OnInit (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Web.UI.WebControls.LinqDataSource.OnInit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)\n  id: OnUnload(System.EventArgs)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: OnUnload(EventArgs)\n  nameWithType: LinqDataSource.OnUnload(EventArgs)\n  fullName: LinqDataSource.OnUnload(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Raises the <xref href=\"System.Web.UI.Control.Unload\"></xref> event.\n  syntax:\n    content: protected override void OnUnload (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> object that contains the event data.\n  overload: System.Web.UI.WebControls.LinqDataSource.OnUnload*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderBy\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.OrderBy\n  id: OrderBy\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: OrderBy\n  nameWithType: LinqDataSource.OrderBy\n  fullName: LinqDataSource.OrderBy\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that specifies which fields are used for ordering the retrieved data.\n  remarks: \"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting. The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned.  \\n  \\n You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma. For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to \\\"LastName, FirstName\\\".  \\n  \\n> [!NOTE]\\n>  When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`. If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.  \\n  \\n If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time. The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. Therefore, the data is returned according to the sort expression from the data-bound control.\"\n  example:\n  - \"The following example returns data in reverse alphabetical order based on values in the `Category` property.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default4.aspx#4)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default4.aspx#4)]  -->\"\n  syntax:\n    content: public string OrderBy { get; set; }\n    return:\n      type: System.String\n      description: A string that is used to create the Order By clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.OrderBy*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderByParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters\n  id: OrderByParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: OrderByParameters\n  nameWithType: LinqDataSource.OrderByParameters\n  fullName: LinqDataSource.OrderByParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that are used to create the Order By clause.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time. Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.  \\n  \\n If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection. You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property. For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to \\\"LastName\\\" without any parameters.  \\n  \\n You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application. When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name. You can set a parameter to a value and then compare that value to values in a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.\"\n  example:\n  - \"The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property set to `true`. A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  -->\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: The parameters that are used for creating the Order By clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.OrderByParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy\n  id: OrderGroupsBy\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: OrderGroupsBy\n  nameWithType: LinqDataSource.OrderGroupsBy\n  fullName: LinqDataSource.OrderGroupsBy\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the fields that are used for ordering grouped data.\n  remarks: \"You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted. For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property.  \\n  \\n You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.  \\n  \\n The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data. To specify how the data is sorted, you can add a space and the string \\\"Ascending\\\", \\\"ASC\\\", \\\"Descending\\\", or \\\"DESC\\\" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.  \\n  \\n You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. Separate each property by using a comma.\"\n  example:\n  - \"The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties. The data from a table named `Products` is grouped by using properties named `CategoryID` and `Discontinued`. The grouped data is sorted by the `CategoryID` property.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default.aspx#1)]  -->  \\n  \\n The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function. The data from the `Products` table is grouped by using the `CategoryID` property. It is sorted based on the average of the `UnitPrice` property within each group.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default2.aspx#2)]  -->\"\n  syntax:\n    content: public string OrderGroupsBy { get; set; }\n    return:\n      type: System.String\n      description: A string that is used to create the Order Groups By clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters\n  id: OrderGroupsByParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: OrderGroupsByParameters\n  nameWithType: LinqDataSource.OrderGroupsByParameters\n  fullName: LinqDataSource.OrderGroupsByParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that are used to create the Order Groups By clause.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time.  \\n  \\n You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause. You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.  \\n  \\n You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property. However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values. You can set a parameter to a value and then compare that value to a property. For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: The parameters that are used to create the Order Groups By clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Select\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.Select\n  id: Select\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Select\n  nameWithType: LinqDataSource.Select\n  fullName: LinqDataSource.Select\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the properties and calculated values that are included in the retrieved data.\n  remarks: \"If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object. You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.  \\n  \\n You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data.  \\n  \\n If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. A class is also created dynamically if you calculate properties that are not properties in the data object. In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property. Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query. For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`. The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method.  \\n  \\n You can use the `As` keyword to assign an alias to a selected value. If you assign an alias, you must include the aliased properties in the `new` method. Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias. For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`.  \\n  \\n You use the `new` function in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property according to the conditions listed in the following table.  \\n  \\n|Select|Use of new|Example|  \\n|------------|----------------|-------------|  \\n|Single property.|`new` not needed.|`Select=\\\"Category\\\"`|  \\n|Multiple properties.|`new` needed.|`Select=\\\"new(Cateogry, Name)\\\"`|  \\n|Single or multiple properties that have an alias.|`new` needed.|`Select=\\\"new(Category As CategoryGroup)\\\"`|  \\n  \\n If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. Instead, manage the display through the data-bound control. When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`. Any values that are not displayed in the data-bound control are stored in view state. They are passed unchanged to the data source when the data update is performed.  \\n  \\n When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. You can use the following aggregate methods:  \\n  \\n-   `Count()`  \\n  \\n-   `Average(` *column* `)`  \\n  \\n-   `Sum(` *column* `)`  \\n  \\n-   `Max(` *column* `)`  \\n  \\n-   `Min(` *column* `)`  \\n  \\n-   `Where(` *condition* `)`  \\n  \\n-   `Any()`  \\n  \\n-   `All(` *condition* `)`  \\n  \\n For more information, see [NIB: LinqDataSource Web Server Control Overview](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af).  \\n  \\n When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. The `Key` property refers to the values in the property or properties that were used to group the data. For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property. The `It` property refers to a collection of individual records in a grouping of data. You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation. For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.  \\n  \\n If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword. The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias. You can assign an alias to the `Key` keyword, but this is not required.\"\n  example:\n  - \"The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties in the data object.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default10.aspx#10)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default10.aspx#10)]  -->  \\n  \\n The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records. The `Key` keyword contains the property that has been used for grouping data. In this example, `Key` will contain the shared values from the `ProductCategory` property.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  -->\"\n  syntax:\n    content: public string Select { get; set; }\n    return:\n      type: System.String\n      description: A string that is used to create the Select clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.Select*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Selected\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Selected\n  id: Selected\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Selected\n  nameWithType: LinqDataSource.Selected\n  fullName: LinqDataSource.Selected\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when a data retrieval operation has finished.\n  remarks: Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished. The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Selected;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Selecting\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Selecting\n  id: Selecting\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Selecting\n  nameWithType: LinqDataSource.Selecting\n  fullName: LinqDataSource.Selecting\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before a data-retrieval operation.\n  remarks: \"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:  \\n  \\n-   Modify parameters for data retrieval.  \\n  \\n-   Generate the query programmatically.  \\n  \\n-   Modify the values for sorting or paging.  \\n  \\n-   Perform custom sorting or paging.  \\n  \\n-   Cancel the data-retrieval operation.  \\n  \\n The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation. You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.  \\n  \\n Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>. For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.  \\n  \\n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event. The handler creates a query that retrieves values from an array of string values in the Web page.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  \\n  \\n The following example shows how to assign the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the object that is returned from a method that represents a stored procedure.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Selecting(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceSelectEventArgs)  \\n    Dim exampleContext As ExampleDataContext = New ExampleDataContext()  \\n    e.Result = exampleContext.GetRegisteredCustomers()  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Selecting(object sender,   \\n        LinqDataSourceSelectEventArgs e)  \\n{  \\n    ExampleDataContext exampleContext = new ExampleDataContext();  \\n    e.Result = exampleContext.GetRegisteredCustomers();  \\n}  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> Selecting;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.SelectParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.SelectParameters\n  id: SelectParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: SelectParameters\n  nameWithType: LinqDataSource.SelectParameters\n  fullName: LinqDataSource.SelectParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that are used during a data-retrieval operation.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause. For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile. You can then use that property and a value from the data source to calculate a new value.  \\n  \\n If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection. You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property. For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to \\\"FirstName, LastName\\\" without any parameters.  \\n  \\n To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter. In the Select clause, preface each parameter name with the @ symbol.  \\n  \\n You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name. To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.\"\n  example:\n  - \"The following example shows how to use a user-supplied value to calculate a value in the returned data. The user can enter a value in the text box that represents the number of manufacturing days. That value is divided by a value from a database that represents the number of days to manufacture a product. The returned value indicates how many products can be manufactured during the specified number of days. The user's input is included in the Select command through the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/cs/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/vb/Default.aspx#1)]  -->\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: The parameters that are used to create the Select clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.SelectParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState\n  id: StoreOriginalValuesInViewState\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: StoreOriginalValuesInViewState\n  nameWithType: LinqDataSource.StoreOriginalValuesInViewState\n  fullName: LinqDataSource.StoreOriginalValuesInViewState\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.\n  remarks: \"By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state. The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute. You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].  \\n  \\n Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source. If the values do not match, the data source record has changed. In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation. For more information about LINQ to SQL, see [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).  \\n  \\n Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user. You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`. If you do this, you must provide your own way to make sure that the data has not changed. If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control. In that case, LINQ to SQL cannot verify the integrity of the data. LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.  \\n  \\n If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state. In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`. Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed. This helps reduce the size of view state, and no sensitive data is exposed. LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database. For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa).\"\n  syntax:\n    content: public bool StoreOriginalValuesInViewState { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the values will be stored in view state; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.TableName\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.TableName\n  id: TableName\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: TableName\n  nameWithType: LinqDataSource.TableName\n  fullName: LinqDataSource.TableName\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name of the property or field in the data context class that represents a data collection.\n  remarks: \"Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve. When you are connecting to a database table, the name of the property is usually the same as the name of the table. When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.  \\n  \\n You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations. If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.  \\n  \\n To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.  \\n  \\n For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.\"\n  example:\n  - \"The following example shows two <xref:System.Web.UI.WebControls.LinqDataSource> controls. In one <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property in a class. That property returns an array of strings. In the other <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property that represents a database table.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  -->  \\n  \\n The class named `ExampleDataContext` that represents the database table is not shown in this example. For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]. A class named `ExampleDataContext` with a property named `Movies` is generated.  \\n  \\n The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]\"\n  syntax:\n    content: public string TableName { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the name of the property that contains the data collection.\n  overload: System.Web.UI.WebControls.LinqDataSource.TableName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  commentId: M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Update(IDictionary, IDictionary, IDictionary)\n  nameWithType: LinqDataSource.Update(IDictionary, IDictionary, IDictionary)\n  fullName: LinqDataSource.Update(IDictionary, IDictionary, IDictionary)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Performs an update operation.\n  remarks: Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code. The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record. You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.\n  example:\n  - \"The following example shows how to programmatically update a record in the data source after the user clicks a button. The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains the key value, a <xref:System.Collections.Specialized.ListDictionary> object that contains the original values, and a <xref:System.Collections.Specialized.ListDictionary> object that contains the new values to the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx.vb#1)]  \\n  \\n The following example shows the markup for the previous example.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx#2)]  -->\"\n  syntax:\n    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: The row key values for the records to be updated.\n    - id: values\n      type: System.Collections.IDictionary\n      description: The row values to be updated in the data source.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: The row values that are evaluated to detect data conflicts.\n    return:\n      type: System.Int32\n      description: The number of records affected by the update operation.\n  overload: System.Web.UI.WebControls.LinqDataSource.Update*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Updated\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Updated\n  id: Updated\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Updated\n  nameWithType: LinqDataSource.Updated\n  fullName: LinqDataSource.Updated\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs when an update operation has finished.\n  remarks: Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished. The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Updated;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.UpdateParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters\n  id: UpdateParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: UpdateParameters\n  nameWithType: LinqDataSource.UpdateParameters\n  fullName: LinqDataSource.UpdateParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: This collection is not used by the <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A collection of parameters.\n  overload: System.Web.UI.WebControls.LinqDataSource.UpdateParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Updating\n  commentId: E:System.Web.UI.WebControls.LinqDataSource.Updating\n  id: Updating\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Updating\n  nameWithType: LinqDataSource.Updating\n  fullName: LinqDataSource.Updating\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Occurs before an update operation.\n  remarks: \"Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation. The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.  \\n  \\n If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class. A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check. In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.  \\n  \\n If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler. The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object). The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. The code compares properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to see whether a value has changed. If the value has changed, a value of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]\\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  \\n  \\n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event that retrieves validation exceptions.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceUpdateEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n               In e.Exception.InnerExceptions  \\n            Label1.Text &= innerException.Key & \\\": \\\" & _  \\n                innerException.Value.Message & \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Updating(object sender,   \\n        LinqDataSourceUpdateEventArgs e)  \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n             e.Exception.InnerExceptions)  \\n        {  \\n        Label1.Text += innerException.Key + \\\": \\\" +   \\n            innerException.Value.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```  \\n  \\n The previous example retrieves validation exceptions. An exception might be thrown if a value does not match the type of the property. It might also be thrown from a customized check such as the one in the following example. The `OnAgeChanging` method checks that the number for the `Age` property is not negative.  \\n  \\n```csharp  \\npartial void  OnAgeChanging(int? value)  \\n{  \\n    if (value < 0)  \\n    {  \\n        throw new Exception(\\\"Age cannot be a negative number.\\\");  \\n    }  \\n}  \\n```  \\n  \\n```vb  \\nPrivate Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  \\n    If (value < 0) Then  \\n        Throw New Exception(\\\"Age cannot be a negative number.\\\")  \\n    End If  \\nEnd Sub  \\n```\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Updating;\n    return:\n      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.Where\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.Where\n  id: Where\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: Where\n  nameWithType: LinqDataSource.Where\n  fullName: LinqDataSource.Where\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.\n  remarks: \"You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query. The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.  \\n  \\n You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set. Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:  \\n  \\n```  \\n<asp:LinqDataSource ... Where=\\\"Price > 50\\\"...>  \\n```  \\n  \\n To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:  \\n  \\n```  \\n<asp:LinqDataSource ... Where=\\\"Price > 50 && Price < 100\\\"...>  \\n<asp:LinqDataSource ... Where=\\\"Price <= 50 || Price >= 100\\\"...>  \\n```  \\n  \\n If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks. To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:  \\n  \\n```  \\n<asp:LinqDataSource ... Where='Category = \\\"Sports\\\"' ... >  \\n```  \\n  \\n To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:  \\n  \\n```vb  \\nLinqDataSource1.Where = \\\"Category = \\\"\\\"Sports\\\"\\\"\\\"  \\n```  \\n  \\n```csharp  \\nLinqDataSource1.Where = \\\"Category = \\\\\\\"Sports\\\\\\\"\\\";  \\n```  \\n  \\n If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value. The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to \\\"Sports\\\":  \\n  \\n```  \\n<asp:LinqDataSource ... Where='Category.CompareTo(\\\"Sports\\\") < 0' ... >  \\n<asp:LinqDataSource ... Where='Category.CompareTo(\\\"Sports\\\") <= 0' ... >  \\n<asp:LinqDataSource ... Where='Category.CompareTo(\\\"Sports\\\") > 0' ... >  \\n<asp:LinqDataSource ... Where='Category.CompareTo(\\\"Sports\\\") >= 0' ... >  \\n```  \\n  \\n You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>. For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md). For more information about Where clause syntax, see [C# Operators](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md).  \\n  \\n In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time. In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value. You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.  \\n  \\n Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property. Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.  \\n  \\n For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](http://msdn.microsoft.com/en-us/c1cca3e8-86e4-4e69-a29f-1c05b91f2205).\"\n  example:\n  - \"The following example shows how to filter the data returned from a query based on a static condition.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  -->  \\n  \\n The following example shows how to filter the data based on a value that is provided by the user at run time. In this example a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.GridView> control are displayed on the page. When the user selects one of the values in the <xref:System.Web.UI.WebControls.DropDownList> control, the <xref:System.Web.UI.WebControls.LinqDataSource> control selects from the `Products` table only rows that have `UserPrice` values equal to the selected value. The <xref:System.Web.UI.WebControls.GridView> control then displays the filtered data.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  -->\"\n  syntax:\n    content: public string Where { get; set; }\n    return:\n      type: System.String\n      description: A string that is used to create the Where clause.\n  overload: System.Web.UI.WebControls.LinqDataSource.Where*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.WhereParameters\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.WhereParameters\n  id: WhereParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: WhereParameters\n  nameWithType: LinqDataSource.WhereParameters\n  fullName: LinqDataSource.WhereParameters\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets the collection of parameters that is used to create the Where clause.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time. You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause. For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control. In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.  \\n  \\n If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property. For example, to return values from a database table where `LastName` equals \\\"Adams\\\" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = \\\"Adams\\\"'` without any parameters.  \\n  \\n To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter. In the Where clause, preface each parameter name with the @ symbol.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to dynamically create the Where clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control returns all the records with a value in the `Price` column that is greater than the value selected by the user in a <xref:System.Web.UI.WebControls.DropDownList> control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  -->\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }\n    return:\n      type: System.Web.UI.WebControls.ParameterCollection\n      description: A collection of the parameters that are used to create the Where clause in the <xref href=\"System.Web.UI.WebControls.LinqDataSource.Where\"></xref> property.\n  overload: System.Web.UI.WebControls.LinqDataSource.WhereParameters*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType\n  id: System#Web#DynamicData#IDynamicDataSource#ContextType\n  isEii: true\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: IDynamicDataSource.ContextType\n  nameWithType: LinqDataSource.IDynamicDataSource.ContextType\n  fullName: LinqDataSource.IDynamicDataSource.ContextType\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.\n  syntax:\n    content: Type System.Web.DynamicData.IDynamicDataSource.ContextType { get; set; }\n    return:\n      type: System.Type\n      description: The type that is associated with the class.\n  overload: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName\n  commentId: P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName\n  id: System#Web#DynamicData#IDynamicDataSource#EntitySetName\n  isEii: true\n  parent: System.Web.UI.WebControls.LinqDataSource\n  langs:\n  - csharp\n  name: IDynamicDataSource.EntitySetName\n  nameWithType: LinqDataSource.IDynamicDataSource.EntitySetName\n  fullName: LinqDataSource.IDynamicDataSource.EntitySetName\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: For a description of this member, see <xref href=\"System.Web.DynamicData.IDynamicDataSource\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.\n  syntax:\n    content: string System.Web.DynamicData.IDynamicDataSource.EntitySetName { get; set; }\n    return:\n      type: System.String\n      description: The name of the entity.\n  overload: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.UI.WebControls.ContextDataSource\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ContextDataSource\n  nameWithType: ContextDataSource\n  fullName: System.Web.UI.WebControls.ContextDataSource\n- uid: System.Web.UI.WebControls.LinqDataSource.#ctor\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: LinqDataSource()\n  nameWithType: LinqDataSource.LinqDataSource()\n  fullName: LinqDataSource.LinqDataSource()\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoGenerateOrderByClause\n  nameWithType: LinqDataSource.AutoGenerateOrderByClause\n  fullName: LinqDataSource.AutoGenerateOrderByClause\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoGenerateWhereClause\n  nameWithType: LinqDataSource.AutoGenerateWhereClause\n  fullName: LinqDataSource.AutoGenerateWhereClause\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoPage\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoPage\n  nameWithType: LinqDataSource.AutoPage\n  fullName: LinqDataSource.AutoPage\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoSort\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoSort\n  nameWithType: LinqDataSource.AutoSort\n  fullName: LinqDataSource.AutoSort\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreated\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: ContextCreated\n  nameWithType: LinqDataSource.ContextCreated\n  fullName: LinqDataSource.ContextCreated\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs\n  name: LinqDataSourceStatusEventArgs\n  nameWithType: LinqDataSourceStatusEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceStatusEventArgs>\n  nameWithType: EventHandler<LinqDataSourceStatusEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs\n    name: LinqDataSourceStatusEventArgs\n    nameWithType: LinqDataSourceStatusEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreating\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: ContextCreating\n  nameWithType: LinqDataSource.ContextCreating\n  fullName: LinqDataSource.ContextCreating\n- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs\n  name: LinqDataSourceContextEventArgs\n  nameWithType: LinqDataSourceContextEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceContextEventArgs>\n  nameWithType: EventHandler<LinqDataSourceContextEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs\n    name: LinqDataSourceContextEventArgs\n    nameWithType: LinqDataSourceContextEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextDisposing\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: ContextDisposing\n  nameWithType: LinqDataSource.ContextDisposing\n  fullName: LinqDataSource.ContextDisposing\n- uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs\n  name: LinqDataSourceDisposeEventArgs\n  nameWithType: LinqDataSourceDisposeEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceDisposeEventArgs>\n  nameWithType: EventHandler<LinqDataSourceDisposeEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs\n    name: LinqDataSourceDisposeEventArgs\n    nameWithType: LinqDataSourceDisposeEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextTypeName\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: ContextTypeName\n  nameWithType: LinqDataSource.ContextTypeName\n  fullName: LinqDataSource.ContextTypeName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: CreateQueryableView()\n  nameWithType: LinqDataSource.CreateQueryableView()\n  fullName: LinqDataSource.CreateQueryableView()\n- uid: System.Web.UI.WebControls.QueryableDataSourceView\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: QueryableDataSourceView\n  nameWithType: QueryableDataSourceView\n  fullName: System.Web.UI.WebControls.QueryableDataSourceView\n- uid: System.Web.UI.WebControls.LinqDataSource.CreateView\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: CreateView()\n  nameWithType: LinqDataSource.CreateView()\n  fullName: LinqDataSource.CreateView()\n- uid: System.Web.UI.WebControls.LinqDataSourceView\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: LinqDataSourceView\n  nameWithType: LinqDataSourceView\n  fullName: System.Web.UI.WebControls.LinqDataSourceView\n- uid: System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Delete(IDictionary, IDictionary)\n  nameWithType: LinqDataSource.Delete(IDictionary, IDictionary)\n  fullName: LinqDataSource.Delete(IDictionary, IDictionary)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Web.UI.WebControls.LinqDataSource.Deleted\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Deleted\n  nameWithType: LinqDataSource.Deleted\n  fullName: LinqDataSource.Deleted\n- uid: System.Web.UI.WebControls.LinqDataSource.DeleteParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: DeleteParameters\n  nameWithType: LinqDataSource.DeleteParameters\n  fullName: LinqDataSource.DeleteParameters\n- uid: System.Web.UI.WebControls.ParameterCollection\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: ParameterCollection\n  nameWithType: ParameterCollection\n  fullName: System.Web.UI.WebControls.ParameterCollection\n- uid: System.Web.UI.WebControls.LinqDataSource.Deleting\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Deleting\n  nameWithType: LinqDataSource.Deleting\n  fullName: LinqDataSource.Deleting\n- uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs\n  name: LinqDataSourceDeleteEventArgs\n  nameWithType: LinqDataSourceDeleteEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceDeleteEventArgs>\n  nameWithType: EventHandler<LinqDataSourceDeleteEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs\n    name: LinqDataSourceDeleteEventArgs\n    nameWithType: LinqDataSourceDeleteEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableDelete\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableDelete\n  nameWithType: LinqDataSource.EnableDelete\n  fullName: LinqDataSource.EnableDelete\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableInsert\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableInsert\n  nameWithType: LinqDataSource.EnableInsert\n  fullName: LinqDataSource.EnableInsert\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableObjectTracking\n  nameWithType: LinqDataSource.EnableObjectTracking\n  fullName: LinqDataSource.EnableObjectTracking\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableUpdate\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableUpdate\n  nameWithType: LinqDataSource.EnableUpdate\n  fullName: LinqDataSource.EnableUpdate\n- uid: System.Web.UI.WebControls.LinqDataSource.GroupBy\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: GroupBy\n  nameWithType: LinqDataSource.GroupBy\n  fullName: LinqDataSource.GroupBy\n- uid: System.Web.UI.WebControls.LinqDataSource.GroupByParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: GroupByParameters\n  nameWithType: LinqDataSource.GroupByParameters\n  fullName: LinqDataSource.GroupByParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Insert(IDictionary)\n  nameWithType: LinqDataSource.Insert(IDictionary)\n  fullName: LinqDataSource.Insert(IDictionary)\n- uid: System.Web.UI.WebControls.LinqDataSource.Inserted\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Inserted\n  nameWithType: LinqDataSource.Inserted\n  fullName: LinqDataSource.Inserted\n- uid: System.Web.UI.WebControls.LinqDataSource.Inserting\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Inserting\n  nameWithType: LinqDataSource.Inserting\n  fullName: LinqDataSource.Inserting\n- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  name: LinqDataSourceInsertEventArgs\n  nameWithType: LinqDataSourceInsertEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceInsertEventArgs>\n  nameWithType: EventHandler<LinqDataSourceInsertEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n    name: LinqDataSourceInsertEventArgs\n    nameWithType: LinqDataSourceInsertEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.InsertParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: InsertParameters\n  nameWithType: LinqDataSource.InsertParameters\n  fullName: LinqDataSource.InsertParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OnInit(EventArgs)\n  nameWithType: LinqDataSource.OnInit(EventArgs)\n  fullName: LinqDataSource.OnInit(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OnUnload(EventArgs)\n  nameWithType: LinqDataSource.OnUnload(EventArgs)\n  fullName: LinqDataSource.OnUnload(EventArgs)\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderBy\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderBy\n  nameWithType: LinqDataSource.OrderBy\n  fullName: LinqDataSource.OrderBy\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderByParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderByParameters\n  nameWithType: LinqDataSource.OrderByParameters\n  fullName: LinqDataSource.OrderByParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderGroupsBy\n  nameWithType: LinqDataSource.OrderGroupsBy\n  fullName: LinqDataSource.OrderGroupsBy\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderGroupsByParameters\n  nameWithType: LinqDataSource.OrderGroupsByParameters\n  fullName: LinqDataSource.OrderGroupsByParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.Select\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Select\n  nameWithType: LinqDataSource.Select\n  fullName: LinqDataSource.Select\n- uid: System.Web.UI.WebControls.LinqDataSource.Selected\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Selected\n  nameWithType: LinqDataSource.Selected\n  fullName: LinqDataSource.Selected\n- uid: System.Web.UI.WebControls.LinqDataSource.Selecting\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Selecting\n  nameWithType: LinqDataSource.Selecting\n  fullName: LinqDataSource.Selecting\n- uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  name: LinqDataSourceSelectEventArgs\n  nameWithType: LinqDataSourceSelectEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceSelectEventArgs>\n  nameWithType: EventHandler<LinqDataSourceSelectEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n    name: LinqDataSourceSelectEventArgs\n    nameWithType: LinqDataSourceSelectEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.SelectParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: SelectParameters\n  nameWithType: LinqDataSource.SelectParameters\n  fullName: LinqDataSource.SelectParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: StoreOriginalValuesInViewState\n  nameWithType: LinqDataSource.StoreOriginalValuesInViewState\n  fullName: LinqDataSource.StoreOriginalValuesInViewState\n- uid: System.Web.UI.WebControls.LinqDataSource.TableName\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: TableName\n  nameWithType: LinqDataSource.TableName\n  fullName: LinqDataSource.TableName\n- uid: System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Update(IDictionary, IDictionary, IDictionary)\n  nameWithType: LinqDataSource.Update(IDictionary, IDictionary, IDictionary)\n  fullName: LinqDataSource.Update(IDictionary, IDictionary, IDictionary)\n- uid: System.Web.UI.WebControls.LinqDataSource.Updated\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Updated\n  nameWithType: LinqDataSource.Updated\n  fullName: LinqDataSource.Updated\n- uid: System.Web.UI.WebControls.LinqDataSource.UpdateParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: UpdateParameters\n  nameWithType: LinqDataSource.UpdateParameters\n  fullName: LinqDataSource.UpdateParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.Updating\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Updating\n  nameWithType: LinqDataSource.Updating\n  fullName: LinqDataSource.Updating\n- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs\n  name: LinqDataSourceUpdateEventArgs\n  nameWithType: LinqDataSourceUpdateEventArgs\n  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs\n- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<LinqDataSourceUpdateEventArgs>\n  nameWithType: EventHandler<LinqDataSourceUpdateEventArgs>\n  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs\n    name: LinqDataSourceUpdateEventArgs\n    nameWithType: LinqDataSourceUpdateEventArgs\n    fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSource.Where\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Where\n  nameWithType: LinqDataSource.Where\n  fullName: LinqDataSource.Where\n- uid: System.Web.UI.WebControls.LinqDataSource.WhereParameters\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: WhereParameters\n  nameWithType: LinqDataSource.WhereParameters\n  fullName: LinqDataSource.WhereParameters\n- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: IDynamicDataSource.ContextType\n  nameWithType: LinqDataSource.IDynamicDataSource.ContextType\n  fullName: LinqDataSource.IDynamicDataSource.ContextType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: IDynamicDataSource.EntitySetName\n  nameWithType: LinqDataSource.IDynamicDataSource.EntitySetName\n  fullName: LinqDataSource.IDynamicDataSource.EntitySetName\n- uid: System.Web.UI.WebControls.LinqDataSource.#ctor*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: LinqDataSource\n  nameWithType: LinqDataSource.LinqDataSource\n  fullName: LinqDataSource.LinqDataSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoGenerateOrderByClause\n  nameWithType: LinqDataSource.AutoGenerateOrderByClause\n  fullName: LinqDataSource.AutoGenerateOrderByClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoGenerateWhereClause\n  nameWithType: LinqDataSource.AutoGenerateWhereClause\n  fullName: LinqDataSource.AutoGenerateWhereClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoPage*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoPage\n  nameWithType: LinqDataSource.AutoPage\n  fullName: LinqDataSource.AutoPage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.AutoSort*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: AutoSort\n  nameWithType: LinqDataSource.AutoSort\n  fullName: LinqDataSource.AutoSort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.ContextTypeName*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: ContextTypeName\n  nameWithType: LinqDataSource.ContextTypeName\n  fullName: LinqDataSource.ContextTypeName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: CreateQueryableView\n  nameWithType: LinqDataSource.CreateQueryableView\n  fullName: LinqDataSource.CreateQueryableView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.CreateView*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: CreateView\n  nameWithType: LinqDataSource.CreateView\n  fullName: LinqDataSource.CreateView\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.Delete*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Delete\n  nameWithType: LinqDataSource.Delete\n  fullName: LinqDataSource.Delete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.DeleteParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: DeleteParameters\n  nameWithType: LinqDataSource.DeleteParameters\n  fullName: LinqDataSource.DeleteParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableDelete*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableDelete\n  nameWithType: LinqDataSource.EnableDelete\n  fullName: LinqDataSource.EnableDelete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableInsert*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableInsert\n  nameWithType: LinqDataSource.EnableInsert\n  fullName: LinqDataSource.EnableInsert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableObjectTracking\n  nameWithType: LinqDataSource.EnableObjectTracking\n  fullName: LinqDataSource.EnableObjectTracking\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.EnableUpdate*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: EnableUpdate\n  nameWithType: LinqDataSource.EnableUpdate\n  fullName: LinqDataSource.EnableUpdate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.GroupBy*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: GroupBy\n  nameWithType: LinqDataSource.GroupBy\n  fullName: LinqDataSource.GroupBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.GroupByParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: GroupByParameters\n  nameWithType: LinqDataSource.GroupByParameters\n  fullName: LinqDataSource.GroupByParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.Insert*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Insert\n  nameWithType: LinqDataSource.Insert\n  fullName: LinqDataSource.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.InsertParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: InsertParameters\n  nameWithType: LinqDataSource.InsertParameters\n  fullName: LinqDataSource.InsertParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.OnInit*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OnInit\n  nameWithType: LinqDataSource.OnInit\n  fullName: LinqDataSource.OnInit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.OnUnload*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OnUnload\n  nameWithType: LinqDataSource.OnUnload\n  fullName: LinqDataSource.OnUnload\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderBy*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderBy\n  nameWithType: LinqDataSource.OrderBy\n  fullName: LinqDataSource.OrderBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderByParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderByParameters\n  nameWithType: LinqDataSource.OrderByParameters\n  fullName: LinqDataSource.OrderByParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderGroupsBy\n  nameWithType: LinqDataSource.OrderGroupsBy\n  fullName: LinqDataSource.OrderGroupsBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: OrderGroupsByParameters\n  nameWithType: LinqDataSource.OrderGroupsByParameters\n  fullName: LinqDataSource.OrderGroupsByParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.Select*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Select\n  nameWithType: LinqDataSource.Select\n  fullName: LinqDataSource.Select\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.SelectParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: SelectParameters\n  nameWithType: LinqDataSource.SelectParameters\n  fullName: LinqDataSource.SelectParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: StoreOriginalValuesInViewState\n  nameWithType: LinqDataSource.StoreOriginalValuesInViewState\n  fullName: LinqDataSource.StoreOriginalValuesInViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.TableName*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: TableName\n  nameWithType: LinqDataSource.TableName\n  fullName: LinqDataSource.TableName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.Update*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Update\n  nameWithType: LinqDataSource.Update\n  fullName: LinqDataSource.Update\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.UpdateParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: UpdateParameters\n  nameWithType: LinqDataSource.UpdateParameters\n  fullName: LinqDataSource.UpdateParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.Where*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: Where\n  nameWithType: LinqDataSource.Where\n  fullName: LinqDataSource.Where\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.WhereParameters*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: WhereParameters\n  nameWithType: LinqDataSource.WhereParameters\n  fullName: LinqDataSource.WhereParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: System.Web.DynamicData.IDynamicDataSource.ContextType\n  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType\n  fullName: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName*\n  parent: System.Web.UI.WebControls.LinqDataSource\n  isExternal: false\n  name: System.Web.DynamicData.IDynamicDataSource.EntitySetName\n  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName\n  fullName: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSource.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Web.UI.Control.Adapter\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Adapter\n  nameWithType: Control.Adapter\n  fullName: Control.Adapter\n- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AddedControl(Control, Int32)\n  nameWithType: Control.AddedControl(Control, Int32)\n  fullName: Control.AddedControl(Control, Int32)\n- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AddParsedSubObject(Object)\n  nameWithType: Control.AddParsedSubObject(Object)\n  fullName: Control.AddParsedSubObject(Object)\n- uid: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: ApplyStyleSheetSkin(Page)\n  nameWithType: DataSourceControl.ApplyStyleSheetSkin(Page)\n  fullName: DataSourceControl.ApplyStyleSheetSkin(Page)\n- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AppRelativeTemplateSourceDirectory\n  nameWithType: Control.AppRelativeTemplateSourceDirectory\n  fullName: Control.AppRelativeTemplateSourceDirectory\n- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BeginRenderTracing(TextWriter, Object)\n  nameWithType: Control.BeginRenderTracing(TextWriter, Object)\n  fullName: Control.BeginRenderTracing(TextWriter, Object)\n- uid: System.Web.UI.Control.BindingContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BindingContainer\n  nameWithType: Control.BindingContainer\n  fullName: Control.BindingContainer\n- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BuildProfileTree(String, Boolean)\n  nameWithType: Control.BuildProfileTree(String, Boolean)\n  fullName: Control.BuildProfileTree(String, Boolean)\n- uid: System.Web.UI.Control.ChildControlsCreated\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ChildControlsCreated\n  nameWithType: Control.ChildControlsCreated\n  fullName: Control.ChildControlsCreated\n- uid: System.Web.UI.Control.ClearCachedClientID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearCachedClientID()\n  nameWithType: Control.ClearCachedClientID()\n  fullName: Control.ClearCachedClientID()\n- uid: System.Web.UI.Control.ClearChildControlState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildControlState()\n  nameWithType: Control.ClearChildControlState()\n  fullName: Control.ClearChildControlState()\n- uid: System.Web.UI.Control.ClearChildState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildState()\n  nameWithType: Control.ClearChildState()\n  fullName: Control.ClearChildState()\n- uid: System.Web.UI.Control.ClearChildViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildViewState()\n  nameWithType: Control.ClearChildViewState()\n  fullName: Control.ClearChildViewState()\n- uid: System.Web.UI.Control.ClearEffectiveClientIDMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearEffectiveClientIDMode()\n  nameWithType: Control.ClearEffectiveClientIDMode()\n  fullName: Control.ClearEffectiveClientIDMode()\n- uid: System.Web.UI.DataSourceControl.ClientID\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: ClientID\n  nameWithType: DataSourceControl.ClientID\n  fullName: DataSourceControl.ClientID\n- uid: System.Web.UI.DataSourceControl.ClientIDMode\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: ClientIDMode\n  nameWithType: DataSourceControl.ClientIDMode\n  fullName: DataSourceControl.ClientIDMode\n- uid: System.Web.UI.Control.ClientIDSeparator\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientIDSeparator\n  nameWithType: Control.ClientIDSeparator\n  fullName: Control.ClientIDSeparator\n- uid: System.Web.UI.Control.Context\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Context\n  nameWithType: Control.Context\n  fullName: Control.Context\n- uid: System.Web.UI.DataSourceControl.Controls\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: Controls\n  nameWithType: DataSourceControl.Controls\n  fullName: DataSourceControl.Controls\n- uid: System.Web.UI.Control.CreateChildControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: CreateChildControls()\n  nameWithType: Control.CreateChildControls()\n  fullName: Control.CreateChildControls()\n- uid: System.Web.UI.DataSourceControl.CreateControlCollection\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: CreateControlCollection()\n  nameWithType: DataSourceControl.CreateControlCollection()\n  fullName: DataSourceControl.CreateControlCollection()\n- uid: System.Web.UI.Control.DataBind\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBind()\n  nameWithType: Control.DataBind()\n  fullName: Control.DataBind()\n- uid: System.Web.UI.Control.DataBind(System.Boolean)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBind(Boolean)\n  nameWithType: Control.DataBind(Boolean)\n  fullName: Control.DataBind(Boolean)\n- uid: System.Web.UI.Control.DataBindChildren\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBindChildren()\n  nameWithType: Control.DataBindChildren()\n  fullName: Control.DataBindChildren()\n- uid: System.Web.UI.Control.DataBinding\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBinding\n  nameWithType: Control.DataBinding\n  fullName: Control.DataBinding\n- uid: System.Web.UI.Control.DataItemContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataItemContainer\n  nameWithType: Control.DataItemContainer\n  fullName: Control.DataItemContainer\n- uid: System.Web.UI.Control.DataKeysContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataKeysContainer\n  nameWithType: Control.DataKeysContainer\n  fullName: Control.DataKeysContainer\n- uid: System.Web.UI.Control.DesignMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DesignMode\n  nameWithType: Control.DesignMode\n  fullName: Control.DesignMode\n- uid: System.Web.UI.Control.Dispose\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Dispose()\n  nameWithType: Control.Dispose()\n  fullName: Control.Dispose()\n- uid: System.Web.UI.Control.Disposed\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Disposed\n  nameWithType: Control.Disposed\n  fullName: Control.Disposed\n- uid: System.Web.UI.DataSourceControl.EnableTheming\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: EnableTheming\n  nameWithType: DataSourceControl.EnableTheming\n  fullName: DataSourceControl.EnableTheming\n- uid: System.Web.UI.Control.EnableViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnableViewState\n  nameWithType: Control.EnableViewState\n  fullName: Control.EnableViewState\n- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EndRenderTracing(TextWriter, Object)\n  nameWithType: Control.EndRenderTracing(TextWriter, Object)\n  fullName: Control.EndRenderTracing(TextWriter, Object)\n- uid: System.Web.UI.Control.EnsureChildControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnsureChildControls()\n  nameWithType: Control.EnsureChildControls()\n  fullName: Control.EnsureChildControls()\n- uid: System.Web.UI.Control.EnsureID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnsureID()\n  nameWithType: Control.EnsureID()\n  fullName: Control.EnsureID()\n- uid: System.Web.UI.Control.Events\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Events\n  nameWithType: Control.Events\n  fullName: Control.Events\n- uid: System.Web.UI.DataSourceControl.FindControl(System.String)\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: FindControl(String)\n  nameWithType: DataSourceControl.FindControl(String)\n  fullName: DataSourceControl.FindControl(String)\n- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: FindControl(String, Int32)\n  nameWithType: Control.FindControl(String, Int32)\n  fullName: Control.FindControl(String, Int32)\n- uid: System.Web.UI.DataSourceControl.Focus\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: Focus()\n  nameWithType: DataSourceControl.Focus()\n  fullName: DataSourceControl.Focus()\n- uid: System.Web.UI.Control.GetDesignModeState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetDesignModeState()\n  nameWithType: Control.GetDesignModeState()\n  fullName: Control.GetDesignModeState()\n- uid: System.Web.UI.Control.GetRouteUrl(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(Object)\n  nameWithType: Control.GetRouteUrl(Object)\n  fullName: Control.GetRouteUrl(Object)\n- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(RouteValueDictionary)\n  nameWithType: Control.GetRouteUrl(RouteValueDictionary)\n  fullName: Control.GetRouteUrl(RouteValueDictionary)\n- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(String, Object)\n  nameWithType: Control.GetRouteUrl(String, Object)\n  fullName: Control.GetRouteUrl(String, Object)\n- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(String, RouteValueDictionary)\n  nameWithType: Control.GetRouteUrl(String, RouteValueDictionary)\n  fullName: Control.GetRouteUrl(String, RouteValueDictionary)\n- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetUniqueIDRelativeTo(Control)\n  nameWithType: Control.GetUniqueIDRelativeTo(Control)\n  fullName: Control.GetUniqueIDRelativeTo(Control)\n- uid: System.Web.UI.Control.HasChildViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasChildViewState\n  nameWithType: Control.HasChildViewState\n  fullName: Control.HasChildViewState\n- uid: System.Web.UI.DataSourceControl.HasControls\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: HasControls()\n  nameWithType: DataSourceControl.HasControls()\n  fullName: DataSourceControl.HasControls()\n- uid: System.Web.UI.Control.HasEvents\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasEvents()\n  nameWithType: Control.HasEvents()\n  fullName: Control.HasEvents()\n- uid: System.Web.UI.Control.ID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ID\n  nameWithType: Control.ID\n  fullName: Control.ID\n- uid: System.Web.UI.Control.IdSeparator\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IdSeparator\n  nameWithType: Control.IdSeparator\n  fullName: Control.IdSeparator\n- uid: System.Web.UI.Control.Init\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Init\n  nameWithType: Control.Init\n  fullName: Control.Init\n- uid: System.Web.UI.Control.IsChildControlStateCleared\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsChildControlStateCleared\n  nameWithType: Control.IsChildControlStateCleared\n  fullName: Control.IsChildControlStateCleared\n- uid: System.Web.UI.Control.IsLiteralContent\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsLiteralContent()\n  nameWithType: Control.IsLiteralContent()\n  fullName: Control.IsLiteralContent()\n- uid: System.Web.UI.Control.IsTrackingViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsTrackingViewState\n  nameWithType: Control.IsTrackingViewState\n  fullName: Control.IsTrackingViewState\n- uid: System.Web.UI.Control.IsViewStateEnabled\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsViewStateEnabled\n  nameWithType: Control.IsViewStateEnabled\n  fullName: Control.IsViewStateEnabled\n- uid: System.Web.UI.Control.Load\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Load\n  nameWithType: Control.Load\n  fullName: Control.Load\n- uid: System.Web.UI.Control.LoadControlState(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadControlState(Object)\n  nameWithType: Control.LoadControlState(Object)\n  fullName: Control.LoadControlState(Object)\n- uid: System.Web.UI.WebControls.QueryableDataSource.LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: QueryableDataSource.LoadViewState(Object)\n  fullName: QueryableDataSource.LoadViewState(Object)\n- uid: System.Web.UI.Control.LoadViewStateByID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadViewStateByID\n  nameWithType: Control.LoadViewStateByID\n  fullName: Control.LoadViewStateByID\n- uid: System.Web.UI.Control.MapPathSecure(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: MapPathSecure(String)\n  nameWithType: Control.MapPathSecure(String)\n  fullName: Control.MapPathSecure(String)\n- uid: System.Web.UI.Control.NamingContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: NamingContainer\n  nameWithType: Control.NamingContainer\n  fullName: Control.NamingContainer\n- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnBubbleEvent(Object, EventArgs)\n  nameWithType: Control.OnBubbleEvent(Object, EventArgs)\n  fullName: Control.OnBubbleEvent(Object, EventArgs)\n- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnDataBinding(EventArgs)\n  nameWithType: Control.OnDataBinding(EventArgs)\n  fullName: Control.OnDataBinding(EventArgs)\n- uid: System.Web.UI.Control.OnLoad(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnLoad(EventArgs)\n  nameWithType: Control.OnLoad(EventArgs)\n  fullName: Control.OnLoad(EventArgs)\n- uid: System.Web.UI.Control.OnPreRender(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnPreRender(EventArgs)\n  nameWithType: Control.OnPreRender(EventArgs)\n  fullName: Control.OnPreRender(EventArgs)\n- uid: System.Web.UI.Control.OpenFile(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OpenFile(String)\n  nameWithType: Control.OpenFile(String)\n  fullName: Control.OpenFile(String)\n- uid: System.Web.UI.Control.Page\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Page\n  nameWithType: Control.Page\n  fullName: Control.Page\n- uid: System.Web.UI.Control.Parent\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n- uid: System.Web.UI.Control.PreRender\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: PreRender\n  nameWithType: Control.PreRender\n  fullName: Control.PreRender\n- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RaiseBubbleEvent(Object, EventArgs)\n  nameWithType: Control.RaiseBubbleEvent(Object, EventArgs)\n  fullName: Control.RaiseBubbleEvent(Object, EventArgs)\n- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RemovedControl(Control)\n  nameWithType: Control.RemovedControl(Control)\n  fullName: Control.RemovedControl(Control)\n- uid: System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: Control.Render(HtmlTextWriter)\n  fullName: Control.Render(HtmlTextWriter)\n- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderChildren(HtmlTextWriter)\n  nameWithType: Control.RenderChildren(HtmlTextWriter)\n  fullName: Control.RenderChildren(HtmlTextWriter)\n- uid: System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: RenderControl(HtmlTextWriter)\n  nameWithType: DataSourceControl.RenderControl(HtmlTextWriter)\n  fullName: DataSourceControl.RenderControl(HtmlTextWriter)\n- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderControl(HtmlTextWriter, ControlAdapter)\n  nameWithType: Control.RenderControl(HtmlTextWriter, ControlAdapter)\n  fullName: Control.RenderControl(HtmlTextWriter, ControlAdapter)\n- uid: System.Web.UI.Control.RenderingCompatibility\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderingCompatibility\n  nameWithType: Control.RenderingCompatibility\n  fullName: Control.RenderingCompatibility\n- uid: System.Web.UI.Control.ResolveAdapter\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveAdapter()\n  nameWithType: Control.ResolveAdapter()\n  fullName: Control.ResolveAdapter()\n- uid: System.Web.UI.Control.ResolveClientUrl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveClientUrl(String)\n  nameWithType: Control.ResolveClientUrl(String)\n  fullName: Control.ResolveClientUrl(String)\n- uid: System.Web.UI.Control.ResolveUrl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveUrl(String)\n  nameWithType: Control.ResolveUrl(String)\n  fullName: Control.ResolveUrl(String)\n- uid: System.Web.UI.Control.SaveControlState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SaveControlState()\n  nameWithType: Control.SaveControlState()\n  fullName: Control.SaveControlState()\n- uid: System.Web.UI.WebControls.QueryableDataSource.SaveViewState\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: QueryableDataSource.SaveViewState()\n  fullName: QueryableDataSource.SaveViewState()\n- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetDesignModeState(IDictionary)\n  nameWithType: Control.SetDesignModeState(IDictionary)\n  fullName: Control.SetDesignModeState(IDictionary)\n- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetRenderMethodDelegate(RenderMethod)\n  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)\n  fullName: Control.SetRenderMethodDelegate(RenderMethod)\n- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetTraceData(Object, Object)\n  nameWithType: Control.SetTraceData(Object, Object)\n  fullName: Control.SetTraceData(Object, Object)\n- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetTraceData(Object, Object, Object)\n  nameWithType: Control.SetTraceData(Object, Object, Object)\n  fullName: Control.SetTraceData(Object, Object, Object)\n- uid: System.Web.UI.Control.Site\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n- uid: System.Web.UI.DataSourceControl.SkinID\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: SkinID\n  nameWithType: DataSourceControl.SkinID\n  fullName: DataSourceControl.SkinID\n- uid: System.Web.UI.Control.TemplateControl\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TemplateControl\n  nameWithType: Control.TemplateControl\n  fullName: Control.TemplateControl\n- uid: System.Web.UI.Control.TemplateSourceDirectory\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TemplateSourceDirectory\n  nameWithType: Control.TemplateSourceDirectory\n  fullName: Control.TemplateSourceDirectory\n- uid: System.Web.UI.WebControls.QueryableDataSource.TrackViewState\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: QueryableDataSource.TrackViewState()\n  fullName: QueryableDataSource.TrackViewState()\n- uid: System.Web.UI.Control.UniqueID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: UniqueID\n  nameWithType: Control.UniqueID\n  fullName: Control.UniqueID\n- uid: System.Web.UI.Control.Unload\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Unload\n  nameWithType: Control.Unload\n  fullName: Control.Unload\n- uid: System.Web.UI.Control.ValidateRequestMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: Control.ValidateRequestMode\n  fullName: Control.ValidateRequestMode\n- uid: System.Web.UI.Control.ViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewState\n  nameWithType: Control.ViewState\n  fullName: Control.ViewState\n- uid: System.Web.UI.Control.ViewStateIgnoresCase\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewStateIgnoresCase\n  nameWithType: Control.ViewStateIgnoresCase\n  fullName: Control.ViewStateIgnoresCase\n- uid: System.Web.UI.Control.ViewStateMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewStateMode\n  nameWithType: Control.ViewStateMode\n  fullName: Control.ViewStateMode\n- uid: System.Web.UI.DataSourceControl.Visible\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: Visible\n  nameWithType: DataSourceControl.Visible\n  fullName: DataSourceControl.Visible\n- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlBuilderAccessor.ControlBuilder\n  nameWithType: Control.IControlBuilderAccessor.ControlBuilder\n  fullName: Control.IControlBuilderAccessor.ControlBuilder\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.GetDesignModeState()\n  nameWithType: Control.IControlDesignerAccessor.GetDesignModeState()\n  fullName: Control.IControlDesignerAccessor.GetDesignModeState()\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.SetDesignModeState(IDictionary)\n  nameWithType: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)\n  fullName: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.SetOwnerControl(Control)\n  nameWithType: Control.IControlDesignerAccessor.SetOwnerControl(Control)\n  fullName: Control.IControlDesignerAccessor.SetOwnerControl(Control)\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.UserData\n  nameWithType: Control.IControlDesignerAccessor.UserData\n  fullName: Control.IControlDesignerAccessor.UserData\n- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IDataBindingsAccessor.DataBindings\n  nameWithType: Control.IDataBindingsAccessor.DataBindings\n  fullName: Control.IDataBindingsAccessor.DataBindings\n- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IDataBindingsAccessor.HasDataBindings\n  nameWithType: Control.IDataBindingsAccessor.HasDataBindings\n  fullName: Control.IDataBindingsAccessor.HasDataBindings\n- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IExpressionsAccessor.Expressions\n  nameWithType: Control.IExpressionsAccessor.Expressions\n  fullName: Control.IExpressionsAccessor.Expressions\n- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IExpressionsAccessor.HasExpressions\n  nameWithType: Control.IExpressionsAccessor.HasExpressions\n  fullName: Control.IExpressionsAccessor.HasExpressions\n- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IParserAccessor.AddParsedSubObject(Object)\n  nameWithType: Control.IParserAccessor.AddParsedSubObject(Object)\n  fullName: Control.IParserAccessor.AddParsedSubObject(Object)\n- uid: System.Web.UI.WebControls.QueryableDataSource.GetView(System.String)\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: GetView(String)\n  nameWithType: QueryableDataSource.GetView(String)\n  fullName: QueryableDataSource.GetView(String)\n- uid: System.Web.UI.WebControls.QueryableDataSource.GetViewNames\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: GetViewNames()\n  nameWithType: QueryableDataSource.GetViewNames()\n  fullName: QueryableDataSource.GetViewNames()\n- uid: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: RaiseDataSourceChangedEvent(EventArgs)\n  nameWithType: DataSourceControl.RaiseDataSourceChangedEvent(EventArgs)\n  fullName: DataSourceControl.RaiseDataSourceChangedEvent(EventArgs)\n- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: IListSource.ContainsListCollection\n  nameWithType: DataSourceControl.IListSource.ContainsListCollection\n  fullName: DataSourceControl.IListSource.ContainsListCollection\n- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: IListSource.GetList()\n  nameWithType: DataSourceControl.IListSource.GetList()\n  fullName: DataSourceControl.IListSource.GetList()\n- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: IDataSource.GetView(String)\n  nameWithType: DataSourceControl.IDataSource.GetView(String)\n  fullName: DataSourceControl.IDataSource.GetView(String)\n- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames\n  parent: System.Web.UI.DataSourceControl\n  isExternal: false\n  name: IDataSource.GetViewNames()\n  nameWithType: DataSourceControl.IDataSource.GetViewNames()\n  fullName: DataSourceControl.IDataSource.GetViewNames()\n- uid: System.Web.UI.WebControls.QueryableDataSource.QueryCreated\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: QueryCreated\n  nameWithType: QueryableDataSource.QueryCreated\n  fullName: QueryableDataSource.QueryCreated\n- uid: System.Web.UI.WebControls.QueryableDataSource.RaiseViewChanged\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: RaiseViewChanged()\n  nameWithType: QueryableDataSource.RaiseViewChanged()\n  fullName: QueryableDataSource.RaiseViewChanged()\n- uid: System.Web.UI.WebControls.QueryableDataSource.UpdateParameterVales\n  parent: System.Web.UI.WebControls.QueryableDataSource\n  isExternal: false\n  name: UpdateParameterVales()\n  nameWithType: QueryableDataSource.UpdateParameterVales()\n  fullName: QueryableDataSource.UpdateParameterVales()\n- uid: System.Web.UI.WebControls.ContextDataSource.EntitySetName\n  parent: System.Web.UI.WebControls.ContextDataSource\n  isExternal: false\n  name: EntitySetName\n  nameWithType: ContextDataSource.EntitySetName\n  fullName: ContextDataSource.EntitySetName\n- uid: System.Web.UI.WebControls.ContextDataSource.EntityTypeName\n  parent: System.Web.UI.WebControls.ContextDataSource\n  isExternal: false\n  name: EntityTypeName\n  nameWithType: ContextDataSource.EntityTypeName\n  fullName: ContextDataSource.EntityTypeName\n- uid: System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: ExpandDynamicWhereParameters(IDynamicDataSource)\n  nameWithType: DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)\n  fullName: DynamicDataExtensions.ExpandDynamicWhereParameters(IDynamicDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindDataSourceControl(Control)\n  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)\n  fullName: DynamicDataExtensions.FindDataSourceControl(Control)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindFieldTemplate(Control, String)\n  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control, String)\n  fullName: DynamicDataExtensions.FindFieldTemplate(Control, String)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindMetaTable(Control)\n  nameWithType: DynamicDataExtensions.FindMetaTable(Control)\n  fullName: DynamicDataExtensions.FindMetaTable(Control)\n- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: GetDefaultValues(IDataSource)\n  nameWithType: DynamicDataExtensions.GetDefaultValues(IDataSource)\n  fullName: DynamicDataExtensions.GetDefaultValues(IDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: GetMetaTable(IDataSource)\n  nameWithType: DynamicDataExtensions.GetMetaTable(IDataSource)\n  fullName: DynamicDataExtensions.GetMetaTable(IDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: GetTable(IDynamicDataSource)\n  nameWithType: DynamicDataExtensions.GetTable(IDynamicDataSource)\n  fullName: DynamicDataExtensions.GetTable(IDynamicDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: LoadWith<TEntity>(LinqDataSource)\n  nameWithType: DynamicDataExtensions.LoadWith<TEntity>(LinqDataSource)\n  fullName: DynamicDataExtensions.LoadWith<TEntity>(LinqDataSource)\n- uid: System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: LoadWithForeignKeys(LinqDataSource, Type)\n  nameWithType: DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource, Type)\n  fullName: DynamicDataExtensions.LoadWithForeignKeys(LinqDataSource, Type)\n- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: TryGetMetaTable(IDataSource, MetaTable)\n  nameWithType: DynamicDataExtensions.TryGetMetaTable(IDataSource, MetaTable)\n  fullName: DynamicDataExtensions.TryGetMetaTable(IDataSource, MetaTable)\n- uid: System.Web.DynamicData.IDynamicDataSource\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: IDynamicDataSource\n  nameWithType: IDynamicDataSource\n  fullName: System.Web.DynamicData.IDynamicDataSource\n"}