{"nodes":[{"content":"Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.","nodes":[{"pos":[0,105],"content":"Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.","nodes":[{"content":"Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.","pos":[0,105]}]}],"pos":[2213,2319],"yaml":true},{"content":"This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  \n  \n This class does not inherently provide functionality for adding files to or extracting files from zip archives. To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes.  \n  \n The <xref:System.IO.Compression.DeflateStream> class uses the same compression algorithm as the gzip data format used by the <xref:System.IO.Compression.GZipStream> class.  \n  \n The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.","nodes":[{"pos":[0,436],"content":"This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.","nodes":[{"content":"This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression.","pos":[0,133]},{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the zlib library.","pos":[134,274],"source":" Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library."},{"content":"As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.","pos":[275,436]}]},{"pos":[443,691],"content":"This class does not inherently provide functionality for adding files to or extracting files from zip archives. To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes.","nodes":[{"content":"This class does not inherently provide functionality for adding files to or extracting files from zip archives. To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes.","pos":[0,248],"nodes":[{"content":"This class does not inherently provide functionality for adding files to or extracting files from zip archives.","pos":[0,111]},{"content":"To work with zip archives, use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> classes.","pos":[112,248],"source":" To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes."}]}]},{"pos":[698,869],"content":"The <xref:System.IO.Compression.DeflateStream> class uses the same compression algorithm as the gzip data format used by the <xref:System.IO.Compression.GZipStream> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the same compression algorithm as the gzip data format used by the <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.","pos":[0,171],"source":"The <xref:System.IO.Compression.DeflateStream> class uses the same compression algorithm as the gzip data format used by the <xref:System.IO.Compression.GZipStream> class."}]},{"pos":[876,1443],"content":"The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.","nodes":[{"content":"The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.","pos":[0,567],"nodes":[{"content":"The compression functionality in <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> is exposed as a stream.","pos":[0,143],"source":"The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream."},{"content":"Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.","pos":[144,313]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> classes are best used on uncompressed sources of data.","pos":[314,459],"source":" The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data."},{"content":"If the source data is already compressed, using these classes may actually increase the size of the stream.","pos":[460,567]}]}]}],"pos":[2330,3782],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression level.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression level.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression level."}],"pos":[7258,7408],"yaml":true},{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"pos":[0,180],"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class.","nodes":[{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class.","pos":[0,180],"source":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class."}]},{"pos":[187,603],"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","pos":[0,416],"nodes":[{"content":"This constructor overload uses the compression mode <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,106],"source":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>."},{"content":"To set the compression mode to another value, use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.","pos":[107,416],"source":" To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."}]}]}],"pos":[7419,8027],"yaml":true,"extradata":"MT"},{"content":"The stream to compress.","nodes":[{"pos":[0,23],"content":"The stream to compress.","nodes":[{"content":"The stream to compress.","pos":[0,23]}]}],"pos":[8706,8730],"yaml":true},{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"pos":[0,126],"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","pos":[0,126]}]}],"pos":[8827,8954],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[9125,9156],"yaml":true},{"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"pos":[0,160],"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"content":"The stream does not support write operations such as compression.","pos":[0,65]},{"content":"(The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> property on the stream object is <ph id=\"ph2\">`false`</ph>.)","pos":[66,160],"source":" (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)"}]}],"pos":[9250,9411],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression mode.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression mode.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression mode."}],"pos":[11072,11221],"yaml":true},{"content":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  \n  \n Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"pos":[0,337],"content":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","nodes":[{"content":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","pos":[0,337],"nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> owns the underlying stream, so closing the stream also closes the underlying stream.","pos":[0,139],"source":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream."},{"content":"Note that the state of the underlying stream can affect the usability of the stream.","pos":[140,224]},{"content":"Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","pos":[225,337]}]}]},{"pos":[344,600],"content":"If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.","nodes":[{"content":"If an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class is created with the <ph id=\"ph2\">`mode`</ph> parameter equal to <ph id=\"ph3\">`Compress`</ph>, header information is inserted immediately.","pos":[0,172],"source":"If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately."},{"content":"If no further action occurs, the stream appears as a valid, empty, compressed file.","pos":[173,256]}]},{"pos":[607,722],"content":"Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.","nodes":[{"content":"Using the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress a file larger than 4 GB raises an exception.","pos":[0,115],"source":"Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception."}]},{"pos":[729,910],"content":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"content":"By default, the compression level is set to <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id=\"ph2\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,181],"source":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>."}]}],"pos":[11232,12151],"yaml":true,"extradata":"MT"},{"content":"The stream to compress or decompress.","nodes":[{"pos":[0,37],"content":"The stream to compress or decompress.","nodes":[{"content":"The stream to compress or decompress.","pos":[0,37]}]}],"pos":[12760,12798],"yaml":true},{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"pos":[0,90],"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","pos":[0,90]}]}],"pos":[12882,12973],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[13144,13175],"yaml":true},{"content":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,308],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Compress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`."},{"pos":[315,319],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[326,519],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Decompress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanRead\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`."}],"pos":[13269,13813],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.","nodes":[{"pos":[0,188],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression level, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open."}],"pos":[15552,15741],"yaml":true},{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.DeflateStream> object.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"pos":[0,295],"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.DeflateStream> object.","nodes":[{"content":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class, and whether to leave the stream object open after disposing the <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object.","pos":[0,295],"source":"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.DeflateStream> object."}]},{"pos":[302,718],"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","nodes":[{"content":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.","pos":[0,416],"nodes":[{"content":"This constructor overload uses the compression mode <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,106],"source":"This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>."},{"content":"To set the compression mode to another value, use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.","pos":[107,416],"source":" To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."}]}]}],"pos":[15752,16475],"yaml":true,"extradata":"MT"},{"content":"The stream to compress.","nodes":[{"pos":[0,23],"content":"The stream to compress.","nodes":[{"content":"The stream to compress.","pos":[0,23]}]}],"pos":[17203,17227],"yaml":true},{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"pos":[0,126],"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.","pos":[0,126]}]}],"pos":[17324,17451],"yaml":true},{"content":"`true` to leave the stream object open after disposing the <xref href=\"System.IO.Compression.DeflateStream\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream object open after disposing the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream object open after disposing the <xref href=\"System.IO.Compression.DeflateStream\"></xref> object; otherwise, `false`."}],"pos":[17517,17663],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[17834,17865],"yaml":true},{"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"pos":[0,160],"content":"The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)","nodes":[{"content":"The stream does not support write operations such as compression.","pos":[0,65]},{"content":"(The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> property on the stream object is <ph id=\"ph2\">`false`</ph>.)","pos":[66,160],"source":" (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)"}]}],"pos":[17959,18120],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> class by using the specified stream and compression mode, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open."}],"pos":[19853,20041],"yaml":true},{"content":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  \n  \n Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"pos":[0,337],"content":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","nodes":[{"content":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","pos":[0,337],"nodes":[{"content":"By default, <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> owns the underlying stream, so closing the stream also closes the underlying stream.","pos":[0,139],"source":"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream."},{"content":"Note that the state of the underlying stream can affect the usability of the stream.","pos":[140,224]},{"content":"Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.","pos":[225,337]}]}]},{"pos":[344,600],"content":"If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.","nodes":[{"content":"If an instance of the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class is created with the <ph id=\"ph2\">`mode`</ph> parameter equal to <ph id=\"ph3\">`Compress`</ph>, header information is inserted immediately.","pos":[0,172],"source":"If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately."},{"content":"If no further action occurs, the stream appears as a valid, empty, compressed file.","pos":[173,256]}]},{"pos":[607,722],"content":"Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.","nodes":[{"content":"Using the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress a file larger than 4 GB raises an exception.","pos":[0,115],"source":"Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception."}]},{"pos":[729,910],"content":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.","nodes":[{"content":"By default, the compression level is set to <ph id=\"ph1\">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id=\"ph2\">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.","pos":[0,181],"source":"By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>."}]}],"pos":[20052,20971],"yaml":true,"extradata":"MT"},{"content":"The stream to compress or decompress.","nodes":[{"pos":[0,37],"content":"The stream to compress or decompress.","nodes":[{"content":"The stream to compress or decompress.","pos":[0,37]}]}],"pos":[21601,21639],"yaml":true},{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"pos":[0,90],"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","nodes":[{"content":"One of the enumeration values that indicates whether to compress or decompress the stream.","pos":[0,90]}]}],"pos":[21723,21814],"yaml":true},{"content":"`true` to leave the stream open after disposing the <xref href=\"System.IO.Compression.DeflateStream\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream open after disposing the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream open after disposing the <xref href=\"System.IO.Compression.DeflateStream\"></xref> object; otherwise, `false`."}],"pos":[21880,22019],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[22190,22221],"yaml":true},{"content":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,308],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Compress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanWrite\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\"></xref> and <xref href=\"System.IO.Stream.CanWrite\"></xref> is `false`."},{"pos":[315,319],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[326,519],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode.Decompress\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream.CanRead\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`false`</ph>.","source":"<xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\"></xref> and <xref href=\"System.IO.Stream.CanRead\"></xref> is `false`."}],"pos":[22315,22859],"yaml":true},{"content":"Gets a reference to the underlying stream.","nodes":[{"pos":[0,42],"content":"Gets a reference to the underlying stream.","nodes":[{"content":"Gets a reference to the underlying stream.","pos":[0,42]}]}],"pos":[24278,24321],"yaml":true},{"content":"A stream object that represents the underlying stream.","nodes":[{"pos":[0,54],"content":"A stream object that represents the underlying stream.","nodes":[{"content":"A stream object that represents the underlying stream.","pos":[0,54]}]}],"pos":[24448,24503],"yaml":true},{"content":"The underlying stream is closed.","nodes":[{"pos":[0,32],"content":"The underlying stream is closed.","nodes":[{"content":"The underlying stream is closed.","pos":[0,32]}]}],"pos":[24683,24716],"yaml":true},{"content":"Begins an asynchronous read operation. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,164],"content":"Begins an asynchronous read operation. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Begins an asynchronous read operation.","pos":[0,38]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[39,164],"source":" (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[26490,26655],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.BeginRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginRead%2A>.  \n  \n The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.  \n  \n Multiple simultaneous asynchronous requests render the request completion order uncertain.  \n  \n Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports reading.  \n  \n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>.","nodes":[{"pos":[0,457],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.BeginRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.ReadAsync%2A&gt;</ph> method.","pos":[0,167],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph> method is still available in the <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[168,429],"source":" The <xref:System.IO.Compression.DeflateStream.BeginRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[430,457]}]},{"pos":[464,890],"content":"Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginRead%2A>.","nodes":[{"content":"Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginRead%2A>.","pos":[0,426],"nodes":[{"content":"Pass the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> return value to the <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph> method of the stream to determine how many bytes were read and to release operating system resources used for reading.","pos":[0,228],"source":"Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading."},{"content":"You can do this either by using the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph> or in a callback passed to <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>.","pos":[229,426],"source":" You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginRead%2A>."}]}]},{"pos":[897,1037],"content":"The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.","nodes":[{"content":"The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.","pos":[0,140]}]},{"pos":[1044,1134],"content":"Multiple simultaneous asynchronous requests render the request completion order uncertain.","nodes":[{"content":"Multiple simultaneous asynchronous requests render the request completion order uncertain.","pos":[0,90]}]},{"pos":[1141,1312],"content":"Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports reading.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object supports reading.","pos":[0,171],"source":"Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports reading."}]},{"pos":[1319,1692],"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>.","nodes":[{"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>.","pos":[0,373],"nodes":[{"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>.","pos":[0,150],"source":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginRead%2A>."},{"content":"Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>.","pos":[151,373],"source":" Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>."}]}]}],"pos":[26666,28371],"yaml":true,"extradata":"MT"},{"content":"The byte offset in <code>array</code> at which to begin reading data from the stream.","nodes":[{"pos":[0,85],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin reading data from the stream.","source":"The byte offset in <code>array</code> at which to begin reading data from the stream."}],"pos":[28649,28735],"yaml":true},{"content":"The maximum number of bytes to read.","nodes":[{"pos":[0,36],"content":"The maximum number of bytes to read.","nodes":[{"content":"The maximum number of bytes to read.","pos":[0,36]}]}],"pos":[28795,28832],"yaml":true},{"content":"An  object that represents the asynchronous read operation, which could still be pending.","nodes":[{"pos":[0,89],"content":"An  object that represents the asynchronous read operation, which could still be pending.","nodes":[{"content":"An  object that represents the asynchronous read operation, which could still be pending.","pos":[0,89]}]}],"pos":[29043,29133],"yaml":true},{"content":"The method tried to read asynchronously past the end of the stream, or a disk error occurred.","nodes":[{"pos":[0,93],"content":"The method tried to read asynchronously past the end of the stream, or a disk error occurred.","nodes":[{"content":"The method tried to read asynchronously past the end of the stream, or a disk error occurred.","pos":[0,93]}]}],"pos":[29294,29388],"yaml":true},{"content":"One or more of the arguments is invalid.","nodes":[{"pos":[0,40],"content":"One or more of the arguments is invalid.","nodes":[{"content":"One or more of the arguments is invalid.","pos":[0,40]}]}],"pos":[29482,29523],"yaml":true},{"content":"Methods were called after the stream was closed.","nodes":[{"pos":[0,48],"content":"Methods were called after the stream was closed.","nodes":[{"content":"Methods were called after the stream was closed.","pos":[0,48]}]}],"pos":[29629,29678],"yaml":true},{"content":"The current <xref href=\"System.IO.Compression.DeflateStream\"></xref> implementation does not support the read operation.","nodes":[{"pos":[0,120],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> implementation does not support the read operation.","source":"The current <xref href=\"System.IO.Compression.DeflateStream\"></xref> implementation does not support the read operation."}],"pos":[29780,29901],"yaml":true},{"content":"This call cannot be completed.","nodes":[{"pos":[0,30],"content":"This call cannot be completed.","nodes":[{"content":"This call cannot be completed.","pos":[0,30]}]}],"pos":[30011,30042],"yaml":true},{"content":"Begins an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,166],"content":"Begins an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Begins an asynchronous write operation.","pos":[0,39]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[40,166],"source":" (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[31558,31725],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method.  \n  \n If a stream is writable, writing at the end of the stream expands the stream.  \n  \n The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes. Multiple simultaneous asynchronous requests render the request completion order uncertain.  \n  \n Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports writing.  \n  \n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.","nodes":[{"pos":[0,460],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.WriteAsync%2A&gt;</ph> method.","pos":[0,169],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph> method is still available in the <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[170,432],"source":" The <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[433,460]}]},{"pos":[467,1091],"content":"Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method.","nodes":[{"content":"Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method.","pos":[0,624],"nodes":[{"content":"Pass the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> object returned by the current method to <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> to ensure that the write completes and frees resources appropriately.","pos":[0,201],"source":"Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately."},{"content":"You can do this either by using the same code that called <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph> or in a callback passed to <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>.","pos":[202,401],"source":" You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>."},{"content":"If an error occurs during an asynchronous write operation, an exception will not be thrown until <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> is called with the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> returned by this method.","pos":[402,624],"source":" If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method."}]}]},{"pos":[1098,1175],"content":"If a stream is writable, writing at the end of the stream expands the stream.","nodes":[{"content":"If a stream is writable, writing at the end of the stream expands the stream.","pos":[0,77]}]},{"pos":[1182,1413],"content":"The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes. Multiple simultaneous asynchronous requests render the request completion order uncertain.","nodes":[{"content":"The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes. Multiple simultaneous asynchronous requests render the request completion order uncertain.","pos":[0,231],"nodes":[{"content":"The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes.","pos":[0,140]},{"content":"Multiple simultaneous asynchronous requests render the request completion order uncertain.","pos":[141,231]}]}]},{"pos":[1420,1592],"content":"Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports writing.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object supports writing.","pos":[0,172],"source":"Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports writing."}]},{"pos":[1599,1975],"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.","nodes":[{"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.","pos":[0,376],"nodes":[{"content":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>.","pos":[0,151],"source":"If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>."},{"content":"Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>.","pos":[152,376],"source":" Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>."}]}]}],"pos":[31736,33724],"yaml":true,"extradata":"MT"},{"content":"The byte offset in <code>buffer</code> to begin writing from.","nodes":[{"pos":[0,61],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to begin writing from.","source":"The byte offset in <code>buffer</code> to begin writing from."}],"pos":[34003,34065],"yaml":true},{"content":"The maximum number of bytes to write.","nodes":[{"pos":[0,37],"content":"The maximum number of bytes to write.","nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]}],"pos":[34125,34163],"yaml":true},{"content":"An  object that represents the asynchronous write operation, which could still be pending.","nodes":[{"pos":[0,90],"content":"An  object that represents the asynchronous write operation, which could still be pending.","nodes":[{"content":"An  object that represents the asynchronous write operation, which could still be pending.","pos":[0,90]}]}],"pos":[34374,34465],"yaml":true},{"content":"The method tried to write asynchronously past the end of the stream, or a disk error occurred.","nodes":[{"pos":[0,94],"content":"The method tried to write asynchronously past the end of the stream, or a disk error occurred.","nodes":[{"content":"The method tried to write asynchronously past the end of the stream, or a disk error occurred.","pos":[0,94]}]}],"pos":[34627,34722],"yaml":true},{"content":"One or more of the arguments is invalid.","nodes":[{"pos":[0,40],"content":"One or more of the arguments is invalid.","nodes":[{"content":"One or more of the arguments is invalid.","pos":[0,40]}]}],"pos":[34816,34857],"yaml":true},{"content":"Methods were called after the stream was closed.","nodes":[{"pos":[0,48],"content":"Methods were called after the stream was closed.","nodes":[{"content":"Methods were called after the stream was closed.","pos":[0,48]}]}],"pos":[34963,35012],"yaml":true},{"content":"The current <xref href=\"System.IO.Compression.DeflateStream\"></xref> implementation does not support the write operation.","nodes":[{"pos":[0,121],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> implementation does not support the write operation.","source":"The current <xref href=\"System.IO.Compression.DeflateStream\"></xref> implementation does not support the write operation."}],"pos":[35114,35236],"yaml":true},{"content":"The write operation cannot be performed because the stream is closed.","nodes":[{"pos":[0,69],"content":"The write operation cannot be performed because the stream is closed.","nodes":[{"content":"The write operation cannot be performed because the stream is closed.","pos":[0,69]}]}],"pos":[35346,35416],"yaml":true},{"content":"Gets a value indicating whether the stream supports reading while decompressing a file.","nodes":[{"pos":[0,87],"content":"Gets a value indicating whether the stream supports reading while decompressing a file.","nodes":[{"content":"Gets a value indicating whether the stream supports reading while decompressing a file.","pos":[0,87]}]}],"pos":[36553,36641],"yaml":true},{"content":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Decompress`, and the underlying stream is opened and supports reading; otherwise, `false`.","nodes":[{"pos":[0,173],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value is <ph id=\"ph3\">`Decompress`</ph>, and the underlying stream is opened and supports reading; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Decompress`, and the underlying stream is opened and supports reading; otherwise, `false`."}],"pos":[36760,36936],"yaml":true},{"content":"Gets a value indicating whether the stream supports seeking.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the stream supports seeking.","nodes":[{"content":"Gets a value indicating whether the stream supports seeking.","pos":[0,60]}]}],"pos":[38411,38472],"yaml":true},{"content":"`false` in all cases.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">`false`</ph> in all cases.","source":"`false` in all cases."}],"pos":[38591,38615],"yaml":true},{"content":"Gets a value indicating whether the stream supports writing.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the stream supports writing.","nodes":[{"content":"Gets a value indicating whether the stream supports writing.","pos":[0,60]}]}],"pos":[40096,40157],"yaml":true},{"content":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`.","nodes":[{"pos":[0,175],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value is <ph id=\"ph3\">`Compress`</ph>, and the underlying stream supports writing and is not closed; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`."}],"pos":[40277,40455],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.Compression.DeflateStream\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,148],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.Compression.DeflateStream\"></xref> and optionally releases the managed resources."}],"pos":[42004,42153],"yaml":true},{"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.DeflateStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.DeflateStream.Dispose%2A> with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.","nodes":[{"pos":[0,448],"content":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.DeflateStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.DeflateStream.Dispose%2A> with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,141],"source":"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.Dispose%2A&gt;</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[142,320],"source":" <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.DeflateStream.Dispose%2A> method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.Dispose%2A&gt;</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[321,448],"source":" <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.DeflateStream.Dispose%2A> with `disposing` set to `false`."}]},{"pos":[455,732],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.","pos":[0,169],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references."},{"content":"This method invokes the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.","pos":[170,277],"source":" This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object."}]}],"pos":[42164,42901],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[43056,43159],"yaml":true},{"content":"Waits for the pending asynchronous read to complete. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,178],"content":"Waits for the pending asynchronous read to complete. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Waits for the pending asynchronous read to complete.","pos":[0,52]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[53,178],"source":" (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[44737,44916],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.EndRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and <xref:System.IO.Compression.DeflateStream.EndRead%2A>.  \n  \n This method blocks until the I/O operation has completed.","nodes":[{"pos":[0,455],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.EndRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.ReadAsync%2A&gt;</ph> method.","pos":[0,167],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph> method is still available in the <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[168,427],"source":" The <xref:System.IO.Compression.DeflateStream.EndRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[428,455]}]},{"pos":[462,731],"content":"Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and <xref:System.IO.Compression.DeflateStream.EndRead%2A>.","nodes":[{"content":"Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and <xref:System.IO.Compression.DeflateStream.EndRead%2A>.","pos":[0,269],"nodes":[{"content":"Call this method to determine how many bytes were read from the stream.","pos":[0,71]},{"content":"This method can be called once to return the amount of bytes read between calls to <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>.","pos":[72,269],"source":" This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and <xref:System.IO.Compression.DeflateStream.EndRead%2A>."}]}]},{"pos":[738,795],"content":"This method blocks until the I/O operation has completed.","nodes":[{"content":"This method blocks until the I/O operation has completed.","pos":[0,57]}]}],"pos":[44927,45729],"yaml":true,"extradata":"MT"},{"content":"The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href=\"System.IO.Compression.DeflateStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.","nodes":[{"pos":[0,254],"content":"The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href=\"System.IO.Compression.DeflateStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.","nodes":[{"content":"The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.","pos":[0,97]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.DeflateStream\"&gt;&lt;/xref&gt;</ph> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.","pos":[98,254],"source":"<xref href=\"System.IO.Compression.DeflateStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available."}]}],"pos":[45957,46212],"yaml":true},{"content":"<code>async_result</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;async_result&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>async_result</code> is `null`."}],"pos":[46385,46422],"yaml":true},{"content":"<code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.","nodes":[{"pos":[0,223],"content":"<ph id=\"ph1\">&lt;code&gt;async_result&lt;/code&gt;</ph> did not originate from a <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method on the current stream.","source":"<code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream."}],"pos":[46516,46740],"yaml":true},{"content":"An exception was thrown during a call to <xref href=\"System.Threading.WaitHandle.WaitOne\"></xref>.","nodes":[{"pos":[0,98],"content":"An exception was thrown during a call to <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitHandle.WaitOne\"&gt;&lt;/xref&gt;</ph>.","source":"An exception was thrown during a call to <xref href=\"System.Threading.WaitHandle.WaitOne\"></xref>."}],"pos":[46830,46929],"yaml":true},{"content":"The stream is `null`.","nodes":[{"pos":[0,21],"content":"The stream is <ph id=\"ph1\">`null`</ph>.","source":"The stream is `null`."}],"pos":[47039,47061],"yaml":true},{"content":"Ends an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"pos":[0,164],"content":"Ends an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)","nodes":[{"content":"Ends an asynchronous write operation.","pos":[0,37]},{"content":"(Consider using the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method instead.)","pos":[38,164],"source":" (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)"}]}],"pos":[48307,48472],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.EndWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n <xref:System.IO.Compression.DeflateStream.EndWrite%2A> must be called only once for every call to the <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method.  \n  \n This method blocks until the I/O operation has completed. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.Compression.DeflateStream.EndWrite%2A>. Exceptions thrown by the thread pool thread will not be visible when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.","nodes":[{"pos":[0,458],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.EndWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id=\"ph2\">&lt;xref:System.IO.Stream.WriteAsync%2A&gt;</ph> method.","pos":[0,169],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> method is still available in the <ph id=\"ph2\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.","pos":[170,430],"source":" The <xref:System.IO.Compression.DeflateStream.EndWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods."},{"content":"For more information, see .","pos":[431,458]}]},{"pos":[465,631],"content":"<xref:System.IO.Compression.DeflateStream.EndWrite%2A> must be called only once for every call to the <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> must be called only once for every call to the <ph id=\"ph2\">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph> method.","pos":[0,166],"source":"<xref:System.IO.Compression.DeflateStream.EndWrite%2A> must be called only once for every call to the <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method."}]},{"pos":[638,1053],"content":"This method blocks until the I/O operation has completed. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.Compression.DeflateStream.EndWrite%2A>. Exceptions thrown by the thread pool thread will not be visible when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.","nodes":[{"content":"This method blocks until the I/O operation has completed. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.Compression.DeflateStream.EndWrite%2A>. Exceptions thrown by the thread pool thread will not be visible when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.","pos":[0,415],"nodes":[{"content":"This method blocks until the I/O operation has completed.","pos":[0,57]},{"content":"Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>.","pos":[58,282],"source":" Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.Compression.DeflateStream.EndWrite%2A>."},{"content":"Exceptions thrown by the thread pool thread will not be visible when calling <ph id=\"ph1\">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>.","pos":[283,415],"source":" Exceptions thrown by the thread pool thread will not be visible when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>."}]}]}],"pos":[48483,49543],"yaml":true,"extradata":"MT"},{"content":"<code>async_result</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;async_result&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>async_result</code> is `null`."}],"pos":[49891,49928],"yaml":true},{"content":"<code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.","nodes":[{"pos":[0,224],"content":"<ph id=\"ph1\">&lt;code&gt;async_result&lt;/code&gt;</ph> did not originate from a <ph id=\"ph2\">&lt;xref href=\"System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method on the current stream.","source":"<code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream."}],"pos":[50022,50247],"yaml":true},{"content":"An exception was thrown during a call to <xref href=\"System.Threading.WaitHandle.WaitOne\"></xref>.","nodes":[{"pos":[0,98],"content":"An exception was thrown during a call to <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitHandle.WaitOne\"&gt;&lt;/xref&gt;</ph>.","source":"An exception was thrown during a call to <xref href=\"System.Threading.WaitHandle.WaitOne\"></xref>."}],"pos":[50325,50424],"yaml":true},{"content":"The end write call is invalid.","nodes":[{"pos":[0,30],"content":"The end write call is invalid.","nodes":[{"content":"The end write call is invalid.","pos":[0,30]}]}],"pos":[50534,50565],"yaml":true},{"content":"The current implementation of this method has no functionality.","nodes":[{"pos":[0,63],"content":"The current implementation of this method has no functionality.","nodes":[{"content":"The current implementation of this method has no functionality.","pos":[0,63]}]}],"pos":[51694,51758],"yaml":true},{"content":"The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.","nodes":[{"pos":[0,137],"content":"The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.","nodes":[{"content":"The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.","pos":[0,137],"nodes":[{"content":"The current implementation of this method does not flush the internal buffer.","pos":[0,77]},{"content":"The internal buffer is flushed when the object is disposed.","pos":[78,137]}]}]}],"pos":[51769,51907],"yaml":true,"extradata":"MT"},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[52155,52177],"yaml":true},{"content":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,101],"content":"This property is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[53572,53674],"yaml":true},{"content":"A long value.","nodes":[{"pos":[0,13],"content":"A long value.","nodes":[{"content":"A long value.","pos":[0,13]}]}],"pos":[53790,53804],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[53976,54023],"yaml":true},{"content":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,101],"content":"This property is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[55430,55532],"yaml":true},{"content":"A long value.","nodes":[{"pos":[0,13],"content":"A long value.","nodes":[{"content":"A long value.","pos":[0,13]}]}],"pos":[55655,55669],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[55843,55890],"yaml":true},{"content":"Reads a number of decompressed bytes into the specified byte array.","nodes":[{"pos":[0,67],"content":"Reads a number of decompressed bytes into the specified byte array.","nodes":[{"content":"Reads a number of decompressed bytes into the specified byte array.","pos":[0,67]}]}],"pos":[57460,57528],"yaml":true},{"content":"The array to store decompressed bytes.","nodes":[{"pos":[0,38],"content":"The array to store decompressed bytes.","nodes":[{"content":"The array to store decompressed bytes.","pos":[0,38]}]}],"pos":[58242,58281],"yaml":true},{"content":"The byte offset in <code>array</code> at which the read bytes will be placed.","nodes":[{"pos":[0,77],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which the read bytes will be placed.","source":"The byte offset in <code>array</code> at which the read bytes will be placed."}],"pos":[58342,58420],"yaml":true},{"content":"The maximum number of decompressed bytes to read.","nodes":[{"pos":[0,49],"content":"The maximum number of decompressed bytes to read.","nodes":[{"content":"The maximum number of decompressed bytes to read.","pos":[0,49]}]}],"pos":[58480,58530],"yaml":true},{"content":"The number of bytes that were read into the byte array.","nodes":[{"pos":[0,55],"content":"The number of bytes that were read into the byte array.","nodes":[{"content":"The number of bytes that were read into the byte array.","pos":[0,55]}]}],"pos":[58586,58642],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[58812,58842],"yaml":true},{"content":"The <xref href=\"System.IO.Compression.CompressionMode\"></xref> value was `Compress` when the object was created.  \n  \n \\- or -  \n  \n The underlying stream does not support reading.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Compression.CompressionMode\"&gt;&lt;/xref&gt;</ph> value was <ph id=\"ph2\">`Compress`</ph> when the object was created.","source":"The <xref href=\"System.IO.Compression.CompressionMode\"></xref> value was `Compress` when the object was created."},{"pos":[119,126],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[133,180],"content":"The underlying stream does not support reading.","nodes":[{"content":"The underlying stream does not support reading.","pos":[0,47]}]}],"pos":[58952,59142],"yaml":true},{"content":"<code>offset</code> or <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>array</code> length minus the index starting point is less than <code>count</code>.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>offset</code> or <code>count</code> is less than zero."},{"pos":[67,71],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[78,167],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> length minus the index starting point is less than <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph>.","source":"<code>array</code> length minus the index starting point is less than <code>count</code>."}],"pos":[59256,59430],"yaml":true},{"content":"The data is in an invalid format.","nodes":[{"pos":[0,33],"content":"The data is in an invalid format.","nodes":[{"content":"The data is in an invalid format.","pos":[0,33]}]}],"pos":[59536,59570],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[59676,59698],"yaml":true},{"content":"This operation is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,102],"content":"This operation is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This operation is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[62960,63063],"yaml":true},{"content":"The location in the stream.","nodes":[{"pos":[0,27],"content":"The location in the stream.","nodes":[{"content":"The location in the stream.","pos":[0,27]}]}],"pos":[63233,63261],"yaml":true},{"content":"One of the <xref href=\"System.IO.SeekOrigin\"></xref> values.","nodes":[{"pos":[0,60],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.SeekOrigin\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.SeekOrigin\"></xref> values."}],"pos":[63330,63391],"yaml":true},{"content":"A long value.","nodes":[{"pos":[0,13],"content":"A long value.","nodes":[{"content":"A long value.","pos":[0,13]}]}],"pos":[63447,63461],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[63631,63678],"yaml":true},{"content":"This operation is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,102],"content":"This operation is not supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"This operation is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[65152,65255],"yaml":true},{"content":"The length of the stream.","nodes":[{"pos":[0,25],"content":"The length of the stream.","nodes":[{"content":"The length of the stream.","pos":[0,25]}]}],"pos":[65399,65425],"yaml":true},{"content":"This property is not supported on this stream.","nodes":[{"pos":[0,46],"content":"This property is not supported on this stream.","nodes":[{"content":"This property is not supported on this stream.","pos":[0,46]}]}],"pos":[65600,65647],"yaml":true},{"content":"Writes compressed bytes to the underlying stream from the specified byte array.","nodes":[{"pos":[0,79],"content":"Writes compressed bytes to the underlying stream from the specified byte array.","nodes":[{"content":"Writes compressed bytes to the underlying stream from the specified byte array.","pos":[0,79]}]}],"pos":[67223,67303],"yaml":true},{"content":"The buffer that contains the data to compress.","nodes":[{"pos":[0,46],"content":"The buffer that contains the data to compress.","nodes":[{"content":"The buffer that contains the data to compress.","pos":[0,46]}]}],"pos":[68019,68066],"yaml":true},{"content":"The byte offset in <code>array</code> from which the bytes will be read.","nodes":[{"pos":[0,72],"content":"The byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> from which the bytes will be read.","source":"The byte offset in <code>array</code> from which the bytes will be read."}],"pos":[68127,68200],"yaml":true},{"content":"The maximum number of bytes to write.","nodes":[{"pos":[0,37],"content":"The maximum number of bytes to write.","nodes":[{"content":"The maximum number of bytes to write.","pos":[0,37]}]}],"pos":[68260,68298],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Compression.DeflateStream\n  commentId: T:System.IO.Compression.DeflateStream\n  id: DeflateStream\n  children:\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  - System.IO.Compression.DeflateStream.BaseStream\n  - System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Compression.DeflateStream.CanRead\n  - System.IO.Compression.DeflateStream.CanSeek\n  - System.IO.Compression.DeflateStream.CanWrite\n  - System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  - System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)\n  - System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)\n  - System.IO.Compression.DeflateStream.Flush\n  - System.IO.Compression.DeflateStream.Length\n  - System.IO.Compression.DeflateStream.Position\n  - System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  - System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: DeflateStream\n  nameWithType: DeflateStream\n  fullName: System.IO.Compression.DeflateStream\n  type: Class\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.\n  remarks: \"This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  \\n  \\n This class does not inherently provide functionality for adding files to or extracting files from zip archives. To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes.  \\n  \\n The <xref:System.IO.Compression.DeflateStream> class uses the same compression algorithm as the gzip data format used by the <xref:System.IO.Compression.GZipStream> class.  \\n  \\n The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.\"\n  example:\n  - \"The following example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a directory of files.  \\n  \\n [!code-csharp[IO.Compression.Deflate1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.Deflate1/CS/deflatetest.cs#1)]\\n [!code-vb[IO.Compression.Deflate1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.Deflate1/VB/deflatetest.vb#1)]\"\n  syntax:\n    content: 'public class DeflateStream : System.IO.Stream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.WriteTimeout\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: DeflateStream(Stream, CompressionLevel)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionLevel)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionLevel)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression level.\n  remarks: \"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class.  \\n  \\n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.\"\n  example:\n  - \"The following example shows how to set the compression level when creating a <xref:System.IO.Compression.DeflateStream> object.  \\n  \\n [!code-csharp[System.IO.Compression.DeflateStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program1.cs#1)]\\n [!code-vb[System.IO.Compression.DeflateStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program1.vb#1)]\"\n  syntax:\n    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to compress.\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.\n  overload: System.IO.Compression.DeflateStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: DeflateStream(Stream, CompressionMode)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionMode)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionMode)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression mode.\n  remarks: \"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \\n  \\n If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  \\n  \\n Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.  \\n  \\n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.\"\n  example:\n  - \"The following example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a file.  \\n  \\n [!code-csharp[IO.Compression.Deflate1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.Deflate1/CS/deflatetest.cs#1)]\\n [!code-vb[IO.Compression.Deflate1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.Deflate1/VB/deflatetest.vb#1)]\"\n  syntax:\n    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to compress or decompress.\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: One of the enumeration values that indicates whether to compress or decompress the stream.\n  overload: System.IO.Compression.DeflateStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mode</code> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanWrite\\\"></xref> is `false`.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanRead\\\"></xref> is `false`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: DeflateStream(Stream, CompressionLevel, Boolean)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionLevel, Boolean)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionLevel, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.\n  remarks: \"You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.DeflateStream> object.  \\n  \\n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.\"\n  example:\n  - \"The following example shows how to set the compression level when creating a <xref:System.IO.Compression.DeflateStream> object and how to leave the stream open.  \\n  \\n [!code-csharp[System.IO.Compression.DeflateStream#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program2.cs#2)]\\n [!code-vb[System.IO.Compression.DeflateStream#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program2.vb#2)]\"\n  syntax:\n    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to compress.\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream object open after disposing the <xref href=\"System.IO.Compression.DeflateStream\"></xref> object; otherwise, `false`.'\n  overload: System.IO.Compression.DeflateStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support write operations such as compression. (The <xref href=\"System.IO.Stream.CanWrite\"></xref> property on the stream object is `false`.)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  commentId: M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: DeflateStream(Stream, CompressionMode, Boolean)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionMode, Boolean)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionMode, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Initializes a new instance of the <xref href=\"System.IO.Compression.DeflateStream\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.\n  remarks: \"By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \\n  \\n If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  \\n  \\n Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.  \\n  \\n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a file.  \\n  \\n [!code-csharp[IO.Compression.Deflate1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.Deflate1/CS/deflatetest.cs#1)]\\n [!code-vb[IO.Compression.Deflate1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.Deflate1/VB/deflatetest.vb#1)]\"\n  syntax:\n    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The stream to compress or decompress.\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: One of the enumeration values that indicates whether to compress or decompress the stream.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream open after disposing the <xref href=\"System.IO.Compression.DeflateStream\"></xref> object; otherwise, `false`.'\n  overload: System.IO.Compression.DeflateStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>mode</code> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanWrite\\\"></xref> is `false`.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\"></xref> and <xref href=\\\"System.IO.Stream.CanRead\\\"></xref> is `false`.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.BaseStream\n  commentId: P:System.IO.Compression.DeflateStream.BaseStream\n  id: BaseStream\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: DeflateStream.BaseStream\n  fullName: DeflateStream.BaseStream\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a reference to the underlying stream.\n  syntax:\n    content: public System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: A stream object that represents the underlying stream.\n  overload: System.IO.Compression.DeflateStream.BaseStream*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The underlying stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: DeflateStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: DeflateStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Begins an asynchronous read operation. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.BeginRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginRead%2A>.  \\n  \\n The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.  \\n  \\n Multiple simultaneous asynchronous requests render the request completion order uncertain.  \\n  \\n Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports reading.  \\n  \\n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginRead%2A>. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>.\"\n  syntax:\n    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback cback, object state);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> at which to begin reading data from the stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: ''\n    - id: asyncState\n      type: System.Object\n      description: ''\n    return:\n      type: System.IAsyncResult\n      description: An  object that represents the asynchronous read operation, which could still be pending.\n  overload: System.IO.Compression.DeflateStream.BeginRead*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The method tried to read asynchronously past the end of the stream, or a disk error occurred.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more of the arguments is invalid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The current <xref href=\"System.IO.Compression.DeflateStream\"></xref> implementation does not support the read operation.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This call cannot be completed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: DeflateStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: DeflateStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Begins an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately. You can do this either by using the same code that called <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> or in a callback passed to <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method.  \\n  \\n If a stream is writable, writing at the end of the stream expands the stream.  \\n  \\n The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes. Multiple simultaneous asynchronous requests render the request completion order uncertain.  \\n  \\n Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports writing.  \\n  \\n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.DeflateStream.BeginWrite%2A>. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.\"\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback cback, object state);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>buffer</code> to begin writing from.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: ''\n    - id: asyncState\n      type: System.Object\n      description: ''\n    return:\n      type: System.IAsyncResult\n      description: An  object that represents the asynchronous write operation, which could still be pending.\n  overload: System.IO.Compression.DeflateStream.BeginWrite*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The method tried to write asynchronously past the end of the stream, or a disk error occurred.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more of the arguments is invalid.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The current <xref href=\"System.IO.Compression.DeflateStream\"></xref> implementation does not support the write operation.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The write operation cannot be performed because the stream is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.CanRead\n  commentId: P:System.IO.Compression.DeflateStream.CanRead\n  id: CanRead\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: DeflateStream.CanRead\n  fullName: DeflateStream.CanRead\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a value indicating whether the stream supports reading while decompressing a file.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Decompress`, and the underlying stream is opened and supports reading; otherwise, `false`.'\n  overload: System.IO.Compression.DeflateStream.CanRead*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.CanSeek\n  commentId: P:System.IO.Compression.DeflateStream.CanSeek\n  id: CanSeek\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: DeflateStream.CanSeek\n  fullName: DeflateStream.CanSeek\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a value indicating whether the stream supports seeking.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases.'\n  overload: System.IO.Compression.DeflateStream.CanSeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.CanWrite\n  commentId: P:System.IO.Compression.DeflateStream.CanWrite\n  id: CanWrite\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: DeflateStream.CanWrite\n  fullName: DeflateStream.CanWrite\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Gets a value indicating whether the stream supports writing.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.IO.Compression.CompressionMode\"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`.'\n  overload: System.IO.Compression.DeflateStream.CanWrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  commentId: M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DeflateStream.Dispose(Boolean)\n  fullName: DeflateStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.Compression.DeflateStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.DeflateStream.Dispose%2A> method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.DeflateStream.Dispose%2A> with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.Compression.DeflateStream.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)\n  commentId: M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: DeflateStream.EndRead(IAsyncResult)\n  fullName: DeflateStream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Waits for the pending asynchronous read to complete. (Consider using the <xref href=\"System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.EndRead%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and <xref:System.IO.Compression.DeflateStream.EndRead%2A>.  \\n  \\n This method blocks until the I/O operation has completed.\"\n  syntax:\n    content: public override int EndRead (IAsyncResult async_result);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: ''\n    return:\n      type: System.Int32\n      description: The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href=\"System.IO.Compression.DeflateStream\"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.\n  overload: System.IO.Compression.DeflateStream.EndRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>async_result</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: An exception was thrown during a call to <xref href=\"System.Threading.WaitHandle.WaitOne\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The stream is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)\n  commentId: M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: DeflateStream.EndWrite(IAsyncResult)\n  fullName: DeflateStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: Ends an asynchronous write operation. (Consider using the <xref href=\"System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\"></xref> method instead.)\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The <xref:System.IO.Compression.DeflateStream.EndWrite%2A> method is still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \\n  \\n <xref:System.IO.Compression.DeflateStream.EndWrite%2A> must be called only once for every call to the <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method.  \\n  \\n This method blocks until the I/O operation has completed. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <xref:System.IO.Compression.DeflateStream.EndWrite%2A>. Exceptions thrown by the thread pool thread will not be visible when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>.\"\n  syntax:\n    content: public override void EndWrite (IAsyncResult async_result);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: ''\n  overload: System.IO.Compression.DeflateStream.EndWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>async_result</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>async_result</code> did not originate from a <xref href=\"System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method on the current stream.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An exception was thrown during a call to <xref href=\"System.Threading.WaitHandle.WaitOne\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The end write call is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.Flush\n  commentId: M:System.IO.Compression.DeflateStream.Flush\n  id: Flush\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: DeflateStream.Flush()\n  fullName: DeflateStream.Flush()\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: The current implementation of this method has no functionality.\n  remarks: The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.IO.Compression.DeflateStream.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.Length\n  commentId: P:System.IO.Compression.DeflateStream.Length\n  id: Length\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: DeflateStream.Length\n  fullName: DeflateStream.Length\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: A long value.\n  overload: System.IO.Compression.DeflateStream.Length*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.Position\n  commentId: P:System.IO.Compression.DeflateStream.Position\n  id: Position\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: DeflateStream.Position\n  fullName: DeflateStream.Position\n  type: Property\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This property is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: A long value.\n  overload: System.IO.Compression.DeflateStream.Position*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: DeflateStream.Read(Byte[], Int32, Int32)\n  fullName: DeflateStream.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Reads a number of decompressed bytes into the specified byte array.\n  remarks: ''\n  example:\n  - \"The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.DeflateStream.Read%2A> and <xref:System.IO.Compression.DeflateStream.Write%2A> methods.  \\n  \\n [!code-csharp[System.IO.Compression.DeflateStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program3.cs#3)]\\n [!code-vb[System.IO.Compression.DeflateStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program3.vb#3)]\"\n  syntax:\n    content: public override int Read (byte[] array, int offset, int count);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: The array to store decompressed bytes.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> at which the read bytes will be placed.\n    - id: count\n      type: System.Int32\n      description: The maximum number of decompressed bytes to read.\n    return:\n      type: System.Int32\n      description: The number of bytes that were read into the byte array.\n  overload: System.IO.Compression.DeflateStream.Read*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.IO.Compression.CompressionMode\\\"></xref> value was `Compress` when the object was created.  \\n  \\n \\\\- or -  \\n  \\n The underlying stream does not support reading.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>count</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>array</code> length minus the index starting point is less than <code>count</code>.\"\n  - type: System.IO.InvalidDataException\n    commentId: T:System.IO.InvalidDataException\n    description: The data is in an invalid format.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: DeflateStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: DeflateStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: ''\n  overload: System.IO.Compression.DeflateStream.ReadAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: DeflateStream.Seek(Int64, SeekOrigin)\n  fullName: DeflateStream.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This operation is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: The location in the stream.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: One of the <xref href=\"System.IO.SeekOrigin\"></xref> values.\n    return:\n      type: System.Int64\n      description: A long value.\n  overload: System.IO.Compression.DeflateStream.Seek*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  commentId: M:System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: DeflateStream.SetLength(Int64)\n  fullName: DeflateStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: This operation is not supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The length of the stream.\n  overload: System.IO.Compression.DeflateStream.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This property is not supported on this stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: DeflateStream.Write(Byte[], Int32, Int32)\n  fullName: DeflateStream.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  - System\n  - netstandard\n  namespace: System.IO.Compression\n  summary: Writes compressed bytes to the underlying stream from the specified byte array.\n  remarks: ''\n  example:\n  - \"The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.DeflateStream.Read%2A> and <xref:System.IO.Compression.DeflateStream.Write%2A> methods.  \\n  \\n [!code-csharp[System.IO.Compression.DeflateStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.deflatestream/cs/program3.cs#3)]\\n [!code-vb[System.IO.Compression.DeflateStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.deflatestream/vb/program3.vb#3)]\"\n  syntax:\n    content: public override void Write (byte[] array, int offset, int count);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: The buffer that contains the data to compress.\n    - id: offset\n      type: System.Int32\n      description: The byte offset in <code>array</code> from which the bytes will be read.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to write.\n  overload: System.IO.Compression.DeflateStream.Write*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.DeflateStream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: DeflateStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: DeflateStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.IO.Compression.DeflateStream.WriteAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\nreferences:\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IO.InvalidDataException\n  parent: System.IO\n  isExternal: false\n  name: InvalidDataException\n  nameWithType: InvalidDataException\n  fullName: System.IO.InvalidDataException\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: DeflateStream(Stream, CompressionLevel)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionLevel)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionLevel)\n- uid: System.IO.Compression.CompressionLevel\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionLevel\n  nameWithType: CompressionLevel\n  fullName: System.IO.Compression.CompressionLevel\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: DeflateStream(Stream, CompressionMode)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionMode)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionMode)\n- uid: System.IO.Compression.CompressionMode\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionMode\n  nameWithType: CompressionMode\n  fullName: System.IO.Compression.CompressionMode\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: DeflateStream(Stream, CompressionLevel, Boolean)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionLevel, Boolean)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionLevel, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: DeflateStream(Stream, CompressionMode, Boolean)\n  nameWithType: DeflateStream.DeflateStream(Stream, CompressionMode, Boolean)\n  fullName: DeflateStream.DeflateStream(Stream, CompressionMode, Boolean)\n- uid: System.IO.Compression.DeflateStream.BaseStream\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: BaseStream\n  nameWithType: DeflateStream.BaseStream\n  fullName: DeflateStream.BaseStream\n- uid: System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: DeflateStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: DeflateStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: DeflateStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: DeflateStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Compression.DeflateStream.CanRead\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: CanRead\n  nameWithType: DeflateStream.CanRead\n  fullName: DeflateStream.CanRead\n- uid: System.IO.Compression.DeflateStream.CanSeek\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: DeflateStream.CanSeek\n  fullName: DeflateStream.CanSeek\n- uid: System.IO.Compression.DeflateStream.CanWrite\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: DeflateStream.CanWrite\n  fullName: DeflateStream.CanWrite\n- uid: System.IO.Compression.DeflateStream.Dispose(System.Boolean)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DeflateStream.Dispose(Boolean)\n  fullName: DeflateStream.Dispose(Boolean)\n- uid: System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: DeflateStream.EndRead(IAsyncResult)\n  fullName: DeflateStream.EndRead(IAsyncResult)\n- uid: System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: DeflateStream.EndWrite(IAsyncResult)\n  fullName: DeflateStream.EndWrite(IAsyncResult)\n- uid: System.IO.Compression.DeflateStream.Flush\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Flush()\n  nameWithType: DeflateStream.Flush()\n  fullName: DeflateStream.Flush()\n- uid: System.IO.Compression.DeflateStream.Length\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Length\n  nameWithType: DeflateStream.Length\n  fullName: DeflateStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Compression.DeflateStream.Position\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Position\n  nameWithType: DeflateStream.Position\n  fullName: DeflateStream.Position\n- uid: System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: DeflateStream.Read(Byte[], Int32, Int32)\n  fullName: DeflateStream.Read(Byte[], Int32, Int32)\n- uid: System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: DeflateStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: DeflateStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: DeflateStream.Seek(Int64, SeekOrigin)\n  fullName: DeflateStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.IO.Compression.DeflateStream.SetLength(System.Int64)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: DeflateStream.SetLength(Int64)\n  fullName: DeflateStream.SetLength(Int64)\n- uid: System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: DeflateStream.Write(Byte[], Int32, Int32)\n  fullName: DeflateStream.Write(Byte[], Int32, Int32)\n- uid: System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: DeflateStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: DeflateStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Compression.DeflateStream.#ctor*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: DeflateStream\n  nameWithType: DeflateStream.DeflateStream\n  fullName: DeflateStream.DeflateStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.BaseStream*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: BaseStream\n  nameWithType: DeflateStream.BaseStream\n  fullName: DeflateStream.BaseStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.BeginRead*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: BeginRead\n  nameWithType: DeflateStream.BeginRead\n  fullName: DeflateStream.BeginRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.BeginWrite*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: DeflateStream.BeginWrite\n  fullName: DeflateStream.BeginWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.CanRead*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: CanRead\n  nameWithType: DeflateStream.CanRead\n  fullName: DeflateStream.CanRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.CanSeek*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: DeflateStream.CanSeek\n  fullName: DeflateStream.CanSeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.CanWrite*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: DeflateStream.CanWrite\n  fullName: DeflateStream.CanWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Dispose*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Dispose\n  nameWithType: DeflateStream.Dispose\n  fullName: DeflateStream.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.EndRead*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: EndRead\n  nameWithType: DeflateStream.EndRead\n  fullName: DeflateStream.EndRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.EndWrite*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: DeflateStream.EndWrite\n  fullName: DeflateStream.EndWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Flush*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Flush\n  nameWithType: DeflateStream.Flush\n  fullName: DeflateStream.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Length*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Length\n  nameWithType: DeflateStream.Length\n  fullName: DeflateStream.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Position*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Position\n  nameWithType: DeflateStream.Position\n  fullName: DeflateStream.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Read*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Read\n  nameWithType: DeflateStream.Read\n  fullName: DeflateStream.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.ReadAsync*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: ReadAsync\n  nameWithType: DeflateStream.ReadAsync\n  fullName: DeflateStream.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Seek*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Seek\n  nameWithType: DeflateStream.Seek\n  fullName: DeflateStream.Seek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.SetLength*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: SetLength\n  nameWithType: DeflateStream.SetLength\n  fullName: DeflateStream.SetLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.Write*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: Write\n  nameWithType: DeflateStream.Write\n  fullName: DeflateStream.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.IO.Compression.DeflateStream.WriteAsync*\n  parent: System.IO.Compression.DeflateStream\n  isExternal: false\n  name: WriteAsync\n  nameWithType: DeflateStream.WriteAsync\n  fullName: DeflateStream.WriteAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Compression/DeflateStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: Stream.ReadByte()\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n"}