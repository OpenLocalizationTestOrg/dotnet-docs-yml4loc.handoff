### YamlMime:ManagedReference
items:
- uid: System.Data.EnumerableRowCollectionExtensions
  commentId: T:System.Data.EnumerableRowCollectionExtensions
  id: EnumerableRowCollectionExtensions
  children:
  - System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)
  - System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})
  langs:
  - csharp
  name: EnumerableRowCollectionExtensions
  nameWithType: EnumerableRowCollectionExtensions
  fullName: System.Data.EnumerableRowCollectionExtensions
  type: Class
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Contains the extension methods for the data row collection classes. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: "The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.  \n  \n This class cannot be inherited and cannot be instantiated."
  syntax:
    content: public static class EnumerableRowCollectionExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)
  commentId: M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)
  id: Cast``1(System.Data.EnumerableRowCollection)
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: Cast<TResult>(EnumerableRowCollection)
  nameWithType: EnumerableRowCollectionExtensions.Cast<TResult>(EnumerableRowCollection)
  fullName: EnumerableRowCollectionExtensions.Cast<TResult>(EnumerableRowCollection)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Converts the elements of an <xref href="System.Data.EnumerableRowCollection"></xref> to the specified type. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  syntax:
    content: public static System.Data.EnumerableRowCollection<TResult> Cast<TResult> (this System.Data.EnumerableRowCollection source);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection
      description: The <xref href="System.Data.EnumerableRowCollection"></xref> that contains the elements to be converted.
    typeParameters:
    - id: TResult
      description: The type to convert the elements of source to.
    return:
      type: System.Data.EnumerableRowCollection{TResult}
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> that contains each element of the source sequence converted to the specified type.
  overload: System.Data.EnumerableRowCollectionExtensions.Cast``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>source</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: An element in the sequence cannot be cast to type <code>TResult</code>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  id: OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in ascending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key.
  overload: System.Data.EnumerableRowCollectionExtensions.OrderBy``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in ascending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key and comparer.
  overload: System.Data.EnumerableRowCollectionExtensions.OrderBy``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  id: OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in descending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key.
  overload: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sorts the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in descending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key and comparer.
  overload: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  id: Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: Select<TRow,S>(EnumerableRowCollection<TRow>, Func<TRow,S>)
  nameWithType: EnumerableRowCollectionExtensions.Select<TRow,S>(EnumerableRowCollection<TRow>, Func<TRow,S>)
  fullName: EnumerableRowCollectionExtensions.Select<TRow,S>(EnumerableRowCollection<TRow>, Func<TRow,S>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Projects each element of an <xref href="System.Data.EnumerableRowCollection`1"></xref> into a new form. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: "This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].  \n  \n This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`. If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually."
  syntax:
    content: public static System.Data.EnumerableRowCollection<S> Select<TRow,S> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,S> selector);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection`1"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to invoke a transform function upon.
    - id: selector
      type: System.Func{TRow,S}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: S
      description: The type that <code>TRow</code> will be transformed into.
    return:
      type: System.Data.EnumerableRowCollection{S}
      description: An <xref href="System.Data.EnumerableRowCollection`1"></xref> whose elements are the result of invoking the transform function on each element of <code>source</code>.
  overload: System.Data.EnumerableRowCollectionExtensions.Select``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  id: ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Performs a secondary ordering of the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in ascending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: "The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.  \n  \n This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]."
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenBy<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key.
  overload: System.Data.EnumerableRowCollectionExtensions.ThenBy``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Performs a secondary ordering of the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in ascending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: "The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.  \n  \n This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]."
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenBy<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key and comparer.
  overload: System.Data.EnumerableRowCollectionExtensions.ThenBy``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  id: ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Performs a secondary ordering of the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in descending order according to the specified key. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: "The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.  \n  \n This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]."
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenByDescending<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key.
  overload: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Performs a secondary ordering of the rows of a <xref href="System.Data.EnumerableRowCollection"></xref> in descending order according to the specified key and comparer. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: "The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.  \n  \n This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]."
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenByDescending<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to be ordered.
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: A function to extract a key from an element.
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: An <xref href="System.Collections.Generic.IComparer`1"></xref> to compare keys.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    - id: TKey
      description: The type of the key returned by <code>keySelector</code>.
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> whose elements are sorted by the specified key and comparer.
  overload: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})
  id: Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: Where<TRow>(EnumerableRowCollection<TRow>, Func<TRow,Boolean>)
  nameWithType: EnumerableRowCollectionExtensions.Where<TRow>(EnumerableRowCollection<TRow>, Func<TRow,Boolean>)
  fullName: EnumerableRowCollectionExtensions.Where<TRow>(EnumerableRowCollection<TRow>, Func<TRow,Boolean>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Filters a sequence of rows based on the specified predicate. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: This method is implemented by using deferred execution. The immediate return value is an object that stores all the information that is required to perform the action. The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in [!INCLUDE[csprcs](~/includes/csprcs-md.md)] or `For Each` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].
  syntax:
    content: public static System.Data.EnumerableRowCollection<TRow> Where<TRow> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,bool> predicate);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.EnumerableRowCollection"></xref> containing the <xref href="System.Data.DataRow"></xref> elements to filter.
    - id: predicate
      type: System.Func{TRow,System.Boolean}
      description: A function to test each element for a condition.
    typeParameters:
    - id: TRow
      description: The type of the row elements in <code>source</code>, typically <xref href="System.Data.DataRow"></xref>.
    return:
      type: System.Data.EnumerableRowCollection`1
      description: An <xref href="System.Data.OrderedEnumerableRowCollection`1"></xref> that contains rows from the input sequence that satisfy the condition.
  overload: System.Data.EnumerableRowCollectionExtensions.Where``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Cast<TResult>(EnumerableRowCollection)
  nameWithType: EnumerableRowCollectionExtensions.Cast<TResult>(EnumerableRowCollection)
  fullName: EnumerableRowCollectionExtensions.Cast<TResult>(EnumerableRowCollection)
- uid: System.Data.EnumerableRowCollection`1
  name: EnumerableRowCollection<TRow>
  nameWithType: EnumerableRowCollection<TRow>
  fullName: System.Data.EnumerableRowCollection<TRow>
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Data.EnumerableRowCollection{TResult}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<TResult>
  nameWithType: EnumerableRowCollection<TResult>
  fullName: System.Data.EnumerableRowCollection<TResult>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: System.Data.EnumerableRowCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollection
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection
  nameWithType: EnumerableRowCollection
  fullName: System.Data.EnumerableRowCollection
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
- uid: System.Data.OrderedEnumerableRowCollection`1
  parent: System.Data
  isExternal: false
  name: OrderedEnumerableRowCollection<TRow>
  nameWithType: OrderedEnumerableRowCollection<TRow>
  fullName: System.Data.OrderedEnumerableRowCollection<TRow>
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: TRow
  name: TRow
  nameWithType: TRow
  fullName: TRow
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Func{TRow,TKey}
  parent: System
  isExternal: false
  name: Func<TRow,TKey>
  nameWithType: Func<TRow,TKey>
  fullName: System.Func<TRow,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
- uid: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
- uid: System.Collections.Generic.IComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>(EnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Select<TRow,S>(EnumerableRowCollection<TRow>, Func<TRow,S>)
  nameWithType: EnumerableRowCollectionExtensions.Select<TRow,S>(EnumerableRowCollection<TRow>, Func<TRow,S>)
  fullName: EnumerableRowCollectionExtensions.Select<TRow,S>(EnumerableRowCollection<TRow>, Func<TRow,S>)
- uid: S
  name: S
  nameWithType: S
  fullName: S
- uid: System.Data.EnumerableRowCollection{S}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<S>
  nameWithType: EnumerableRowCollection<S>
  fullName: System.Data.EnumerableRowCollection<S>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: System.Data.EnumerableRowCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: S
    name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TRow,S}
  parent: System
  isExternal: false
  name: Func<TRow,S>
  nameWithType: Func<TRow,S>
  fullName: System.Func<TRow,S>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: S
    name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
  fullName: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>(OrderedEnumerableRowCollection<TRow>, Func<TRow,TKey>, IComparer<TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Where<TRow>(EnumerableRowCollection<TRow>, Func<TRow,Boolean>)
  nameWithType: EnumerableRowCollectionExtensions.Where<TRow>(EnumerableRowCollection<TRow>, Func<TRow,Boolean>)
  fullName: EnumerableRowCollectionExtensions.Where<TRow>(EnumerableRowCollection<TRow>, Func<TRow,Boolean>)
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{TRow,System.Boolean}
  parent: System
  isExternal: false
  name: Func<TRow,Boolean>
  nameWithType: Func<TRow,Boolean>
  fullName: System.Func<TRow,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Cast<TResult>
  nameWithType: EnumerableRowCollectionExtensions.Cast<TResult>
  fullName: EnumerableRowCollectionExtensions.Cast<TResult>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>
  fullName: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>
  fullName: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Data.EnumerableRowCollectionExtensions.Select``2*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Select<TRow,S>
  nameWithType: EnumerableRowCollectionExtensions.Select<TRow,S>
  fullName: EnumerableRowCollectionExtensions.Select<TRow,S>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenBy<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>
  fullName: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenByDescending<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>
  fullName: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Data.EnumerableRowCollectionExtensions.Where``1*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Where<TRow>
  nameWithType: EnumerableRowCollectionExtensions.Where<TRow>
  fullName: EnumerableRowCollectionExtensions.Where<TRow>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/EnumerableRowCollectionExtensions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
