{"nodes":[{"content":"Indicates that the implementer wants to be a lifetime lease sponsor.","nodes":[{"pos":[0,68],"content":"Indicates that the implementer wants to be a lifetime lease sponsor.","nodes":[{"content":"Indicates that the implementer wants to be a lifetime lease sponsor.","pos":[0,68]}]}],"pos":[482,551],"yaml":true},{"content":"An object must implement the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface if it needs to request a lease renewal for a particular object. An object that implements the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface can become a sponsor by registering itself with the lease manager. The <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface is used by the lifetime service to call back to the sponsor.","nodes":[{"pos":[0,431],"content":"An object must implement the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface if it needs to request a lease renewal for a particular object. An object that implements the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface can become a sponsor by registering itself with the lease manager. The <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface is used by the lifetime service to call back to the sponsor.","nodes":[{"content":"An object must implement the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface if it needs to request a lease renewal for a particular object. An object that implements the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface can become a sponsor by registering itself with the lease manager. The <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface is used by the lifetime service to call back to the sponsor.","pos":[0,431],"nodes":[{"content":"An object must implement the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.ISponsor&gt;</ph> interface if it needs to request a lease renewal for a particular object.","pos":[0,151],"source":"An object must implement the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface if it needs to request a lease renewal for a particular object."},{"content":"An object that implements the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.ISponsor&gt;</ph> interface can become a sponsor by registering itself with the lease manager.","pos":[152,307],"source":" An object that implements the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface can become a sponsor by registering itself with the lease manager."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.ISponsor&gt;</ph> interface is used by the lifetime service to call back to the sponsor.","pos":[308,431],"source":" The <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface is used by the lifetime service to call back to the sponsor."}]}]}],"pos":[562,994],"yaml":true,"extradata":"MT"},{"content":"Requests a sponsoring client to renew the lease for the specified object.","nodes":[{"pos":[0,73],"content":"Requests a sponsoring client to renew the lease for the specified object.","nodes":[{"content":"Requests a sponsoring client to renew the lease for the specified object.","pos":[0,73]}]}],"pos":[2860,2934],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Lifetime.ISponsor.Renewal%2A> method is called by the distributed garbage collector to renew the lease for the specified object.","nodes":[{"pos":[0,162],"content":"The <xref:System.Runtime.Remoting.Lifetime.ISponsor.Renewal%2A> method is called by the distributed garbage collector to renew the lease for the specified object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Lifetime.ISponsor.Renewal%2A&gt;</ph> method is called by the distributed garbage collector to renew the lease for the specified object.","pos":[0,162],"source":"The <xref:System.Runtime.Remoting.Lifetime.ISponsor.Renewal%2A> method is called by the distributed garbage collector to renew the lease for the specified object."}]}],"pos":[2945,3108],"yaml":true,"extradata":"MT"},{"content":"The lifetime lease of the object that requires lease renewal.","nodes":[{"pos":[0,61],"content":"The lifetime lease of the object that requires lease renewal.","nodes":[{"content":"The lifetime lease of the object that requires lease renewal.","pos":[0,61]}]}],"pos":[3702,3764],"yaml":true},{"content":"The additional lease time for the specified object.","nodes":[{"pos":[0,51],"content":"The additional lease time for the specified object.","nodes":[{"content":"The additional lease time for the specified object.","pos":[0,51]}]}],"pos":[3823,3875],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[4064,4182],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Lifetime.ISponsor\n  commentId: T:System.Runtime.Remoting.Lifetime.ISponsor\n  id: ISponsor\n  children:\n  - System.Runtime.Remoting.Lifetime.ISponsor.Renewal(System.Runtime.Remoting.Lifetime.ILease)\n  langs:\n  - csharp\n  name: ISponsor\n  nameWithType: ISponsor\n  fullName: System.Runtime.Remoting.Lifetime.ISponsor\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: Indicates that the implementer wants to be a lifetime lease sponsor.\n  remarks: An object must implement the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface if it needs to request a lease renewal for a particular object. An object that implements the <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface can become a sponsor by registering itself with the lease manager. The <xref:System.Runtime.Remoting.Lifetime.ISponsor> interface is used by the lifetime service to call back to the sponsor.\n  example:\n  - >-\n    [!code-cpp[ISponsor_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ISponsor_Client/CPP/isponsor_client.cpp#2)]\n     [!code-csharp[ISponsor_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ISponsor_Client/CS/isponsor_client.cs#2)]\n     [!code-vb[ISponsor_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISponsor_Client/VB/isponsor_client.vb#2)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISponsor\n  derivedClasses:\n  - System.AddIn.Pipeline.ContractBase\n  - System.Runtime.Remoting.Lifetime.ClientSponsor\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/ISponsor.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Lifetime.ISponsor.Renewal(System.Runtime.Remoting.Lifetime.ILease)\n  commentId: M:System.Runtime.Remoting.Lifetime.ISponsor.Renewal(System.Runtime.Remoting.Lifetime.ILease)\n  id: Renewal(System.Runtime.Remoting.Lifetime.ILease)\n  parent: System.Runtime.Remoting.Lifetime.ISponsor\n  langs:\n  - csharp\n  name: Renewal(ILease)\n  nameWithType: ISponsor.Renewal(ILease)\n  fullName: ISponsor.Renewal(ILease)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  summary: Requests a sponsoring client to renew the lease for the specified object.\n  remarks: The <xref:System.Runtime.Remoting.Lifetime.ISponsor.Renewal%2A> method is called by the distributed garbage collector to renew the lease for the specified object.\n  example:\n  - >-\n    [!code-cpp[ISponsor_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ISponsor_Client/CPP/isponsor_client.cpp#2)]\n     [!code-csharp[ISponsor_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ISponsor_Client/CS/isponsor_client.cs#2)]\n     [!code-vb[ISponsor_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISponsor_Client/VB/isponsor_client.vb#2)]\n  syntax:\n    content: public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);\n    parameters:\n    - id: lease\n      type: System.Runtime.Remoting.Lifetime.ILease\n      description: The lifetime lease of the object that requires lease renewal.\n    return:\n      type: System.TimeSpan\n      description: The additional lease time for the specified object.\n  overload: System.Runtime.Remoting.Lifetime.ISponsor.Renewal*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/ISponsor.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Lifetime.ISponsor.Renewal(System.Runtime.Remoting.Lifetime.ILease)\n  parent: System.Runtime.Remoting.Lifetime.ISponsor\n  isExternal: false\n  name: Renewal(ILease)\n  nameWithType: ISponsor.Renewal(ILease)\n  fullName: ISponsor.Renewal(ILease)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease\n  parent: System.Runtime.Remoting.Lifetime\n  isExternal: false\n  name: ILease\n  nameWithType: ILease\n  fullName: System.Runtime.Remoting.Lifetime.ILease\n- uid: System.Runtime.Remoting.Lifetime.ISponsor.Renewal*\n  parent: System.Runtime.Remoting.Lifetime.ISponsor\n  isExternal: false\n  name: Renewal\n  nameWithType: ISponsor.Renewal\n  fullName: ISponsor.Renewal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/ISponsor.xml\n"}