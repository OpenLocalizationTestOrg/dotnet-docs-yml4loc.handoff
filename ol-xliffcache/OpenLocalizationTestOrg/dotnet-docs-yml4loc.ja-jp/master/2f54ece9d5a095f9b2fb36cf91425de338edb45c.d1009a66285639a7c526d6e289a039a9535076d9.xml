{"nodes":[{"content":"Represents a network endpoint as an IP address and a port number.","nodes":[{"pos":[0,65],"content":"Represents a network endpoint as an IP address and a port number.","nodes":[{"content":"Represents a network endpoint as an IP address and a port number.","pos":[0,65]}]}],"pos":[862,928],"yaml":true},{"content":"The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host. By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.","nodes":[{"pos":[0,296],"content":"The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host. By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.","nodes":[{"content":"The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host. By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.","pos":[0,296],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.IPEndPoint&gt;</ph> class contains the host and local or remote port information needed by an application to connect to a service on a host.","pos":[0,153],"source":"The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host."},{"content":"By combining the host's IP address and port number of a service, the <ph id=\"ph1\">&lt;xref:System.Net.IPEndPoint&gt;</ph> class forms a connection point to a service.","pos":[154,296],"source":" By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service."}]}]}],"pos":[939,1236],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.IPEndPoint\"></xref> class with the specified address and port number.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> class with the specified address and port number.","source":"Initializes a new instance of the <xref href=\"System.Net.IPEndPoint\"></xref> class with the specified address and port number."}],"pos":[3316,3443],"yaml":true},{"content":"The IP address of the Internet host.","nodes":[{"pos":[0,36],"content":"The IP address of the Internet host.","nodes":[{"content":"The IP address of the Internet host.","pos":[0,36]}]}],"pos":[4159,4196],"yaml":true},{"content":"The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"pos":[0,129],"content":"The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"content":"The port number associated with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">address</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or 0 to specify any available port.","pos":[0,93],"source":"The port number associated with the <code>address</code>, or 0 to specify any available port."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">port</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in host order.","pos":[94,129],"source":"<code>port</code> is in host order."}]}],"pos":[4255,4385],"yaml":true},{"content":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>.  \n  \n -or-  \n  \n <code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>.  \n  \n -or-  \n  \n <code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MinPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>."},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,185],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MaxPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,274],"content":"<code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.","nodes":[{"content":"is less than 0 or greater than 0x00000000FFFFFFFF.","pos":[21,71]}]}],"pos":[4554,4843],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.IPEndPoint\"></xref> class with the specified address and port number.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> class with the specified address and port number.","source":"Initializes a new instance of the <xref href=\"System.Net.IPEndPoint\"></xref> class with the specified address and port number."}],"pos":[6201,6328],"yaml":true},{"content":"An <xref href=\"System.Net.IPAddress\"></xref>.","nodes":[{"pos":[0,45],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Net.IPAddress\"></xref>."}],"pos":[6927,6973],"yaml":true},{"content":"The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"pos":[0,129],"content":"The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.","nodes":[{"content":"The port number associated with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">address</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or 0 to specify any available port.","pos":[0,93],"source":"The port number associated with the <code>address</code>, or 0 to specify any available port."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">port</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in host order.","pos":[94,129],"source":"<code>port</code> is in host order."}]}],"pos":[7032,7162],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[7319,7351],"yaml":true},{"content":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>.  \n  \n -or-  \n  \n <code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>.  \n  \n -or-  \n  \n <code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MinPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref>."},{"pos":[89,93],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[100,185],"content":"<ph id=\"ph1\">&lt;code&gt;port&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MaxPort\"&gt;&lt;/xref&gt;</ph>.","source":"<code>port</code> is greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,274],"content":"<code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.","nodes":[{"content":"is less than 0 or greater than 0x00000000FFFFFFFF.","pos":[21,71]}]}],"pos":[7465,7754],"yaml":true},{"content":"Gets or sets the IP address of the endpoint.","nodes":[{"pos":[0,44],"content":"Gets or sets the IP address of the endpoint.","nodes":[{"content":"Gets or sets the IP address of the endpoint.","pos":[0,44]}]}],"pos":[8945,8990],"yaml":true},{"content":"An <xref href=\"System.Net.IPAddress\"></xref> instance containing the IP address of the endpoint.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph> instance containing the IP address of the endpoint.","source":"An <xref href=\"System.Net.IPAddress\"></xref> instance containing the IP address of the endpoint."}],"pos":[9683,9780],"yaml":true},{"content":"Gets the Internet Protocol (IP) address family.","nodes":[{"pos":[0,47],"content":"Gets the Internet Protocol (IP) address family.","nodes":[{"content":"Gets the Internet Protocol (IP) address family.","pos":[0,47]}]}],"pos":[11067,11115],"yaml":true},{"content":"Returns <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\"></xref>.","nodes":[{"pos":[0,75],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\"></xref>."}],"pos":[12020,12096],"yaml":true},{"content":"Creates an endpoint from a socket address.","nodes":[{"pos":[0,42],"content":"Creates an endpoint from a socket address.","nodes":[{"content":"Creates an endpoint from a socket address.","pos":[0,42]}]}],"pos":[13468,13511],"yaml":true},{"content":"The <xref href=\"System.Net.SocketAddress\"></xref> to use for the endpoint.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.SocketAddress\"&gt;&lt;/xref&gt;</ph> to use for the endpoint.","source":"The <xref href=\"System.Net.SocketAddress\"></xref> to use for the endpoint."}],"pos":[14258,14333],"yaml":true},{"content":"An <xref href=\"System.Net.EndPoint\"></xref> instance using the specified socket address.","nodes":[{"pos":[0,88],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.EndPoint\"&gt;&lt;/xref&gt;</ph> instance using the specified socket address.","source":"An <xref href=\"System.Net.EndPoint\"></xref> instance using the specified socket address."}],"pos":[14396,14485],"yaml":true},{"content":"The AddressFamily of <code>socketAddress</code> is not equal to the AddressFamily of the current instance.  \n  \n -or-  \n  \n <code>socketAddress</code>.Size < 8.","nodes":[{"pos":[0,106],"content":"The AddressFamily of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socketAddress</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not equal to the AddressFamily of the current instance.","source":"The AddressFamily of <code>socketAddress</code> is not equal to the AddressFamily of the current instance."},{"pos":[113,117],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[124,160],"content":"<ph id=\"ph1\">&lt;code&gt;socketAddress&lt;/code&gt;</ph>.Size &lt; 8.","source":"<code>socketAddress</code>.Size < 8."}],"pos":[14635,14802],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,127],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>."}],"pos":[16054,16182],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>."}],"pos":[16334,16437],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`."}],"pos":[16495,16636],"yaml":true},{"content":"Returns a hash value for a <xref href=\"System.Net.IPEndPoint\"></xref> instance.","nodes":[{"pos":[0,79],"content":"Returns a hash value for a <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a hash value for a <xref href=\"System.Net.IPEndPoint\"></xref> instance."}],"pos":[17914,17994],"yaml":true},{"content":"The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance. This value can be used as a key in hash tables.","nodes":[{"pos":[0,151],"content":"The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance. This value can be used as a key in hash tables.","nodes":[{"content":"The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance. This value can be used as a key in hash tables.","pos":[0,151],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.IPEndPoint.GetHashCode%2A&gt;</ph> method returns a hash code of the IP endpoint instance.","pos":[0,103],"source":"The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance."},{"content":"This value can be used as a key in hash tables.","pos":[104,151]}]}]}],"pos":[18005,18157],"yaml":true,"extradata":"MT"},{"content":"An integer hash value.","nodes":[{"pos":[0,22],"content":"An integer hash value.","nodes":[{"content":"An integer hash value.","pos":[0,22]}]}],"pos":[18291,18314],"yaml":true},{"content":"Specifies the maximum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.","nodes":[{"pos":[0,178],"content":"Specifies the maximum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.","nodes":[{"content":"Specifies the maximum value that can be assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint.Port\"&gt;&lt;/xref&gt;</ph> property.","pos":[0,113],"source":"Specifies the maximum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property."},{"content":"The MaxPort value is set to 0x0000FFFF.","pos":[114,153]},{"content":"This field is read-only.","pos":[154,178]}]}],"pos":[19566,19745],"yaml":true},{"content":"Specifies the minimum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property. This field is read-only.","nodes":[{"pos":[0,138],"content":"Specifies the minimum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property. This field is read-only.","nodes":[{"content":"Specifies the minimum value that can be assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint.Port\"&gt;&lt;/xref&gt;</ph> property.","pos":[0,113],"source":"Specifies the minimum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property."},{"content":"This field is read-only.","pos":[114,138]}]}],"pos":[21705,21844],"yaml":true},{"content":"Gets or sets the port number of the endpoint.","nodes":[{"pos":[0,45],"content":"Gets or sets the port number of the endpoint.","nodes":[{"content":"Gets or sets the port number of the endpoint.","pos":[0,45]}]}],"pos":[23785,23831],"yaml":true},{"content":"An integer value in the range <xref href=\"System.Net.IPEndPoint.MinPort\"></xref> to <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref> indicating the port number of the endpoint.","nodes":[{"pos":[0,178],"content":"An integer value in the range <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint.MinPort\"&gt;&lt;/xref&gt;</ph> to <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MaxPort\"&gt;&lt;/xref&gt;</ph> indicating the port number of the endpoint.","source":"An integer value in the range <xref href=\"System.Net.IPEndPoint.MinPort\"></xref> to <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref> indicating the port number of the endpoint."}],"pos":[24502,24681],"yaml":true},{"content":"The value that was specified for a set operation is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref> or greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>.","nodes":[{"pos":[0,180],"content":"The value that was specified for a set operation is less than <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint.MinPort\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Net.IPEndPoint.MaxPort\"&gt;&lt;/xref&gt;</ph>.","source":"The value that was specified for a set operation is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref> or greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>."}],"pos":[24849,25030],"yaml":true},{"content":"Serializes endpoint information into a <xref href=\"System.Net.SocketAddress\"></xref> instance.","nodes":[{"pos":[0,94],"content":"Serializes endpoint information into a <ph id=\"ph1\">&lt;xref href=\"System.Net.SocketAddress\"&gt;&lt;/xref&gt;</ph> instance.","source":"Serializes endpoint information into a <xref href=\"System.Net.SocketAddress\"></xref> instance."}],"pos":[26237,26332],"yaml":true},{"content":"A <xref href=\"System.Net.SocketAddress\"></xref> instance containing the socket address for the endpoint.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.SocketAddress\"&gt;&lt;/xref&gt;</ph> instance containing the socket address for the endpoint.","source":"A <xref href=\"System.Net.SocketAddress\"></xref> instance containing the socket address for the endpoint."}],"pos":[27087,27192],"yaml":true},{"content":"Returns the IP address and port number of the specified endpoint.","nodes":[{"pos":[0,65],"content":"Returns the IP address and port number of the specified endpoint.","nodes":[{"content":"Returns the IP address and port number of the specified endpoint.","pos":[0,65]}]}],"pos":[28455,28521],"yaml":true},{"content":"A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).","nodes":[{"pos":[0,111],"content":"A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).","nodes":[{"content":"A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).","pos":[0,111]}]}],"pos":[29218,29330],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.IPEndPoint\n  commentId: T:System.Net.IPEndPoint\n  id: IPEndPoint\n  children:\n  - System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)\n  - System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)\n  - System.Net.IPEndPoint.Address\n  - System.Net.IPEndPoint.AddressFamily\n  - System.Net.IPEndPoint.Create(System.Net.SocketAddress)\n  - System.Net.IPEndPoint.Equals(System.Object)\n  - System.Net.IPEndPoint.GetHashCode\n  - System.Net.IPEndPoint.MaxPort\n  - System.Net.IPEndPoint.MinPort\n  - System.Net.IPEndPoint.Port\n  - System.Net.IPEndPoint.Serialize\n  - System.Net.IPEndPoint.ToString\n  langs:\n  - csharp\n  name: IPEndPoint\n  nameWithType: IPEndPoint\n  fullName: System.Net.IPEndPoint\n  type: Class\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Represents a network endpoint as an IP address and a port number.\n  remarks: The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host. By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.\n  example:\n  - >-\n    [!code-cpp[System.Net.IPEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#1)]\n     [!code-csharp[System.Net.IPEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#1)]\n     [!code-vb[System.Net.IPEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#1)]\n  syntax:\n    content: 'public class IPEndPoint : System.Net.EndPoint'\n  inheritance:\n  - System.Object\n  - System.Net.EndPoint\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)\n  commentId: M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)\n  id: '#ctor(System.Int64,System.Int32)'\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: IPEndPoint(Int64, Int32)\n  nameWithType: IPEndPoint.IPEndPoint(Int64, Int32)\n  fullName: IPEndPoint.IPEndPoint(Int64, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Initializes a new instance of the <xref href=\"System.Net.IPEndPoint\"></xref> class with the specified address and port number.\n  remarks: ''\n  example:\n  - \"The following example uses the specified IP address and port number to create an <xref:System.Net.IPEndPoint>.  \\n  \\n [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]\\n [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]\\n [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]\"\n  syntax:\n    content: public IPEndPoint (long address, int port);\n    parameters:\n    - id: address\n      type: System.Int64\n      description: The IP address of the Internet host.\n    - id: port\n      type: System.Int32\n      description: The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.\n  overload: System.Net.IPEndPoint.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>port</code> is less than <xref href=\\\"System.Net.IPEndPoint.MinPort\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>port</code> is greater than <xref href=\\\"System.Net.IPEndPoint.MaxPort\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)\n  commentId: M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)\n  id: '#ctor(System.Net.IPAddress,System.Int32)'\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: IPEndPoint(IPAddress, Int32)\n  nameWithType: IPEndPoint.IPEndPoint(IPAddress, Int32)\n  fullName: IPEndPoint.IPEndPoint(IPAddress, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Initializes a new instance of the <xref href=\"System.Net.IPEndPoint\"></xref> class with the specified address and port number.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Net.IPEndPoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#2)]\n     [!code-csharp[System.Net.IPEndPoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#2)]\n     [!code-vb[System.Net.IPEndPoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#2)]\n  syntax:\n    content: public IPEndPoint (System.Net.IPAddress address, int port);\n    parameters:\n    - id: address\n      type: System.Net.IPAddress\n      description: An <xref href=\"System.Net.IPAddress\"></xref>.\n    - id: port\n      type: System.Int32\n      description: The port number associated with the <code>address</code>, or 0 to specify any available port. <code>port</code> is in host order.\n  overload: System.Net.IPEndPoint.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>port</code> is less than <xref href=\\\"System.Net.IPEndPoint.MinPort\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>port</code> is greater than <xref href=\\\"System.Net.IPEndPoint.MaxPort\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>address</code> is less than 0 or greater than 0x00000000FFFFFFFF.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.Address\n  commentId: P:System.Net.IPEndPoint.Address\n  id: Address\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: Address\n  nameWithType: IPEndPoint.Address\n  fullName: IPEndPoint.Address\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets or sets the IP address of the endpoint.\n  remarks: ''\n  example:\n  - \"The following example sets the <xref:System.Net.IPEndPoint.Address%2A> property using the <xref:System.Net.IPAddress> specified.  \\n  \\n [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]\\n [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]\\n [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]\"\n  syntax:\n    content: public System.Net.IPAddress Address { get; set; }\n    return:\n      type: System.Net.IPAddress\n      description: An <xref href=\"System.Net.IPAddress\"></xref> instance containing the IP address of the endpoint.\n  overload: System.Net.IPEndPoint.Address*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.AddressFamily\n  commentId: P:System.Net.IPEndPoint.AddressFamily\n  id: AddressFamily\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: AddressFamily\n  nameWithType: IPEndPoint.AddressFamily\n  fullName: IPEndPoint.AddressFamily\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets the Internet Protocol (IP) address family.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Net.IPEndPoint.AddressFamily%2A> property to return the <xref:System.Net.Sockets.AddressFamily> to which the <xref:System.Net.IPEndPoint> belongs. In this case it is the <xref:System.Net.Sockets.AddressFamily.InterNetwork><xref:System.Net.Sockets.AddressFamily>.  \\n  \\n [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]\\n [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]\\n [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]\"\n  syntax:\n    content: public override System.Net.Sockets.AddressFamily AddressFamily { get; }\n    return:\n      type: System.Net.Sockets.AddressFamily\n      description: Returns <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\"></xref>.\n  overload: System.Net.IPEndPoint.AddressFamily*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.Create(System.Net.SocketAddress)\n  commentId: M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)\n  id: Create(System.Net.SocketAddress)\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: Create(SocketAddress)\n  nameWithType: IPEndPoint.Create(SocketAddress)\n  fullName: IPEndPoint.Create(SocketAddress)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Creates an endpoint from a socket address.\n  remarks: ''\n  example:\n  - \"The following example uses the specified <xref:System.Net.SocketAddress> to create an <xref:System.Net.IPEndPoint>.  \\n  \\n [!code-cpp[System.Net.IPEndPoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#5)]\\n [!code-csharp[System.Net.IPEndPoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#5)]\\n [!code-vb[System.Net.IPEndPoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#5)]\"\n  syntax:\n    content: public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);\n    parameters:\n    - id: socketAddress\n      type: System.Net.SocketAddress\n      description: The <xref href=\"System.Net.SocketAddress\"></xref> to use for the endpoint.\n    return:\n      type: System.Net.EndPoint\n      description: An <xref href=\"System.Net.EndPoint\"></xref> instance using the specified socket address.\n  overload: System.Net.IPEndPoint.Create*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The AddressFamily of <code>socketAddress</code> is not equal to the AddressFamily of the current instance.  \\n  \\n -or-  \\n  \\n <code>socketAddress</code>.Size < 8.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.Equals(System.Object)\n  commentId: M:System.Net.IPEndPoint.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: IPEndPoint.Equals(Object)\n  fullName: IPEndPoint.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public override bool Equals (object comparand);\n    parameters:\n    - id: comparand\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`.'\n  overload: System.Net.IPEndPoint.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.GetHashCode\n  commentId: M:System.Net.IPEndPoint.GetHashCode\n  id: GetHashCode\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: IPEndPoint.GetHashCode()\n  fullName: IPEndPoint.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns a hash value for a <xref href=\"System.Net.IPEndPoint\"></xref> instance.\n  remarks: The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance. This value can be used as a key in hash tables.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer hash value.\n  overload: System.Net.IPEndPoint.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.MaxPort\n  commentId: F:System.Net.IPEndPoint.MaxPort\n  id: MaxPort\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: MaxPort\n  nameWithType: IPEndPoint.MaxPort\n  fullName: IPEndPoint.MaxPort\n  type: Field\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Specifies the maximum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Net.IPEndPoint.MaxPort> property to print the maximum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.  \\n  \\n [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]\\n [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]\\n [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]\"\n  syntax:\n    content: public const int MaxPort = 65535;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.MinPort\n  commentId: F:System.Net.IPEndPoint.MinPort\n  id: MinPort\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: MinPort\n  nameWithType: IPEndPoint.MinPort\n  fullName: IPEndPoint.MinPort\n  type: Field\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Specifies the minimum value that can be assigned to the <xref href=\"System.Net.IPEndPoint.Port\"></xref> property. This field is read-only.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Net.IPEndPoint.MinPort> property to print the minimum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.  \\n  \\n [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]\\n [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]\\n [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]\"\n  syntax:\n    content: public const int MinPort = 0;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.Port\n  commentId: P:System.Net.IPEndPoint.Port\n  id: Port\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: Port\n  nameWithType: IPEndPoint.Port\n  fullName: IPEndPoint.Port\n  type: Property\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Gets or sets the port number of the endpoint.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Net.IPEndPoint.Port%2A> property to set TCP port number of the <xref:System.Net.EndPoint>.  \\n  \\n [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]\\n [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]\\n [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]\"\n  syntax:\n    content: public int Port { get; set; }\n    return:\n      type: System.Int32\n      description: An integer value in the range <xref href=\"System.Net.IPEndPoint.MinPort\"></xref> to <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref> indicating the port number of the endpoint.\n  overload: System.Net.IPEndPoint.Port*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value that was specified for a set operation is less than <xref href=\"System.Net.IPEndPoint.MinPort\"></xref> or greater than <xref href=\"System.Net.IPEndPoint.MaxPort\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.Serialize\n  commentId: M:System.Net.IPEndPoint.Serialize\n  id: Serialize\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: Serialize()\n  nameWithType: IPEndPoint.Serialize()\n  fullName: IPEndPoint.Serialize()\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Serializes endpoint information into a <xref href=\"System.Net.SocketAddress\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Net.IPEndPoint.Serialize%2A> method to serialize endpoint information into a <xref:System.Net.SocketAddress> instance.  \\n  \\n [!code-cpp[System.Net.IPEndPoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#4)]\\n [!code-csharp[System.Net.IPEndPoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#4)]\\n [!code-vb[System.Net.IPEndPoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#4)]\"\n  syntax:\n    content: public override System.Net.SocketAddress Serialize ();\n    parameters: []\n    return:\n      type: System.Net.SocketAddress\n      description: A <xref href=\"System.Net.SocketAddress\"></xref> instance containing the socket address for the endpoint.\n  overload: System.Net.IPEndPoint.Serialize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.IPEndPoint.ToString\n  commentId: M:System.Net.IPEndPoint.ToString\n  id: ToString\n  parent: System.Net.IPEndPoint\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: IPEndPoint.ToString()\n  fullName: IPEndPoint.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Returns the IP address and port number of the specified endpoint.\n  remarks: ''\n  example:\n  - \"The following example returns a string representation of the IP address and port number of the specified <xref:System.Net.IPEndPoint>.  \\n  \\n [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]\\n [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]\\n [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).\n  overload: System.Net.IPEndPoint.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.EndPoint\n  parent: System.Net\n  isExternal: false\n  name: EndPoint\n  nameWithType: EndPoint\n  fullName: System.Net.EndPoint\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: IPEndPoint(Int64, Int32)\n  nameWithType: IPEndPoint.IPEndPoint(Int64, Int32)\n  fullName: IPEndPoint.IPEndPoint(Int64, Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: IPEndPoint(IPAddress, Int32)\n  nameWithType: IPEndPoint.IPEndPoint(IPAddress, Int32)\n  fullName: IPEndPoint.IPEndPoint(IPAddress, Int32)\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Net.IPEndPoint.Address\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Address\n  nameWithType: IPEndPoint.Address\n  fullName: IPEndPoint.Address\n- uid: System.Net.IPEndPoint.AddressFamily\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: AddressFamily\n  nameWithType: IPEndPoint.AddressFamily\n  fullName: IPEndPoint.AddressFamily\n- uid: System.Net.Sockets.AddressFamily\n  parent: System.Net.Sockets\n  isExternal: false\n  name: AddressFamily\n  nameWithType: AddressFamily\n  fullName: System.Net.Sockets.AddressFamily\n- uid: System.Net.IPEndPoint.Create(System.Net.SocketAddress)\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Create(SocketAddress)\n  nameWithType: IPEndPoint.Create(SocketAddress)\n  fullName: IPEndPoint.Create(SocketAddress)\n- uid: System.Net.SocketAddress\n  parent: System.Net\n  isExternal: false\n  name: SocketAddress\n  nameWithType: SocketAddress\n  fullName: System.Net.SocketAddress\n- uid: System.Net.IPEndPoint.Equals(System.Object)\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: IPEndPoint.Equals(Object)\n  fullName: IPEndPoint.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.IPEndPoint.GetHashCode\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: IPEndPoint.GetHashCode()\n  fullName: IPEndPoint.GetHashCode()\n- uid: System.Net.IPEndPoint.MaxPort\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: MaxPort\n  nameWithType: IPEndPoint.MaxPort\n  fullName: IPEndPoint.MaxPort\n- uid: System.Net.IPEndPoint.MinPort\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: MinPort\n  nameWithType: IPEndPoint.MinPort\n  fullName: IPEndPoint.MinPort\n- uid: System.Net.IPEndPoint.Port\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Port\n  nameWithType: IPEndPoint.Port\n  fullName: IPEndPoint.Port\n- uid: System.Net.IPEndPoint.Serialize\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Serialize()\n  nameWithType: IPEndPoint.Serialize()\n  fullName: IPEndPoint.Serialize()\n- uid: System.Net.IPEndPoint.ToString\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: ToString()\n  nameWithType: IPEndPoint.ToString()\n  fullName: IPEndPoint.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.IPEndPoint.#ctor*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: IPEndPoint\n  nameWithType: IPEndPoint.IPEndPoint\n  fullName: IPEndPoint.IPEndPoint\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.Address*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Address\n  nameWithType: IPEndPoint.Address\n  fullName: IPEndPoint.Address\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.AddressFamily*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: AddressFamily\n  nameWithType: IPEndPoint.AddressFamily\n  fullName: IPEndPoint.AddressFamily\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.Create*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Create\n  nameWithType: IPEndPoint.Create\n  fullName: IPEndPoint.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.Equals*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Equals\n  nameWithType: IPEndPoint.Equals\n  fullName: IPEndPoint.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.GetHashCode*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: GetHashCode\n  nameWithType: IPEndPoint.GetHashCode\n  fullName: IPEndPoint.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.Port*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Port\n  nameWithType: IPEndPoint.Port\n  fullName: IPEndPoint.Port\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.Serialize*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: Serialize\n  nameWithType: IPEndPoint.Serialize\n  fullName: IPEndPoint.Serialize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Net.IPEndPoint.ToString*\n  parent: System.Net.IPEndPoint\n  isExternal: false\n  name: ToString\n  nameWithType: IPEndPoint.ToString\n  fullName: IPEndPoint.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/IPEndPoint.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}