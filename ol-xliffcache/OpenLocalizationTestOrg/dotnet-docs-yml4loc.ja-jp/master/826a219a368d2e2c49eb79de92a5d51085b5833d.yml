### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.CounterSample
  commentId: T:System.Diagnostics.CounterSample
  id: CounterSample
  children:
  - System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  - System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  - System.Diagnostics.CounterSample.BaseValue
  - System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.CounterFrequency
  - System.Diagnostics.CounterSample.CounterTimeStamp
  - System.Diagnostics.CounterSample.CounterType
  - System.Diagnostics.CounterSample.Empty
  - System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.Equals(System.Object)
  - System.Diagnostics.CounterSample.GetHashCode
  - System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSample.RawValue
  - System.Diagnostics.CounterSample.SystemFrequency
  - System.Diagnostics.CounterSample.TimeStamp
  - System.Diagnostics.CounterSample.TimeStamp100nSec
  langs:
  - csharp
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
  type: Struct
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Defines a structure that holds the raw data for a performance counter.
  remarks: ''
  example:
  - "The following example demonstrates the use of the <xref:System.Diagnostics.CounterSample> class to display data for a performance counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public struct CounterSample
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  commentId: M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)'
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)
  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)
  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)
  type: Constructor
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.CounterSample"></xref> structure and sets the <xref href="System.Diagnostics.CounterSample.CounterTimeStamp"></xref> property to 0 (zero).
  remarks: Use this constructor to take an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method for the first time.
  syntax:
    content: public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType);
    parameters:
    - id: rawValue
      type: System.Int64
      description: The numeric value associated with the performance counter sample.
    - id: baseValue
      type: System.Int64
      description: An optional, base raw value for the counter, to use only if the sample is based on multiple counters.
    - id: counterFrequency
      type: System.Int64
      description: The frequency with which the counter is read.
    - id: systemFrequency
      type: System.Int64
      description: The frequency with which the system reads from the counter.
    - id: timeStamp
      type: System.Int64
      description: The raw time stamp.
    - id: timeStamp100nSec
      type: System.Int64
      description: The raw, high-fidelity time stamp.
    - id: counterType
      type: System.Diagnostics.PerformanceCounterType
      description: A <xref href="System.Diagnostics.PerformanceCounterType"></xref> object that indicates the type of the counter for which this sample is a snapshot.
  overload: System.Diagnostics.CounterSample.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  commentId: M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)'
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)
  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)
  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)
  type: Constructor
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.CounterSample"></xref> structure and sets the <xref href="System.Diagnostics.CounterSample.CounterTimeStamp"></xref> property to the value that is passed in.
  remarks: Use this constructor to take samples after you have already taken an initial sample of the performance counter. The System Monitor supplies values for these parameters automatically when you call the <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> method.
  example:
  - "The following example demonstrates how to initialize a new <xref:System.Diagnostics.CounterSample> structure, passing in values for the `rawValue`, `baseValue`, `counterFrequency`, `systemFrequency`, `timeStamp`, `timeStamp100nSec`, `counterType`, and `counterTimeStamp` parameters. After creating the <xref:System.Diagnostics.CounterSample> structure, the example displays the property values for the <xref:System.Diagnostics.CounterSample> in the console window.  \n  \n [!code-cpp[CounterSample_Ctor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CounterSample_Ctor_2/CPP/countersample_ctor_2.cpp#1)]\n [!code-csharp[CounterSample_Ctor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CounterSample_Ctor_2/CS/countersample_ctor_2.cs#1)]\n [!code-vb[CounterSample_Ctor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CounterSample_Ctor_2/VB/countersample_ctor_2.vb#1)]  \n[!code-cpp[CounterSample_Ctor_2#2](~/samples/snippets/cpp/VS_Snippets_CLR/CounterSample_Ctor_2/CPP/countersample_ctor_2.cpp#2)]\n[!code-csharp[CounterSample_Ctor_2#2](~/samples/snippets/csharp/VS_Snippets_CLR/CounterSample_Ctor_2/CS/countersample_ctor_2.cs#2)]\n[!code-vb[CounterSample_Ctor_2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CounterSample_Ctor_2/VB/countersample_ctor_2.vb#2)]"
  syntax:
    content: public CounterSample (long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType, long counterTimeStamp);
    parameters:
    - id: rawValue
      type: System.Int64
      description: The numeric value associated with the performance counter sample.
    - id: baseValue
      type: System.Int64
      description: An optional, base raw value for the counter, to use only if the sample is based on multiple counters.
    - id: counterFrequency
      type: System.Int64
      description: The frequency with which the counter is read.
    - id: systemFrequency
      type: System.Int64
      description: The frequency with which the system reads from the counter.
    - id: timeStamp
      type: System.Int64
      description: The raw time stamp.
    - id: timeStamp100nSec
      type: System.Int64
      description: The raw, high-fidelity time stamp.
    - id: counterType
      type: System.Diagnostics.PerformanceCounterType
      description: A <xref href="System.Diagnostics.PerformanceCounterType"></xref> object that indicates the type of the counter for which this sample is a snapshot.
    - id: counterTimeStamp
      type: System.Int64
      description: The time at which the sample was taken.
  overload: System.Diagnostics.CounterSample.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.BaseValue
  commentId: P:System.Diagnostics.CounterSample.BaseValue
  id: BaseValue
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: BaseValue
  nameWithType: CounterSample.BaseValue
  fullName: CounterSample.BaseValue
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets an optional, base raw value for the counter.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.BaseValue%2A> property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long BaseValue { get; }
    return:
      type: System.Int64
      description: The base raw value, which is used only if the sample is based on multiple counters.
  overload: System.Diagnostics.CounterSample.BaseValue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  id: Calculate(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Calculate(CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample)
  fullName: CounterSample.Calculate(CounterSample)
  type: Method
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Calculates the performance data of the counter, using a single sample point. This method is generally used for uncalculated performance counter types.
  syntax:
    content: public static float Calculate (System.Diagnostics.CounterSample counterSample);
    parameters:
    - id: counterSample
      type: System.Diagnostics.CounterSample
      description: The <xref href="System.Diagnostics.CounterSample"></xref> structure to use as a base point for calculating performance data.
    return:
      type: System.Single
      description: The calculated performance value.
  overload: System.Diagnostics.CounterSample.Calculate*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Calculate(CounterSample, CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample, CounterSample)
  fullName: CounterSample.Calculate(CounterSample, CounterSample)
  type: Method
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Calculates the performance data of the counter, using two sample points. This method is generally used for calculated performance counter types, such as averages.
  syntax:
    content: public static float Calculate (System.Diagnostics.CounterSample counterSample, System.Diagnostics.CounterSample nextCounterSample);
    parameters:
    - id: counterSample
      type: System.Diagnostics.CounterSample
      description: The <xref href="System.Diagnostics.CounterSample"></xref> structure to use as a base point for calculating performance data.
    - id: nextCounterSample
      type: System.Diagnostics.CounterSample
      description: The <xref href="System.Diagnostics.CounterSample"></xref> structure to use as an ending point for calculating performance data.
    return:
      type: System.Single
      description: The calculated performance value.
  overload: System.Diagnostics.CounterSample.Calculate*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.CounterFrequency
  commentId: P:System.Diagnostics.CounterSample.CounterFrequency
  id: CounterFrequency
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterFrequency
  nameWithType: CounterSample.CounterFrequency
  fullName: CounterSample.CounterFrequency
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the raw counter frequency.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.CounterFrequency%2A> property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long CounterFrequency { get; }
    return:
      type: System.Int64
      description: The frequency with which the counter is read.
  overload: System.Diagnostics.CounterSample.CounterFrequency*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.CounterTimeStamp
  commentId: P:System.Diagnostics.CounterSample.CounterTimeStamp
  id: CounterTimeStamp
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterTimeStamp
  nameWithType: CounterSample.CounterTimeStamp
  fullName: CounterSample.CounterTimeStamp
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the counter's time stamp.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.CounterTimeStamp%2A> property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long CounterTimeStamp { get; }
    return:
      type: System.Int64
      description: The time at which the sample was taken.
  overload: System.Diagnostics.CounterSample.CounterTimeStamp*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.CounterType
  commentId: P:System.Diagnostics.CounterSample.CounterType
  id: CounterType
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: CounterType
  nameWithType: CounterSample.CounterType
  fullName: CounterSample.CounterType
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the performance counter type.
  syntax:
    content: public System.Diagnostics.PerformanceCounterType CounterType { get; }
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: A <xref href="System.Diagnostics.PerformanceCounterType"></xref> object that indicates the type of the counter for which this sample is a snapshot.
  overload: System.Diagnostics.CounterSample.CounterType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.Empty
  commentId: F:System.Diagnostics.CounterSample.Empty
  id: Empty
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Empty
  nameWithType: CounterSample.Empty
  fullName: CounterSample.Empty
  type: Field
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Defines an empty, uninitialized performance counter sample of type `NumberOfItems32`.
  syntax:
    content: public static System.Diagnostics.CounterSample Empty;
    return:
      type: System.Diagnostics.CounterSample
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  id: Equals(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Equals(CounterSample)
  nameWithType: CounterSample.Equals(CounterSample)
  fullName: CounterSample.Equals(CounterSample)
  type: Method
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Indicates whether the specified <xref href="System.Diagnostics.CounterSample"></xref> structure is equal to the current <xref href="System.Diagnostics.CounterSample"></xref> structure.
  remarks: Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.
  syntax:
    content: public bool Equals (System.Diagnostics.CounterSample other);
    parameters:
    - id: sample
      type: System.Diagnostics.CounterSample
      description: ''
    return:
      type: System.Boolean
      description: '`true` if <code>other</code> is equal to the current instance; otherwise, `false`.'
  overload: System.Diagnostics.CounterSample.Equals*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.Equals(System.Object)
  commentId: M:System.Diagnostics.CounterSample.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CounterSample.Equals(Object)
  fullName: CounterSample.Equals(Object)
  type: Method
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Indicates whether the specified structure is a <xref href="System.Diagnostics.CounterSample"></xref> structure and is identical to the current <xref href="System.Diagnostics.CounterSample"></xref> structure.
  remarks: Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: o
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> is a <xref href="System.Diagnostics.CounterSample"></xref> structure and is identical to the current instance; otherwise, `false`.'
  overload: System.Diagnostics.CounterSample.Equals*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.GetHashCode
  commentId: M:System.Diagnostics.CounterSample.GetHashCode
  id: GetHashCode
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CounterSample.GetHashCode()
  fullName: CounterSample.GetHashCode()
  type: Method
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets a hash code for the current counter sample.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current counter sample.
  overload: System.Diagnostics.CounterSample.GetHashCode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: op_Equality(CounterSample, CounterSample)
  nameWithType: CounterSample.op_Equality(CounterSample, CounterSample)
  fullName: CounterSample.op_Equality(CounterSample, CounterSample)
  type: Operator
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Returns a value that indicates whether two <xref href="System.Diagnostics.CounterSample"></xref> structures are equal.
  remarks: "Two <xref:System.Diagnostics.CounterSample> structures are equal if they have identical property values.  \n  \n The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Equals%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_Equality (System.Diagnostics.CounterSample obj1, System.Diagnostics.CounterSample obj2);
    parameters:
    - id: a
      type: System.Diagnostics.CounterSample
      description: ''
    - id: b
      type: System.Diagnostics.CounterSample
      description: ''
    return:
      type: System.Boolean
      description: '`true` if <code>a</code> and <code>b</code> are equal; otherwise, `false`.'
  overload: System.Diagnostics.CounterSample.op_Equality*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  commentId: M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: op_Inequality(CounterSample, CounterSample)
  nameWithType: CounterSample.op_Inequality(CounterSample, CounterSample)
  fullName: CounterSample.op_Inequality(CounterSample, CounterSample)
  type: Operator
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Returns a value that indicates whether two <xref href="System.Diagnostics.CounterSample"></xref> structures are not equal.
  remarks: "Two <xref:System.Diagnostics.CounterSample> structures are not equal if any of their property values are different.  \n  \n The equivalent method for this operator is <xref:System.Diagnostics.CounterSample.Compare%28System.Diagnostics.CounterSample%2CSystem.Diagnostics.CounterSample%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_Inequality (System.Diagnostics.CounterSample obj1, System.Diagnostics.CounterSample obj2);
    parameters:
    - id: a
      type: System.Diagnostics.CounterSample
      description: ''
    - id: b
      type: System.Diagnostics.CounterSample
      description: ''
    return:
      type: System.Boolean
      description: '`true` if <code>a</code> and <code>b</code> are not equal; otherwise, `false`'
  overload: System.Diagnostics.CounterSample.op_Inequality*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.RawValue
  commentId: P:System.Diagnostics.CounterSample.RawValue
  id: RawValue
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: RawValue
  nameWithType: CounterSample.RawValue
  fullName: CounterSample.RawValue
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the raw value of the counter.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.RawValue%2A> property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long RawValue { get; }
    return:
      type: System.Int64
      description: The numeric value that is associated with the performance counter sample.
  overload: System.Diagnostics.CounterSample.RawValue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.SystemFrequency
  commentId: P:System.Diagnostics.CounterSample.SystemFrequency
  id: SystemFrequency
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: SystemFrequency
  nameWithType: CounterSample.SystemFrequency
  fullName: CounterSample.SystemFrequency
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the raw system frequency.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.SystemFrequency%2A> property for a counter..  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long SystemFrequency { get; }
    return:
      type: System.Int64
      description: The frequency with which the system reads from the counter.
  overload: System.Diagnostics.CounterSample.SystemFrequency*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.TimeStamp
  commentId: P:System.Diagnostics.CounterSample.TimeStamp
  id: TimeStamp
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: TimeStamp
  nameWithType: CounterSample.TimeStamp
  fullName: CounterSample.TimeStamp
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the raw time stamp.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.TimeStamp%2A> property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long TimeStamp { get; }
    return:
      type: System.Int64
      description: The system time stamp.
  overload: System.Diagnostics.CounterSample.TimeStamp*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Diagnostics.CounterSample.TimeStamp100nSec
  commentId: P:System.Diagnostics.CounterSample.TimeStamp100nSec
  id: TimeStamp100nSec
  parent: System.Diagnostics.CounterSample
  langs:
  - csharp
  name: TimeStamp100nSec
  nameWithType: CounterSample.TimeStamp100nSec
  fullName: CounterSample.TimeStamp100nSec
  type: Property
  assemblies:
  - System
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Gets the raw, high-fidelity time stamp.
  remarks: ''
  example:
  - "The following example displays the value of the <xref:System.Diagnostics.CounterSample.TimeStamp100nSec%2A> property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]\n [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]"
  syntax:
    content: public long TimeStamp100nSec { get; }
    return:
      type: System.Int64
      description: The system time stamp, represented within 0.1 millisecond.
  overload: System.Diagnostics.CounterSample.TimeStamp100nSec*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)
  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)
  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)
  nameWithType: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)
  fullName: CounterSample.CounterSample(Int64, Int64, Int64, Int64, Int64, Int64, PerformanceCounterType, Int64)
- uid: System.Diagnostics.CounterSample.BaseValue
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: BaseValue
  nameWithType: CounterSample.BaseValue
  fullName: CounterSample.BaseValue
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Calculate(CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample)
  fullName: CounterSample.Calculate(CounterSample)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Calculate(CounterSample, CounterSample)
  nameWithType: CounterSample.Calculate(CounterSample, CounterSample)
  fullName: CounterSample.Calculate(CounterSample, CounterSample)
- uid: System.Diagnostics.CounterSample.CounterFrequency
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterFrequency
  nameWithType: CounterSample.CounterFrequency
  fullName: CounterSample.CounterFrequency
- uid: System.Diagnostics.CounterSample.CounterTimeStamp
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterTimeStamp
  nameWithType: CounterSample.CounterTimeStamp
  fullName: CounterSample.CounterTimeStamp
- uid: System.Diagnostics.CounterSample.CounterType
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterType
  nameWithType: CounterSample.CounterType
  fullName: CounterSample.CounterType
- uid: System.Diagnostics.CounterSample.Empty
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Empty
  nameWithType: CounterSample.Empty
  fullName: CounterSample.Empty
- uid: System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Equals(CounterSample)
  nameWithType: CounterSample.Equals(CounterSample)
  fullName: CounterSample.Equals(CounterSample)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.CounterSample.Equals(System.Object)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Equals(Object)
  nameWithType: CounterSample.Equals(Object)
  fullName: CounterSample.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.CounterSample.GetHashCode
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: GetHashCode()
  nameWithType: CounterSample.GetHashCode()
  fullName: CounterSample.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Equality(CounterSample, CounterSample)
  nameWithType: CounterSample.op_Equality(CounterSample, CounterSample)
  fullName: CounterSample.op_Equality(CounterSample, CounterSample)
- uid: System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Inequality(CounterSample, CounterSample)
  nameWithType: CounterSample.op_Inequality(CounterSample, CounterSample)
  fullName: CounterSample.op_Inequality(CounterSample, CounterSample)
- uid: System.Diagnostics.CounterSample.RawValue
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: RawValue
  nameWithType: CounterSample.RawValue
  fullName: CounterSample.RawValue
- uid: System.Diagnostics.CounterSample.SystemFrequency
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: SystemFrequency
  nameWithType: CounterSample.SystemFrequency
  fullName: CounterSample.SystemFrequency
- uid: System.Diagnostics.CounterSample.TimeStamp
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp
  nameWithType: CounterSample.TimeStamp
  fullName: CounterSample.TimeStamp
- uid: System.Diagnostics.CounterSample.TimeStamp100nSec
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp100nSec
  nameWithType: CounterSample.TimeStamp100nSec
  fullName: CounterSample.TimeStamp100nSec
- uid: System.Diagnostics.CounterSample.#ctor*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample.CounterSample
  fullName: CounterSample.CounterSample
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.BaseValue*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: BaseValue
  nameWithType: CounterSample.BaseValue
  fullName: CounterSample.BaseValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.Calculate*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Calculate
  nameWithType: CounterSample.Calculate
  fullName: CounterSample.Calculate
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.CounterFrequency*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterFrequency
  nameWithType: CounterSample.CounterFrequency
  fullName: CounterSample.CounterFrequency
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.CounterTimeStamp*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterTimeStamp
  nameWithType: CounterSample.CounterTimeStamp
  fullName: CounterSample.CounterTimeStamp
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.CounterType*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: CounterType
  nameWithType: CounterSample.CounterType
  fullName: CounterSample.CounterType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.Equals*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: Equals
  nameWithType: CounterSample.Equals
  fullName: CounterSample.Equals
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.GetHashCode*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: GetHashCode
  nameWithType: CounterSample.GetHashCode
  fullName: CounterSample.GetHashCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.op_Equality*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Equality
  nameWithType: CounterSample.op_Equality
  fullName: CounterSample.op_Equality
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.op_Inequality*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: op_Inequality
  nameWithType: CounterSample.op_Inequality
  fullName: CounterSample.op_Inequality
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.RawValue*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: RawValue
  nameWithType: CounterSample.RawValue
  fullName: CounterSample.RawValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.SystemFrequency*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: SystemFrequency
  nameWithType: CounterSample.SystemFrequency
  fullName: CounterSample.SystemFrequency
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.TimeStamp*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp
  nameWithType: CounterSample.TimeStamp
  fullName: CounterSample.TimeStamp
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
- uid: System.Diagnostics.CounterSample.TimeStamp100nSec*
  parent: System.Diagnostics.CounterSample
  isExternal: false
  name: TimeStamp100nSec
  nameWithType: CounterSample.TimeStamp100nSec
  fullName: CounterSample.TimeStamp100nSec
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/CounterSample.xml
