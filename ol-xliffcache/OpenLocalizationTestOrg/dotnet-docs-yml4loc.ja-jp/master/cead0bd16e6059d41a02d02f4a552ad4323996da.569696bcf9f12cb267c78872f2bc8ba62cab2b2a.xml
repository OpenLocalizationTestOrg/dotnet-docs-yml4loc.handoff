{"nodes":[{"content":"Enables sharing of global information across multiple sessions and requests within an ASP.NET application.","nodes":[{"pos":[0,106],"content":"Enables sharing of global information across multiple sessions and requests within an ASP.NET application.","nodes":[{"content":"Enables sharing of global information across multiple sessions and requests within an ASP.NET application.","pos":[0,106]}]}],"pos":[1254,1361],"yaml":true},{"content":"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.  \n  \n A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.  \n  \n Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).","nodes":[{"pos":[0,169],"content":"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.","nodes":[{"content":"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.","pos":[0,169]}]},{"pos":[176,569],"content":"A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.","nodes":[{"content":"A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.","pos":[0,393],"nodes":[{"content":"A single instance of an <ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.","pos":[0,193],"source":"A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory."},{"content":"A separate single instance is created for each ASP.NET application on a Web server.","pos":[194,277]},{"content":"A reference to each instance is then exposed via the intrinsic <ph id=\"ph1\">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object.","pos":[278,393],"source":" A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object."}]}]},{"pos":[576,792],"content":"Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).","nodes":[{"content":"Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).","pos":[0,216]}]}],"pos":[1372,2171],"yaml":true,"extradata":"MT"},{"content":"Adds a new object to the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,89],"content":"Adds a new object to the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Adds a new object to the <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[5884,5974],"yaml":true},{"content":"The name of the object to be added to the collection.","nodes":[{"pos":[0,53],"content":"The name of the object to be added to the collection.","nodes":[{"content":"The name of the object to be added to the collection.","pos":[0,53]}]}],"pos":[6596,6650],"yaml":true},{"content":"The value of the object.","nodes":[{"pos":[0,24],"content":"The value of the object.","nodes":[{"content":"The value of the object.","pos":[0,24]}]}],"pos":[6711,6736],"yaml":true},{"content":"Gets the access keys in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,92],"content":"Gets the access keys in the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the access keys in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[7675,7768],"yaml":true},{"content":"A string array of <xref href=\"System.Web.HttpApplicationState\"></xref> object names.","nodes":[{"pos":[0,84],"content":"A string array of <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object names.","source":"A string array of <xref href=\"System.Web.HttpApplicationState\"></xref> object names."}],"pos":[8369,8454],"yaml":true},{"content":"Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,92],"content":"Removes all objects from an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[9389,9482],"yaml":true},{"content":"Gets a reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object.","nodes":[{"pos":[0,84],"content":"Gets a reference to the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object."}],"pos":[10969,11054],"yaml":true},{"content":"This property provides compatibility with earlier versions of ASP.","nodes":[{"pos":[0,66],"content":"This property provides compatibility with earlier versions of ASP.","nodes":[{"content":"This property provides compatibility with earlier versions of ASP.","pos":[0,66]}]}],"pos":[11065,11132],"yaml":true,"extradata":"MT"},{"content":"A reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object.","nodes":[{"pos":[0,79],"content":"A reference to the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object.","source":"A reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object."}],"pos":[11816,11896],"yaml":true},{"content":"Gets the number of objects in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,98],"content":"Gets the number of objects in the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the number of objects in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[12828,12927],"yaml":true},{"content":"The number of item objects in the collection. The default is 0.","nodes":[{"pos":[0,63],"content":"The number of item objects in the collection. The default is 0.","nodes":[{"content":"The number of item objects in the collection. The default is 0.","pos":[0,63],"nodes":[{"content":"The number of item objects in the collection.","pos":[0,45]},{"content":"The default is 0.","pos":[46,63]}]}]}],"pos":[13506,13570],"yaml":true},{"content":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by numerical index.","nodes":[{"pos":[0,87],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object by numerical index.","source":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by numerical index."}],"pos":[14548,14636],"yaml":true},{"content":"The index of the application state object.","nodes":[{"pos":[0,42],"content":"The index of the application state object.","nodes":[{"content":"The index of the application state object.","pos":[0,42]}]}],"pos":[15361,15404],"yaml":true},{"content":"The object referenced by <code>index</code>.","nodes":[{"pos":[0,44],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The object referenced by <code>index</code>."}],"pos":[15461,15506],"yaml":true},{"content":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by name.","nodes":[{"pos":[0,76],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object by name.","source":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by name."}],"pos":[16488,16565],"yaml":true},{"content":"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \n  \n```vb  \nDim MyObject As Object  \nMyObject = Application.Get(\"MyAppVar1\")  \n```  \n  \n```csharp  \nObject MyObject;  \nMyObject = Application.Get(\"MyAppVar1\");  \n```","nodes":[{"pos":[0,223],"content":"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.","nodes":[{"content":"The following example returns an object named MyAppVar1 from the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id=\"ph2\">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.","pos":[0,223],"source":"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable."}]}],"pos":[16576,16983],"yaml":true,"extradata":"MT"},{"content":"The name of the object.","nodes":[{"pos":[0,23],"content":"The name of the object.","nodes":[{"content":"The name of the object.","pos":[0,23]}]}],"pos":[17115,17139],"yaml":true},{"content":"The object referenced by <code>name</code>.","nodes":[{"pos":[0,43],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The object referenced by <code>name</code>."}],"pos":[17196,17240],"yaml":true},{"content":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object name by index.","nodes":[{"pos":[0,82],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object name by index.","source":"Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object name by index."}],"pos":[18234,18317],"yaml":true},{"content":"The index of the application state object.","nodes":[{"pos":[0,42],"content":"The index of the application state object.","nodes":[{"content":"The index of the application state object.","pos":[0,42]}]}],"pos":[18961,19004],"yaml":true},{"content":"The name under which the application state object was saved.","nodes":[{"pos":[0,60],"content":"The name under which the application state object was saved.","nodes":[{"content":"The name under which the application state object was saved.","pos":[0,60]}]}],"pos":[19061,19122],"yaml":true},{"content":"Gets the value of a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by name.","nodes":[{"pos":[0,95],"content":"Gets the value of a single <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object by name.","source":"Gets the value of a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by name."}],"pos":[20115,20211],"yaml":true},{"content":"The name of the object in the collection.","nodes":[{"pos":[0,41],"content":"The name of the object in the collection.","nodes":[{"content":"The name of the object in the collection.","pos":[0,41]}]}],"pos":[20950,20992],"yaml":true},{"content":"The object referenced by <code>name</code>.","nodes":[{"pos":[0,43],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The object referenced by <code>name</code>."}],"pos":[21049,21093],"yaml":true},{"content":"Gets a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by index.","nodes":[{"pos":[0,83],"content":"Gets a single <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object by index.","source":"Gets a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by index."}],"pos":[22078,22162],"yaml":true},{"content":"The numerical index of the object in the collection.","nodes":[{"pos":[0,52],"content":"The numerical index of the object in the collection.","nodes":[{"content":"The numerical index of the object in the collection.","pos":[0,52]}]}],"pos":[22899,22952],"yaml":true},{"content":"The object referenced by <code>index</code>.","nodes":[{"pos":[0,44],"content":"The object referenced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The object referenced by <code>index</code>."}],"pos":[23009,23054],"yaml":true},{"content":"Locks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization.","nodes":[{"pos":[0,118],"content":"Locks access to an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> variable to facilitate access synchronization.","source":"Locks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization."}],"pos":[23980,24099],"yaml":true},{"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","nodes":[{"pos":[0,770],"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","nodes":[{"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","pos":[0,770],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class performs automatic locking and unlocking with the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> properties and the <ph id=\"ph4\">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> and <ph id=\"ph10\">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> methods.","pos":[0,572],"source":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods."},{"content":"However, explicitly using the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> methods when you have a series of operations may be more efficient.","pos":[573,770],"source":" However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient."}]}]}],"pos":[24110,24881],"yaml":true,"extradata":"MT"},{"content":"Removes the named object from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,97],"content":"Removes the named object from an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes the named object from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[26571,26669],"yaml":true},{"content":"The name of the object to be removed from the collection.","nodes":[{"pos":[0,57],"content":"The name of the object to be removed from the collection.","nodes":[{"content":"The name of the object to be removed from the collection.","pos":[0,57]}]}],"pos":[27260,27318],"yaml":true},{"content":"Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,92],"content":"Removes all objects from an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[28276,28369],"yaml":true},{"content":"<xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.","nodes":[{"pos":[0,123],"content":"<xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState.RemoveAll%2A&gt;</ph> is an internal call to <ph id=\"ph2\">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>.","pos":[0,123],"source":"<xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>."}]}],"pos":[28380,28504],"yaml":true,"extradata":"MT"},{"content":"Removes an <xref href=\"System.Web.HttpApplicationState\"></xref> object from a collection by index.","nodes":[{"pos":[0,98],"content":"Removes an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> object from a collection by index.","source":"Removes an <xref href=\"System.Web.HttpApplicationState\"></xref> object from a collection by index."}],"pos":[30062,30161],"yaml":true},{"content":"The position in the collection of the item to remove.","nodes":[{"pos":[0,53],"content":"The position in the collection of the item to remove.","nodes":[{"content":"The position in the collection of the item to remove.","pos":[0,53]}]}],"pos":[31010,31064],"yaml":true},{"content":"Updates the value of an object in an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.","nodes":[{"pos":[0,101],"content":"Updates the value of an object in an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> collection.","source":"Updates the value of an object in an <xref href=\"System.Web.HttpApplicationState\"></xref> collection."}],"pos":[32117,32219],"yaml":true},{"content":"The name of the object to be updated.","nodes":[{"pos":[0,37],"content":"The name of the object to be updated.","nodes":[{"content":"The name of the object to be updated.","pos":[0,37]}]}],"pos":[32810,32848],"yaml":true},{"content":"The updated value of the object.","nodes":[{"pos":[0,32],"content":"The updated value of the object.","nodes":[{"content":"The updated value of the object.","pos":[0,32]}]}],"pos":[32909,32942],"yaml":true},{"content":"Gets all objects declared by an `<object>` tag where the scope is set to \"Application\" within the ASP.NET application.","nodes":[{"pos":[0,118],"content":"Gets all objects declared by an <ph id=\"ph1\">`&lt;object&gt;`</ph> tag where the scope is set to \"Application\" within the ASP.NET application.","source":"Gets all objects declared by an `<object>` tag where the scope is set to \"Application\" within the ASP.NET application."}],"pos":[33917,34036],"yaml":true},{"content":"Application objects are defined in the Global.asax file inside the `<object runat=\"server\" scope=\"Application\"> </object>` tags.","nodes":[{"pos":[0,128],"content":"Application objects are defined in the Global.asax file inside the <ph id=\"ph1\">`&lt;object runat=\"server\" scope=\"Application\"&gt; &lt;/object&gt;`</ph> tags.","source":"Application objects are defined in the Global.asax file inside the `<object runat=\"server\" scope=\"Application\"> </object>` tags."}],"pos":[34047,34176],"yaml":true,"extradata":"MT"},{"content":"A collection of objects on the page.","nodes":[{"pos":[0,36],"content":"A collection of objects on the page.","nodes":[{"content":"A collection of objects on the page.","pos":[0,36]}]}],"pos":[34925,34962],"yaml":true},{"content":"Unlocks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization.","nodes":[{"pos":[0,120],"content":"Unlocks access to an <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpApplicationState\"&gt;&lt;/xref&gt;</ph> variable to facilitate access synchronization.","source":"Unlocks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization."}],"pos":[35909,36030],"yaml":true},{"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","nodes":[{"pos":[0,770],"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","nodes":[{"content":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.","pos":[0,770],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class performs automatic locking and unlocking with the <ph id=\"ph2\">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> properties and the <ph id=\"ph4\">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> and <ph id=\"ph10\">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> methods.","pos":[0,572],"source":"The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods."},{"content":"However, explicitly using the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> methods when you have a series of operations may be more efficient.","pos":[573,770],"source":" However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient."}]}]}],"pos":[36041,36812],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpApplicationState\n  commentId: T:System.Web.HttpApplicationState\n  id: HttpApplicationState\n  children:\n  - System.Web.HttpApplicationState.Add(System.String,System.Object)\n  - System.Web.HttpApplicationState.AllKeys\n  - System.Web.HttpApplicationState.Clear\n  - System.Web.HttpApplicationState.Contents\n  - System.Web.HttpApplicationState.Count\n  - System.Web.HttpApplicationState.Get(System.Int32)\n  - System.Web.HttpApplicationState.Get(System.String)\n  - System.Web.HttpApplicationState.GetKey(System.Int32)\n  - System.Web.HttpApplicationState.Item(System.String)\n  - System.Web.HttpApplicationState.Item(System.Int32)\n  - System.Web.HttpApplicationState.Lock\n  - System.Web.HttpApplicationState.Remove(System.String)\n  - System.Web.HttpApplicationState.RemoveAll\n  - System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  - System.Web.HttpApplicationState.Set(System.String,System.Object)\n  - System.Web.HttpApplicationState.StaticObjects\n  - System.Web.HttpApplicationState.UnLock\n  langs:\n  - csharp\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Enables sharing of global information across multiple sessions and requests within an ASP.NET application.\n  remarks: \"An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.  \\n  \\n A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory. A separate single instance is created for each ASP.NET application on a Web server. A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.  \\n  \\n Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).\"\n  syntax:\n    content: 'public sealed class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.Specialized.NameObjectCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  - System.Collections.Specialized.NameObjectCollectionBase.Keys\n  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Add(System.String,System.Object)\n  commentId: M:System.Web.HttpApplicationState.Add(System.String,System.Object)\n  id: Add(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Add(String, Object)\n  nameWithType: HttpApplicationState.Add(String, Object)\n  fullName: HttpApplicationState.Add(String, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a new object to the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Add (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to be added to the collection.\n    - id: value\n      type: System.Object\n      description: The value of the object.\n  overload: System.Web.HttpApplicationState.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.AllKeys\n  commentId: P:System.Web.HttpApplicationState.AllKeys\n  id: AllKeys\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: AllKeys\n  nameWithType: HttpApplicationState.AllKeys\n  fullName: HttpApplicationState.AllKeys\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the access keys in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example fills a string array with all the object names in the application state collection.  \\n  \\n [!code-csharp[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string[] AllKeys { get; }\n    return:\n      type: System.String[]\n      description: A string array of <xref href=\"System.Web.HttpApplicationState\"></xref> object names.\n  overload: System.Web.HttpApplicationState.AllKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Clear\n  commentId: M:System.Web.HttpApplicationState.Clear\n  id: Clear\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HttpApplicationState.Clear()\n  fullName: HttpApplicationState.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Contents\n  commentId: P:System.Web.HttpApplicationState.Contents\n  id: Contents\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Contents\n  nameWithType: HttpApplicationState.Contents\n  fullName: HttpApplicationState.Contents\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object.\n  remarks: This property provides compatibility with earlier versions of ASP.\n  example:\n  - \"The following example creates a new <xref:System.Web.HttpApplicationState> object that is used to access the object names in the application state collection.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Web.HttpApplicationState Contents { get; }\n    return:\n      type: System.Web.HttpApplicationState\n      description: A reference to the <xref href=\"System.Web.HttpApplicationState\"></xref> object.\n  overload: System.Web.HttpApplicationState.Contents*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Count\n  commentId: P:System.Web.HttpApplicationState.Count\n  id: Count\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Count\n  nameWithType: HttpApplicationState.Count\n  fullName: HttpApplicationState.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the number of objects in the <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example executes only if the number of objects in the collection exceeds five.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of item objects in the collection. The default is 0.\n  overload: System.Web.HttpApplicationState.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Get(System.Int32)\n  commentId: M:System.Web.HttpApplicationState.Get(System.Int32)\n  id: Get(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Get(Int32)\n  nameWithType: HttpApplicationState.Get(Int32)\n  fullName: HttpApplicationState.Get(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by numerical index.\n  remarks: ''\n  example:\n  - \"The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public object Get (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the application state object.\n    return:\n      type: System.Object\n      description: The object referenced by <code>index</code>.\n  overload: System.Web.HttpApplicationState.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Get(System.String)\n  commentId: M:System.Web.HttpApplicationState.Get(System.String)\n  id: Get(System.String)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Get(String)\n  nameWithType: HttpApplicationState.Get(String)\n  fullName: HttpApplicationState.Get(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object by name.\n  remarks: \"The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n```vb  \\nDim MyObject As Object  \\nMyObject = Application.Get(\\\"MyAppVar1\\\")  \\n```  \\n  \\n```csharp  \\nObject MyObject;  \\nMyObject = Application.Get(\\\"MyAppVar1\\\");  \\n```\"\n  syntax:\n    content: public object Get (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object.\n    return:\n      type: System.Object\n      description: The object referenced by <code>name</code>.\n  overload: System.Web.HttpApplicationState.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.GetKey(System.Int32)\n  commentId: M:System.Web.HttpApplicationState.GetKey(System.Int32)\n  id: GetKey(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: GetKey(Int32)\n  nameWithType: HttpApplicationState.GetKey(Int32)\n  fullName: HttpApplicationState.GetKey(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets an <xref href=\"System.Web.HttpApplicationState\"></xref> object name by index.\n  remarks: ''\n  example:\n  - \"The following example returns the names of all the objects in the application state collection and stores the names in a string array.  \\n  \\n [!code-csharp[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string GetKey (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the application state object.\n    return:\n      type: System.String\n      description: The name under which the application state object was saved.\n  overload: System.Web.HttpApplicationState.GetKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Item(System.String)\n  commentId: P:System.Web.HttpApplicationState.Item(System.String)\n  id: Item(System.String)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: HttpApplicationState.Item(String)\n  fullName: HttpApplicationState.Item(String)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the value of a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by name.\n  remarks: ''\n  example:\n  - \"The following example returns an object named `MyAppVar1` from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n [!code-csharp[Classic HttpApplicationState.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/VB/source.vb#1)]\"\n  syntax:\n    content: public object this[string name] { get; set; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object in the collection.\n    return:\n      type: System.Object\n      description: The object referenced by <code>name</code>.\n  overload: System.Web.HttpApplicationState.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Item(System.Int32)\n  commentId: P:System.Web.HttpApplicationState.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: HttpApplicationState.Item(Int32)\n  fullName: HttpApplicationState.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a single <xref href=\"System.Web.HttpApplicationState\"></xref> object by index.\n  remarks: ''\n  example:\n  - \"The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.  \\n  \\n [!code-csharp[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public object this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The numerical index of the object in the collection.\n    return:\n      type: System.Object\n      description: The object referenced by <code>index</code>.\n  overload: System.Web.HttpApplicationState.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Lock\n  commentId: M:System.Web.HttpApplicationState.Lock\n  id: Lock\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Lock()\n  nameWithType: HttpApplicationState.Lock()\n  fullName: HttpApplicationState.Lock()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Locks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization.\n  remarks: The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.\n  example:\n  - \"The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Lock ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.Lock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Remove(System.String)\n  commentId: M:System.Web.HttpApplicationState.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: HttpApplicationState.Remove(String)\n  fullName: HttpApplicationState.Remove(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes the named object from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example removes one application state variable from the collection.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to be removed from the collection.\n  overload: System.Web.HttpApplicationState.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.RemoveAll\n  commentId: M:System.Web.HttpApplicationState.RemoveAll\n  id: RemoveAll\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: RemoveAll()\n  nameWithType: HttpApplicationState.RemoveAll()\n  fullName: HttpApplicationState.RemoveAll()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes all objects from an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: <xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.\n  example:\n  - \"The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.  \\n  \\n [!code-csharp[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void RemoveAll ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.RemoveAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  commentId: M:System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: HttpApplicationState.RemoveAt(Int32)\n  fullName: HttpApplicationState.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes an <xref href=\"System.Web.HttpApplicationState\"></xref> object from a collection by index.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to insert two application variables into the collection, and then use the <xref:System.Web.HttpApplicationState.RemoveAt%2A> method to remove the first variable in a custom <xref:System.Web.HttpApplicationState> object.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[HttpApplicationStateRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/CS/httpapplicationstate_removeatcs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[HttpApplicationStateRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/VB/httpapplicationstate_removeatvb.aspx#1)]  -->\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position in the collection of the item to remove.\n  overload: System.Web.HttpApplicationState.RemoveAt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.Set(System.String,System.Object)\n  commentId: M:System.Web.HttpApplicationState.Set(System.String,System.Object)\n  id: Set(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: Set(String, Object)\n  nameWithType: HttpApplicationState.Set(String, Object)\n  fullName: HttpApplicationState.Set(String, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Updates the value of an object in an <xref href=\"System.Web.HttpApplicationState\"></xref> collection.\n  remarks: ''\n  example:\n  - \"The following example updates the value of an existing application state variable.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Set (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to be updated.\n    - id: value\n      type: System.Object\n      description: The updated value of the object.\n  overload: System.Web.HttpApplicationState.Set*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.StaticObjects\n  commentId: P:System.Web.HttpApplicationState.StaticObjects\n  id: StaticObjects\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: StaticObjects\n  nameWithType: HttpApplicationState.StaticObjects\n  fullName: HttpApplicationState.StaticObjects\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets all objects declared by an `<object>` tag where the scope is set to \"Application\" within the ASP.NET application.\n  remarks: Application objects are defined in the Global.asax file inside the `<object runat=\"server\" scope=\"Application\"> </object>` tags.\n  example:\n  - \"The following example gets all application objects into a <xref:System.Web.HttpStaticObjectsCollection> variable and executes a routine only if the number of objects is greater than 0.  \\n  \\n [!code-csharp[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }\n    return:\n      type: System.Web.HttpStaticObjectsCollection\n      description: A collection of objects on the page.\n  overload: System.Web.HttpApplicationState.StaticObjects*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpApplicationState.UnLock\n  commentId: M:System.Web.HttpApplicationState.UnLock\n  id: UnLock\n  parent: System.Web.HttpApplicationState\n  langs:\n  - csharp\n  name: UnLock()\n  nameWithType: HttpApplicationState.UnLock()\n  fullName: HttpApplicationState.UnLock()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Unlocks access to an <xref href=\"System.Web.HttpApplicationState\"></xref> variable to facilitate access synchronization.\n  remarks: The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods. However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.\n  example:\n  - \"The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.  \\n  \\n [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void UnLock ();\n    parameters: []\n  overload: System.Web.HttpApplicationState.UnLock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Collections.Specialized.NameObjectCollectionBase\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameObjectCollectionBase\n  nameWithType: NameObjectCollectionBase\n  fullName: System.Collections.Specialized.NameObjectCollectionBase\n- uid: System.Web.HttpApplicationState.Add(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Add(String, Object)\n  nameWithType: HttpApplicationState.Add(String, Object)\n  fullName: HttpApplicationState.Add(String, Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.HttpApplicationState.AllKeys\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: AllKeys\n  nameWithType: HttpApplicationState.AllKeys\n  fullName: HttpApplicationState.AllKeys\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpApplicationState.Clear\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Clear()\n  nameWithType: HttpApplicationState.Clear()\n  fullName: HttpApplicationState.Clear()\n- uid: System.Web.HttpApplicationState.Contents\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Contents\n  nameWithType: HttpApplicationState.Contents\n  fullName: HttpApplicationState.Contents\n- uid: System.Web.HttpApplicationState\n  parent: System.Web\n  isExternal: false\n  name: HttpApplicationState\n  nameWithType: HttpApplicationState\n  fullName: System.Web.HttpApplicationState\n- uid: System.Web.HttpApplicationState.Count\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Count\n  nameWithType: HttpApplicationState.Count\n  fullName: HttpApplicationState.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpApplicationState.Get(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Get(Int32)\n  nameWithType: HttpApplicationState.Get(Int32)\n  fullName: HttpApplicationState.Get(Int32)\n- uid: System.Web.HttpApplicationState.Get(System.String)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Get(String)\n  nameWithType: HttpApplicationState.Get(String)\n  fullName: HttpApplicationState.Get(String)\n- uid: System.Web.HttpApplicationState.GetKey(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: GetKey(Int32)\n  nameWithType: HttpApplicationState.GetKey(Int32)\n  fullName: HttpApplicationState.GetKey(Int32)\n- uid: System.Web.HttpApplicationState.Item(System.String)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Item(String)\n  nameWithType: HttpApplicationState.Item(String)\n  fullName: HttpApplicationState.Item(String)\n- uid: System.Web.HttpApplicationState.Item(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: HttpApplicationState.Item(Int32)\n  fullName: HttpApplicationState.Item(Int32)\n- uid: System.Web.HttpApplicationState.Lock\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Lock()\n  nameWithType: HttpApplicationState.Lock()\n  fullName: HttpApplicationState.Lock()\n- uid: System.Web.HttpApplicationState.Remove(System.String)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Remove(String)\n  nameWithType: HttpApplicationState.Remove(String)\n  fullName: HttpApplicationState.Remove(String)\n- uid: System.Web.HttpApplicationState.RemoveAll\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAll()\n  nameWithType: HttpApplicationState.RemoveAll()\n  fullName: HttpApplicationState.RemoveAll()\n- uid: System.Web.HttpApplicationState.RemoveAt(System.Int32)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: HttpApplicationState.RemoveAt(Int32)\n  fullName: HttpApplicationState.RemoveAt(Int32)\n- uid: System.Web.HttpApplicationState.Set(System.String,System.Object)\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Set(String, Object)\n  nameWithType: HttpApplicationState.Set(String, Object)\n  fullName: HttpApplicationState.Set(String, Object)\n- uid: System.Web.HttpApplicationState.StaticObjects\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: StaticObjects\n  nameWithType: HttpApplicationState.StaticObjects\n  fullName: HttpApplicationState.StaticObjects\n- uid: System.Web.HttpStaticObjectsCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpStaticObjectsCollection\n  nameWithType: HttpStaticObjectsCollection\n  fullName: System.Web.HttpStaticObjectsCollection\n- uid: System.Web.HttpApplicationState.UnLock\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: UnLock()\n  nameWithType: HttpApplicationState.UnLock()\n  fullName: HttpApplicationState.UnLock()\n- uid: System.Web.HttpApplicationState.Add*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Add\n  nameWithType: HttpApplicationState.Add\n  fullName: HttpApplicationState.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.AllKeys*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: AllKeys\n  nameWithType: HttpApplicationState.AllKeys\n  fullName: HttpApplicationState.AllKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Clear*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Clear\n  nameWithType: HttpApplicationState.Clear\n  fullName: HttpApplicationState.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Contents*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Contents\n  nameWithType: HttpApplicationState.Contents\n  fullName: HttpApplicationState.Contents\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Count*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Count\n  nameWithType: HttpApplicationState.Count\n  fullName: HttpApplicationState.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Get*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Get\n  nameWithType: HttpApplicationState.Get\n  fullName: HttpApplicationState.Get\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.GetKey*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: GetKey\n  nameWithType: HttpApplicationState.GetKey\n  fullName: HttpApplicationState.GetKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Item*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Item\n  nameWithType: HttpApplicationState.Item\n  fullName: HttpApplicationState.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Lock*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Lock\n  nameWithType: HttpApplicationState.Lock\n  fullName: HttpApplicationState.Lock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Remove*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Remove\n  nameWithType: HttpApplicationState.Remove\n  fullName: HttpApplicationState.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.RemoveAll*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAll\n  nameWithType: HttpApplicationState.RemoveAll\n  fullName: HttpApplicationState.RemoveAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.RemoveAt*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: RemoveAt\n  nameWithType: HttpApplicationState.RemoveAt\n  fullName: HttpApplicationState.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.Set*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: Set\n  nameWithType: HttpApplicationState.Set\n  fullName: HttpApplicationState.Set\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.StaticObjects*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: StaticObjects\n  nameWithType: HttpApplicationState.StaticObjects\n  fullName: HttpApplicationState.StaticObjects\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Web.HttpApplicationState.UnLock*\n  parent: System.Web.HttpApplicationState\n  isExternal: false\n  name: UnLock\n  nameWithType: HttpApplicationState.UnLock\n  fullName: HttpApplicationState.UnLock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpApplicationState.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseAdd(String, Object)\n  nameWithType: NameObjectCollectionBase.BaseAdd(String, Object)\n  fullName: NameObjectCollectionBase.BaseAdd(String, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseClear()\n  nameWithType: NameObjectCollectionBase.BaseClear()\n  fullName: NameObjectCollectionBase.BaseClear()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGet(Int32)\n  fullName: NameObjectCollectionBase.BaseGet(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGet(String)\n  nameWithType: NameObjectCollectionBase.BaseGet(String)\n  fullName: NameObjectCollectionBase.BaseGet(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllKeys()\n  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()\n  fullName: NameObjectCollectionBase.BaseGetAllKeys()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues()\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues()\n  fullName: NameObjectCollectionBase.BaseGetAllValues()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetAllValues(Type)\n  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)\n  fullName: NameObjectCollectionBase.BaseGetAllValues(Type)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseGetKey(Int32)\n  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)\n  fullName: NameObjectCollectionBase.BaseGetKey(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseHasKeys()\n  nameWithType: NameObjectCollectionBase.BaseHasKeys()\n  fullName: NameObjectCollectionBase.BaseHasKeys()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemove(String)\n  nameWithType: NameObjectCollectionBase.BaseRemove(String)\n  fullName: NameObjectCollectionBase.BaseRemove(String)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseRemoveAt(Int32)\n  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)\n  fullName: NameObjectCollectionBase.BaseRemoveAt(Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(Int32, Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(Int32, Object)\n  fullName: NameObjectCollectionBase.BaseSet(Int32, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: BaseSet(String, Object)\n  nameWithType: NameObjectCollectionBase.BaseSet(String, Object)\n  fullName: NameObjectCollectionBase.BaseSet(String, Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: NameObjectCollectionBase.GetEnumerator()\n  fullName: NameObjectCollectionBase.GetEnumerator()\n- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: NameObjectCollectionBase.IsReadOnly\n  fullName: NameObjectCollectionBase.IsReadOnly\n- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: Keys\n  nameWithType: NameObjectCollectionBase.Keys\n  fullName: NameObjectCollectionBase.Keys\n- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)\n  fullName: NameObjectCollectionBase.OnDeserialization(Object)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)\n  fullName: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: NameObjectCollectionBase.ICollection.IsSynchronized\n  fullName: NameObjectCollectionBase.ICollection.IsSynchronized\n- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Specialized.NameObjectCollectionBase\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: NameObjectCollectionBase.ICollection.SyncRoot\n  fullName: NameObjectCollectionBase.ICollection.SyncRoot\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}