### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.NamedPipeClientStream
  commentId: T:System.IO.Pipes.NamedPipeClientStream
  id: NamedPipeClientStream
  children:
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  - System.IO.Pipes.NamedPipeClientStream.Connect
  - System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.Finalize
  - System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  langs:
  - csharp
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream
  fullName: System.IO.Pipes.NamedPipeClientStream
  type: Class
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Exposes a <xref href="System.IO.Stream"></xref> around a named pipe, which supports both synchronous and asynchronous read and write operations.
  remarks: "Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple <xref:System.IO.Pipes.NamedPipeClientStream> objects.  \n  \n Any process can act as either a named pipe server or client, or both.  \n  \n> [!NOTE]\n>  For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>. The server then waits for a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process to connect to it. In this example, both processes are on the same computer and the <xref:System.IO.Pipes.NamedPipeClientStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the client process, which connects to the server process. For the entire code sample, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md).  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: 'public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.Object
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteTimeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)
  - System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe name.
  remarks: "This constructor uses the following default values:  \n  \n-   A default server name of \".\".  \n  \n-   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."
  syntax:
    content: public NamedPipeClientStream (string pipeName);
    parameters:
    - id: pipeName
      type: System.String
      description: The name of the pipe.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>pipeName</code> is set to "anonymous".
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String, String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe and server names.
  remarks: "This constructor uses the following default values:  \n  \n-   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut>.  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName);
    parameters:
    - id: serverName
      type: System.String
      description: The name of the remote computer to connect to, or "." to specify the local computer.
    - id: pipeName
      type: System.String
      description: The name of the pipe.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> or <code>serverName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>pipeName</code> is set to "anonymous".
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String, String, PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe and server names, and the specified pipe direction.
  remarks: "This constructor uses the following default values:  \n  \n-   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions.None>.  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: serverName
      type: System.String
      description: The name of the remote computer to connect to, or "." to specify the local computer.
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> or <code>serverName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  fullName: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class for the specified pipe handle with the specified pipe direction.
  syntax:
    content: public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: isAsync
      type: System.Boolean
      description: '`true` to indicate that the handle was opened asynchronously; otherwise, `false`.'
    - id: isConnected
      type: System.Boolean
      description: '`true` to indicate that the pipe is connected; otherwise, `false`.'
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A safe handle for the pipe that this <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> object will encapsulate.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The stream has been closed.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>safePipeHandle</code> is not a valid handle.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>safePipeHandle</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>direction</code> is not a valid <xref href="System.IO.Pipes.PipeDirection"></xref> value.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe and server names, and the specified pipe direction and pipe options.
  remarks: "This constructor uses the following default values:  \n  \n-   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel.None>.  \n  \n-   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);
    parameters:
    - id: serverName
      type: System.String
      description: The name of the remote computer to connect to, or "." to specify the local computer.
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> or <code>serverName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.
  remarks: This constructor uses a default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);
    parameters:
    - id: serverName
      type: System.String
      description: The name of the remote computer to connect to, or "." to specify the local computer.
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: One of the enumeration values that determines the security impersonation level.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> or <code>serverName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode.
  remarks: The pipe direction for this constructor is determined by the `desiredAccessRights` parameter. If the `desiredAccessRights` value is <xref:System.IO.Pipes.PipeAccessRights.ReadData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.In>. If the value of `desiredAccessRights` is <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.Out>. If the value of `desiredAccessRights` includes both <xref:System.IO.Pipes.PipeAccessRights.ReadData> and <xref:System.IO.Pipes.PipeAccessRights.WriteData>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection.InOut>.
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: The name of the remote computer to connect to, or "." to specify the local computer.
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: desiredAccessRights
      type: System.IO.Pipes.PipeAccessRights
      description: One of the enumeration values that specifies the desired access rights of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: One of the enumeration values that determines the security impersonation level.
    - id: inheritability
      type: System.IO.HandleInheritability
      description: One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> or <code>serverName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value.  \n  \n -or-  \n  \n <code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: The name of the remote computer to connect to, or "." to specify the local computer.
    - id: pipeName
      type: System.String
      description: The name of the pipe.
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: One of the enumeration values that determines how to open or create the pipe.
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: One of the enumeration values that determines the security impersonation level.
    - id: inheritability
      type: System.IO.HandleInheritability
      description: One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pipeName</code> or <code>serverName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>pipeName</code> or <code>serverName</code> is a zero-length string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to \"anonymous\".  \n  \n -or-  \n  \n <code>direction</code> is not a valid <xref href=\"System.IO.Pipes.PipeDirection\"></xref> value.  \n  \n -or-  \n  \n <code>options</code> is not a valid <xref href=\"System.IO.Pipes.PipeOptions\"></xref> value.  \n  \n -or-  \n  \n <code>impersonationLevel</code> is not a valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value.  \n  \n -or-  \n  \n <code>inheritability</code> is not a valid <xref href=\"System.IO.HandleInheritability\"></xref> value."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  commentId: M:System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: NamedPipeClientStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  - netstandard
  - System.IO.Pipes
  namespace: System.IO.Pipes
  syntax:
    content: protected override void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  commentId: M:System.IO.Pipes.NamedPipeClientStream.Connect
  id: Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: NamedPipeClientStream.Connect()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Connects to a waiting server with an infinite time-out value.
  remarks: "This method calls the <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> method with an infinite time-out value.  \n  \n This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned.  \n  \n Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>."
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: public void Connect ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The client is already connected.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  id: Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: NamedPipeClientStream.Connect(Int32)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Connects to a waiting server within the specified time-out period.
  remarks: "This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream>, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned. You set the `timeout` parameter to <xref:System.Threading.Timeout.Infinite> to specify an infinite time-out value.  \n  \n Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>."
  syntax:
    content: public void Connect (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: The number of milliseconds to wait for the server to respond before the connection times out.
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: Could not connect to the server within the specified <code>timeout</code> period.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>timeout</code> is less than 0 and not set to <xref href="System.Threading.Timeout.Infinite"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The client is already connected.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The server is connected to another client and the time-out period has expired.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  id: ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: NamedPipeClientStream.ConnectAsync()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Asynchronously connects to a waiting server with an infinite timeout period.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous connect operation.
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  id: ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: NamedPipeClientStream.ConnectAsync(Int32)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Asynchronously connects to a waiting server within the specified timeout period.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: The number of milliseconds to wait for the server to respond before the connection times out.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous connect operation.
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  id: ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: NamedPipeClientStream.ConnectAsync(CancellationToken)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Asynchronously connects to a waiting server and monitors cancellation requests.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous connect operation.
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  id: ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32, CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)
  fullName: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: timeout
      type: System.Int32
      description: The number of milliseconds to wait for the server to respond before the connection times out.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous connect operation.
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  commentId: M:System.IO.Pipes.NamedPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: NamedPipeClientStream.Finalize()
  type: Method
  assemblies:
  - System.IO.Pipes
  - System.Core
  namespace: System.IO.Pipes
  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href="System.IO.Pipes.NamedPipeClientStream"></xref> instance is reclaimed by garbage collection.
  syntax:
    content: ~NamedPipeClientStream ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Finalize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  commentId: P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  id: NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: NamedPipeClientStream.NumberOfServerInstances
  type: Property
  assemblies:
  - System.IO.Pipes
  - System.Core
  - netstandard
  namespace: System.IO.Pipes
  summary: Gets the number of server instances that share the same pipe name.
  remarks: This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to. If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>.
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. In this example, a <xref:System.IO.Pipes.NamedPipeClientStream> object is created in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-csharp[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/cs/Program.cs#01)]\n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeClientStream_Sample1/vb/program.vb#01)]"
  syntax:
    content: public int NumberOfServerInstances { get; }
    return:
      type: System.Int32
      description: The number of server instances that share the same pipe name.
  overload: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The pipe handle has not been set.  \n  \n -or-  \n  \n The current <xref href=\"System.IO.Pipes.NamedPipeClientStream\"></xref> object has not yet connected to a <xref href=\"System.IO.Pipes.NamedPipeServerStream\"></xref> object."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The pipe is broken or an I/O error occurred.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The underlying pipe handle is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.IO.Pipes.PipeStream
  parent: System.IO.Pipes
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.TimeoutException
  parent: System
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.TimeoutException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String, String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String)
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String, String, PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
  fullName: NamedPipeClientStream.NamedPipeClientStream(PipeDirection, Boolean, Boolean, SafePipeHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions)
- uid: System.IO.Pipes.PipeOptions
  parent: System.IO.Pipes
  isExternal: false
  name: PipeOptions
  nameWithType: PipeOptions
  fullName: System.IO.Pipes.PipeOptions
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeAccessRights, PipeOptions, TokenImpersonationLevel, HandleInheritability)
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: false
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)
  fullName: NamedPipeClientStream.NamedPipeClientStream(String, String, PipeDirection, PipeOptions, TokenImpersonationLevel, HandleInheritability)
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: NamedPipeClientStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: NamedPipeClientStream.Connect()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: NamedPipeClientStream.Connect(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: NamedPipeClientStream.ConnectAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: NamedPipeClientStream.ConnectAsync(Int32)
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: NamedPipeClientStream.ConnectAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32, CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)
  fullName: NamedPipeClientStream.ConnectAsync(Int32, CancellationToken)
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: NamedPipeClientStream.Finalize()
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: NamedPipeClientStream.NumberOfServerInstances
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream.NamedPipeClientStream
  fullName: NamedPipeClientStream.NamedPipeClientStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations
  fullName: NamedPipeClientStream.CheckPipePropertyOperations
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.IO.Pipes.NamedPipeClientStream.Connect*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect
  nameWithType: NamedPipeClientStream.Connect
  fullName: NamedPipeClientStream.Connect
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync
  nameWithType: NamedPipeClientStream.ConnectAsync
  fullName: NamedPipeClientStream.ConnectAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize
  nameWithType: NamedPipeClientStream.Finalize
  fullName: NamedPipeClientStream.Finalize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: NamedPipeClientStream.NumberOfServerInstances
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/NamedPipeClientStream.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: PipeStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: PipeStream.CanSeek
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: Stream.CanTimeout
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: PipeStream.CanWrite
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: false
  name: Close()
  nameWithType: Stream.Close()
  fullName: Stream.Close()
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: Stream.CopyTo(Stream, Int32)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: Stream.CopyTo(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: Stream.CopyToAsync(Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: Stream.CopyToAsync(Stream, Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: false
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: Stream.CreateWaitHandle()
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: Stream.Dispose()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: PipeStream.Flush()
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: Stream.FlushAsync()
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: Stream.FlushAsync(CancellationToken)
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: PipeStream.Length
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  name: "Null"
  nameWithType: Stream.Null
  fullName: Stream.Null
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: false
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: Stream.ObjectInvariant()
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: PipeStream.Read(Byte[], Int32, Int32)
  fullName: PipeStream.Read(Byte[], Int32, Int32)
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: Stream.ReadAsync(Byte[], Int32, Int32)
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: PipeStream.ReadByte()
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: Stream.ReadTimeout
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64, SeekOrigin)
  nameWithType: PipeStream.Seek(Int64, SeekOrigin)
  fullName: PipeStream.Seek(Int64, SeekOrigin)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: PipeStream.SetLength(Int64)
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: Stream.Synchronized(Stream)
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: PipeStream.Write(Byte[], Int32, Int32)
  fullName: PipeStream.Write(Byte[], Int32, Int32)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: Stream.WriteAsync(Byte[], Int32, Int32)
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: PipeStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: PipeStream.WriteByte(Byte)
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: Stream.WriteTimeout
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle, Boolean, Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
  fullName: PipeStream.InitializeHandle(SafePipeHandle, Boolean, Boolean)
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)
  parent: System.IO.Pipes.PipesAclExtensions
  isExternal: false
  name: GetAccessControl(PipeStream)
  nameWithType: PipesAclExtensions.GetAccessControl(PipeStream)
  fullName: PipesAclExtensions.GetAccessControl(PipeStream)
- uid: System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipesAclExtensions
  isExternal: false
  name: SetAccessControl(PipeStream, PipeSecurity)
  nameWithType: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)
  fullName: PipesAclExtensions.SetAccessControl(PipeStream, PipeSecurity)
