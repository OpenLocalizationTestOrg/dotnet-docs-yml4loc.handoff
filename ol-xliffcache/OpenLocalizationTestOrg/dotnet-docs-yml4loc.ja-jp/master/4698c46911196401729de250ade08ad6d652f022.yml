### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadLocal`1
  commentId: T:System.Threading.ThreadLocal`1
  id: ThreadLocal`1
  children:
  - System.Threading.ThreadLocal`1.#ctor
  - System.Threading.ThreadLocal`1.#ctor(System.Boolean)
  - System.Threading.ThreadLocal`1.#ctor(System.Func{`0})
  - System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)
  - System.Threading.ThreadLocal`1.Dispose
  - System.Threading.ThreadLocal`1.Dispose(System.Boolean)
  - System.Threading.ThreadLocal`1.Finalize
  - System.Threading.ThreadLocal`1.IsValueCreated
  - System.Threading.ThreadLocal`1.ToString
  - System.Threading.ThreadLocal`1.Value
  - System.Threading.ThreadLocal`1.Values
  langs:
  - csharp
  name: ThreadLocal<T>
  nameWithType: ThreadLocal<T>
  fullName: System.Threading.ThreadLocal<T>
  type: Class
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Provides thread-local storage of data.
  remarks: ''
  example:
  - "The following example shows how to use <xref:System.Threading.ThreadLocal%601>:  \n  \n [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]\n [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]"
  syntax:
    content: 'public class ThreadLocal<T> : IDisposable'
    typeParameters:
    - id: T
      description: Specifies the type of data stored per-thread.
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.#ctor
  commentId: M:System.Threading.ThreadLocal`1.#ctor
  id: '#ctor'
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: ThreadLocal<T>()
  nameWithType: ThreadLocal<T>.ThreadLocal<T>()
  fullName: ThreadLocal<T>.ThreadLocal<T>()
  type: Constructor
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Initializes the <xref href="System.Threading.ThreadLocal`1"></xref> instance.
  remarks: "The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.  \n  \n This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument."
  syntax:
    content: public ThreadLocal ();
    parameters: []
  overload: System.Threading.ThreadLocal`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.#ctor(System.Boolean)
  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: ThreadLocal<T>(Boolean)
  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Boolean)
  fullName: ThreadLocal<T>.ThreadLocal<T>(Boolean)
  type: Constructor
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Initializes the <xref href="System.Threading.ThreadLocal`1"></xref> instance and specifies whether all values are accessible from any thread.
  remarks: If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.
  syntax:
    content: public ThreadLocal (bool trackAllValues);
    parameters:
    - id: trackAllValues
      type: System.Boolean
      description: '`true` to track all values set on the instance and expose them through the <xref href="System.Threading.ThreadLocal`1.Values"></xref> property; `false` otherwise.'
  overload: System.Threading.ThreadLocal`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0})
  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: ThreadLocal<T>(Func<T>)
  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>)
  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>)
  type: Constructor
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Initializes the <xref href="System.Threading.ThreadLocal`1"></xref> instance with the specified <code>valueFactory</code> function.
  syntax:
    content: public ThreadLocal (Func<T> valueFactory);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: The  <xref href="System.Func`1"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href="System.Threading.ThreadLocal`1.Value"></xref> without it having been previously initialized.
  overload: System.Threading.ThreadLocal`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>valueFactory</code> is a null reference (Nothing in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)
  commentId: M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)
  id: '#ctor(System.Func{`0},System.Boolean)'
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: ThreadLocal<T>(Func<T>, Boolean)
  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)
  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)
  type: Constructor
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Initializes the <xref href="System.Threading.ThreadLocal`1"></xref> instance with the specified <code>valueFactory</code> function and a flag that indicates whether all values are accessible from any thread.
  remarks: If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible. Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.
  syntax:
    content: public ThreadLocal (Func<T> valueFactory, bool trackAllValues);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: The <xref href="System.Func`1"></xref> invoked to produce a lazily-initialized value when an attempt is made to retrieve <xref href="System.Threading.ThreadLocal`1.Value"></xref> without it having been previously initialized.
    - id: trackAllValues
      type: System.Boolean
      description: '`true` to track all values set on the instance and expose them through the <xref href="System.Threading.ThreadLocal`1.Values"></xref> property; `false` otherwise.'
  overload: System.Threading.ThreadLocal`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>valueFactory</code> is a `null` reference (`Nothing` in Visual Basic).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.Dispose
  commentId: M:System.Threading.ThreadLocal`1.Dispose
  id: Dispose
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: Dispose()
  nameWithType: ThreadLocal<T>.Dispose()
  fullName: ThreadLocal<T>.Dispose()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Releases all resources used by the current instance of the <xref href="System.Threading.ThreadLocal`1"></xref> class.
  remarks: "Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>. The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Threading.ThreadLocal`1.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.Dispose(System.Boolean)
  commentId: M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ThreadLocal<T>.Dispose(Boolean)
  fullName: ThreadLocal<T>.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Releases the resources used by this <xref href="System.Threading.ThreadLocal`1"></xref> instance.
  remarks: Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: A Boolean value that indicates whether this method is being called due to a call to <xref href="System.Threading.ThreadLocal`1.Dispose"></xref>.
  overload: System.Threading.ThreadLocal`1.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.Finalize
  commentId: M:System.Threading.ThreadLocal`1.Finalize
  id: Finalize
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: Finalize()
  nameWithType: ThreadLocal<T>.Finalize()
  fullName: ThreadLocal<T>.Finalize()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Releases the resources used by this <xref href="System.Threading.ThreadLocal`1"></xref> instance.
  syntax:
    content: ~ThreadLocal`1 ();
    parameters: []
  overload: System.Threading.ThreadLocal`1.Finalize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.IsValueCreated
  commentId: P:System.Threading.ThreadLocal`1.IsValueCreated
  id: IsValueCreated
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: IsValueCreated
  nameWithType: ThreadLocal<T>.IsValueCreated
  fullName: ThreadLocal<T>.IsValueCreated
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets whether <xref href="System.Threading.ThreadLocal`1.Value"></xref> is initialized on the current thread.
  syntax:
    content: public bool IsValueCreated { get; }
    return:
      type: System.Boolean
      description: true if <xref href="System.Threading.ThreadLocal`1.Value"></xref> is initialized on the current thread; otherwise false.
  overload: System.Threading.ThreadLocal`1.IsValueCreated*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Threading.ThreadLocal`1"></xref> instance has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.ToString
  commentId: M:System.Threading.ThreadLocal`1.ToString
  id: ToString
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: ToString()
  nameWithType: ThreadLocal<T>.ToString()
  fullName: ThreadLocal<T>.ToString()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Creates and returns a string representation of this instance for the current thread.
  remarks: Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The result of calling <xref href="System.Object.ToString"></xref> on the <xref href="System.Threading.ThreadLocal`1.Value"></xref>.
  overload: System.Threading.ThreadLocal`1.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Threading.ThreadLocal`1"></xref> instance has been disposed.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The <xref href="System.Threading.ThreadLocal`1.Value"></xref> for the current thread is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The initialization function attempted to reference <xref href="System.Threading.ThreadLocal`1.Value"></xref> recursively.
  - type: System.MissingMemberException
    commentId: T:System.MissingMemberException
    description: No default constructor is provided and no value factory is supplied.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.Value
  commentId: P:System.Threading.ThreadLocal`1.Value
  id: Value
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: Value
  nameWithType: ThreadLocal<T>.Value
  fullName: ThreadLocal<T>.Value
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets or sets the value of this instance for the current thread.
  remarks: If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it. If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>. Otherwise, the default value of will be used. If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.
  syntax:
    content: public T Value { get; set; }
    return:
      type: T
      description: Returns an instance of the object that this ThreadLocal is responsible for initializing.
  overload: System.Threading.ThreadLocal`1.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Threading.ThreadLocal`1"></xref> instance has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The initialization function attempted to reference <xref href="System.Threading.ThreadLocal`1.Value"></xref> recursively.
  - type: System.MissingMemberException
    commentId: T:System.MissingMemberException
    description: No default constructor is provided and no value factory is supplied.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.ThreadLocal`1.Values
  commentId: P:System.Threading.ThreadLocal`1.Values
  id: Values
  parent: System.Threading.ThreadLocal`1
  langs:
  - csharp
  name: Values
  nameWithType: ThreadLocal<T>.Values
  fullName: ThreadLocal<T>.Values
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets a list for all of the values currently stored by all of the threads that have accessed this instance.
  syntax:
    content: public System.Collections.Generic.IList<T> Values { get; }
    return:
      type: System.Collections.Generic.IList`1
      description: A list for all of the values currently stored by all of the threads that have accessed this instance.
  overload: System.Threading.ThreadLocal`1.Values*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Values stored by all threads are not available because this instance was initialized with the <code>trackAllValues</code> argument set to `false` in the call to a class constructor.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Threading.ThreadLocal`1"></xref> instance has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NullReferenceException
  parent: System
  isExternal: false
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.MissingMemberException
  parent: System
  isExternal: false
  name: MissingMemberException
  nameWithType: MissingMemberException
  fullName: System.MissingMemberException
- uid: System.Threading.ThreadLocal`1.#ctor
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ThreadLocal<T>()
  nameWithType: ThreadLocal<T>.ThreadLocal<T>()
  fullName: ThreadLocal<T>.ThreadLocal<T>()
- uid: System.Threading.ThreadLocal`1.#ctor(System.Boolean)
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ThreadLocal<T>(Boolean)
  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Boolean)
  fullName: ThreadLocal<T>.ThreadLocal<T>(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0})
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ThreadLocal<T>(Func<T>)
  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>)
  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>)
- uid: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{T}
  parent: System
  isExternal: false
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ThreadLocal<T>(Func<T>, Boolean)
  nameWithType: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)
  fullName: ThreadLocal<T>.ThreadLocal<T>(Func<T>, Boolean)
- uid: System.Threading.ThreadLocal`1.Dispose
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Dispose()
  nameWithType: ThreadLocal<T>.Dispose()
  fullName: ThreadLocal<T>.Dispose()
- uid: System.Threading.ThreadLocal`1.Dispose(System.Boolean)
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ThreadLocal<T>.Dispose(Boolean)
  fullName: ThreadLocal<T>.Dispose(Boolean)
- uid: System.Threading.ThreadLocal`1.Finalize
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Finalize()
  nameWithType: ThreadLocal<T>.Finalize()
  fullName: ThreadLocal<T>.Finalize()
- uid: System.Threading.ThreadLocal`1.IsValueCreated
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: IsValueCreated
  nameWithType: ThreadLocal<T>.IsValueCreated
  fullName: ThreadLocal<T>.IsValueCreated
- uid: System.Threading.ThreadLocal`1.ToString
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ToString()
  nameWithType: ThreadLocal<T>.ToString()
  fullName: ThreadLocal<T>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.ThreadLocal`1.Value
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Value
  nameWithType: ThreadLocal<T>.Value
  fullName: ThreadLocal<T>.Value
- uid: System.Threading.ThreadLocal`1.Values
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Values
  nameWithType: ThreadLocal<T>.Values
  fullName: ThreadLocal<T>.Values
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Threading.ThreadLocal`1.#ctor*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ThreadLocal<T>
  nameWithType: ThreadLocal<T>.ThreadLocal<T>
  fullName: ThreadLocal<T>.ThreadLocal<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Threading.ThreadLocal`1.Dispose*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Dispose
  nameWithType: ThreadLocal<T>.Dispose
  fullName: ThreadLocal<T>.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Threading.ThreadLocal`1.Finalize*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Finalize
  nameWithType: ThreadLocal<T>.Finalize
  fullName: ThreadLocal<T>.Finalize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Threading.ThreadLocal`1.IsValueCreated*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: IsValueCreated
  nameWithType: ThreadLocal<T>.IsValueCreated
  fullName: ThreadLocal<T>.IsValueCreated
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Threading.ThreadLocal`1.ToString*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: ToString
  nameWithType: ThreadLocal<T>.ToString
  fullName: ThreadLocal<T>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Threading.ThreadLocal`1.Value*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Value
  nameWithType: ThreadLocal<T>.Value
  fullName: ThreadLocal<T>.Value
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Threading.ThreadLocal`1.Values*
  parent: System.Threading.ThreadLocal`1
  isExternal: false
  name: Values
  nameWithType: ThreadLocal<T>.Values
  fullName: ThreadLocal<T>.Values
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ThreadLocal`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
