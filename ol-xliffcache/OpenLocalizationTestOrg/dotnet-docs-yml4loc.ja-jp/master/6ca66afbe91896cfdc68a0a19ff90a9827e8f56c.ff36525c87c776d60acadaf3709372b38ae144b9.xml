{"nodes":[{"content":"Specifies the base class for all XML Web service client proxies created using ASP.NET.","nodes":[{"pos":[0,86],"content":"Specifies the base class for all XML Web service client proxies created using ASP.NET.","nodes":[{"content":"Specifies the base class for all XML Web service client proxies created using ASP.NET.","pos":[0,86]}]}],"pos":[1460,1547],"yaml":true},{"content":"The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.  \n  \n To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.","nodes":[{"pos":[0,464],"content":"The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.","nodes":[{"content":"The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.","pos":[0,464],"nodes":[{"content":"The properties of the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class are used to control the behavior of the transport used to transmit the XML Web service request and response.","pos":[0,191],"source":"The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response."},{"content":"The properties on this class map to properties found on <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph>.","pos":[192,277],"source":" The properties on this class map to properties found on <xref:System.Net.WebRequest>."},{"content":"Instances of classes deriving from <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph>, such as <ph id=\"ph2\">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, are used as the transport mechanism for XML Web services created using ASP.NET.","pos":[278,464],"source":" Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET."}]}]},{"pos":[471,1397],"content":"To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.","nodes":[{"content":"To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.","pos":[0,926],"nodes":[{"content":"To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> for the XML Web service you want to call.","pos":[0,203],"source":"To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call."},{"content":"Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.","pos":[204,354]},{"content":"Since <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> is the base class for your client proxy, you will find its properties on your proxy classes.","pos":[355,508],"source":" Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes."},{"content":"These properties are useful for controlling the request behavior of the underlying transport.","pos":[509,602]},{"content":"For instance, use the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt;</ph> property for calling authenticated XML Web services.","pos":[603,747],"source":" For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services."},{"content":"Many of the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> properties are used to initialize the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> object that is used to make the Web request.","pos":[748,926],"source":" Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request."}]}]}],"pos":[1558,2960],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.WebClientProtocol\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.WebClientProtocol\"></xref> class."}],"pos":[6508,6618],"yaml":true},{"content":"Cancels a request to an XML Web service method.","nodes":[{"pos":[0,47],"content":"Cancels a request to an XML Web service method.","nodes":[{"content":"Cancels a request to an XML Web service method.","pos":[0,47]}]}],"pos":[8512,8560],"yaml":true},{"content":"Add an instance of the client protocol handler to the cache.","nodes":[{"pos":[0,60],"content":"Add an instance of the client protocol handler to the cache.","nodes":[{"content":"Add an instance of the client protocol handler to the cache.","pos":[0,60]}]}],"pos":[9953,10014],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the client protocol handler..","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the client protocol handler..","source":"The <xref href=\"System.Type\"></xref> of the client protocol handler.."}],"pos":[10171,10241],"yaml":true},{"content":"The client protocol handler to be added to the cache.","nodes":[{"pos":[0,53],"content":"The client protocol handler to be added to the cache.","nodes":[{"content":"The client protocol handler to be added to the cache.","pos":[0,53]}]}],"pos":[10302,10356],"yaml":true},{"content":"Gets or sets the name of the connection group for the request.","nodes":[{"pos":[0,62],"content":"Gets or sets the name of the connection group for the request.","nodes":[{"content":"Gets or sets the name of the connection group for the request.","pos":[0,62]}]}],"pos":[11615,11678],"yaml":true},{"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.","nodes":[{"pos":[0,227],"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.","nodes":[{"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.","pos":[0,227],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A&gt;</ph> property enables you to associate a request to a connection group.","pos":[0,148],"source":"The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group."},{"content":"For more details, see <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph>.","pos":[149,227],"source":" For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>."}]}]}],"pos":[11689,11917],"yaml":true,"extradata":"MT"},{"content":"The name of the connection group. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,90],"content":"The name of the connection group. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"The name of the connection group.","pos":[0,33]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[34,90],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[12045,12136],"yaml":true},{"content":"Gets or sets security credentials for XML Web service client authentication.","nodes":[{"pos":[0,76],"content":"Gets or sets security credentials for XML Web service client authentication.","nodes":[{"content":"Gets or sets security credentials for XML Web service client authentication.","pos":[0,76]}]}],"pos":[13373,13450],"yaml":true},{"content":"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism. The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.  \n  \n When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.","nodes":[{"pos":[0,418],"content":"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism. The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.","nodes":[{"content":"When using the <ph id=\"ph1\">`Credentials`</ph> property, a XML Web service client must instantiate a class implementing <ph id=\"ph2\">&lt;xref:System.Net.ICredentials&gt;</ph>, such as <ph id=\"ph3\">&lt;xref:System.Net.NetworkCredential&gt;</ph>, and then set the client credentials specific to the authentication mechanism.","pos":[0,256],"source":"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkCredential&gt;</ph> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.","pos":[257,418],"source":" The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms."}]},{"pos":[425,731],"content":"When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt;</ph> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.","pos":[0,306],"source":"When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured."}]}],"pos":[13461,14197],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.ICredentials\"></xref> for the XML Web service client.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.ICredentials\"&gt;&lt;/xref&gt;</ph> for the XML Web service client.","source":"The <xref href=\"System.Net.ICredentials\"></xref> for the XML Web service client."}],"pos":[15386,15467],"yaml":true},{"content":"Gets an instance of a client protocol handler from the cache.","nodes":[{"pos":[0,61],"content":"Gets an instance of a client protocol handler from the cache.","nodes":[{"content":"Gets an instance of a client protocol handler from the cache.","pos":[0,61]}]}],"pos":[16740,16802],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the client protocol handler to be returned from the cache.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the client protocol handler to be returned from the cache.","source":"The <xref href=\"System.Type\"></xref> of the client protocol handler to be returned from the cache."}],"pos":[16949,17048],"yaml":true},{"content":"An instance of a client protocol handler from the cache.","nodes":[{"pos":[0,56],"content":"An instance of a client protocol handler from the cache.","nodes":[{"content":"An instance of a client protocol handler from the cache.","pos":[0,56]}]}],"pos":[17105,17162],"yaml":true},{"content":"Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified <code>uri</code>. This protected method is called by the XML Web service client infrastructure to get a new <xref href=\"System.Net.WebRequest\"></xref> transport object to transmit the XML Web service request.","nodes":[{"pos":[0,288],"content":"Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified <code>uri</code>. This protected method is called by the XML Web service client infrastructure to get a new <xref href=\"System.Net.WebRequest\"></xref> transport object to transmit the XML Web service request.","nodes":[{"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> instance for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,97],"source":"Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified <code>uri</code>."},{"content":"This protected method is called by the XML Web service client infrastructure to get a new <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> transport object to transmit the XML Web service request.","pos":[98,288],"source":" This protected method is called by the XML Web service client infrastructure to get a new <xref href=\"System.Net.WebRequest\"></xref> transport object to transmit the XML Web service request."}]}],"pos":[18436,18725],"yaml":true},{"content":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","nodes":[{"pos":[0,184],"content":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","nodes":[{"content":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","pos":[0,184],"nodes":[{"content":"This method can be overridden to customize the <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> object before the XML Web service request is made.","pos":[0,126],"source":"This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made."},{"content":"For example you could add a custom header to the request.","pos":[127,184]}]}]}],"pos":[18736,18921],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Uri\"></xref> to use when creating the <xref href=\"System.Net.WebRequest\"></xref>.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> to use when creating the <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Uri\"></xref> to use when creating the <xref href=\"System.Net.WebRequest\"></xref>."}],"pos":[19081,19186],"yaml":true},{"content":"The <xref href=\"System.Net.WebRequest\"></xref> instance.","nodes":[{"pos":[0,56],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Net.WebRequest\"></xref> instance."}],"pos":[19251,19308],"yaml":true},{"content":"The <code>uri</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>uri</code> parameter is `null`."}],"pos":[19507,19549],"yaml":true},{"content":"Returns a response from a synchronous request to an XML Web service method.","nodes":[{"pos":[0,75],"content":"Returns a response from a synchronous request to an XML Web service method.","nodes":[{"content":"Returns a response from a synchronous request to an XML Web service method.","pos":[0,75]}]}],"pos":[20792,20868],"yaml":true},{"content":"The <xref href=\"System.Net.WebRequest\"></xref> to get the response from.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> to get the response from.","source":"The <xref href=\"System.Net.WebRequest\"></xref> to get the response from."}],"pos":[21067,21140],"yaml":true},{"content":"A response from a synchronous request to an XML Web service method.","nodes":[{"pos":[0,67],"content":"A response from a synchronous request to an XML Web service method.","nodes":[{"content":"A response from a synchronous request to an XML Web service method.","pos":[0,67]}]}],"pos":[21206,21274],"yaml":true},{"content":"If <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"></xref> is invoked prior to calling <xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"></xref>.","nodes":[{"pos":[0,213],"content":"If <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"&gt;&lt;/xref&gt;</ph> is invoked prior to calling <ph id=\"ph2\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"&gt;&lt;/xref&gt;</ph>.","source":"If <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"></xref> is invoked prior to calling <xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"></xref>."}],"pos":[21456,21670],"yaml":true},{"content":"Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","nodes":[{"pos":[0,220],"content":"Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","nodes":[{"content":"Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","pos":[0,220],"nodes":[{"content":"Returns a response from an asynchronous request to an XML Web service method.","pos":[0,77]},{"content":"This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.","pos":[78,220]}]}]}],"pos":[23015,23236],"yaml":true},{"content":"The <xref href=\"System.Net.WebRequest\"></xref> to get the response from.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> to get the response from.","source":"The <xref href=\"System.Net.WebRequest\"></xref> to get the response from."}],"pos":[23456,23529],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> to pass to <xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"></xref> when the response has completed.","nodes":[{"pos":[0,171],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> to pass to <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> when the response has completed.","source":"The <xref href=\"System.IAsyncResult\"></xref> to pass to <xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"></xref> when the response has completed."}],"pos":[23597,23769],"yaml":true},{"content":"A response from an asynchronous request to an XML Web service method.","nodes":[{"pos":[0,69],"content":"A response from an asynchronous request to an XML Web service method.","nodes":[{"content":"A response from an asynchronous request to an XML Web service method.","pos":[0,69]}]}],"pos":[23835,23905],"yaml":true},{"content":"If <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"></xref> is invoked prior to calling <xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"></xref>.","nodes":[{"pos":[0,213],"content":"If <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"&gt;&lt;/xref&gt;</ph> is invoked prior to calling <ph id=\"ph2\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"&gt;&lt;/xref&gt;</ph>.","source":"If <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"></xref> is invoked prior to calling <xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"></xref>."}],"pos":[24087,24301],"yaml":true},{"content":"Gets or sets whether pre-authentication is enabled.","nodes":[{"pos":[0,51],"content":"Gets or sets whether pre-authentication is enabled.","nodes":[{"content":"Gets or sets whether pre-authentication is enabled.","pos":[0,51]}]}],"pos":[25447,25499],"yaml":true},{"content":"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports. The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server. When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests.  \n  \n When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user. If the XML Web service allows anonymous access, then the XML Web service method is executed. If anonymous access is disallowed, a 401 HTTP return code is sent back to the client. In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server. If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.","nodes":[{"pos":[0,418],"content":"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports. The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server. When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests.","nodes":[{"content":"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports.","pos":[0,149]},{"content":"The client chooses an authentication scheme and sends the appropriate <ph id=\"ph1\">`WWW-authenticate`</ph> header to the server.","pos":[150,260],"source":" The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">`WWW-authenticate`</ph> header is sent with all subsequent requests.","pos":[261,418],"source":" When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests."}]},{"pos":[425,1098],"content":"When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user. If the XML Web service allows anonymous access, then the XML Web service method is executed. If anonymous access is disallowed, a 401 HTTP return code is sent back to the client. In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server. If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.","nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, a request is made to the XML Web service method without initially attempting to authenticate the user.","pos":[0,193],"source":"When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user."},{"content":"If the XML Web service allows anonymous access, then the XML Web service method is executed.","pos":[194,286]},{"content":"If anonymous access is disallowed, a 401 HTTP return code is sent back to the client.","pos":[287,372]},{"content":"In response, the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class returns authentication credentials to the Web server.","pos":[373,504],"source":" In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server."},{"content":"If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.","pos":[505,673]}]}],"pos":[25510,26613],"yaml":true,"extradata":"MT"},{"content":"`true` to pre-authenticate the request; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,83],"content":"`true` to pre-authenticate the request; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to pre-authenticate the request; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,59],"source":"`true` to pre-authenticate the request; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[60,83],"source":" The default is `false`."}]}],"pos":[26736,26822],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> used to make the client request to the XML Web service.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> used to make the client request to the XML Web service.","source":"The <xref href=\"System.Text.Encoding\"></xref> used to make the client request to the XML Web service."}],"pos":[28079,28181],"yaml":true},{"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.  \n  \n Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.","nodes":[{"pos":[0,232],"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.","nodes":[{"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.","pos":[0,232],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A&gt;</ph> determines the encoding for the request message.","pos":[0,126],"source":"The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> of the request will be annotated with the encoding value.","pos":[127,232],"source":" The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value."}]}]},{"pos":[239,623],"content":"Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.","nodes":[{"content":"Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.","pos":[0,384],"nodes":[{"content":"Classes deriving from <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> support a particular protocol, such as <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph> does for SOAP, set this property to conform to encoding requirements for the specific protocol.","pos":[0,271],"source":"Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph> sets the default encoding to UTF-8.","pos":[272,384],"source":" For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8."}]}]}],"pos":[28192,28820],"yaml":true,"extradata":"MT"},{"content":"The character encoding for the client request. The default is `null`, which uses the default encoding for the underlying transport and protocol.","nodes":[{"pos":[0,144],"content":"The character encoding for the client request. The default is `null`, which uses the default encoding for the underlying transport and protocol.","nodes":[{"content":"The character encoding for the client request.","pos":[0,46]},{"content":"The default is <ph id=\"ph1\">`null`</ph>, which uses the default encoding for the underlying transport and protocol.","pos":[47,144],"source":" The default is `null`, which uses the default encoding for the underlying transport and protocol."}]}],"pos":[29969,30114],"yaml":true},{"content":"Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).","nodes":[{"pos":[0,134],"content":"Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).","nodes":[{"content":"Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).","pos":[0,134]}]}],"pos":[31323,31458],"yaml":true},{"content":"Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.","nodes":[{"pos":[0,418],"content":"Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.","nodes":[{"content":"Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.","pos":[0,418],"nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;</ph> indicates that the request does not time out.","pos":[0,201],"source":"Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out."},{"content":"Even though an XML Web service client can set the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A&gt;</ph> property to not time out, the Web server can still cause the request to time out on the server side.","pos":[202,418],"source":" Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side."}]}]}],"pos":[31469,31888],"yaml":true,"extradata":"MT"},{"content":"The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.","nodes":[{"pos":[0,112],"content":"The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.","nodes":[{"content":"The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.","pos":[0,112],"nodes":[{"content":"The time out, in milliseconds, for synchronous calls to the XML Web service.","pos":[0,76]},{"content":"The default is 100000 milliseconds.","pos":[77,112]}]}]}],"pos":[32686,32799],"yaml":true},{"content":"Gets or sets the base URL of the XML Web service the client is requesting.","nodes":[{"pos":[0,74],"content":"Gets or sets the base URL of the XML Web service the client is requesting.","nodes":[{"content":"Gets or sets the base URL of the XML Web service the client is requesting.","pos":[0,74]}]}],"pos":[33976,34051],"yaml":true},{"content":"Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use. The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.  \n  \n Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request.  \n  \n The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.","nodes":[{"pos":[0,340],"content":"Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use. The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.","nodes":[{"content":"Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use. The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.","pos":[0,340],"nodes":[{"content":"Proxy classes generated using Wsdl.exe will set a default <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property for the client to use.","pos":[0,151],"source":"Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> is determined by the location attribute found in the service description from which the proxy class was generated.","pos":[152,340],"source":" The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated."}]}]},{"pos":[347,654],"content":"Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request.","nodes":[{"content":"Derived classes supporting specific protocols, such as <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt;</ph> might add extra information to <ph id=\"ph3\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> to make the XML Web service request.","pos":[0,307],"source":"Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request."}]},{"pos":[661,868],"content":"The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.","pos":[0,207],"source":"The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from."}]}],"pos":[34062,34937],"yaml":true,"extradata":"MT"},{"content":"The base URL of the XML Web service the client is requesting. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,118],"content":"The base URL of the XML Web service the client is requesting. The default is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"The base URL of the XML Web service the client is requesting.","pos":[0,61]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[62,118],"source":" The default is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[35733,35852],"yaml":true},{"content":"Gets or sets a value that indicates whether to set the <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Credentials\"></xref> property to the value of the <xref href=\"System.Net.CredentialCache.DefaultCredentials\"></xref> property.","nodes":[{"pos":[0,241],"content":"Gets or sets a value that indicates whether to set the <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.WebClientProtocol.Credentials\"&gt;&lt;/xref&gt;</ph> property to the value of the <ph id=\"ph2\">&lt;xref href=\"System.Net.CredentialCache.DefaultCredentials\"&gt;&lt;/xref&gt;</ph> property.","source":"Gets or sets a value that indicates whether to set the <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Credentials\"></xref> property to the value of the <xref href=\"System.Net.CredentialCache.DefaultCredentials\"></xref> property."}],"pos":[37133,37375],"yaml":true},{"content":"`true` if the Credentials property is set to the value of the <xref href=\"System.Net.CredentialCache.DefaultCredentials\"></xref> property; otherwise, `false`.","nodes":[{"pos":[0,158],"content":"<ph id=\"ph1\">`true`</ph> if the Credentials property is set to the value of the <ph id=\"ph2\">&lt;xref href=\"System.Net.CredentialCache.DefaultCredentials\"&gt;&lt;/xref&gt;</ph> property; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the Credentials property is set to the value of the <xref href=\"System.Net.CredentialCache.DefaultCredentials\"></xref> property; otherwise, `false`."}],"pos":[37504,37665],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.WebClientProtocol\n  commentId: T:System.Web.Services.Protocols.WebClientProtocol\n  id: WebClientProtocol\n  children:\n  - System.Web.Services.Protocols.WebClientProtocol.#ctor\n  - System.Web.Services.Protocols.WebClientProtocol.Abort\n  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  - System.Web.Services.Protocols.WebClientProtocol.Credentials\n  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  - System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  - System.Web.Services.Protocols.WebClientProtocol.Timeout\n  - System.Web.Services.Protocols.WebClientProtocol.Url\n  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  langs:\n  - csharp\n  name: WebClientProtocol\n  nameWithType: WebClientProtocol\n  fullName: System.Web.Services.Protocols.WebClientProtocol\n  type: Class\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Specifies the base class for all XML Web service client proxies created using ASP.NET.\n  remarks: \"The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response. The properties on this class map to properties found on <xref:System.Net.WebRequest>. Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.  \\n  \\n To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description. Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services. Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic WebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic WebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class WebClientProtocol : System.ComponentModel.Component\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  derivedClasses:\n  - System.Web.Services.Protocols.HttpWebClientProtocol\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: WebClientProtocol()\n  nameWithType: WebClientProtocol.WebClientProtocol()\n  fullName: WebClientProtocol.WebClientProtocol()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.WebClientProtocol\"></xref> class.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CPP/class1.cpp#1)]\n     [!code-csharp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CS/class1.cs#1)]\n     [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/VB/class1.vb#1)]\n  syntax:\n    content: protected WebClientProtocol ();\n    parameters: []\n  overload: System.Web.Services.Protocols.WebClientProtocol.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.Abort\n  id: Abort\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: WebClientProtocol.Abort()\n  fullName: WebClientProtocol.Abort()\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Cancels a request to an XML Web service method.\n  syntax:\n    content: public virtual void Abort ();\n    parameters: []\n  overload: System.Web.Services.Protocols.WebClientProtocol.Abort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  id: AddToCache(System.Type,System.Object)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: AddToCache(Type, Object)\n  nameWithType: WebClientProtocol.AddToCache(Type, Object)\n  fullName: WebClientProtocol.AddToCache(Type, Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Add an instance of the client protocol handler to the cache.\n  syntax:\n    content: protected static void AddToCache (Type type, object value);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the client protocol handler..\n    - id: value\n      type: System.Object\n      description: The client protocol handler to be added to the cache.\n  overload: System.Web.Services.Protocols.WebClientProtocol.AddToCache*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  id: ConnectionGroupName\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: WebClientProtocol.ConnectionGroupName\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the name of the connection group for the request.\n  remarks: The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group. For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.\n  syntax:\n    content: public string ConnectionGroupName { get; set; }\n    return:\n      type: System.String\n      description: The name of the connection group. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.Credentials\n  id: Credentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: WebClientProtocol.Credentials\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets security credentials for XML Web service client authentication.\n  remarks: \"When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism. The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.  \\n  \\n When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property. The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: The <xref href=\"System.Net.ICredentials\"></xref> for the XML Web service client.\n  overload: System.Web.Services.Protocols.WebClientProtocol.Credentials*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  id: GetFromCache(System.Type)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetFromCache(Type)\n  nameWithType: WebClientProtocol.GetFromCache(Type)\n  fullName: WebClientProtocol.GetFromCache(Type)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets an instance of a client protocol handler from the cache.\n  syntax:\n    content: protected static object GetFromCache (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the client protocol handler to be returned from the cache.\n    return:\n      type: System.Object\n      description: An instance of a client protocol handler from the cache.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  id: GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetWebRequest(Uri)\n  nameWithType: WebClientProtocol.GetWebRequest(Uri)\n  fullName: WebClientProtocol.GetWebRequest(Uri)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified <code>uri</code>. This protected method is called by the XML Web service client infrastructure to get a new <xref href=\"System.Net.WebRequest\"></xref> transport object to transmit the XML Web service request.\n  remarks: This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.\n  syntax:\n    content: protected virtual System.Net.WebRequest GetWebRequest (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> to use when creating the <xref href=\"System.Net.WebRequest\"></xref>.\n    return:\n      type: System.Net.WebRequest\n      description: The <xref href=\"System.Net.WebRequest\"></xref> instance.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>uri</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  id: GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)\n  fullName: WebClientProtocol.GetWebResponse(WebRequest)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from a synchronous request to an XML Web service method.\n  syntax:\n    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref href=\"System.Net.WebRequest\"></xref> to get the response from.\n    return:\n      type: System.Net.WebResponse\n      description: A response from a synchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: If <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"></xref> is invoked prior to calling <xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  commentId: M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest, IAsyncResult)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  fullName: WebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.\n  syntax:\n    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref href=\"System.Net.WebRequest\"></xref> to get the response from.\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> to pass to <xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"></xref> when the response has completed.\n    return:\n      type: System.Net.WebResponse\n      description: A response from an asynchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: If <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Abort\"></xref> is invoked prior to calling <xref href=\"System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  id: PreAuthenticate\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: WebClientProtocol.PreAuthenticate\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets whether pre-authentication is enabled.\n  remarks: \"When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports. The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server. When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests.  \\n  \\n When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user. If the XML Web service allows anonymous access, then the XML Web service method is executed. If anonymous access is disallowed, a 401 HTTP return code is sent back to the client. In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server. If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.\"\n  syntax:\n    content: public bool PreAuthenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to pre-authenticate the request; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  id: RequestEncoding\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: WebClientProtocol.RequestEncoding\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: The <xref href=\"System.Text.Encoding\"></xref> used to make the client request to the XML Web service.\n  remarks: \"The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message. The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.  \\n  \\n Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol. For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Text.Encoding RequestEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: The character encoding for the client request. The default is `null`, which uses the default encoding for the underlying transport and protocol.\n  overload: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.Timeout\n  id: Timeout\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: WebClientProtocol.Timeout\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).\n  remarks: Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=fullName> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.\n  example:\n  - \"The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.  \\n  \\n [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CS/source.cs#1)]\\n [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/VB/source.vb#1)]\"\n  syntax:\n    content: public int Timeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.\n  overload: System.Web.Services.Protocols.WebClientProtocol.Timeout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.Url\n  id: Url\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: WebClientProtocol.Url\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the base URL of the XML Web service the client is requesting.\n  remarks: \"Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use. The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.  \\n  \\n Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request.  \\n  \\n The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.\"\n  example:\n  - \"The following example changes the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.  \\n  \\n [!code-cpp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CS/source.cs#1)]\\n [!code-vb[Classic WebClientProtocol.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string Url { get; set; }\n    return:\n      type: System.String\n      description: The base URL of the XML Web service the client is requesting. The default is <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Web.Services.Protocols.WebClientProtocol.Url*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  commentId: P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: WebClientProtocol.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets a value that indicates whether to set the <xref href=\"System.Web.Services.Protocols.WebClientProtocol.Credentials\"></xref> property to the value of the <xref href=\"System.Net.CredentialCache.DefaultCredentials\"></xref> property.\n  syntax:\n    content: public bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the Credentials property is set to the value of the <xref href=\"System.Net.CredentialCache.DefaultCredentials\"></xref> property; otherwise, `false`.'\n  overload: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ComponentModel.Component\n  parent: System.ComponentModel\n  isExternal: false\n  name: Component\n  nameWithType: Component\n  fullName: System.ComponentModel.Component\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Net.WebException\n  parent: System.Net\n  isExternal: false\n  name: WebException\n  nameWithType: WebException\n  fullName: System.Net.WebException\n- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: WebClientProtocol()\n  nameWithType: WebClientProtocol.WebClientProtocol()\n  fullName: WebClientProtocol.WebClientProtocol()\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Abort()\n  nameWithType: WebClientProtocol.Abort()\n  fullName: WebClientProtocol.Abort()\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: AddToCache(Type, Object)\n  nameWithType: WebClientProtocol.AddToCache(Type, Object)\n  fullName: WebClientProtocol.AddToCache(Type, Object)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: WebClientProtocol.ConnectionGroupName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: WebClientProtocol.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetFromCache(Type)\n  nameWithType: WebClientProtocol.GetFromCache(Type)\n  fullName: WebClientProtocol.GetFromCache(Type)\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebRequest(Uri)\n  nameWithType: WebClientProtocol.GetWebRequest(Uri)\n  fullName: WebClientProtocol.GetWebRequest(Uri)\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: false\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)\n  fullName: WebClientProtocol.GetWebResponse(WebRequest)\n- uid: System.Net.WebResponse\n  parent: System.Net\n  isExternal: false\n  name: WebResponse\n  nameWithType: WebResponse\n  fullName: System.Net.WebResponse\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest, IAsyncResult)\n  nameWithType: WebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  fullName: WebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: WebClientProtocol.PreAuthenticate\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: WebClientProtocol.RequestEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: WebClientProtocol.Timeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: WebClientProtocol.Url\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: WebClientProtocol.UseDefaultCredentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: WebClientProtocol\n  nameWithType: WebClientProtocol.WebClientProtocol\n  fullName: WebClientProtocol.WebClientProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Abort\n  nameWithType: WebClientProtocol.Abort\n  fullName: WebClientProtocol.Abort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: AddToCache\n  nameWithType: WebClientProtocol.AddToCache\n  fullName: WebClientProtocol.AddToCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: WebClientProtocol.ConnectionGroupName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: WebClientProtocol.Credentials\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetFromCache\n  nameWithType: WebClientProtocol.GetFromCache\n  fullName: WebClientProtocol.GetFromCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebRequest\n  nameWithType: WebClientProtocol.GetWebRequest\n  fullName: WebClientProtocol.GetWebRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetWebResponse\n  nameWithType: WebClientProtocol.GetWebResponse\n  fullName: WebClientProtocol.GetWebResponse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: WebClientProtocol.PreAuthenticate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: WebClientProtocol.RequestEncoding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: WebClientProtocol.Timeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: WebClientProtocol.Url\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: WebClientProtocol.UseDefaultCredentials\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/WebClientProtocol.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n"}