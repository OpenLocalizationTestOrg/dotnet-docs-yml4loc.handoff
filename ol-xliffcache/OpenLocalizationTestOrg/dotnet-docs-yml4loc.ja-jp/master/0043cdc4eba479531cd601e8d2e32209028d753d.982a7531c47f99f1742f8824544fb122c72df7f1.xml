{"nodes":[{"content":"Provides data for loader resolution events, such as the <xref href=\"System.AppDomain.TypeResolve\"></xref>, <xref href=\"System.AppDomain.ResourceResolve\"></xref>, <xref href=\"System.AppDomain.ReflectionOnlyAssemblyResolve\"></xref>, and <xref href=\"System.AppDomain.AssemblyResolve\"></xref> events.","nodes":[{"pos":[0,296],"content":"Provides data for loader resolution events, such as the <ph id=\"ph1\">&lt;xref href=\"System.AppDomain.TypeResolve\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.AppDomain.ResourceResolve\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.AppDomain.ReflectionOnlyAssemblyResolve\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph4\">&lt;xref href=\"System.AppDomain.AssemblyResolve\"&gt;&lt;/xref&gt;</ph> events.","source":"Provides data for loader resolution events, such as the <xref href=\"System.AppDomain.TypeResolve\"></xref>, <xref href=\"System.AppDomain.ResourceResolve\"></xref>, <xref href=\"System.AppDomain.ReflectionOnlyAssemblyResolve\"></xref>, and <xref href=\"System.AppDomain.AssemblyResolve\"></xref> events."}],"pos":[567,864],"yaml":true},{"content":"When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved.  \n  \n-   The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.  \n  \n-   Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item. For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property.","nodes":[{"pos":[0,240],"content":"When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved.","nodes":[{"content":"When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <ph id=\"ph1\">&lt;xref:System.ResolveEventArgs&gt;</ph> contains information about the item to be resolved.","pos":[0,240],"source":"When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved."}]},{"pos":[250,347],"content":"The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> property contains the name of the item to be resolved.","pos":[0,97],"source":"The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved."}]},{"pos":[357,673],"content":"Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item. For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property.","nodes":[{"content":"Beginning with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property contains the assembly that requested an assembly that can provide the named item.","pos":[0,223],"source":"Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property.","pos":[224,316],"source":" For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property."}]}],"pos":[875,1555],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ResolveEventArgs\"></xref> class, specifying the name of the item to resolve.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ResolveEventArgs\"&gt;&lt;/xref&gt;</ph> class, specifying the name of the item to resolve.","source":"Initializes a new instance of the <xref href=\"System.ResolveEventArgs\"></xref> class, specifying the name of the item to resolve."}],"pos":[3326,3456],"yaml":true},{"content":"This constructor is typically called only by the common language runtime.","nodes":[{"pos":[0,73],"content":"This constructor is typically called only by the common language runtime.","nodes":[{"content":"This constructor is typically called only by the common language runtime.","pos":[0,73]}]}],"pos":[3467,3541],"yaml":true,"extradata":"MT"},{"content":"The name of an item to resolve.","nodes":[{"pos":[0,31],"content":"The name of an item to resolve.","nodes":[{"content":"The name of an item to resolve.","pos":[0,31]}]}],"pos":[3679,3711],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ResolveEventArgs\"></xref> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ResolveEventArgs\"&gt;&lt;/xref&gt;</ph> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.","source":"Initializes a new instance of the <xref href=\"System.ResolveEventArgs\"></xref> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved."}],"pos":[5055,5237],"yaml":true},{"content":"The name of an item to resolve.","nodes":[{"pos":[0,31],"content":"The name of an item to resolve.","nodes":[{"content":"The name of an item to resolve.","pos":[0,31]}]}],"pos":[5422,5454],"yaml":true},{"content":"The assembly whose dependency is being resolved.","nodes":[{"pos":[0,48],"content":"The assembly whose dependency is being resolved.","nodes":[{"content":"The assembly whose dependency is being resolved.","pos":[0,48]}]}],"pos":[5541,5590],"yaml":true},{"content":"Gets the name of the item to resolve.","nodes":[{"pos":[0,37],"content":"Gets the name of the item to resolve.","nodes":[{"content":"Gets the name of the item to resolve.","pos":[0,37]}]}],"pos":[6710,6748],"yaml":true},{"content":"For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied.","nodes":[{"pos":[0,140],"content":"For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied.","nodes":[{"content":"For the <ph id=\"ph1\">&lt;xref:System.AppDomain.AssemblyResolve&gt;</ph> event, <ph id=\"ph2\">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> is the assembly name before policy is applied.","pos":[0,140],"source":"For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied."}]}],"pos":[6759,6900],"yaml":true,"extradata":"MT"},{"content":"The name of the item to resolve.","nodes":[{"pos":[0,32],"content":"The name of the item to resolve.","nodes":[{"content":"The name of the item to resolve.","pos":[0,32]}]}],"pos":[7008,7041],"yaml":true},{"content":"Gets the assembly whose dependency is being resolved.","nodes":[{"pos":[0,53],"content":"Gets the assembly whose dependency is being resolved.","nodes":[{"content":"Gets the assembly whose dependency is being resolved.","pos":[0,53]}]}],"pos":[8244,8298],"yaml":true},{"content":"The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.  \n  \n For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load assembly A from a directory outside the probing path, in order to use class CA. Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path. When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, the loader cannot resolve the dependency. If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.  \n  \n The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:  \n  \n-   Load context: The value of the property might be `null`. The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful. A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=fullName> method is called and the specified type is not known to the requesting assembly or any of its dependencies.  \n  \n-   Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.  \n  \n-   No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly.","nodes":[{"pos":[0,309],"content":"The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.","nodes":[{"content":"The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <ph id=\"ph1\">&lt;xref:System.ResolveEventArgs.Name%2A&gt;</ph> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.","pos":[0,309],"source":"The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing."}]},{"pos":[316,1316],"content":"For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load assembly A from a directory outside the probing path, in order to use class CA. Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path. When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, the loader cannot resolve the dependency. If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.","nodes":[{"content":"For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load assembly A from a directory outside the probing path, in order to use class CA. Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path. When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, the loader cannot resolve the dependency. If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.","pos":[0,1000],"nodes":[{"content":"For example, suppose the current assembly uses the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</ph> method to load assembly A from a directory outside the probing path, in order to use class CA.","pos":[0,216],"source":"For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load assembly A from a directory outside the probing path, in order to use class CA."},{"content":"Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.","pos":[217,379]},{"content":"When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</ph> method, the loader cannot resolve the dependency.","pos":[380,666],"source":" When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, the loader cannot resolve the dependency."},{"content":"If there is a handler for the <ph id=\"ph1\">&lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;</ph> event, the event is raised, and the <ph id=\"ph2\">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property of the resulting <ph id=\"ph3\">&lt;xref:System.ResolveEventArgs&gt;</ph> object contains assembly A, because assembly A is the assembly that is missing a dependency.","pos":[667,1000],"source":" If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency."}]}]},{"pos":[1323,1464],"content":"The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:","nodes":[{"content":"The semantics of the <ph id=\"ph1\">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property vary, depending on how the requesting assembly was loaded:","pos":[0,141],"source":"The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:"}]},{"pos":[1474,1847],"content":"Load context: The value of the property might be `null`. The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful. A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=fullName> method is called and the specified type is not known to the requesting assembly or any of its dependencies.","nodes":[{"content":"Load context: The value of the property might be <ph id=\"ph1\">`null`</ph>.","pos":[0,56],"source":"Load context: The value of the property might be `null`."},{"content":"The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.","pos":[57,175]},{"content":"A non-null example occurs when the <ph id=\"ph1\">&lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;</ph> method is called and the specified type is not known to the requesting assembly or any of its dependencies.","pos":[176,373],"source":" A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=fullName> method is called and the specified type is not known to the requesting assembly or any of its dependencies."}]},{"pos":[1857,2005],"content":"Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.","nodes":[{"content":"Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.","pos":[0,148]}]},{"pos":[2015,2393],"content":"No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly.","nodes":[{"content":"No context (that is, the requesting assembly was loaded by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</ph> method, or as a byte stream, or in mixed mode): The handler can use the <ph id=\"ph2\">&lt;xref:System.ResolveEventArgs.RequestingAssembly%2A&gt;</ph> property to load different implementations of the same assembly based on the identity of the requesting assembly.","pos":[0,378],"source":"No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly."}]}],"pos":[8309,10715],"yaml":true,"extradata":"MT"},{"content":"The assembly that requested the item specified by the <xref href=\"System.ResolveEventArgs.Name\"></xref> property.","nodes":[{"pos":[0,113],"content":"The assembly that requested the item specified by the <ph id=\"ph1\">&lt;xref href=\"System.ResolveEventArgs.Name\"&gt;&lt;/xref&gt;</ph> property.","source":"The assembly that requested the item specified by the <xref href=\"System.ResolveEventArgs.Name\"></xref> property."}],"pos":[10870,10984],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ResolveEventArgs\n  commentId: T:System.ResolveEventArgs\n  id: ResolveEventArgs\n  children:\n  - System.ResolveEventArgs.#ctor(System.String)\n  - System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)\n  - System.ResolveEventArgs.Name\n  - System.ResolveEventArgs.RequestingAssembly\n  langs:\n  - csharp\n  name: ResolveEventArgs\n  nameWithType: ResolveEventArgs\n  fullName: System.ResolveEventArgs\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Provides data for loader resolution events, such as the <xref href=\"System.AppDomain.TypeResolve\"></xref>, <xref href=\"System.AppDomain.ResourceResolve\"></xref>, <xref href=\"System.AppDomain.ReflectionOnlyAssemblyResolve\"></xref>, and <xref href=\"System.AppDomain.AssemblyResolve\"></xref> events.\n  remarks: \"When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved.  \\n  \\n-   The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.  \\n  \\n-   Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item. For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ResolveEventArgs : EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ResolveEventArgs.#ctor(System.String)\n  commentId: M:System.ResolveEventArgs.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ResolveEventArgs\n  langs:\n  - csharp\n  name: ResolveEventArgs(String)\n  nameWithType: ResolveEventArgs.ResolveEventArgs(String)\n  fullName: ResolveEventArgs.ResolveEventArgs(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ResolveEventArgs\"></xref> class, specifying the name of the item to resolve.\n  remarks: This constructor is typically called only by the common language runtime.\n  syntax:\n    content: public ResolveEventArgs (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of an item to resolve.\n  overload: System.ResolveEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)\n  commentId: M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)\n  id: '#ctor(System.String,System.Reflection.Assembly)'\n  parent: System.ResolveEventArgs\n  langs:\n  - csharp\n  name: ResolveEventArgs(String, Assembly)\n  nameWithType: ResolveEventArgs.ResolveEventArgs(String, Assembly)\n  fullName: ResolveEventArgs.ResolveEventArgs(String, Assembly)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ResolveEventArgs\"></xref> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.\n  syntax:\n    content: public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of an item to resolve.\n    - id: requestingAssembly\n      type: System.Reflection.Assembly\n      description: The assembly whose dependency is being resolved.\n  overload: System.ResolveEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ResolveEventArgs.Name\n  commentId: P:System.ResolveEventArgs.Name\n  id: Name\n  parent: System.ResolveEventArgs\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ResolveEventArgs.Name\n  fullName: ResolveEventArgs.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the name of the item to resolve.\n  remarks: For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the item to resolve.\n  overload: System.ResolveEventArgs.Name*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ResolveEventArgs.RequestingAssembly\n  commentId: P:System.ResolveEventArgs.RequestingAssembly\n  id: RequestingAssembly\n  parent: System.ResolveEventArgs\n  langs:\n  - csharp\n  name: RequestingAssembly\n  nameWithType: ResolveEventArgs.RequestingAssembly\n  fullName: ResolveEventArgs.RequestingAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the assembly whose dependency is being resolved.\n  remarks: \"The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.  \\n  \\n For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load assembly A from a directory outside the probing path, in order to use class CA. Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path. When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, the loader cannot resolve the dependency. If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.  \\n  \\n The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:  \\n  \\n-   Load context: The value of the property might be `null`. The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful. A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=fullName> method is called and the specified type is not known to the requesting assembly or any of its dependencies.  \\n  \\n-   Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.  \\n  \\n-   No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly.\"\n  syntax:\n    content: public System.Reflection.Assembly RequestingAssembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: The assembly that requested the item specified by the <xref href=\"System.ResolveEventArgs.Name\"></xref> property.\n  overload: System.ResolveEventArgs.RequestingAssembly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ResolveEventArgs.#ctor(System.String)\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: ResolveEventArgs(String)\n  nameWithType: ResolveEventArgs.ResolveEventArgs(String)\n  fullName: ResolveEventArgs.ResolveEventArgs(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: ResolveEventArgs(String, Assembly)\n  nameWithType: ResolveEventArgs.ResolveEventArgs(String, Assembly)\n  fullName: ResolveEventArgs.ResolveEventArgs(String, Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.ResolveEventArgs.Name\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: Name\n  nameWithType: ResolveEventArgs.Name\n  fullName: ResolveEventArgs.Name\n- uid: System.ResolveEventArgs.RequestingAssembly\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: RequestingAssembly\n  nameWithType: ResolveEventArgs.RequestingAssembly\n  fullName: ResolveEventArgs.RequestingAssembly\n- uid: System.ResolveEventArgs.#ctor*\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: ResolveEventArgs\n  nameWithType: ResolveEventArgs.ResolveEventArgs\n  fullName: ResolveEventArgs.ResolveEventArgs\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n- uid: System.ResolveEventArgs.Name*\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: Name\n  nameWithType: ResolveEventArgs.Name\n  fullName: ResolveEventArgs.Name\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n- uid: System.ResolveEventArgs.RequestingAssembly*\n  parent: System.ResolveEventArgs\n  isExternal: false\n  name: RequestingAssembly\n  nameWithType: ResolveEventArgs.RequestingAssembly\n  fullName: ResolveEventArgs.RequestingAssembly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ResolveEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}