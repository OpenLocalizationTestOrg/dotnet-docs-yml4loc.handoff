{"nodes":[{"content":"Provides data for the <xref href=\"System.Net.WebClient.DownloadProgressChanged\"></xref> event of a <xref href=\"System.Net.WebClient\"></xref>.","nodes":[{"pos":[0,141],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Net.WebClient.DownloadProgressChanged\"&gt;&lt;/xref&gt;</ph> event of a <ph id=\"ph2\">&lt;xref href=\"System.Net.WebClient\"&gt;&lt;/xref&gt;</ph>.","source":"Provides data for the <xref href=\"System.Net.WebClient.DownloadProgressChanged\"></xref> event of a <xref href=\"System.Net.WebClient\"></xref>."}],"pos":[608,750],"yaml":true},{"content":"Instances of this class are passed to the <xref:System.Net.DownloadProgressChangedEventHandler>.","nodes":[{"pos":[0,96],"content":"Instances of this class are passed to the <xref:System.Net.DownloadProgressChangedEventHandler>.","nodes":[{"content":"Instances of this class are passed to the <ph id=\"ph1\">&lt;xref:System.Net.DownloadProgressChangedEventHandler&gt;</ph>.","pos":[0,96],"source":"Instances of this class are passed to the <xref:System.Net.DownloadProgressChangedEventHandler>."}]}],"pos":[761,858],"yaml":true,"extradata":"MT"},{"content":"Gets the number of bytes received.","nodes":[{"pos":[0,34],"content":"Gets the number of bytes received.","nodes":[{"content":"Gets the number of bytes received.","pos":[0,34]}]}],"pos":[3731,3766],"yaml":true},{"content":"To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property.","nodes":[{"pos":[0,152],"content":"To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property.","nodes":[{"content":"To determine what percentage of the transfer has occurred, use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A&gt;</ph> property.","pos":[0,152],"source":"To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property."}]}],"pos":[3777,3930],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that indicates the number of bytes received.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that indicates the number of bytes received.","source":"An <xref href=\"System.Int64\"></xref> value that indicates the number of bytes received."}],"pos":[4624,4712],"yaml":true},{"content":"Gets the total number of bytes in a <xref href=\"System.Net.WebClient\"></xref> data download operation.","nodes":[{"pos":[0,102],"content":"Gets the total number of bytes in a <ph id=\"ph1\">&lt;xref href=\"System.Net.WebClient\"&gt;&lt;/xref&gt;</ph> data download operation.","source":"Gets the total number of bytes in a <xref href=\"System.Net.WebClient\"></xref> data download operation."}],"pos":[6010,6113],"yaml":true},{"content":"To determine the number of bytes already received, use the <xref:System.Net.DownloadProgressChangedEventArgs.BytesReceived%2A> property.  \n  \n To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property.","nodes":[{"pos":[0,136],"content":"To determine the number of bytes already received, use the <xref:System.Net.DownloadProgressChangedEventArgs.BytesReceived%2A> property.","nodes":[{"content":"To determine the number of bytes already received, use the <ph id=\"ph1\">&lt;xref:System.Net.DownloadProgressChangedEventArgs.BytesReceived%2A&gt;</ph> property.","pos":[0,136],"source":"To determine the number of bytes already received, use the <xref:System.Net.DownloadProgressChangedEventArgs.BytesReceived%2A> property."}]},{"pos":[143,295],"content":"To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property.","nodes":[{"content":"To determine what percentage of the transfer has occurred, use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A&gt;</ph> property.","pos":[0,152],"source":"To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property."}]}],"pos":[6124,6424],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that indicates the number of bytes that will be received.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that indicates the number of bytes that will be received.","source":"An <xref href=\"System.Int64\"></xref> value that indicates the number of bytes that will be received."}],"pos":[7124,7225],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.DownloadProgressChangedEventArgs\n  commentId: T:System.Net.DownloadProgressChangedEventArgs\n  id: DownloadProgressChangedEventArgs\n  children:\n  - System.Net.DownloadProgressChangedEventArgs.BytesReceived\n  - System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive\n  langs:\n  - csharp\n  name: DownloadProgressChangedEventArgs\n  nameWithType: DownloadProgressChangedEventArgs\n  fullName: System.Net.DownloadProgressChangedEventArgs\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.WebClient\n  namespace: System.Net\n  summary: Provides data for the <xref href=\"System.Net.WebClient.DownloadProgressChanged\"></xref> event of a <xref href=\"System.Net.WebClient\"></xref>.\n  remarks: Instances of this class are passed to the <xref:System.Net.DownloadProgressChangedEventHandler>.\n  example:\n  - \"The following code example demonstrates setting an event handler for the <xref:System.Net.WebClient.DownloadProgressChanged> event.  \\n  \\n [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]\\n [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]\\n [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  \\n  \\n The following code example shows an implementation of a handler for this event.  \\n  \\n [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]\\n [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]\\n [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]\"\n  syntax:\n    content: 'public class DownloadProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.ProgressChangedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage\n  - System.ComponentModel.ProgressChangedEventArgs.UserState\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DownloadProgressChangedEventArgs.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DownloadProgressChangedEventArgs.BytesReceived\n  commentId: P:System.Net.DownloadProgressChangedEventArgs.BytesReceived\n  id: BytesReceived\n  parent: System.Net.DownloadProgressChangedEventArgs\n  langs:\n  - csharp\n  name: BytesReceived\n  nameWithType: DownloadProgressChangedEventArgs.BytesReceived\n  fullName: DownloadProgressChangedEventArgs.BytesReceived\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.WebClient\n  namespace: System.Net\n  summary: Gets the number of bytes received.\n  remarks: To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property.\n  example:\n  - \"The following code example shows an implementation of a handler for the <xref:System.Net.WebClient.DownloadProgressChanged> event. The method displays the value of this property.  \\n  \\n [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]\\n [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]\\n [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]\"\n  syntax:\n    content: public long BytesReceived { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that indicates the number of bytes received.\n  overload: System.Net.DownloadProgressChangedEventArgs.BytesReceived*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DownloadProgressChangedEventArgs.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive\n  commentId: P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive\n  id: TotalBytesToReceive\n  parent: System.Net.DownloadProgressChangedEventArgs\n  langs:\n  - csharp\n  name: TotalBytesToReceive\n  nameWithType: DownloadProgressChangedEventArgs.TotalBytesToReceive\n  fullName: DownloadProgressChangedEventArgs.TotalBytesToReceive\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.WebClient\n  namespace: System.Net\n  summary: Gets the total number of bytes in a <xref href=\"System.Net.WebClient\"></xref> data download operation.\n  remarks: \"To determine the number of bytes already received, use the <xref:System.Net.DownloadProgressChangedEventArgs.BytesReceived%2A> property.  \\n  \\n To determine what percentage of the transfer has occurred, use the <xref:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage%2A> property.\"\n  example:\n  - \"The following code example shows an implementation of a handler for the <xref:System.Net.WebClient.DownloadProgressChanged> event. The method displays the value of this property.  \\n  \\n [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]\\n [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]\\n [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]\"\n  syntax:\n    content: public long TotalBytesToReceive { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that indicates the number of bytes that will be received.\n  overload: System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DownloadProgressChangedEventArgs.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.ComponentModel.ProgressChangedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: ProgressChangedEventArgs\n  nameWithType: ProgressChangedEventArgs\n  fullName: System.ComponentModel.ProgressChangedEventArgs\n- uid: System.Net.DownloadProgressChangedEventArgs.BytesReceived\n  parent: System.Net.DownloadProgressChangedEventArgs\n  isExternal: false\n  name: BytesReceived\n  nameWithType: DownloadProgressChangedEventArgs.BytesReceived\n  fullName: DownloadProgressChangedEventArgs.BytesReceived\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive\n  parent: System.Net.DownloadProgressChangedEventArgs\n  isExternal: false\n  name: TotalBytesToReceive\n  nameWithType: DownloadProgressChangedEventArgs.TotalBytesToReceive\n  fullName: DownloadProgressChangedEventArgs.TotalBytesToReceive\n- uid: System.Net.DownloadProgressChangedEventArgs.BytesReceived*\n  parent: System.Net.DownloadProgressChangedEventArgs\n  isExternal: false\n  name: BytesReceived\n  nameWithType: DownloadProgressChangedEventArgs.BytesReceived\n  fullName: DownloadProgressChangedEventArgs.BytesReceived\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DownloadProgressChangedEventArgs.xml\n- uid: System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive*\n  parent: System.Net.DownloadProgressChangedEventArgs\n  isExternal: false\n  name: TotalBytesToReceive\n  nameWithType: DownloadProgressChangedEventArgs.TotalBytesToReceive\n  fullName: DownloadProgressChangedEventArgs.TotalBytesToReceive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DownloadProgressChangedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage\n  parent: System.ComponentModel.ProgressChangedEventArgs\n  isExternal: false\n  name: ProgressPercentage\n  nameWithType: ProgressChangedEventArgs.ProgressPercentage\n  fullName: ProgressChangedEventArgs.ProgressPercentage\n- uid: System.ComponentModel.ProgressChangedEventArgs.UserState\n  parent: System.ComponentModel.ProgressChangedEventArgs\n  isExternal: false\n  name: UserState\n  nameWithType: ProgressChangedEventArgs.UserState\n  fullName: ProgressChangedEventArgs.UserState\n"}