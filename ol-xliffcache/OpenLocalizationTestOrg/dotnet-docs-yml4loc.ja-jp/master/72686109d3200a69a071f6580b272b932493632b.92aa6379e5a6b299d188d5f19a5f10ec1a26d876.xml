{"nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.","nodes":[{"pos":[0,82],"content":"Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.","nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.","pos":[0,82]}]}],"pos":[2005,2088],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RSACng> class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.  \n  \n <xref:System.Security.Cryptography.RSACng> uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:  \n  \n-   The key used by <xref:System.Security.Cryptography.RSACng> is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.  \n  \n-   <xref:System.Security.Cryptography.RSACng> performs such operations as signing and verifying signatures by using properties of the <xref:System.Security.Cryptography.RSACng> object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations.  \n\n> [!NOTE]\n> The <xref:System.Security.Cryptography.RSACng> class is an implementation of the RSA algorithm using the Windows CNG libraries and isn't available on operating systems other than Windows. For applications which aren't doing Windows interop, you're encouraged to use <xref:System.Security.Cryptography.RSA.Create%2A?displayProperty=fullName> instead of referencing this type directly.","nodes":[{"pos":[0,245],"content":"The <xref:System.Security.Cryptography.RSACng> class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.","nodes":[{"content":"The <xref:System.Security.Cryptography.RSACng> class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.","pos":[0,245],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACng&gt;</ph> class is derived from the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> class.","pos":[0,119],"source":"The <xref:System.Security.Cryptography.RSACng> class is derived from the <xref:System.Security.Cryptography.RSA> class."},{"content":"Therefore, it is not a drop-in replacement for existing uses of <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>.","pos":[120,245],"source":" Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>."}]}]},{"pos":[252,490],"content":"<xref:System.Security.Cryptography.RSACng> uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:","nodes":[{"content":"<xref:System.Security.Cryptography.RSACng> uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:","pos":[0,238],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACng&gt;</ph> uses a programming model that is similar to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> class rather than the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class.","pos":[0,225],"source":"<xref:System.Security.Cryptography.RSACng> uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class."},{"content":"For example:","pos":[226,238]}]}]},{"pos":[500,778],"content":"The key used by <xref:System.Security.Cryptography.RSACng> is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.","nodes":[{"content":"The key used by <xref:System.Security.Cryptography.RSACng> is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.","pos":[0,278],"nodes":[{"content":"The key used by <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACng&gt;</ph> is managed by a separate <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object.","pos":[0,134],"source":"The key used by <xref:System.Security.Cryptography.RSACng> is managed by a separate <xref:System.Security.Cryptography.CngKey> object."},{"content":"In contrast, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> has a key that is directly tied to the operations of the type itself.","pos":[135,278],"source":" In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself."}]}]},{"pos":[788,1097],"content":"<xref:System.Security.Cryptography.RSACng> performs such operations as signing and verifying signatures by using properties of the <xref:System.Security.Cryptography.RSACng> object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACng&gt;</ph> performs such operations as signing and verifying signatures by using properties of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSACng&gt;</ph> object, just as <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> uses its object properties to control signing and verification operations.","pos":[0,309],"source":"<xref:System.Security.Cryptography.RSACng> performs such operations as signing and verifying signatures by using properties of the <xref:System.Security.Cryptography.RSACng> object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations."}]},{"pos":[1103,1496],"content":"[!NOTE]\nThe <xref:System.Security.Cryptography.RSACng> class is an implementation of the RSA algorithm using the Windows CNG libraries and isn't available on operating systems other than Windows. For applications which aren't doing Windows interop, you're encouraged to use <xref:System.Security.Cryptography.RSA.Create%2A?displayProperty=fullName> instead of referencing this type directly.","leadings":["","> "],"nodes":[{"content":"The <xref:System.Security.Cryptography.RSACng> class is an implementation of the RSA algorithm using the Windows CNG libraries and isn't available on operating systems other than Windows. For applications which aren't doing Windows interop, you're encouraged to use <xref:System.Security.Cryptography.RSA.Create%2A?displayProperty=fullName> instead of referencing this type directly.","pos":[8,391],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSACng&gt;</ph> class is an implementation of the RSA algorithm using the Windows CNG libraries and isn't available on operating systems other than Windows.","pos":[0,187],"source":"The <xref:System.Security.Cryptography.RSACng> class is an implementation of the RSA algorithm using the Windows CNG libraries and isn't available on operating systems other than Windows."},{"content":"For applications which aren't doing Windows interop, you're encouraged to use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RSA.Create%2A?displayProperty=fullName&gt;</ph> instead of referencing this type directly.","pos":[188,383],"source":" For applications which aren't doing Windows interop, you're encouraged to use <xref:System.Security.Cryptography.RSA.Create%2A?displayProperty=fullName> instead of referencing this type directly."}]}]}],"pos":[2099,3607],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a random 2,048-bit key pair.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;&lt;/xref&gt;</ph> class with a random 2,048-bit key pair.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a random 2,048-bit key pair."}],"pos":[6913,7044],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a randomly generated key of the specified size.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;&lt;/xref&gt;</ph> class with a randomly generated key of the specified size.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a randomly generated key of the specified size."}],"pos":[8271,8421],"yaml":true},{"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.","nodes":[{"pos":[0,135],"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.","nodes":[{"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.","pos":[0,135],"nodes":[{"content":"Valid key sizes range from 384 to 16,384 bits, in increments of 8.","pos":[0,66]},{"content":"We recommend that a minimum size of 2,048 bits be used for all keys.","pos":[67,135]}]}]}],"pos":[8432,8568],"yaml":true,"extradata":"MT"},{"content":"The size of the key to generate in bits.","nodes":[{"pos":[0,40],"content":"The size of the key to generate in bits.","nodes":[{"content":"The size of the key to generate in bits.","pos":[0,40]}]}],"pos":[8698,8739],"yaml":true},{"content":"<code>keySize</code> is not valid.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;keySize&lt;/code&gt;</ph> is not valid.","source":"<code>keySize</code> is not valid."}],"pos":[8956,8991],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with the specified key.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;&lt;/xref&gt;</ph> class with the specified key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with the specified key."}],"pos":[10158,10279],"yaml":true},{"content":"The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.  \n  \n This constructor creates a copy of the key. Even if `key` is disposed, the copy of this key object in RSA remains alive.","nodes":[{"pos":[0,193],"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName&gt;</ph> of <ph id=\"ph2\">`key`</ph> must be <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName&gt;</ph>.","source":"The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>."},{"pos":[200,320],"content":"This constructor creates a copy of the key. Even if `key` is disposed, the copy of this key object in RSA remains alive.","nodes":[{"content":"This constructor creates a copy of the key.","pos":[0,43]},{"content":"Even if <ph id=\"ph1\">`key`</ph> is disposed, the copy of this key object in RSA remains alive.","pos":[44,120],"source":" Even if `key` is disposed, the copy of this key object in RSA remains alive."}]}],"pos":[10290,10615],"yaml":true,"extradata":"MT"},{"content":"The key to use for RSA operations.","nodes":[{"pos":[0,34],"content":"The key to use for RSA operations.","nodes":[{"content":"The key to use for RSA operations.","pos":[0,34]}]}],"pos":[10792,10827],"yaml":true},{"content":"<code>key</code> is not a valid RSA key.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid RSA key.","source":"<code>key</code> is not a valid RSA key."}],"pos":[10990,11031],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[11133,11161],"yaml":true},{"content":"Decrypts input data using the specified padding mode.","nodes":[{"pos":[0,53],"content":"Decrypts input data using the specified padding mode.","nodes":[{"content":"Decrypts input data using the specified padding mode.","pos":[0,53]}]}],"pos":[12442,12496],"yaml":true},{"content":"The data to decrypt.","nodes":[{"pos":[0,20],"content":"The data to decrypt.","nodes":[{"content":"The data to decrypt.","pos":[0,20]}]}],"pos":[12700,12721],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[12820,12838],"yaml":true},{"content":"The decrypted data.","nodes":[{"pos":[0,19],"content":"The decrypted data.","nodes":[{"content":"The decrypted data.","pos":[0,19]}]}],"pos":[12895,12915],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[13088,13172],"yaml":true},{"content":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Pkcs1\"></xref>, or else the <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\"></xref> of <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\"></xref>.","nodes":[{"pos":[0,321],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Pkcs1\"&gt;&lt;/xref&gt;</ph>, or else the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph4\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph5\">&lt;xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\"&gt;&lt;/xref&gt;</ph>.","source":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Pkcs1\"></xref>, or else the <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\"></xref> of <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\"></xref>."}],"pos":[13320,13642],"yaml":true},{"content":"Decrypts the input data using the private key.","nodes":[{"pos":[0,46],"content":"Decrypts the input data using the private key.","nodes":[{"content":"Decrypts the input data using the private key.","pos":[0,46]}]}],"pos":[14615,14662],"yaml":true},{"content":"The cipher text to be decrypted.","nodes":[{"pos":[0,32],"content":"The cipher text to be decrypted.","nodes":[{"content":"The cipher text to be decrypted.","pos":[0,32]}]}],"pos":[14810,14843],"yaml":true},{"content":"The resulting decryption of the <code>rgb</code> parameter in plain text.","nodes":[{"pos":[0,73],"content":"The resulting decryption of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in plain text.","source":"The resulting decryption of the <code>rgb</code> parameter in plain text."}],"pos":[14900,14974],"yaml":true},{"content":"This method call is not supported.","nodes":[{"pos":[0,34],"content":"This method call is not supported.","nodes":[{"content":"This method call is not supported.","pos":[0,34]}]}],"pos":[15152,15187],"yaml":true},{"content":"Encrypts the input data using the specified padding.","nodes":[{"pos":[0,52],"content":"Encrypts the input data using the specified padding.","nodes":[{"content":"Encrypts the input data using the specified padding.","pos":[0,52]}]}],"pos":[17310,17363],"yaml":true},{"content":"The data to encrypt.","nodes":[{"pos":[0,20],"content":"The data to encrypt.","nodes":[{"content":"The data to encrypt.","pos":[0,20]}]}],"pos":[17567,17588],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[17687,17705],"yaml":true},{"content":"Returns <xref href=\"System.Byte\"></xref> .","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> .","source":"Returns <xref href=\"System.Byte\"></xref> ."}],"pos":[17762,17805],"yaml":true},{"content":"<code>data</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>data</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[17978,18062],"yaml":true},{"content":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"&gt;&lt;/xref&gt;</ph>.","source":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>."}],"pos":[18210,18400],"yaml":true},{"content":"Encrypts the input data using the public key.","nodes":[{"pos":[0,45],"content":"Encrypts the input data using the public key.","nodes":[{"content":"Encrypts the input data using the public key.","pos":[0,45]}]}],"pos":[19373,19419],"yaml":true},{"content":"The plain text to be encrypted.","nodes":[{"pos":[0,31],"content":"The plain text to be encrypted.","nodes":[{"content":"The plain text to be encrypted.","pos":[0,31]}]}],"pos":[19567,19599],"yaml":true},{"content":"The resulting encryption of the <code>rgb</code> parameter as cipher text.","nodes":[{"pos":[0,74],"content":"The resulting encryption of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgb</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter as cipher text.","source":"The resulting encryption of the <code>rgb</code> parameter as cipher text."}],"pos":[19656,19731],"yaml":true},{"content":"This method call is not supported.","nodes":[{"pos":[0,34],"content":"This method call is not supported.","nodes":[{"content":"This method call is not supported.","pos":[0,34]}]}],"pos":[19909,19944],"yaml":true},{"content":"Exports the key used by the RSA object into a <xref href=\"System.Security.Cryptography.RSAParameters\"></xref> object.","nodes":[{"pos":[0,117],"content":"Exports the key used by the RSA object into a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSAParameters\"&gt;&lt;/xref&gt;</ph> object.","source":"Exports the key used by the RSA object into a <xref href=\"System.Security.Cryptography.RSAParameters\"></xref> object."}],"pos":[20799,20917],"yaml":true},{"content":"`true` to include private parameters; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> to include private parameters; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include private parameters; otherwise, `false`."}],"pos":[21146,21206],"yaml":true},{"content":"The key used by the RSA object.","nodes":[{"pos":[0,31],"content":"The key used by the RSA object.","nodes":[{"content":"The key used by the RSA object.","pos":[0,31]}]}],"pos":[21292,21324],"yaml":true},{"content":"Replaces the existing key that the current instance is working with by creating a new <xref href=\"System.Security.Cryptography.CngKey\"></xref> for the parameters structure.","nodes":[{"pos":[0,172],"content":"Replaces the existing key that the current instance is working with by creating a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngKey\"&gt;&lt;/xref&gt;</ph> for the parameters structure.","source":"Replaces the existing key that the current instance is working with by creating a new <xref href=\"System.Security.Cryptography.CngKey\"></xref> for the parameters structure."}],"pos":[26028,26201],"yaml":true},{"content":"If `parameters` contains only an exponent and modulus, only a public key is imported. If `parameters` also contains P and Q values, a full key pair is imported.","nodes":[{"pos":[0,160],"content":"If `parameters` contains only an exponent and modulus, only a public key is imported. If `parameters` also contains P and Q values, a full key pair is imported.","nodes":[{"content":"If <ph id=\"ph1\">`parameters`</ph> contains only an exponent and modulus, only a public key is imported.","pos":[0,85],"source":"If `parameters` contains only an exponent and modulus, only a public key is imported."},{"content":"If <ph id=\"ph1\">`parameters`</ph> also contains P and Q values, a full key pair is imported.","pos":[86,160],"source":" If `parameters` also contains P and Q values, a full key pair is imported."}]}],"pos":[26212,26373],"yaml":true,"extradata":"MT"},{"content":"The RSA parameters.","nodes":[{"pos":[0,19],"content":"The RSA parameters.","nodes":[{"content":"The RSA parameters.","pos":[0,19]}]}],"pos":[26602,26622],"yaml":true},{"content":"<code>parameters</code> contains neither an exponent nor a modulus.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> contains neither an exponent nor a modulus.","source":"<code>parameters</code> contains neither an exponent nor a modulus."}],"pos":[26796,26864],"yaml":true},{"content":"<code>parameters</code> is not a valid RSA key.  \n  \n -or-  \n  \n <code>parameters</code> is a full key pair and the default KSP is used.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is not a valid RSA key.","source":"<code>parameters</code> is not a valid RSA key."},{"pos":[54,58],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[65,136],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is a full key pair and the default KSP is used.","source":"<code>parameters</code> is a full key pair and the default KSP is used."}],"pos":[27012,27155],"yaml":true},{"content":"Gets the key that will be used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object for any cryptographic operation that it performs.","nodes":[{"pos":[0,151],"content":"Gets the key that will be used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;&lt;/xref&gt;</ph> object for any cryptographic operation that it performs.","source":"Gets the key that will be used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object for any cryptographic operation that it performs."}],"pos":[28167,28319],"yaml":true},{"content":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.  \n  \n This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.","nodes":[{"pos":[0,493],"content":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.","nodes":[{"content":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.","pos":[0,493],"nodes":[{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object is disposed if the key is reset, for instance by changing the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName&gt;</ph> property, by using the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName&gt;</ph> to create a new key, or by disposing of the parent <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object.","pos":[0,410],"source":"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object."},{"content":"Therefore, you should ensure that the key object is no longer used in these cases.","pos":[411,493]}]}]},{"pos":[500,782],"content":"This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.","nodes":[{"content":"This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.","pos":[0,282],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object is not the same as the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object passed to the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RSACng.%23ctor%2A&gt;</ph> constructor, if that constructor was used.","pos":[0,238],"source":"This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used."},{"content":"However, it will point to the same CNG key.","pos":[239,282]}]}]}],"pos":[28330,29117],"yaml":true,"extradata":"MT"},{"content":"The key used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object.","nodes":[{"pos":[0,84],"content":"The key used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSACng\"&gt;&lt;/xref&gt;</ph> object.","source":"The key used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object."}],"pos":[29335,29420],"yaml":true},{"content":"Gets the name of the key exchange algorithm available with this implementation of RSA.","nodes":[{"pos":[0,86],"content":"Gets the name of the key exchange algorithm available with this implementation of RSA.","nodes":[{"content":"Gets the name of the key exchange algorithm available with this implementation of RSA.","pos":[0,86]}]}],"pos":[30619,30706],"yaml":true},{"content":"Returns \"RSA\".","nodes":[{"pos":[0,14],"content":"Returns \"RSA\".","nodes":[{"content":"Returns \"RSA\".","pos":[0,14]}]}],"pos":[30839,30854],"yaml":true},{"content":"Gets the name of the signature algorithm available with this implementation of RSA.","nodes":[{"pos":[0,83],"content":"Gets the name of the signature algorithm available with this implementation of RSA.","nodes":[{"content":"Gets the name of the signature algorithm available with this implementation of RSA.","pos":[0,83]}]}],"pos":[32585,32669],"yaml":true},{"content":"Returns \"RSA\".","nodes":[{"pos":[0,14],"content":"Returns \"RSA\".","nodes":[{"content":"Returns \"RSA\".","pos":[0,14]}]}],"pos":[32800,32815],"yaml":true},{"content":"Signs data that was hashed by using the specified hashing algorithm and padding mode.","nodes":[{"pos":[0,85],"content":"Signs data that was hashed by using the specified hashing algorithm and padding mode.","nodes":[{"content":"Signs data that was hashed by using the specified hashing algorithm and padding mode.","pos":[0,85]}]}],"pos":[34109,34195],"yaml":true},{"content":"The hash to sign.","nodes":[{"pos":[0,17],"content":"The hash to sign.","nodes":[{"content":"The hash to sign.","pos":[0,17]}]}],"pos":[34461,34479],"yaml":true},{"content":"The hash algorithm name.","nodes":[{"pos":[0,24],"content":"The hash algorithm name.","nodes":[{"content":"The hash algorithm name.","pos":[0,24]}]}],"pos":[34581,34606],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[34704,34722],"yaml":true},{"content":"The signed data.","nodes":[{"pos":[0,16],"content":"The signed data.","nodes":[{"content":"The signed data.","pos":[0,16]}]}],"pos":[34779,34796],"yaml":true},{"content":"<code>hash</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;hash&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>hash</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[34970,35054],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>hashAlgorithm</code> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,183],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">hashAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph> or <ph id=\"ph4\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>hashAlgorithm</code> is `null` or <xref href=\"System.String.Empty\"></xref>."}],"pos":[35148,35332],"yaml":true},{"content":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"&gt;&lt;/xref&gt;</ph>.","source":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>."}],"pos":[35480,35670],"yaml":true},{"content":"Verifies data that was signed and already hashed with the specified algorithm and padding mode.","nodes":[{"pos":[0,95],"content":"Verifies data that was signed and already hashed with the specified algorithm and padding mode.","nodes":[{"content":"Verifies data that was signed and already hashed with the specified algorithm and padding mode.","pos":[0,95]}]}],"pos":[37158,37254],"yaml":true},{"content":"The hash to verify.","nodes":[{"pos":[0,19],"content":"The hash to verify.","nodes":[{"content":"The hash to verify.","pos":[0,19]}]}],"pos":[37538,37558],"yaml":true},{"content":"The signature of the data.","nodes":[{"pos":[0,26],"content":"The signature of the data.","nodes":[{"content":"The signature of the data.","pos":[0,26]}]}],"pos":[37623,37650],"yaml":true},{"content":"The hash algorithm name.","nodes":[{"pos":[0,24],"content":"The hash algorithm name.","nodes":[{"content":"The hash algorithm name.","pos":[0,24]}]}],"pos":[37752,37777],"yaml":true},{"content":"The padding mode.","nodes":[{"pos":[0,17],"content":"The padding mode.","nodes":[{"content":"The padding mode.","pos":[0,17]}]}],"pos":[37875,37893],"yaml":true},{"content":"`true` if the signature verifies for the hash; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the signature verifies for the hash; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature verifies for the hash; otherwise, `false`."}],"pos":[37951,38020],"yaml":true},{"content":"<code>hash</code> is `null`.  \n  \n -or-  \n  \n <code>signature</code> is `null`.  \n  \n -or-  \n  \n <code>padding</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;hash&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>hash</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,79],"content":"<ph id=\"ph1\">&lt;code&gt;signature&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>signature</code> is `null`."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,128],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>padding</code> is `null`."}],"pos":[38196,38335],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>hashAlgorithm</code> is `null` or <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,183],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"&gt;&lt;/xref&gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">hashAlgorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph> or <ph id=\"ph4\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>hashAlgorithm</code> is `null` or <xref href=\"System.String.Empty\"></xref>."}],"pos":[38429,38613],"yaml":true},{"content":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>.  \n  \n -or-  \n  \n The signature is badly formatted. (In the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], the method returns `false` if a signature is badly formatted.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">&lt;code&gt;padding&lt;/code&gt;</ph> does not equal <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"&gt;&lt;/xref&gt;</ph>.","source":"<code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>."},{"pos":[196,200],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[207,439],"content":"The signature is badly formatted. (In the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], the method returns `false` if a signature is badly formatted.","nodes":[{"content":"The signature is badly formatted.","pos":[0,33]},{"content":"(In the <ph id=\"ph1\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> and 4.6.1 only; starting with the <ph id=\"ph2\">[!INCLUDE[net_v462](~/includes/net-v462-md.md)]</ph>, the method returns <ph id=\"ph3\">`false`</ph> if a signature is badly formatted.","pos":[34,232],"source":" (In the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], the method returns `false` if a signature is badly formatted."}]}],"pos":[38761,39211],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSACng\n  commentId: T:System.Security.Cryptography.RSACng\n  id: RSACng\n  children:\n  - System.Security.Cryptography.RSACng.#ctor\n  - System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  - System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  - System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  - System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  - System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  - System.Security.Cryptography.RSACng.Key\n  - System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  - System.Security.Cryptography.RSACng.LegalKeySizes\n  - System.Security.Cryptography.RSACng.SignatureAlgorithm\n  - System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  langs:\n  - csharp\n  name: RSACng\n  nameWithType: RSACng\n  fullName: System.Security.Cryptography.RSACng\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.\n  remarks: \"The <xref:System.Security.Cryptography.RSACng> class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.  \\n  \\n <xref:System.Security.Cryptography.RSACng> uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:  \\n  \\n-   The key used by <xref:System.Security.Cryptography.RSACng> is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.  \\n  \\n-   <xref:System.Security.Cryptography.RSACng> performs such operations as signing and verifying signatures by using properties of the <xref:System.Security.Cryptography.RSACng> object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations.  \\n\\n> [!NOTE]\\n> The <xref:System.Security.Cryptography.RSACng> class is an implementation of the RSA algorithm using the Windows CNG libraries and isn't available on operating systems other than Windows. For applications which aren't doing Windows interop, you're encouraged to use <xref:System.Security.Cryptography.RSA.Create%2A?displayProperty=fullName> instead of referencing this type directly.\"\n  syntax:\n    content: 'public sealed class RSACng : System.Security.Cryptography.RSA'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  - System.Security.Cryptography.RSA\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.RSA.Create\n  - System.Security.Cryptography.RSA.Create(System.Int32)\n  - System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)\n  - System.Security.Cryptography.RSA.Create(System.String)\n  - System.Security.Cryptography.RSA.FromXmlString(System.String)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.#ctor\n  commentId: M:System.Security.Cryptography.RSACng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: RSACng()\n  nameWithType: RSACng.RSACng()\n  fullName: RSACng.RSACng()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a random 2,048-bit key pair.\n  syntax:\n    content: public RSACng ();\n    parameters: []\n  overload: System.Security.Cryptography.RSACng.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  commentId: M:System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: RSACng(Int32)\n  nameWithType: RSACng.RSACng(Int32)\n  fullName: RSACng.RSACng(Int32)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with a randomly generated key of the specified size.\n  remarks: Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.\n  syntax:\n    content: public RSACng (int keySize);\n    parameters:\n    - id: keySize\n      type: System.Int32\n      description: The size of the key to generate in bits.\n  overload: System.Security.Cryptography.RSACng.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>keySize</code> is not valid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  commentId: M:System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  id: '#ctor(System.Security.Cryptography.CngKey)'\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: RSACng(CngKey)\n  nameWithType: RSACng.RSACng(CngKey)\n  fullName: RSACng.RSACng(CngKey)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RSACng\"></xref> class with the specified key.\n  remarks: \"The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.  \\n  \\n This constructor creates a copy of the key. Even if `key` is disposed, the copy of this key object in RSA remains alive.\"\n  syntax:\n    content: public RSACng (System.Security.Cryptography.CngKey key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.CngKey\n      description: The key to use for RSA operations.\n  overload: System.Security.Cryptography.RSACng.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is not a valid RSA key.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  commentId: M:System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Decrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSACng.Decrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSACng.Decrypt(Byte[], RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Decrypts input data using the specified padding mode.\n  syntax:\n    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to decrypt.\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The decrypted data.\n  overload: System.Security.Cryptography.RSACng.Decrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Pkcs1\"></xref>, or else the <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\"></xref> of <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  commentId: M:System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  id: DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: DecryptValue(Byte[])\n  nameWithType: RSACng.DecryptValue(Byte[])\n  fullName: RSACng.DecryptValue(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Decrypts the input data using the private key.\n  syntax:\n    content: public override byte[] DecryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The cipher text to be decrypted.\n    return:\n      type: System.Byte[]\n      description: The resulting decryption of the <code>rgb</code> parameter in plain text.\n  overload: System.Security.Cryptography.RSACng.DecryptValue*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method call is not supported.\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RSACng.Dispose(Boolean)\n  fullName: RSACng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.RSACng.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  commentId: M:System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Encrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSACng.Encrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSACng.Encrypt(Byte[], RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Encrypts the input data using the specified padding.\n  syntax:\n    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: The data to encrypt.\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: Returns <xref href=\"System.Byte\"></xref> .\n  overload: System.Security.Cryptography.RSACng.Encrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>data</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  commentId: M:System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  id: EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: EncryptValue(Byte[])\n  nameWithType: RSACng.EncryptValue(Byte[])\n  fullName: RSACng.EncryptValue(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Encrypts the input data using the public key.\n  syntax:\n    content: public override byte[] EncryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: The plain text to be encrypted.\n    return:\n      type: System.Byte[]\n      description: The resulting encryption of the <code>rgb</code> parameter as cipher text.\n  overload: System.Security.Cryptography.RSACng.EncryptValue*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method call is not supported.\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  commentId: M:System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: RSACng.ExportParameters(Boolean)\n  fullName: RSACng.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Exports the key used by the RSA object into a <xref href=\"System.Security.Cryptography.RSAParameters\"></xref> object.\n  syntax:\n    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: '`true` to include private parameters; otherwise, `false`.'\n    return:\n      type: System.Security.Cryptography.RSAParameters\n      description: The key used by the RSA object.\n  overload: System.Security.Cryptography.RSACng.ExportParameters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: HashData(Stream, HashAlgorithmName)\n  nameWithType: RSACng.HashData(Stream, HashAlgorithmName)\n  fullName: RSACng.HashData(Stream, HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: ''\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: ''\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.RSACng.HashData*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  commentId: M:System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  nameWithType: RSACng.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  fullName: RSACng.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: count\n      type: System.Int32\n      description: ''\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: ''\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.RSACng.HashData*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  commentId: M:System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  id: ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSACng.ImportParameters(RSAParameters)\n  fullName: RSACng.ImportParameters(RSAParameters)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Replaces the existing key that the current instance is working with by creating a new <xref href=\"System.Security.Cryptography.CngKey\"></xref> for the parameters structure.\n  remarks: If `parameters` contains only an exponent and modulus, only a public key is imported. If `parameters` also contains P and Q values, a full key pair is imported.\n  syntax:\n    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.RSAParameters\n      description: The RSA parameters.\n  overload: System.Security.Cryptography.RSACng.ImportParameters*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>parameters</code> contains neither an exponent nor a modulus.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>parameters</code> is not a valid RSA key.  \\n  \\n -or-  \\n  \\n <code>parameters</code> is a full key pair and the default KSP is used.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.Key\n  commentId: P:System.Security.Cryptography.RSACng.Key\n  id: Key\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: RSACng.Key\n  fullName: RSACng.Key\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the key that will be used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object for any cryptographic operation that it performs.\n  remarks: \"The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.  \\n  \\n This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key.\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public System.Security.Cryptography.CngKey Key { get; }\n    return:\n      type: System.Security.Cryptography.CngKey\n      description: The key used by the <xref href=\"System.Security.Cryptography.RSACng\"></xref> object.\n  overload: System.Security.Cryptography.RSACng.Key*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  commentId: P:System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACng.KeyExchangeAlgorithm\n  fullName: RSACng.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the key exchange algorithm available with this implementation of RSA.\n  syntax:\n    content: public override string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Returns \"RSA\".\n  overload: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.LegalKeySizes\n  commentId: P:System.Security.Cryptography.RSACng.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: RSACng.LegalKeySizes\n  fullName: RSACng.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.RSACng.LegalKeySizes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm\n  commentId: P:System.Security.Cryptography.RSACng.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: RSACng.SignatureAlgorithm\n  fullName: RSACng.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the signature algorithm available with this implementation of RSA.\n  syntax:\n    content: public override string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Returns \"RSA\".\n  overload: System.Security.Cryptography.RSACng.SignatureAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSACng.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSACng.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Signs data that was hashed by using the specified hashing algorithm and padding mode.\n  syntax:\n    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: The hash to sign.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm name.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Byte[]\n      description: The signed data.\n  overload: System.Security.Cryptography.RSACng.SignHash*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>hash</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>hashAlgorithm</code> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <code>padding</code> does not equal <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\"></xref> or <xref href=\"System.Security.Cryptography.RSASignaturePadding.Pss\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  langs:\n  - csharp\n  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSACng.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSACng.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Verifies data that was signed and already hashed with the specified algorithm and padding mode.\n  syntax:\n    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: The hash to verify.\n    - id: signature\n      type: System.Byte[]\n      description: The signature of the data.\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: The hash algorithm name.\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: The padding mode.\n    return:\n      type: System.Boolean\n      description: '`true` if the signature verifies for the hash; otherwise, `false`.'\n  overload: System.Security.Cryptography.RSACng.VerifyHash*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>hash</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>signature</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>padding</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of the <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\"></xref> property of <code>hashAlgorithm</code> is `null` or <xref href=\"System.String.Empty\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"<code>padding</code> does not equal <xref href=\\\"System.Security.Cryptography.RSASignaturePadding.Pkcs1\\\"></xref> or <xref href=\\\"System.Security.Cryptography.RSASignaturePadding.Pss\\\"></xref>.  \\n  \\n -or-  \\n  \\n The signature is badly formatted. (In the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] and 4.6.1 only; starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], the method returns `false` if a signature is badly formatted.\"\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.RSA\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSA\n  nameWithType: RSA\n  fullName: System.Security.Cryptography.RSA\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Security.Cryptography.RSACng.#ctor\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng()\n  nameWithType: RSACng.RSACng()\n  fullName: RSACng.RSACng()\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng(Int32)\n  nameWithType: RSACng.RSACng(Int32)\n  fullName: RSACng.RSACng(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng(CngKey)\n  nameWithType: RSACng.RSACng(CngKey)\n  fullName: RSACng.RSACng(CngKey)\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Decrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSACng.Decrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSACng.Decrypt(Byte[], RSAEncryptionPadding)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RSAEncryptionPadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAEncryptionPadding\n  nameWithType: RSAEncryptionPadding\n  fullName: System.Security.Cryptography.RSAEncryptionPadding\n- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: DecryptValue(Byte[])\n  nameWithType: RSACng.DecryptValue(Byte[])\n  fullName: RSACng.DecryptValue(Byte[])\n- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RSACng.Dispose(Boolean)\n  fullName: RSACng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Encrypt(Byte[], RSAEncryptionPadding)\n  nameWithType: RSACng.Encrypt(Byte[], RSAEncryptionPadding)\n  fullName: RSACng.Encrypt(Byte[], RSAEncryptionPadding)\n- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: EncryptValue(Byte[])\n  nameWithType: RSACng.EncryptValue(Byte[])\n  fullName: RSACng.EncryptValue(Byte[])\n- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: RSACng.ExportParameters(Boolean)\n  fullName: RSACng.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.RSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAParameters\n  nameWithType: RSAParameters\n  fullName: System.Security.Cryptography.RSAParameters\n- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: HashData(Stream, HashAlgorithmName)\n  nameWithType: RSACng.HashData(Stream, HashAlgorithmName)\n  fullName: RSACng.HashData(Stream, HashAlgorithmName)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  nameWithType: RSACng.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n  fullName: RSACng.HashData(Byte[], Int32, Int32, HashAlgorithmName)\n- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSACng.ImportParameters(RSAParameters)\n  fullName: RSACng.ImportParameters(RSAParameters)\n- uid: System.Security.Cryptography.RSACng.Key\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Key\n  nameWithType: RSACng.Key\n  fullName: RSACng.Key\n- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACng.KeyExchangeAlgorithm\n  fullName: RSACng.KeyExchangeAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSACng.LegalKeySizes\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: RSACng.LegalKeySizes\n  fullName: RSACng.LegalKeySizes\n- uid: System.Security.Cryptography.KeySizes\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n- uid: System.Security.Cryptography.KeySizes[]\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes[]\n  nameWithType: KeySizes[]\n  fullName: System.Security.Cryptography.KeySizes[]\n  spec.csharp:\n  - uid: System.Security.Cryptography.KeySizes\n    name: KeySizes\n    nameWithType: KeySizes\n    fullName: System.Security.Cryptography.KeySizes\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSACng.SignatureAlgorithm\n  fullName: RSACng.SignatureAlgorithm\n- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSACng.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSACng.SignHash(Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSASignaturePadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePadding\n  nameWithType: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSACng.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSACng.VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSACng.#ctor*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: RSACng\n  nameWithType: RSACng.RSACng\n  fullName: RSACng.RSACng\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.Decrypt*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Decrypt\n  nameWithType: RSACng.Decrypt\n  fullName: RSACng.Decrypt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.DecryptValue*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: DecryptValue\n  nameWithType: RSACng.DecryptValue\n  fullName: RSACng.DecryptValue\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.Dispose*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Dispose\n  nameWithType: RSACng.Dispose\n  fullName: RSACng.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.Encrypt*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Encrypt\n  nameWithType: RSACng.Encrypt\n  fullName: RSACng.Encrypt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.EncryptValue*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: EncryptValue\n  nameWithType: RSACng.EncryptValue\n  fullName: RSACng.EncryptValue\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.ExportParameters*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ExportParameters\n  nameWithType: RSACng.ExportParameters\n  fullName: RSACng.ExportParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.HashData*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: HashData\n  nameWithType: RSACng.HashData\n  fullName: RSACng.HashData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.ImportParameters*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: ImportParameters\n  nameWithType: RSACng.ImportParameters\n  fullName: RSACng.ImportParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.Key*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: Key\n  nameWithType: RSACng.Key\n  fullName: RSACng.Key\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACng.KeyExchangeAlgorithm\n  fullName: RSACng.KeyExchangeAlgorithm\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.LegalKeySizes*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: RSACng.LegalKeySizes\n  fullName: RSACng.LegalKeySizes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSACng.SignatureAlgorithm\n  fullName: RSACng.SignatureAlgorithm\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.SignHash*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: SignHash\n  nameWithType: RSACng.SignHash\n  fullName: RSACng.SignHash\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Security.Cryptography.RSACng.VerifyHash*\n  parent: System.Security.Cryptography.RSACng\n  isExternal: false\n  name: VerifyHash\n  nameWithType: RSACng.VerifyHash\n  fullName: RSACng.VerifyHash\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RSACng.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: AsymmetricAlgorithm.Clear()\n  fullName: AsymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.RSA.Create\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create()\n  nameWithType: RSA.Create()\n  fullName: RSA.Create()\n- uid: System.Security.Cryptography.RSA.Create(System.String)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create(String)\n  nameWithType: RSA.Create(String)\n  fullName: RSA.Create(String)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: AsymmetricAlgorithm.Dispose()\n  fullName: AsymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: FromXmlString(String)\n  nameWithType: RSA.FromXmlString(String)\n  fullName: RSA.FromXmlString(String)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeySize\n  nameWithType: AsymmetricAlgorithm.KeySize\n  fullName: AsymmetricAlgorithm.KeySize\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: AsymmetricAlgorithm.KeySizeValue\n  fullName: AsymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue\n  fullName: AsymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: ToXmlString(Boolean)\n  nameWithType: RSA.ToXmlString(Boolean)\n  fullName: RSA.ToXmlString(Boolean)\n- uid: System.Security.Cryptography.RSA.Create(System.Int32)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create(Int32)\n  nameWithType: RSA.Create(Int32)\n  fullName: RSA.Create(Int32)\n- uid: System.Security.Cryptography.RSA.Create(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: Create(RSAParameters)\n  nameWithType: RSA.Create(RSAParameters)\n  fullName: RSA.Create(RSAParameters)\n- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Stream, HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSA\n  isExternal: false\n  name: VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  nameWithType: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n  fullName: RSA.VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding)\n"}