### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DataProtector
  commentId: T:System.Security.Cryptography.DataProtector
  id: DataProtector
  children:
  - System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])
  - System.Security.Cryptography.DataProtector.ApplicationName
  - System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  - System.Security.Cryptography.DataProtector.GetHashedPurpose
  - System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])
  - System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext
  - System.Security.Cryptography.DataProtector.PrimaryPurpose
  - System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  - System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])
  - System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])
  - System.Security.Cryptography.DataProtector.SpecificPurposes
  - System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  langs:
  - csharp
  name: DataProtector
  nameWithType: DataProtector
  fullName: System.Security.Cryptography.DataProtector
  type: Class
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Provides the base class for data protectors.
  remarks: "This class protects stored data from viewing and tampering. The access to the protected data is obtained by creating an instance of this class and using the exact purpose strings that were used to protect the data.  The caller does not need a key to either protect or unprotect the data. The key is provided by the encryption algorithm.  \n  \n Derived classes must override the <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> and <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> methods, which the <xref:System.Security.Cryptography.DataProtector> base class calls back into. They must also override the <xref:System.Security.Cryptography.DataProtector.IsReprotectRequired%2A> method, which can always return `true` with a  potential small loss of efficiency when applications refresh their database of stored cipher text. Derived classes should provide a constructor that calls the base class constructor, which sets the <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A>, and <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> properties."
  example:
  - "The following example demonstrates how to create a data protector that uses a protection class with an option for extra entropy. By default, the <xref:System.Security.Cryptography.DataProtector> class prepends the hash of the purpose properties to the data to be encrypted. You can turn that functionality off and use the hashed purpose as extra entropy when calling a data protector with an extra entropy option.  \n  \n [!code-csharp[Cryptography.DataProtector#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.dataprotector/cs/class1.cs#1)]\n [!code-vb[Cryptography.DataProtector#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.dataprotector/vb/class1.vb#1)]  \n  \n The following example demonstrates a simple data protector that uses the <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> functionality of the <xref:System.Security.Cryptography.DataProtector> class.  \n  \n [!code-csharp[Cryptography.MemoryProtector#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#1)]\n [!code-vb[Cryptography.MemoryProtector#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#1)]"
  syntax:
    content: public abstract class DataProtector
  inheritance:
  - System.Object
  derivedClasses:
  - System.Security.Cryptography.DpapiDataProtector
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])
  commentId: M:System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])
  id: '#ctor(System.String,System.String,System.String[])'
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: DataProtector(String, String, String[])
  nameWithType: DataProtector.DataProtector(String, String, String[])
  fullName: DataProtector.DataProtector(String, String, String[])
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Creates a new instance of the <xref href="System.Security.Cryptography.DataProtector"></xref> class by using the provided application name, primary purpose, and specific purposes.
  remarks: This constructor sets the <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, and <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> properties. The combination of these three properties must uniquely identify the data you are protecting. If the data is not uniquely identified, you might inadvertently read the wrong data, or other data might be substituted for yours. Examples of primary and specific purpose pairs are "invoice" and invoice number, "gift card" and gift card number, "password" and URL string.
  syntax:
    content: protected DataProtector (string applicationName, string primaryPurpose, string[] specificPurposes);
    parameters:
    - id: applicationName
      type: System.String
      description: The name of the application.
    - id: primaryPurpose
      type: System.String
      description: The primary purpose for the protected data.
    - id: specificPurposes
      type: System.String[]
      description: The specific purposes for the protected data.
  overload: System.Security.Cryptography.DataProtector.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>applicationName</code> is an empty string or `null`.  \n  \n -or-  \n  \n <code>primaryPurpose</code> is an empty string or `null`.  \n  \n -or-  \n  \n <code>specificPurposes</code> contains an empty string or `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.ApplicationName
  commentId: P:System.Security.Cryptography.DataProtector.ApplicationName
  id: ApplicationName
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: ApplicationName
  nameWithType: DataProtector.ApplicationName
  fullName: DataProtector.ApplicationName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Gets the name of the application.
  syntax:
    content: protected string ApplicationName { get; }
    return:
      type: System.String
      description: The name of the application.
  overload: System.Security.Cryptography.DataProtector.ApplicationName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  commentId: M:System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  id: Create(System.String,System.String,System.String,System.String[])
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: Create(String, String, String, String[])
  nameWithType: DataProtector.Create(String, String, String, String[])
  fullName: DataProtector.Create(String, String, String, String[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Creates an instance of a data protector implementation by using the specified class name of the data protector, the application name, the primary purpose, and the specific purposes.
  syntax:
    content: public static System.Security.Cryptography.DataProtector Create (string providerClass, string applicationName, string primaryPurpose, string[] specificPurposes);
    parameters:
    - id: providerClass
      type: System.String
      description: The class name for the data protector.
    - id: applicationName
      type: System.String
      description: The name of the application.
    - id: primaryPurpose
      type: System.String
      description: The primary purpose for the protected data.
    - id: specificPurposes
      type: System.String[]
      description: The specific purposes for the protected data.
    return:
      type: System.Security.Cryptography.DataProtector
      description: A data protector implementation object.
  overload: System.Security.Cryptography.DataProtector.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>providerClass</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.GetHashedPurpose
  commentId: M:System.Security.Cryptography.DataProtector.GetHashedPurpose
  id: GetHashedPurpose
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: GetHashedPurpose()
  nameWithType: DataProtector.GetHashedPurpose()
  fullName: DataProtector.GetHashedPurpose()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Creates a hash of the property values specified by the constructor.
  remarks: <xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> computes the hash of the application name and the full purpose.  The full purpose is a concatenation of all the <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> and <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> properties.  Each of the three parts is prefaced with its length so the hash can be reversed.
  example:
  - "The following example shows how to use the <xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> method to hash the purpose properties for use as extra entropy.  It is part of a larger code example for the <xref:System.Security.Cryptography.DataProtector> class.  \n  \n [!code-csharp[Cryptography.DataProtector#3](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.dataprotector/cs/class1.cs#3)]\n [!code-vb[Cryptography.DataProtector#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.dataprotector/vb/class1.vb#3)]"
  syntax:
    content: protected virtual byte[] GetHashedPurpose ();
    parameters: []
    return:
      type: System.Byte[]
      description: An array of bytes that contain the hash of the <xref href="System.Security.Cryptography.DataProtector.ApplicationName"></xref>, <xref href="System.Security.Cryptography.DataProtector.PrimaryPurpose"></xref>, and <xref href="System.Security.Cryptography.DataProtector.SpecificPurposes"></xref> properties.
  overload: System.Security.Cryptography.DataProtector.GetHashedPurpose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])
  commentId: M:System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])
  id: IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: IsReprotectRequired(Byte[])
  nameWithType: DataProtector.IsReprotectRequired(Byte[])
  fullName: DataProtector.IsReprotectRequired(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Determines if re-encryption is required for the specified encrypted data.
  syntax:
    content: public abstract bool IsReprotectRequired (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: The encrypted data to be evaluated.
    return:
      type: System.Boolean
      description: '`true` if the data must be re-encrypted; otherwise, `false`.'
  overload: System.Security.Cryptography.DataProtector.IsReprotectRequired*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext
  commentId: P:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext
  id: PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: PrependHashedPurposeToPlaintext
  nameWithType: DataProtector.PrependHashedPurposeToPlaintext
  fullName: DataProtector.PrependHashedPurposeToPlaintext
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Specifies whether the hash is prepended to the text array before encryption.
  remarks: By default, it is assumed that derived classes will prepend the hash of the <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, and <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> properties to the plain text before encryption, and will check and verify  the hash during decryption.  If a derived class wants to specify the prepended data on its own (for example as an optional entropy value), this property can be overridden and set to return `false`.  If <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> is `false`, <xref:System.Security.Cryptography.DataProtector.Protect%2A> and <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> passes directly through to the <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> and <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> overrides without altering the byte array.
  syntax:
    content: protected virtual bool PrependHashedPurposeToPlaintext { get; }
    return:
      type: System.Boolean
      description: Always `true`.
  overload: System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.PrimaryPurpose
  commentId: P:System.Security.Cryptography.DataProtector.PrimaryPurpose
  id: PrimaryPurpose
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: PrimaryPurpose
  nameWithType: DataProtector.PrimaryPurpose
  fullName: DataProtector.PrimaryPurpose
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Gets the primary purpose for the protected data.
  syntax:
    content: protected string PrimaryPurpose { get; }
    return:
      type: System.String
      description: The primary purpose for the protected data.
  overload: System.Security.Cryptography.DataProtector.PrimaryPurpose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  commentId: M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  id: Protect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: Protect(Byte[])
  nameWithType: DataProtector.Protect(Byte[])
  fullName: DataProtector.Protect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Protects the specified user data.
  syntax:
    content: public byte[] Protect (byte[] userData);
    parameters:
    - id: userData
      type: System.Byte[]
      description: The data to be protected.
    return:
      type: System.Byte[]
      description: A byte array that contains the encrypted data.
  overload: System.Security.Cryptography.DataProtector.Protect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>userData</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])
  commentId: M:System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])
  id: ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: ProviderProtect(Byte[])
  nameWithType: DataProtector.ProviderProtect(Byte[])
  fullName: DataProtector.ProviderProtect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Specifies the delegate method in the derived class that the <xref href="System.Security.Cryptography.DataProtector.Protect(System.Byte[])"></xref> method in the base class calls back into.
  remarks: ''
  example:
  - "The following example shows an implementation of the <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> method.  It is part of a larger code example for the <xref:System.Security.Cryptography.DataProtector> class.  \n  \n [!code-csharp[Cryptography.MemoryProtector#3](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#3)]\n [!code-vb[Cryptography.MemoryProtector#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#3)]"
  syntax:
    content: protected abstract byte[] ProviderProtect (byte[] userData);
    parameters:
    - id: userData
      type: System.Byte[]
      description: The data to be encrypted.
    return:
      type: System.Byte[]
      description: A byte array that contains the encrypted data.
  overload: System.Security.Cryptography.DataProtector.ProviderProtect*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])
  commentId: M:System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])
  id: ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: ProviderUnprotect(Byte[])
  nameWithType: DataProtector.ProviderUnprotect(Byte[])
  fullName: DataProtector.ProviderUnprotect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Specifies the delegate method in the derived class that the <xref href="System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])"></xref> method in the base class calls back into.
  remarks: ''
  example:
  - "The following example shows an implementation of the <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> method.  It is part of a larger code example for the <xref:System.Security.Cryptography.DataProtector> class.  \n  \n [!code-csharp[Cryptography.MemoryProtector#4](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#4)]\n [!code-vb[Cryptography.MemoryProtector#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#4)]"
  syntax:
    content: protected abstract byte[] ProviderUnprotect (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: The data to be unencrypted.
    return:
      type: System.Byte[]
      description: The unencrypted data..
  overload: System.Security.Cryptography.DataProtector.ProviderUnprotect*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.SpecificPurposes
  commentId: P:System.Security.Cryptography.DataProtector.SpecificPurposes
  id: SpecificPurposes
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: SpecificPurposes
  nameWithType: DataProtector.SpecificPurposes
  fullName: DataProtector.SpecificPurposes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Gets the specific purposes for the protected data.
  syntax:
    content: protected System.Collections.Generic.IEnumerable<string> SpecificPurposes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: A collection of the specific purposes for the protected data.
  overload: System.Security.Cryptography.DataProtector.SpecificPurposes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  commentId: M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  id: Unprotect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  langs:
  - csharp
  name: Unprotect(Byte[])
  nameWithType: DataProtector.Unprotect(Byte[])
  fullName: DataProtector.Unprotect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: Unprotects the specified protected data.
  syntax:
    content: public byte[] Unprotect (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: The encrypted data to be unprotected.
    return:
      type: System.Byte[]
      description: A byte array that contains the plain-text data.
  overload: System.Security.Cryptography.DataProtector.Unprotect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>encryptedData</code> is `null`.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: <code>encryptedData</code> contained an invalid purpose.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: DataProtector(String, String, String[])
  nameWithType: DataProtector.DataProtector(String, String, String[])
  fullName: DataProtector.DataProtector(String, String, String[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DataProtector.ApplicationName
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: ApplicationName
  nameWithType: DataProtector.ApplicationName
  fullName: DataProtector.ApplicationName
- uid: System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: Create(String, String, String, String[])
  nameWithType: DataProtector.Create(String, String, String, String[])
  fullName: DataProtector.Create(String, String, String, String[])
- uid: System.Security.Cryptography.DataProtector
  parent: System.Security.Cryptography
  isExternal: false
  name: DataProtector
  nameWithType: DataProtector
  fullName: System.Security.Cryptography.DataProtector
- uid: System.Security.Cryptography.DataProtector.GetHashedPurpose
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: GetHashedPurpose()
  nameWithType: DataProtector.GetHashedPurpose()
  fullName: DataProtector.GetHashedPurpose()
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: IsReprotectRequired(Byte[])
  nameWithType: DataProtector.IsReprotectRequired(Byte[])
  fullName: DataProtector.IsReprotectRequired(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DataProtector.PrependHashedPurposeToPlaintext
  fullName: DataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DataProtector.PrimaryPurpose
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: PrimaryPurpose
  nameWithType: DataProtector.PrimaryPurpose
  fullName: DataProtector.PrimaryPurpose
- uid: System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: Protect(Byte[])
  nameWithType: DataProtector.Protect(Byte[])
  fullName: DataProtector.Protect(Byte[])
- uid: System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: ProviderProtect(Byte[])
  nameWithType: DataProtector.ProviderProtect(Byte[])
  fullName: DataProtector.ProviderProtect(Byte[])
- uid: System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: ProviderUnprotect(Byte[])
  nameWithType: DataProtector.ProviderUnprotect(Byte[])
  fullName: DataProtector.ProviderUnprotect(Byte[])
- uid: System.Security.Cryptography.DataProtector.SpecificPurposes
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: SpecificPurposes
  nameWithType: DataProtector.SpecificPurposes
  fullName: DataProtector.SpecificPurposes
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: Unprotect(Byte[])
  nameWithType: DataProtector.Unprotect(Byte[])
  fullName: DataProtector.Unprotect(Byte[])
- uid: System.Security.Cryptography.DataProtector.#ctor*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: DataProtector
  nameWithType: DataProtector.DataProtector
  fullName: DataProtector.DataProtector
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.ApplicationName*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: ApplicationName
  nameWithType: DataProtector.ApplicationName
  fullName: DataProtector.ApplicationName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.Create*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: Create
  nameWithType: DataProtector.Create
  fullName: DataProtector.Create
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.GetHashedPurpose*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: GetHashedPurpose
  nameWithType: DataProtector.GetHashedPurpose
  fullName: DataProtector.GetHashedPurpose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.IsReprotectRequired*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: IsReprotectRequired
  nameWithType: DataProtector.IsReprotectRequired
  fullName: DataProtector.IsReprotectRequired
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DataProtector.PrependHashedPurposeToPlaintext
  fullName: DataProtector.PrependHashedPurposeToPlaintext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.PrimaryPurpose*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: PrimaryPurpose
  nameWithType: DataProtector.PrimaryPurpose
  fullName: DataProtector.PrimaryPurpose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.Protect*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: Protect
  nameWithType: DataProtector.Protect
  fullName: DataProtector.Protect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.ProviderProtect*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: ProviderProtect
  nameWithType: DataProtector.ProviderProtect
  fullName: DataProtector.ProviderProtect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.ProviderUnprotect*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: ProviderUnprotect
  nameWithType: DataProtector.ProviderUnprotect
  fullName: DataProtector.ProviderUnprotect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.SpecificPurposes*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: SpecificPurposes
  nameWithType: DataProtector.SpecificPurposes
  fullName: DataProtector.SpecificPurposes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Security.Cryptography.DataProtector.Unprotect*
  parent: System.Security.Cryptography.DataProtector
  isExternal: false
  name: Unprotect
  nameWithType: DataProtector.Unprotect
  fullName: DataProtector.Unprotect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DataProtector.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
