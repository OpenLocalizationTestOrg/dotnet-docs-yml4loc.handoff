{"nodes":[{"content":"Parses a new URI scheme. This is an abstract class.","nodes":[{"pos":[0,51],"content":"Parses a new URI scheme. This is an abstract class.","nodes":[{"content":"Parses a new URI scheme. This is an abstract class.","pos":[0,51],"nodes":[{"content":"Parses a new URI scheme.","pos":[0,24]},{"content":"This is an abstract class.","pos":[25,51]}]}]}],"pos":[919,971],"yaml":true},{"content":"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.  \n  \n Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","nodes":[{"pos":[0,578],"content":"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.","nodes":[{"content":"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.","pos":[0,578],"nodes":[{"content":"The UriParser class enables you to create parsers for new URI schemes.","pos":[0,70]},{"content":"You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols).","pos":[71,230]},{"content":"If you want to create a completely new parser, inherit from <ph id=\"ph1\">&lt;xref:System.GenericUriParser&gt;</ph>.","pos":[231,322],"source":" If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>."},{"content":"If you want to create a parser that extends a well-known URI scheme, inherit from <ph id=\"ph1\">&lt;xref:System.FtpStyleUriParser&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.HttpStyleUriParser&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.FileStyleUriParser&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.GopherStyleUriParser&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.LdapStyleUriParser&gt;</ph>.","pos":[323,578],"source":" If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>."}]}]},{"pos":[585,793],"content":"Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","nodes":[{"content":"Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","pos":[0,208],"nodes":[{"content":"Microsoft strongly recommends that you use a parser shipped with the .NET Framework.","pos":[0,84]},{"content":"Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.","pos":[85,208]}]}]}],"pos":[982,1780],"yaml":true,"extradata":"MT"},{"content":"Constructs a default URI parser.","nodes":[{"pos":[0,32],"content":"Constructs a default URI parser.","nodes":[{"content":"Constructs a default URI parser.","pos":[0,32]}]}],"pos":[3493,3526],"yaml":true},{"content":"Gets the components from a URI.","nodes":[{"pos":[0,31],"content":"Gets the components from a URI.","nodes":[{"content":"Gets the components from a URI.","pos":[0,31]}]}],"pos":[4933,4965],"yaml":true},{"content":"Use the <xref:System.UriParser.GetComponents%2A> method to determine the value of various parts of the URI, such as the <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, or <xref:System.UriComponents.Port>.  \n  \n The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.","nodes":[{"pos":[0,226],"content":"Use the <xref:System.UriParser.GetComponents%2A> method to determine the value of various parts of the URI, such as the <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, or <xref:System.UriComponents.Port>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.UriParser.GetComponents%2A&gt;</ph> method to determine the value of various parts of the URI, such as the <ph id=\"ph2\">&lt;xref:System.UriComponents.Scheme&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.UriComponents.Host&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.UriComponents.Port&gt;</ph>.","pos":[0,226],"source":"Use the <xref:System.UriParser.GetComponents%2A> method to determine the value of various parts of the URI, such as the <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, or <xref:System.UriComponents.Port>."}]},{"pos":[233,385],"content":"The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.","nodes":[{"content":"The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.","pos":[0,152],"nodes":[{"content":"The components are returned in the order that they appear in the URI.","pos":[0,69]},{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.UriComponents.Scheme&gt;</ph> is specified, it appears first.","pos":[70,152],"source":" For example, if <xref:System.UriComponents.Scheme> is specified, it appears first."}]}]}],"pos":[4976,5366],"yaml":true,"extradata":"MT"},{"content":"The URI to parse.","nodes":[{"pos":[0,17],"content":"The URI to parse.","nodes":[{"content":"The URI to parse.","pos":[0,17]}]}],"pos":[5555,5573],"yaml":true},{"content":"The <xref href=\"System.UriComponents\"></xref> to retrieve from <code>uri</code>.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.UriComponents\"&gt;&lt;/xref&gt;</ph> to retrieve from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.UriComponents\"></xref> to retrieve from <code>uri</code>."}],"pos":[5646,5727],"yaml":true},{"content":"One of the <xref href=\"System.UriFormat\"></xref> values that controls how special characters are escaped.","nodes":[{"pos":[0,105],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.UriFormat\"&gt;&lt;/xref&gt;</ph> values that controls how special characters are escaped.","source":"One of the <xref href=\"System.UriFormat\"></xref> values that controls how special characters are escaped."}],"pos":[5792,5898],"yaml":true},{"content":"A string that contains the components.","nodes":[{"pos":[0,38],"content":"A string that contains the components.","nodes":[{"content":"A string that contains the components.","pos":[0,38]}]}],"pos":[5955,5994],"yaml":true},{"content":"<code>uriFormat</code> is invalid.  \n  \n \\- or -  \n  \n <code>uriComponents</code> is not a combination of valid <xref href=\"System.UriComponents\"></xref> values.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;uriFormat&lt;/code&gt;</ph> is invalid.","source":"<code>uriFormat</code> is invalid."},{"pos":[41,48],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[55,161],"content":"<ph id=\"ph1\">&lt;code&gt;uriComponents&lt;/code&gt;</ph> is not a combination of valid <ph id=\"ph2\">&lt;xref href=\"System.UriComponents\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>uriComponents</code> is not a combination of valid <xref href=\"System.UriComponents\"></xref> values."}],"pos":[6166,6337],"yaml":true},{"content":"<code>uri</code> requires user-driven parsing  \n  \n \\- or -  \n  \n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> requires user-driven parsing","source":"<code>uri</code> requires user-driven parsing"},{"pos":[52,59],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[66,153],"content":"<code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is not an absolute URI.","pos":[0,40],"source":"<code>uri</code> is not an absolute URI."},{"content":"Relative URIs cannot be used with this method.","pos":[41,87]}]}],"pos":[6447,6608],"yaml":true},{"content":"Initialize the state of the parser and validate the URI.","nodes":[{"pos":[0,56],"content":"Initialize the state of the parser and validate the URI.","nodes":[{"content":"Initialize the state of the parser and validate the URI.","pos":[0,56]}]}],"pos":[7893,7950],"yaml":true},{"content":"The <xref:System.UriParser.InitializeAndValidate%2A> method is called every time a <xref:System.Uri> is instantiated.","nodes":[{"pos":[0,117],"content":"The <xref:System.UriParser.InitializeAndValidate%2A> method is called every time a <xref:System.Uri> is instantiated.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.UriParser.InitializeAndValidate%2A&gt;</ph> method is called every time a <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> is instantiated.","pos":[0,117],"source":"The <xref:System.UriParser.InitializeAndValidate%2A> method is called every time a <xref:System.Uri> is instantiated."}]}],"pos":[7961,8079],"yaml":true,"extradata":"MT"},{"content":"The T:System.Uri to validate.","nodes":[{"pos":[0,29],"content":"The T:System.Uri to validate.","nodes":[{"content":"The T:System.Uri to validate.","pos":[0,29]}]}],"pos":[8267,8297],"yaml":true},{"content":"Validation errors, if any.","nodes":[{"pos":[0,26],"content":"Validation errors, if any.","nodes":[{"content":"Validation errors, if any.","pos":[0,26]}]}],"pos":[8377,8404],"yaml":true},{"content":"Determines whether <code>baseUri</code> is a base URI for <code>relativeUri</code>.","nodes":[{"pos":[0,83],"content":"Determines whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a base URI for <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relativeUri</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Determines whether <code>baseUri</code> is a base URI for <code>relativeUri</code>."}],"pos":[9587,9671],"yaml":true},{"content":"The base URI.","nodes":[{"pos":[0,13],"content":"The base URI.","nodes":[{"content":"The base URI.","pos":[0,13]}]}],"pos":[9834,9848],"yaml":true},{"content":"The URI to test.","nodes":[{"pos":[0,16],"content":"The URI to test.","nodes":[{"content":"The URI to test.","pos":[0,16]}]}],"pos":[9912,9929],"yaml":true},{"content":"`true` if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a base URI for <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">relativeUri</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, `false`."}],"pos":[9987,10084],"yaml":true},{"content":"Indicates whether the parser for a scheme is registered.","nodes":[{"pos":[0,56],"content":"Indicates whether the parser for a scheme is registered.","nodes":[{"content":"Indicates whether the parser for a scheme is registered.","pos":[0,56]}]}],"pos":[11254,11311],"yaml":true},{"content":"The scheme name to check.","nodes":[{"pos":[0,25],"content":"The scheme name to check.","nodes":[{"content":"The scheme name to check.","pos":[0,25]}]}],"pos":[11470,11496],"yaml":true},{"content":"`true` if <code>schemeName</code> has been registered; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">schemeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> has been registered; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>schemeName</code> has been registered; otherwise, `false`."}],"pos":[11554,11631],"yaml":true},{"content":"The <code>schemeName</code> parameter is null.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is null.","source":"The <code>schemeName</code> parameter is null."}],"pos":[11791,11838],"yaml":true},{"content":"The <code>schemeName</code> parameter is not valid.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schemeName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The <code>schemeName</code> parameter is not valid."}],"pos":[11952,12004],"yaml":true},{"content":"Indicates whether a URI is well-formed.","nodes":[{"pos":[0,39],"content":"Indicates whether a URI is well-formed.","nodes":[{"content":"Indicates whether a URI is well-formed.","pos":[0,39]}]}],"pos":[13178,13218],"yaml":true},{"content":"The <xref:System.UriParser.IsWellFormedOriginalString%2A> method will return false if:  \n  \n-   The string is not correctly escaped per RFC 2396.  \n  \n-   The string represents an absolute URI that references an implicit file URI.  \n  \n-   The string represents an absolute URI that is missing a forward slash before the path component.  \n  \n-   The string contains unescaped backslashes, even if they will be treated as forward slashes.","nodes":[{"pos":[0,86],"content":"The <xref:System.UriParser.IsWellFormedOriginalString%2A> method will return false if:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.UriParser.IsWellFormedOriginalString%2A&gt;</ph> method will return false if:","pos":[0,86],"source":"The <xref:System.UriParser.IsWellFormedOriginalString%2A> method will return false if:"}]},{"pos":[96,145],"content":"The string is not correctly escaped per RFC 2396.","nodes":[{"content":"The string is not correctly escaped per RFC 2396.","pos":[0,49]}]},{"pos":[155,230],"content":"The string represents an absolute URI that references an implicit file URI.","nodes":[{"content":"The string represents an absolute URI that references an implicit file URI.","pos":[0,75]}]},{"pos":[240,336],"content":"The string represents an absolute URI that is missing a forward slash before the path component.","nodes":[{"content":"The string represents an absolute URI that is missing a forward slash before the path component.","pos":[0,96]}]},{"pos":[346,437],"content":"The string contains unescaped backslashes, even if they will be treated as forward slashes.","nodes":[{"content":"The string contains unescaped backslashes, even if they will be treated as forward slashes.","pos":[0,91]}]}],"pos":[13229,13677],"yaml":true,"extradata":"MT"},{"content":"The URI to check.","nodes":[{"pos":[0,17],"content":"The URI to check.","nodes":[{"content":"The URI to check.","pos":[0,17]}]}],"pos":[13833,13851],"yaml":true},{"content":"`true` if <code>uri</code> is well-formed; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept> is well-formed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>uri</code> is well-formed; otherwise, `false`."}],"pos":[13909,13974],"yaml":true},{"content":"Invoked by a <xref href=\"System.Uri\"></xref> constructor to get a <xref href=\"System.UriParser\"></xref> instance","nodes":[{"pos":[0,112],"content":"Invoked by a <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> constructor to get a <ph id=\"ph2\">&lt;xref href=\"System.UriParser\"&gt;&lt;/xref&gt;</ph> instance","source":"Invoked by a <xref href=\"System.Uri\"></xref> constructor to get a <xref href=\"System.UriParser\"></xref> instance"}],"pos":[15069,15182],"yaml":true},{"content":"The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.","nodes":[{"pos":[0,234],"content":"The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.","nodes":[{"content":"The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.","pos":[0,234],"nodes":[{"content":"The default implementation returns the same <ph id=\"ph1\">&lt;xref:System.UriParser&gt;</ph> instance.","pos":[0,77],"source":"The default implementation returns the same <xref:System.UriParser> instance."},{"content":"You may need to override this method and return a different <ph id=\"ph1\">&lt;xref:System.UriParser&gt;</ph> for each invocation if you are operating in a multithreaded environment.","pos":[78,234],"source":" You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment."}]}]}],"pos":[15193,15428],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.UriParser\"></xref> for the constructed <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.UriParser\"&gt;&lt;/xref&gt;</ph> for the constructed <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.UriParser\"></xref> for the constructed <xref href=\"System.Uri\"></xref>."}],"pos":[15571,15664],"yaml":true},{"content":"Invoked by the Framework when a <xref href=\"System.UriParser\"></xref> method is registered.","nodes":[{"pos":[0,91],"content":"Invoked by the Framework when a <ph id=\"ph1\">&lt;xref href=\"System.UriParser\"&gt;&lt;/xref&gt;</ph> method is registered.","source":"Invoked by the Framework when a <xref href=\"System.UriParser\"></xref> method is registered."}],"pos":[16876,16968],"yaml":true},{"content":"The scheme that is associated with this <xref href=\"System.UriParser\"></xref>.","nodes":[{"pos":[0,78],"content":"The scheme that is associated with this <ph id=\"ph1\">&lt;xref href=\"System.UriParser\"&gt;&lt;/xref&gt;</ph>.","source":"The scheme that is associated with this <xref href=\"System.UriParser\"></xref>."}],"pos":[17145,17224],"yaml":true},{"content":"The port number of the scheme.","nodes":[{"pos":[0,30],"content":"The port number of the scheme.","nodes":[{"content":"The port number of the scheme.","pos":[0,30]}]}],"pos":[17290,17321],"yaml":true},{"content":"Associates a scheme and port number with a <xref href=\"System.UriParser\"></xref>.","nodes":[{"pos":[0,81],"content":"Associates a scheme and port number with a <ph id=\"ph1\">&lt;xref href=\"System.UriParser\"&gt;&lt;/xref&gt;</ph>.","source":"Associates a scheme and port number with a <xref href=\"System.UriParser\"></xref>."}],"pos":[18607,18689],"yaml":true},{"content":"If the `defaultPort` parameter is set to -1, the <xref:System.UriParser.Register%2A> method registers no default value for the port number.","nodes":[{"pos":[0,139],"content":"If the <ph id=\"ph1\">`defaultPort`</ph> parameter is set to -1, the <ph id=\"ph2\">&lt;xref:System.UriParser.Register%2A&gt;</ph> method registers no default value for the port number.","source":"If the `defaultPort` parameter is set to -1, the <xref:System.UriParser.Register%2A> method registers no default value for the port number."}],"pos":[18700,18840],"yaml":true,"extradata":"MT"},{"content":"The URI parser to register.","nodes":[{"pos":[0,27],"content":"The URI parser to register.","nodes":[{"content":"The URI parser to register.","pos":[0,27]}]}],"pos":[19034,19062],"yaml":true},{"content":"The name of the scheme that is associated with this parser.","nodes":[{"pos":[0,59],"content":"The name of the scheme that is associated with this parser.","nodes":[{"content":"The name of the scheme that is associated with this parser.","pos":[0,59]}]}],"pos":[19128,19188],"yaml":true},{"content":"The default port number for the specified scheme.","nodes":[{"pos":[0,49],"content":"The default port number for the specified scheme.","nodes":[{"content":"The default port number for the specified scheme.","pos":[0,49]}]}],"pos":[19254,19304],"yaml":true},{"content":"<code>uriParser</code> parameter is null  \n  \n \\- or -  \n  \n <code>schemeName</code> parameter is null.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;uriParser&lt;/code&gt;</ph> parameter is null","source":"<code>uriParser</code> parameter is null"},{"pos":[47,54],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[61,103],"content":"<ph id=\"ph1\">&lt;code&gt;schemeName&lt;/code&gt;</ph> parameter is null.","source":"<code>schemeName</code> parameter is null."}],"pos":[19459,19570],"yaml":true},{"content":"<code>schemeName</code> parameter is not valid  \n  \n \\- or -  \n  \n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;schemeName&lt;/code&gt;</ph> parameter is not valid","source":"<code>schemeName</code> parameter is not valid"},{"pos":[53,60],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[67,194],"content":"<code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;defaultPort&lt;/code&gt;</ph> parameter is not valid.","pos":[0,48],"source":"<code>defaultPort</code> parameter is not valid."},{"content":"The <ph id=\"ph1\">&lt;code&gt;defaultPort&lt;/code&gt;</ph> parameter is less than -1 or greater than 65,534.","pos":[49,127],"source":" The <code>defaultPort</code> parameter is less than -1 or greater than 65,534."}]}],"pos":[19684,19886],"yaml":true},{"content":"Called by <xref href=\"System.Uri\"></xref> constructors and <xref href=\"System.Uri.TryCreate*\"></xref> to resolve a relative URI.","nodes":[{"pos":[0,128],"content":"Called by <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> constructors and <ph id=\"ph2\">&lt;xref href=\"System.Uri.TryCreate*\"&gt;&lt;/xref&gt;</ph> to resolve a relative URI.","source":"Called by <xref href=\"System.Uri\"></xref> constructors and <xref href=\"System.Uri.TryCreate*\"></xref> to resolve a relative URI."}],"pos":[21135,21264],"yaml":true},{"content":"<xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=fullName> use <xref:System.UriParser.Resolve%2A> to construct a URI from `baseUri` and `relativeUri`.  \n  \n If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.","nodes":[{"pos":[0,182],"content":"<ph id=\"ph1\">&lt;xref:System.Uri&gt;</ph> constructors and <ph id=\"ph2\">&lt;xref:System.Uri.TryCreate%2A?displayProperty=fullName&gt;</ph> use <ph id=\"ph3\">&lt;xref:System.UriParser.Resolve%2A&gt;</ph> to construct a URI from <ph id=\"ph4\">`baseUri`</ph> and <ph id=\"ph5\">`relativeUri`</ph>.","source":"<xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=fullName> use <xref:System.UriParser.Resolve%2A> to construct a URI from `baseUri` and `relativeUri`."},{"pos":[189,288],"content":"If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.","nodes":[{"content":"If a parsing error occurs, the returned string for the resolved relative <ph id=\"ph1\">&lt;xref:System.Uri&gt;</ph> is null.","pos":[0,99],"source":"If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null."}]}],"pos":[21275,21568],"yaml":true,"extradata":"MT"},{"content":"A base URI.","nodes":[{"pos":[0,11],"content":"A base URI.","nodes":[{"content":"A base URI.","pos":[0,11]}]}],"pos":[21769,21781],"yaml":true},{"content":"A relative URI.","nodes":[{"pos":[0,15],"content":"A relative URI.","nodes":[{"content":"A relative URI.","pos":[0,15]}]}],"pos":[21845,21861],"yaml":true},{"content":"Errors during the resolve process, if any.","nodes":[{"pos":[0,42],"content":"Errors during the resolve process, if any.","nodes":[{"content":"Errors during the resolve process, if any.","pos":[0,42]}]}],"pos":[21941,21984],"yaml":true},{"content":"The string of the resolved relative <xref href=\"System.Uri\"></xref>.","nodes":[{"pos":[0,68],"content":"The string of the resolved relative <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>.","source":"The string of the resolved relative <xref href=\"System.Uri\"></xref>."}],"pos":[22041,22110],"yaml":true},{"content":"<code>baseUri</code> parameter is not an absolute <xref href=\"System.Uri\"></xref>  \n  \n \\- or -  \n  \n <code>baseUri</code> parameter requires user-driven parsing.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;baseUri&lt;/code&gt;</ph> parameter is not an absolute <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph>","source":"<code>baseUri</code> parameter is not an absolute <xref href=\"System.Uri\"></xref>"},{"pos":[88,95],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[102,162],"content":"<ph id=\"ph1\">&lt;code&gt;baseUri&lt;/code&gt;</ph> parameter requires user-driven parsing.","source":"<code>baseUri</code> parameter requires user-driven parsing."}],"pos":[22272,22444],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.UriParser\n  commentId: T:System.UriParser\n  id: UriParser\n  children:\n  - System.UriParser.#ctor\n  - System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  - System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  - System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  - System.UriParser.IsKnownScheme(System.String)\n  - System.UriParser.IsWellFormedOriginalString(System.Uri)\n  - System.UriParser.OnNewUri\n  - System.UriParser.OnRegister(System.String,System.Int32)\n  - System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  - System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  langs:\n  - csharp\n  name: UriParser\n  nameWithType: UriParser\n  fullName: System.UriParser\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Parses a new URI scheme. This is an abstract class.\n  remarks: \"The UriParser class enables you to create parsers for new URI schemes. You can write these parsers in their entirety, or the parsers can be derived from well-known schemes (HTTP, FTP, and other schemes based on network protocols). If you want to create a completely new parser, inherit from <xref:System.GenericUriParser>. If you want to create a parser that extends a well-known URI scheme, inherit from <xref:System.FtpStyleUriParser>, <xref:System.HttpStyleUriParser>, <xref:System.FileStyleUriParser>, <xref:System.GopherStyleUriParser>, or <xref:System.LdapStyleUriParser>.  \\n  \\n Microsoft strongly recommends that you use a parser shipped with the .NET Framework. Building your own parser increases the complexity of your application, and will not perform as well as the shipped parsers.\"\n  syntax:\n    content: public abstract class UriParser\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.FileStyleUriParser\n  - System.FtpStyleUriParser\n  - System.GenericUriParser\n  - System.GopherStyleUriParser\n  - System.HttpStyleUriParser\n  - System.LdapStyleUriParser\n  - System.NetPipeStyleUriParser\n  - System.NetTcpStyleUriParser\n  - System.NewsStyleUriParser\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.#ctor\n  commentId: M:System.UriParser.#ctor\n  id: '#ctor'\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: UriParser()\n  nameWithType: UriParser.UriParser()\n  fullName: UriParser.UriParser()\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Constructs a default URI parser.\n  syntax:\n    content: protected UriParser ();\n    parameters: []\n  overload: System.UriParser.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  commentId: M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  id: GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: GetComponents(Uri, UriComponents, UriFormat)\n  nameWithType: UriParser.GetComponents(Uri, UriComponents, UriFormat)\n  fullName: UriParser.GetComponents(Uri, UriComponents, UriFormat)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the components from a URI.\n  remarks: \"Use the <xref:System.UriParser.GetComponents%2A> method to determine the value of various parts of the URI, such as the <xref:System.UriComponents.Scheme>, <xref:System.UriComponents.Host>, or <xref:System.UriComponents.Port>.  \\n  \\n The components are returned in the order that they appear in the URI. For example, if <xref:System.UriComponents.Scheme> is specified, it appears first.\"\n  syntax:\n    content: protected virtual string GetComponents (Uri uri, UriComponents components, UriFormat format);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI to parse.\n    - id: components\n      type: System.UriComponents\n      description: The <xref href=\"System.UriComponents\"></xref> to retrieve from <code>uri</code>.\n    - id: format\n      type: System.UriFormat\n      description: One of the <xref href=\"System.UriFormat\"></xref> values that controls how special characters are escaped.\n    return:\n      type: System.String\n      description: A string that contains the components.\n  overload: System.UriParser.GetComponents*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>uriFormat</code> is invalid.  \\n  \\n \\\\- or -  \\n  \\n <code>uriComponents</code> is not a combination of valid <xref href=\\\"System.UriComponents\\\"></xref> values.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>uri</code> requires user-driven parsing  \\n  \\n \\\\- or -  \\n  \\n <code>uri</code> is not an absolute URI. Relative URIs cannot be used with this method.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  commentId: M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  id: InitializeAndValidate(System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: InitializeAndValidate(Uri, UriFormatException)\n  nameWithType: UriParser.InitializeAndValidate(Uri, UriFormatException)\n  fullName: UriParser.InitializeAndValidate(Uri, UriFormatException)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initialize the state of the parser and validate the URI.\n  remarks: The <xref:System.UriParser.InitializeAndValidate%2A> method is called every time a <xref:System.Uri> is instantiated.\n  syntax:\n    content: protected virtual void InitializeAndValidate (Uri uri, out UriFormatException parsingError);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The T:System.Uri to validate.\n    - id: parsingError\n      type: System.UriFormatException\n      description: Validation errors, if any.\n  overload: System.UriParser.InitializeAndValidate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  commentId: M:System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  id: IsBaseOf(System.Uri,System.Uri)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: IsBaseOf(Uri, Uri)\n  nameWithType: UriParser.IsBaseOf(Uri, Uri)\n  fullName: UriParser.IsBaseOf(Uri, Uri)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Determines whether <code>baseUri</code> is a base URI for <code>relativeUri</code>.\n  syntax:\n    content: protected virtual bool IsBaseOf (Uri baseUri, Uri relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI.\n    - id: relativeUri\n      type: System.Uri\n      description: The URI to test.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>baseUri</code> is a base URI for <code>relativeUri</code>; otherwise, `false`.'\n  overload: System.UriParser.IsBaseOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.IsKnownScheme(System.String)\n  commentId: M:System.UriParser.IsKnownScheme(System.String)\n  id: IsKnownScheme(System.String)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: IsKnownScheme(String)\n  nameWithType: UriParser.IsKnownScheme(String)\n  fullName: UriParser.IsKnownScheme(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Indicates whether the parser for a scheme is registered.\n  syntax:\n    content: public static bool IsKnownScheme (string schemeName);\n    parameters:\n    - id: schemeName\n      type: System.String\n      description: The scheme name to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>schemeName</code> has been registered; otherwise, `false`.'\n  overload: System.UriParser.IsKnownScheme*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>schemeName</code> parameter is null.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>schemeName</code> parameter is not valid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)\n  commentId: M:System.UriParser.IsWellFormedOriginalString(System.Uri)\n  id: IsWellFormedOriginalString(System.Uri)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: IsWellFormedOriginalString(Uri)\n  nameWithType: UriParser.IsWellFormedOriginalString(Uri)\n  fullName: UriParser.IsWellFormedOriginalString(Uri)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Indicates whether a URI is well-formed.\n  remarks: \"The <xref:System.UriParser.IsWellFormedOriginalString%2A> method will return false if:  \\n  \\n-   The string is not correctly escaped per RFC 2396.  \\n  \\n-   The string represents an absolute URI that references an implicit file URI.  \\n  \\n-   The string represents an absolute URI that is missing a forward slash before the path component.  \\n  \\n-   The string contains unescaped backslashes, even if they will be treated as forward slashes.\"\n  syntax:\n    content: protected virtual bool IsWellFormedOriginalString (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI to check.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>uri</code> is well-formed; otherwise, `false`.'\n  overload: System.UriParser.IsWellFormedOriginalString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.OnNewUri\n  commentId: M:System.UriParser.OnNewUri\n  id: OnNewUri\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: OnNewUri()\n  nameWithType: UriParser.OnNewUri()\n  fullName: UriParser.OnNewUri()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Invoked by a <xref href=\"System.Uri\"></xref> constructor to get a <xref href=\"System.UriParser\"></xref> instance\n  remarks: The default implementation returns the same <xref:System.UriParser> instance. You may need to override this method and return a different <xref:System.UriParser> for each invocation if you are operating in a multithreaded environment.\n  syntax:\n    content: protected virtual UriParser OnNewUri ();\n    parameters: []\n    return:\n      type: System.UriParser\n      description: A <xref href=\"System.UriParser\"></xref> for the constructed <xref href=\"System.Uri\"></xref>.\n  overload: System.UriParser.OnNewUri*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.OnRegister(System.String,System.Int32)\n  commentId: M:System.UriParser.OnRegister(System.String,System.Int32)\n  id: OnRegister(System.String,System.Int32)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: OnRegister(String, Int32)\n  nameWithType: UriParser.OnRegister(String, Int32)\n  fullName: UriParser.OnRegister(String, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Invoked by the Framework when a <xref href=\"System.UriParser\"></xref> method is registered.\n  syntax:\n    content: protected virtual void OnRegister (string schemeName, int defaultPort);\n    parameters:\n    - id: schemeName\n      type: System.String\n      description: The scheme that is associated with this <xref href=\"System.UriParser\"></xref>.\n    - id: defaultPort\n      type: System.Int32\n      description: The port number of the scheme.\n  overload: System.UriParser.OnRegister*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  commentId: M:System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  id: Register(System.UriParser,System.String,System.Int32)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: Register(UriParser, String, Int32)\n  nameWithType: UriParser.Register(UriParser, String, Int32)\n  fullName: UriParser.Register(UriParser, String, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Associates a scheme and port number with a <xref href=\"System.UriParser\"></xref>.\n  remarks: If the `defaultPort` parameter is set to -1, the <xref:System.UriParser.Register%2A> method registers no default value for the port number.\n  syntax:\n    content: public static void Register (UriParser uriParser, string schemeName, int defaultPort);\n    parameters:\n    - id: uriParser\n      type: System.UriParser\n      description: The URI parser to register.\n    - id: schemeName\n      type: System.String\n      description: The name of the scheme that is associated with this parser.\n    - id: defaultPort\n      type: System.Int32\n      description: The default port number for the specified scheme.\n  overload: System.UriParser.Register*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>uriParser</code> parameter is null  \\n  \\n \\\\- or -  \\n  \\n <code>schemeName</code> parameter is null.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>schemeName</code> parameter is not valid  \\n  \\n \\\\- or -  \\n  \\n <code>defaultPort</code> parameter is not valid. The <code>defaultPort</code> parameter is less than -1 or greater than 65,534.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\n- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  commentId: M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  id: Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  langs:\n  - csharp\n  name: Resolve(Uri, Uri, UriFormatException)\n  nameWithType: UriParser.Resolve(Uri, Uri, UriFormatException)\n  fullName: UriParser.Resolve(Uri, Uri, UriFormatException)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Called by <xref href=\"System.Uri\"></xref> constructors and <xref href=\"System.Uri.TryCreate*\"></xref> to resolve a relative URI.\n  remarks: \"<xref:System.Uri> constructors and <xref:System.Uri.TryCreate%2A?displayProperty=fullName> use <xref:System.UriParser.Resolve%2A> to construct a URI from `baseUri` and `relativeUri`.  \\n  \\n If a parsing error occurs, the returned string for the resolved relative <xref:System.Uri> is null.\"\n  syntax:\n    content: protected virtual string Resolve (Uri baseUri, Uri relativeUri, out UriFormatException parsingError);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: A base URI.\n    - id: relativeUri\n      type: System.Uri\n      description: A relative URI.\n    - id: parsingError\n      type: System.UriFormatException\n      description: Errors during the resolve process, if any.\n    return:\n      type: System.String\n      description: The string of the resolved relative <xref href=\"System.Uri\"></xref>.\n  overload: System.UriParser.Resolve*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>baseUri</code> parameter is not an absolute <xref href=\\\"System.Uri\\\"></xref>  \\n  \\n \\\\- or -  \\n  \\n <code>baseUri</code> parameter requires user-driven parsing.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.UriParser.#ctor\n  parent: System.UriParser\n  isExternal: false\n  name: UriParser()\n  nameWithType: UriParser.UriParser()\n  fullName: UriParser.UriParser()\n- uid: System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)\n  parent: System.UriParser\n  isExternal: false\n  name: GetComponents(Uri, UriComponents, UriFormat)\n  nameWithType: UriParser.GetComponents(Uri, UriComponents, UriFormat)\n  fullName: UriParser.GetComponents(Uri, UriComponents, UriFormat)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.UriComponents\n  parent: System\n  isExternal: false\n  name: UriComponents\n  nameWithType: UriComponents\n  fullName: System.UriComponents\n- uid: System.UriFormat\n  parent: System\n  isExternal: false\n  name: UriFormat\n  nameWithType: UriFormat\n  fullName: System.UriFormat\n- uid: System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  isExternal: false\n  name: InitializeAndValidate(Uri, UriFormatException)\n  nameWithType: UriParser.InitializeAndValidate(Uri, UriFormatException)\n  fullName: UriParser.InitializeAndValidate(Uri, UriFormatException)\n- uid: System.UriFormatException\n  parent: System\n  isExternal: false\n  name: UriFormatException\n  nameWithType: UriFormatException\n  fullName: System.UriFormatException\n- uid: System.UriParser.IsBaseOf(System.Uri,System.Uri)\n  parent: System.UriParser\n  isExternal: false\n  name: IsBaseOf(Uri, Uri)\n  nameWithType: UriParser.IsBaseOf(Uri, Uri)\n  fullName: UriParser.IsBaseOf(Uri, Uri)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.UriParser.IsKnownScheme(System.String)\n  parent: System.UriParser\n  isExternal: false\n  name: IsKnownScheme(String)\n  nameWithType: UriParser.IsKnownScheme(String)\n  fullName: UriParser.IsKnownScheme(String)\n- uid: System.UriParser.IsWellFormedOriginalString(System.Uri)\n  parent: System.UriParser\n  isExternal: false\n  name: IsWellFormedOriginalString(Uri)\n  nameWithType: UriParser.IsWellFormedOriginalString(Uri)\n  fullName: UriParser.IsWellFormedOriginalString(Uri)\n- uid: System.UriParser.OnNewUri\n  parent: System.UriParser\n  isExternal: false\n  name: OnNewUri()\n  nameWithType: UriParser.OnNewUri()\n  fullName: UriParser.OnNewUri()\n- uid: System.UriParser\n  parent: System\n  isExternal: false\n  name: UriParser\n  nameWithType: UriParser\n  fullName: System.UriParser\n- uid: System.UriParser.OnRegister(System.String,System.Int32)\n  parent: System.UriParser\n  isExternal: false\n  name: OnRegister(String, Int32)\n  nameWithType: UriParser.OnRegister(String, Int32)\n  fullName: UriParser.OnRegister(String, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.UriParser.Register(System.UriParser,System.String,System.Int32)\n  parent: System.UriParser\n  isExternal: false\n  name: Register(UriParser, String, Int32)\n  nameWithType: UriParser.Register(UriParser, String, Int32)\n  fullName: UriParser.Register(UriParser, String, Int32)\n- uid: System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)\n  parent: System.UriParser\n  isExternal: false\n  name: Resolve(Uri, Uri, UriFormatException)\n  nameWithType: UriParser.Resolve(Uri, Uri, UriFormatException)\n  fullName: UriParser.Resolve(Uri, Uri, UriFormatException)\n- uid: System.UriParser.#ctor*\n  parent: System.UriParser\n  isExternal: false\n  name: UriParser\n  nameWithType: UriParser.UriParser\n  fullName: UriParser.UriParser\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.GetComponents*\n  parent: System.UriParser\n  isExternal: false\n  name: GetComponents\n  nameWithType: UriParser.GetComponents\n  fullName: UriParser.GetComponents\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.InitializeAndValidate*\n  parent: System.UriParser\n  isExternal: false\n  name: InitializeAndValidate\n  nameWithType: UriParser.InitializeAndValidate\n  fullName: UriParser.InitializeAndValidate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.IsBaseOf*\n  parent: System.UriParser\n  isExternal: false\n  name: IsBaseOf\n  nameWithType: UriParser.IsBaseOf\n  fullName: UriParser.IsBaseOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.IsKnownScheme*\n  parent: System.UriParser\n  isExternal: false\n  name: IsKnownScheme\n  nameWithType: UriParser.IsKnownScheme\n  fullName: UriParser.IsKnownScheme\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.IsWellFormedOriginalString*\n  parent: System.UriParser\n  isExternal: false\n  name: IsWellFormedOriginalString\n  nameWithType: UriParser.IsWellFormedOriginalString\n  fullName: UriParser.IsWellFormedOriginalString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.OnNewUri*\n  parent: System.UriParser\n  isExternal: false\n  name: OnNewUri\n  nameWithType: UriParser.OnNewUri\n  fullName: UriParser.OnNewUri\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.OnRegister*\n  parent: System.UriParser\n  isExternal: false\n  name: OnRegister\n  nameWithType: UriParser.OnRegister\n  fullName: UriParser.OnRegister\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.Register*\n  parent: System.UriParser\n  isExternal: false\n  name: Register\n  nameWithType: UriParser.Register\n  fullName: UriParser.Register\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.UriParser.Resolve*\n  parent: System.UriParser\n  isExternal: false\n  name: Resolve\n  nameWithType: UriParser.Resolve\n  fullName: UriParser.Resolve\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UriParser.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}