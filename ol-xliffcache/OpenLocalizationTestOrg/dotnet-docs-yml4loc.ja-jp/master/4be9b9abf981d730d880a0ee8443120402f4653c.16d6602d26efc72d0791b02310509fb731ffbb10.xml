{"nodes":[{"content":"Provides access to add attributes for one specific type to one specific <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref>.","nodes":[{"pos":[0,148],"content":"Provides access to add attributes for one specific type to one specific <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"&gt;&lt;/xref&gt;</ph>.","source":"Provides access to add attributes for one specific type to one specific <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref>."}],"pos":[1272,1421],"yaml":true},{"content":"The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> is queried for attributes for a type, if the <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder> was populated using <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> for that type, the delegate is passed a <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder>. The <xref:System.Activities.Presentation.Metadata.AttributeTable> removes the callback reference and adds any attribute information provided by calls to <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A>.","nodes":[{"pos":[0,659],"content":"The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> is queried for attributes for a type, if the <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder> was populated using <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> for that type, the delegate is passed a <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder>. The <xref:System.Activities.Presentation.Metadata.AttributeTable> removes the callback reference and adds any attribute information provided by calls to <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A>.","nodes":[{"content":"The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> is queried for attributes for a type, if the <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder> was populated using <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> for that type, the delegate is passed a <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder>. The <xref:System.Activities.Presentation.Metadata.AttributeTable> removes the callback reference and adds any attribute information provided by calls to <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A>.","pos":[0,659],"nodes":[{"content":"The first time an <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTable&gt;</ph> is queried for attributes for a type, if the <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder&gt;</ph> was populated using <ph id=\"ph3\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph> for that type, the delegate is passed a <ph id=\"ph4\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder&gt;</ph>.","pos":[0,410],"source":"The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> is queried for attributes for a type, if the <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder> was populated using <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> for that type, the delegate is passed a <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTable&gt;</ph> removes the callback reference and adds any attribute information provided by calls to <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A&gt;</ph>.","pos":[411,659],"source":" The <xref:System.Activities.Presentation.Metadata.AttributeTable> removes the callback reference and adds any attribute information provided by calls to <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A>."}]}]}],"pos":[1432,2092],"yaml":true,"extradata":"MT"},{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"pos":[0,94],"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","pos":[0,94]}]}],"pos":[3750,3845],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \n  \n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"pos":[0,134],"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","pos":[0,134]}]},{"pos":[141,283],"content":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"content":"Attributes can be added only to the type specified by <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A&gt;</ph>.","pos":[0,142],"source":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>."}]}],"pos":[3856,4144],"yaml":true,"extradata":"MT"},{"content":"The attributes that are added to the table.","nodes":[{"pos":[0,43],"content":"The attributes that are added to the table.","nodes":[{"content":"The attributes that are added to the table.","pos":[0,43]}]}],"pos":[4312,4356],"yaml":true},{"content":"<code>attributes</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributes</code> is `null`."}],"pos":[4570,4605],"yaml":true},{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"pos":[0,94],"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","pos":[0,94]}]}],"pos":[6022,6117],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \n  \n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"pos":[0,134],"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","pos":[0,134]}]},{"pos":[141,283],"content":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"content":"Attributes can be added only to the type specified by <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A&gt;</ph>.","pos":[0,142],"source":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>."}]}],"pos":[6128,6416],"yaml":true,"extradata":"MT"},{"content":"The member to which the attributes are added.","nodes":[{"pos":[0,45],"content":"The member to which the attributes are added.","nodes":[{"content":"The member to which the attributes are added.","pos":[0,45]}]}],"pos":[6655,6701],"yaml":true},{"content":"The attributes that are added to the table.","nodes":[{"pos":[0,43],"content":"The attributes that are added to the table.","nodes":[{"content":"The attributes that are added to the table.","pos":[0,43]}]}],"pos":[6772,6816],"yaml":true},{"content":"<code>descriptor</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;descriptor&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>descriptor</code> or <code>attributes</code> is `null`."}],"pos":[7030,7092],"yaml":true},{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"pos":[0,94],"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","pos":[0,94]}]}],"pos":[8461,8556],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \n  \n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"pos":[0,134],"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","pos":[0,134]}]},{"pos":[141,283],"content":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"content":"Attributes can be added only to the type specified by <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A&gt;</ph>.","pos":[0,142],"source":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>."}]}],"pos":[8567,8855],"yaml":true,"extradata":"MT"},{"content":"The member to which the attributes are added.","nodes":[{"pos":[0,45],"content":"The member to which the attributes are added.","nodes":[{"content":"The member to which the attributes are added.","pos":[0,45]}]}],"pos":[9066,9112],"yaml":true},{"content":"The attributes that are added to the table.","nodes":[{"pos":[0,43],"content":"The attributes that are added to the table.","nodes":[{"content":"The attributes that are added to the table.","pos":[0,43]}]}],"pos":[9183,9227],"yaml":true},{"content":"<code>member</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;member&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>member</code> or <code>attributes</code> is `null`."}],"pos":[9441,9499],"yaml":true},{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"pos":[0,94],"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","pos":[0,94]}]}],"pos":[10811,10906],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \n  \n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"pos":[0,134],"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","pos":[0,134]}]},{"pos":[141,283],"content":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"content":"Attributes can be added only to the type specified by <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A&gt;</ph>.","pos":[0,142],"source":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>."}]}],"pos":[10917,11205],"yaml":true,"extradata":"MT"},{"content":"The name of the member to which the attributes are added.","nodes":[{"pos":[0,57],"content":"The name of the member to which the attributes are added.","nodes":[{"content":"The name of the member to which the attributes are added.","pos":[0,57]}]}],"pos":[11387,11445],"yaml":true},{"content":"The attributes that are added to the table.","nodes":[{"pos":[0,43],"content":"The attributes that are added to the table.","nodes":[{"content":"The attributes that are added to the table.","pos":[0,43]}]}],"pos":[11516,11560],"yaml":true},{"content":"<code>memberName</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;memberName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>memberName</code> or <code>attributes</code> is `null`."}],"pos":[11774,11836],"yaml":true},{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"pos":[0,94],"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","nodes":[{"content":"Adds the contents of the provided attributes to the attribute table that created this builder.","pos":[0,94]}]}],"pos":[13244,13339],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \n  \n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"pos":[0,134],"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.","pos":[0,134]}]},{"pos":[141,283],"content":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.","nodes":[{"content":"Attributes can be added only to the type specified by <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A&gt;</ph>.","pos":[0,142],"source":"Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>."}]}],"pos":[13350,13638],"yaml":true,"extradata":"MT"},{"content":"The dependency to which the attributes are added.","nodes":[{"pos":[0,49],"content":"The dependency to which the attributes are added.","nodes":[{"content":"The dependency to which the attributes are added.","pos":[0,49]}]}],"pos":[13851,13901],"yaml":true},{"content":"The attributes that are added to the table.","nodes":[{"pos":[0,43],"content":"The attributes that are added to the table.","nodes":[{"content":"The attributes that are added to the table.","pos":[0,43]}]}],"pos":[13972,14016],"yaml":true},{"content":"<code>dp</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;dp&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>dp</code> or <code>attributes</code> is `null`."}],"pos":[14230,14284],"yaml":true},{"content":"The type to which attributes will be added.","nodes":[{"pos":[0,43],"content":"The type to which attributes will be added.","nodes":[{"content":"The type to which attributes will be added.","pos":[0,43]}]}],"pos":[15391,15435],"yaml":true},{"content":"The type is set in the constructor and cannot be changed.","nodes":[{"pos":[0,57],"content":"The type is set in the constructor and cannot be changed.","nodes":[{"content":"The type is set in the constructor and cannot be changed.","pos":[0,57]}]}],"pos":[15446,15504],"yaml":true,"extradata":"MT"},{"content":"The type to which attributes will be added.","nodes":[{"pos":[0,43],"content":"The type to which attributes will be added.","nodes":[{"content":"The type to which attributes will be added.","pos":[0,43]}]}],"pos":[15616,15660],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  commentId: T:System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  id: AttributeCallbackBuilder\n  children:\n  - System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Reflection.MemberInfo,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.String,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Windows.DependencyProperty,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType\n  langs:\n  - csharp\n  name: AttributeCallbackBuilder\n  nameWithType: AttributeCallbackBuilder\n  fullName: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Provides access to add attributes for one specific type to one specific <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref>.\n  remarks: The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> is queried for attributes for a type, if the <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder> was populated using <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> for that type, the delegate is passed a <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder>. The <xref:System.Activities.Presentation.Metadata.AttributeTable> removes the callback reference and adds any attribute information provided by calls to <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A>.\n  syntax:\n    content: public sealed class AttributeCallbackBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Attribute[])\n  id: AddCustomAttributes(System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to the attribute table that created this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \\n  \\n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.\"\n  syntax:\n    content: public void AddCustomAttributes (Attribute[] attributes);\n    parameters:\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the table.\n  overload: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  id: AddCustomAttributes(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(MemberDescriptor, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(MemberDescriptor, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(MemberDescriptor, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to the attribute table that created this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \\n  \\n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.\"\n  syntax:\n    content: public void AddCustomAttributes (System.ComponentModel.MemberDescriptor descriptor, Attribute[] attributes);\n    parameters:\n    - id: descriptor\n      type: System.ComponentModel.MemberDescriptor\n      description: The member to which the attributes are added.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the table.\n  overload: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>descriptor</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Reflection.MemberInfo,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Reflection.MemberInfo,System.Attribute[])\n  id: AddCustomAttributes(System.Reflection.MemberInfo,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(MemberInfo, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(MemberInfo, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(MemberInfo, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to the attribute table that created this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \\n  \\n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.\"\n  syntax:\n    content: public void AddCustomAttributes (System.Reflection.MemberInfo member, Attribute[] attributes);\n    parameters:\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The member to which the attributes are added.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the table.\n  overload: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>member</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.String,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.String,System.Attribute[])\n  id: AddCustomAttributes(System.String,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(String, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(String, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(String, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to the attribute table that created this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \\n  \\n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.\"\n  syntax:\n    content: public void AddCustomAttributes (string memberName, Attribute[] attributes);\n    parameters:\n    - id: memberName\n      type: System.String\n      description: The name of the member to which the attributes are added.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the table.\n  overload: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>memberName</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Windows.DependencyProperty,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Windows.DependencyProperty,System.Attribute[])\n  id: AddCustomAttributes(System.Windows.DependencyProperty,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(DependencyProperty, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(DependencyProperty, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(DependencyProperty, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to the attribute table that created this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the table, the last attribute added replaces previous attributes.  \\n  \\n Attributes can be added only to the type specified by <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.\"\n  syntax:\n    content: public void AddCustomAttributes (System.Windows.DependencyProperty dp, Attribute[] attributes);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The dependency to which the attributes are added.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the table.\n  overload: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dp</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType\n  commentId: P:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType\n  id: CallbackType\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  langs:\n  - csharp\n  name: CallbackType\n  nameWithType: AttributeCallbackBuilder.CallbackType\n  fullName: AttributeCallbackBuilder.CallbackType\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: The type to which attributes will be added.\n  remarks: The type is set in the constructor and cannot be changed.\n  syntax:\n    content: public Type CallbackType { get; }\n    return:\n      type: System.Type\n      description: The type to which attributes will be added.\n  overload: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: AddCustomAttributes(Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(Attribute[])\n- uid: System.Attribute\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Attribute[]\n  parent: System\n  isExternal: false\n  name: Attribute[]\n  nameWithType: Attribute[]\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: System.Attribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: AddCustomAttributes(MemberDescriptor, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(MemberDescriptor, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(MemberDescriptor, Attribute[])\n- uid: System.ComponentModel.MemberDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: MemberDescriptor\n  nameWithType: MemberDescriptor\n  fullName: System.ComponentModel.MemberDescriptor\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Reflection.MemberInfo,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: AddCustomAttributes(MemberInfo, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(MemberInfo, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(MemberInfo, Attribute[])\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.String,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: AddCustomAttributes(String, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(String, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(String, Attribute[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Windows.DependencyProperty,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: AddCustomAttributes(DependencyProperty, Attribute[])\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes(DependencyProperty, Attribute[])\n  fullName: AttributeCallbackBuilder.AddCustomAttributes(DependencyProperty, Attribute[])\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: CallbackType\n  nameWithType: AttributeCallbackBuilder.CallbackType\n  fullName: AttributeCallbackBuilder.CallbackType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes*\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: AddCustomAttributes\n  nameWithType: AttributeCallbackBuilder.AddCustomAttributes\n  fullName: AttributeCallbackBuilder.AddCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n- uid: System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType*\n  parent: System.Activities.Presentation.Metadata.AttributeCallbackBuilder\n  isExternal: false\n  name: CallbackType\n  nameWithType: AttributeCallbackBuilder.CallbackType\n  fullName: AttributeCallbackBuilder.CallbackType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeCallbackBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}