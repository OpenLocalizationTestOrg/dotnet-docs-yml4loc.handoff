{"nodes":[{"content":"Writes primitive types in binary to a stream and supports writing strings in a specific encoding.","nodes":[{"pos":[0,97],"content":"Writes primitive types in binary to a stream and supports writing strings in a specific encoding.","nodes":[{"content":"Writes primitive types in binary to a stream and supports writing strings in a specific encoding.","pos":[0,97]}]}],"pos":[1915,2013],"yaml":true},{"content":"The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream. For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value. The class includes write methods that support different data types.  \n  \n When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object. If you do not specify an encoding type, UTF-8 is used.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n A derived class can override the methods of this class to give unique character encodings.","nodes":[{"pos":[0,315],"content":"The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream. For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value. The class includes write methods that support different data types.","nodes":[{"content":"The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream. For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value. The class includes write methods that support different data types.","pos":[0,315],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter&gt;</ph> class provides methods that simplify writing primitive data types to a stream.","pos":[0,112],"source":"The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream."},{"content":"For example, you can use the <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter.Write%2A&gt;</ph> method to write a Boolean value to the stream as a one-byte value.","pos":[113,247],"source":" For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value."},{"content":"The class includes write methods that support different data types.","pos":[248,315]}]}]},{"pos":[322,626],"content":"When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object. If you do not specify an encoding type, UTF-8 is used.","nodes":[{"content":"When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object. If you do not specify an encoding type, UTF-8 is used.","pos":[0,304],"nodes":[{"content":"When you create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter&gt;</ph> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <ph id=\"ph2\">&lt;xref:System.IO.BinaryWriter&gt;</ph> object.","pos":[0,249],"source":"When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object."},{"content":"If you do not specify an encoding type, UTF-8 is used.","pos":[250,304]}]}]},{"pos":[634,1160],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]},{"pos":[1167,1257],"content":"A derived class can override the methods of this class to give unique character encodings.","nodes":[{"content":"A derived class can override the methods of this class to give unique character encodings.","pos":[0,90]}]}],"pos":[2024,3293],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class that writes to a stream.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> class that writes to a stream.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class that writes to a stream."}],"pos":[5724,5833],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[5844,5940],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and using UTF-8 encoding.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> class based on the specified stream and using UTF-8 encoding.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and using UTF-8 encoding."}],"pos":[7595,7735],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[7746,7842],"yaml":true,"extradata":"MT"},{"content":"The output stream.","nodes":[{"pos":[0,18],"content":"The output stream.","nodes":[{"content":"The output stream.","pos":[0,18]}]}],"pos":[8401,8420],"yaml":true},{"content":"The stream does not support writing or is already closed.","nodes":[{"pos":[0,57],"content":"The stream does not support writing or is already closed.","nodes":[{"content":"The stream does not support writing or is already closed.","pos":[0,57]}]}],"pos":[8570,8628],"yaml":true},{"content":"<code>output</code> is `null`.","nodes":[{"pos":[0,30],"content":"<code>output</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[20,30],"source":" is `null`."}]}],"pos":[8730,8761],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and character encoding.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> class based on the specified stream and character encoding.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and character encoding."}],"pos":[10381,10519],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[10530,10626],"yaml":true,"extradata":"MT"},{"content":"The output stream.","nodes":[{"pos":[0,18],"content":"The output stream.","nodes":[{"content":"The output stream.","pos":[0,18]}]}],"pos":[10808,10827],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[10898,10929],"yaml":true},{"content":"The stream does not support writing or is already closed.","nodes":[{"pos":[0,57],"content":"The stream does not support writing or is already closed.","nodes":[{"content":"The stream does not support writing or is already closed.","pos":[0,57]}]}],"pos":[11079,11137],"yaml":true},{"content":"<code>output</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<code>output</code> or <code>encoding</code> is `null`.","nodes":[{"content":"or <ph id=\"ph1\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[20,55],"source":" or <code>encoding</code> is `null`."}]}],"pos":[11239,11295],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.","nodes":[{"pos":[0,176],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> class based on the specified stream and character encoding, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open."}],"pos":[12987,13164],"yaml":true},{"content":"The output stream.","nodes":[{"pos":[0,18],"content":"The output stream.","nodes":[{"content":"The output stream.","pos":[0,18]}]}],"pos":[13362,13381],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[13452,13483],"yaml":true},{"content":"`true` to leave the stream open after the <xref href=\"System.IO.BinaryWriter\"></xref> object is disposed; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream open after the <ph id=\"ph2\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> object is disposed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream open after the <xref href=\"System.IO.BinaryWriter\"></xref> object is disposed; otherwise, `false`."}],"pos":[13549,13677],"yaml":true},{"content":"The stream does not support writing or is already closed.","nodes":[{"pos":[0,57],"content":"The stream does not support writing or is already closed.","nodes":[{"content":"The stream does not support writing or is already closed.","pos":[0,57]}]}],"pos":[13827,13885],"yaml":true},{"content":"<code>output</code> or <code>encoding</code> is `null`.","nodes":[{"pos":[0,55],"content":"<code>output</code> or <code>encoding</code> is `null`.","nodes":[{"content":"or <ph id=\"ph1\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[20,55],"source":" or <code>encoding</code> is `null`."}]}],"pos":[13987,14043],"yaml":true},{"content":"Gets the underlying stream of the <xref href=\"System.IO.BinaryWriter\"></xref>.","nodes":[{"pos":[0,78],"content":"Gets the underlying stream of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the underlying stream of the <xref href=\"System.IO.BinaryWriter\"></xref>."}],"pos":[15496,15575],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[15586,15682],"yaml":true,"extradata":"MT"},{"content":"The underlying stream associated with the `BinaryWriter`.","nodes":[{"pos":[0,57],"content":"The underlying stream associated with the <ph id=\"ph1\">`BinaryWriter`</ph>.","source":"The underlying stream associated with the `BinaryWriter`."}],"pos":[16576,16634],"yaml":true},{"content":"Closes the current <xref href=\"System.IO.BinaryWriter\"></xref> and the underlying stream.","nodes":[{"pos":[0,89],"content":"Closes the current <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> and the underlying stream.","source":"Closes the current <xref href=\"System.IO.BinaryWriter\"></xref> and the underlying stream."}],"pos":[18111,18201],"yaml":true},{"content":"This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"pos":[0,112],"content":"This implementation of <ph id=\"ph1\">`Close`</ph> calls the <ph id=\"ph2\">&lt;xref:System.IO.BinaryWriter.Dispose%2A&gt;</ph> method passing a <ph id=\"ph3\">`true`</ph> value.","source":"This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value."},{"pos":[119,692],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter.Flush%2A&gt;</ph> or <ph id=\"ph2\">`Close`</ph>.","pos":[0,135],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[136,302],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[303,427]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[428,573]}]}],"pos":[18212,18909],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class.","nodes":[{"pos":[0,109],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class."}],"pos":[20135,20245],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryWriter\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,135],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryWriter\"></xref> and optionally releases the managed resources."}],"pos":[21880,22016],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[22170,22273],"yaml":true},{"content":"Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.","nodes":[{"pos":[0,110],"content":"Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.","nodes":[{"content":"Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.","pos":[0,110]}]}],"pos":[23761,23872],"yaml":true},{"content":"All derived classes should override `Flush` to ensure that all buffered data is sent to the stream.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,99],"content":"All derived classes should override <ph id=\"ph1\">`Flush`</ph> to ensure that all buffered data is sent to the stream.","source":"All derived classes should override `Flush` to ensure that all buffered data is sent to the stream."},{"pos":[106,679],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">`Flush`</ph> or <ph id=\"ph2\">&lt;xref:System.IO.BinaryWriter.Close%2A&gt;</ph>.","pos":[0,135],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[136,302],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[303,427]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[428,573]}]},{"pos":[686,781],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[23883,24671],"yaml":true,"extradata":"MT"},{"content":"Specifies a <xref href=\"System.IO.BinaryWriter\"></xref> with no backing store.","nodes":[{"pos":[0,78],"content":"Specifies a <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph> with no backing store.","source":"Specifies a <xref href=\"System.IO.BinaryWriter\"></xref> with no backing store."}],"pos":[26220,26299],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[26310,26406],"yaml":true,"extradata":"MT"},{"content":"Holds the underlying stream.","nodes":[{"pos":[0,28],"content":"Holds the underlying stream.","nodes":[{"content":"Holds the underlying stream.","pos":[0,28]}]}],"pos":[28011,28040],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[28051,28147],"yaml":true,"extradata":"MT"},{"content":"Sets the position within the current stream.","nodes":[{"pos":[0,44],"content":"Sets the position within the current stream.","nodes":[{"content":"Sets the position within the current stream.","pos":[0,44]}]}],"pos":[29865,29910],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[29921,30017],"yaml":true,"extradata":"MT"},{"content":"A byte offset relative to <code>origin</code>.","nodes":[{"pos":[0,46],"content":"A byte offset relative to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">origin</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A byte offset relative to <code>origin</code>."}],"pos":[30887,30934],"yaml":true},{"content":"A field of <xref href=\"System.IO.SeekOrigin\"></xref> indicating the reference point from which the new position is to be obtained.","nodes":[{"pos":[0,130],"content":"A field of <ph id=\"ph1\">&lt;xref href=\"System.IO.SeekOrigin\"&gt;&lt;/xref&gt;</ph> indicating the reference point from which the new position is to be obtained.","source":"A field of <xref href=\"System.IO.SeekOrigin\"></xref> indicating the reference point from which the new position is to be obtained."}],"pos":[31003,31134],"yaml":true},{"content":"The position with the current stream.","nodes":[{"pos":[0,37],"content":"The position with the current stream.","nodes":[{"content":"The position with the current stream.","pos":[0,37]}]}],"pos":[31190,31228],"yaml":true},{"content":"The file pointer was moved to an invalid location.","nodes":[{"pos":[0,50],"content":"The file pointer was moved to an invalid location.","nodes":[{"content":"The file pointer was moved to an invalid location.","pos":[0,50]}]}],"pos":[31371,31422],"yaml":true},{"content":"The <xref href=\"System.IO.SeekOrigin\"></xref> value is invalid.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.SeekOrigin\"&gt;&lt;/xref&gt;</ph> value is invalid.","source":"The <xref href=\"System.IO.SeekOrigin\"></xref> value is invalid."}],"pos":[31516,31580],"yaml":true},{"content":"Writes a region of a byte array to the current stream.","nodes":[{"pos":[0,54],"content":"Writes a region of a byte array to the current stream.","nodes":[{"content":"Writes a region of a byte array to the current stream.","pos":[0,54]}]}],"pos":[33190,33245],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[33256,33352],"yaml":true,"extradata":"MT"},{"content":"A byte array containing the data to write.","nodes":[{"pos":[0,42],"content":"A byte array containing the data to write.","nodes":[{"content":"A byte array containing the data to write.","pos":[0,42]}]}],"pos":[34018,34061],"yaml":true},{"content":"The starting point in <code>buffer</code> at which to begin writing.","nodes":[{"pos":[0,68],"content":"The starting point in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin writing.","source":"The starting point in <code>buffer</code> at which to begin writing."}],"pos":[34121,34190],"yaml":true},{"content":"The number of bytes to write.","nodes":[{"pos":[0,29],"content":"The number of bytes to write.","nodes":[{"content":"The number of bytes to write.","pos":[0,29]}]}],"pos":[34250,34280],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[34430,34506],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[34608,34639],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[34753,34807],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[34895,34916],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[35022,35044],"yaml":true},{"content":"Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.","nodes":[{"pos":[0,108],"content":"Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.","nodes":[{"content":"Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.","pos":[0,108]}]}],"pos":[36534,36643],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,163],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[36654,36822],"yaml":true,"extradata":"MT"},{"content":"The eight-byte unsigned integer to write.","nodes":[{"pos":[0,41],"content":"The eight-byte unsigned integer to write.","nodes":[{"content":"The eight-byte unsigned integer to write.","pos":[0,41]}]}],"pos":[37008,37050],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[37194,37215],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[37321,37343],"yaml":true},{"content":"Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.","nodes":[{"pos":[0,105],"content":"Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.","nodes":[{"content":"Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.","pos":[0,105]}]}],"pos":[38886,38992],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,163],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[39003,39171],"yaml":true,"extradata":"MT"},{"content":"The four-byte unsigned integer to write.","nodes":[{"pos":[0,40],"content":"The four-byte unsigned integer to write.","nodes":[{"content":"The four-byte unsigned integer to write.","pos":[0,40]}]}],"pos":[39356,39397],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[39541,39562],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[39668,39690],"yaml":true},{"content":"Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.","nodes":[{"pos":[0,103],"content":"Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.","nodes":[{"content":"Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.","pos":[0,103]}]}],"pos":[41233,41337],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,163],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[41348,41516],"yaml":true,"extradata":"MT"},{"content":"The two-byte unsigned integer to write.","nodes":[{"pos":[0,39],"content":"The two-byte unsigned integer to write.","nodes":[{"content":"The two-byte unsigned integer to write.","pos":[0,39]}]}],"pos":[41703,41743],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[41887,41908],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[42014,42036],"yaml":true},{"content":"Writes a length-prefixed string to this stream in the current encoding of the <xref href=\"System.IO.BinaryWriter\"></xref>, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.","nodes":[{"pos":[0,264],"content":"Writes a length-prefixed string to this stream in the current encoding of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryWriter\"&gt;&lt;/xref&gt;</ph>, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.","source":"Writes a length-prefixed string to this stream in the current encoding of the <xref href=\"System.IO.BinaryWriter\"></xref>, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream."}],"pos":[43579,43844],"yaml":true},{"content":"Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream. This value is written as an unsigned integer. This method then writes that many bytes to the stream.  \n  \n For example, the string \"A\" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,283],"content":"Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream. This value is written as an unsigned integer. This method then writes that many bytes to the stream.","nodes":[{"content":"Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream. This value is written as an unsigned integer. This method then writes that many bytes to the stream.","pos":[0,283],"nodes":[{"content":"Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter&gt;</ph> instance's current encoding to the stream.","pos":[0,182],"source":"Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream."},{"content":"This value is written as an unsigned integer.","pos":[183,228]},{"content":"This method then writes that many bytes to the stream.","pos":[229,283]}]}]},{"pos":[290,491],"content":"For example, the string \"A\" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.","nodes":[{"content":"For example, the string \"A\" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.","pos":[0,201]}]},{"pos":[498,593],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[43855,44457],"yaml":true,"extradata":"MT"},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[45007,45027],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[45171,45192],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[45294,45324],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[45430,45452],"yaml":true},{"content":"Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.","nodes":[{"pos":[0,109],"content":"Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.","nodes":[{"content":"Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.","pos":[0,109]}]}],"pos":[46959,47069],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,163],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[47080,47248],"yaml":true,"extradata":"MT"},{"content":"The four-byte floating-point value to write.","nodes":[{"pos":[0,44],"content":"The four-byte floating-point value to write.","nodes":[{"content":"The four-byte floating-point value to write.","pos":[0,44]}]}],"pos":[47797,47842],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[47986,48007],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[48113,48135],"yaml":true},{"content":"Writes a signed byte to the current stream and advances the stream position by one byte.","nodes":[{"pos":[0,88],"content":"Writes a signed byte to the current stream and advances the stream position by one byte.","nodes":[{"content":"Writes a signed byte to the current stream and advances the stream position by one byte.","pos":[0,88]}]}],"pos":[49636,49725],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[49736,49832],"yaml":true,"extradata":"MT"},{"content":"The signed byte to write.","nodes":[{"pos":[0,25],"content":"The signed byte to write.","nodes":[{"content":"The signed byte to write.","pos":[0,25]}]}],"pos":[50017,50043],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[50187,50208],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[50314,50336],"yaml":true},{"content":"Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.","nodes":[{"pos":[0,106],"content":"Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.","nodes":[{"content":"Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.","pos":[0,106]}]}],"pos":[51873,51980],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,163],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[51991,52159],"yaml":true,"extradata":"MT"},{"content":"The eight-byte signed integer to write.","nodes":[{"pos":[0,39],"content":"The eight-byte signed integer to write.","nodes":[{"content":"The eight-byte signed integer to write.","pos":[0,39]}]}],"pos":[52298,52338],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[52482,52503],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[52609,52631],"yaml":true},{"content":"Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream.","nodes":[{"pos":[0,192],"content":"Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the <ph id=\"ph1\">`Encoding`</ph> used and the specific characters being written to the stream.","source":"Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream."}],"pos":[54109,54302],"yaml":true},{"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:  \n  \n-   UTF-7  \n  \n-   ISO-2022-JP  \n  \n-   ISCII  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \n  \n Unicode surrogate characters must be written out as pairs together in the same call, not individually. If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.","nodes":[{"pos":[0,104],"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","nodes":[{"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","pos":[0,104]}]},{"pos":[114,119],"content":"UTF-7","nodes":[{"content":"UTF-7","pos":[0,5]}]},{"pos":[129,140],"content":"ISO-2022-JP","nodes":[{"content":"ISO-2022-JP","pos":[0,11]}]},{"pos":[150,155],"content":"ISCII","nodes":[{"content":"ISCII","pos":[0,5]}]},{"pos":[162,257],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."},{"pos":[264,527],"content":"Unicode surrogate characters must be written out as pairs together in the same call, not individually. If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.","nodes":[{"content":"Unicode surrogate characters must be written out as pairs together in the same call, not individually. If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.","pos":[0,263],"nodes":[{"content":"Unicode surrogate characters must be written out as pairs together in the same call, not individually.","pos":[0,102]},{"content":"If you require support for surrogate pairs in your application, consider using a character array and the <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter.Write%2A&gt;</ph> method overload.","pos":[103,263],"source":" If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload."}]}]}],"pos":[54313,54853],"yaml":true,"extradata":"MT"},{"content":"The non-surrogate, Unicode character to write.","nodes":[{"pos":[0,46],"content":"The non-surrogate, Unicode character to write.","nodes":[{"content":"The non-surrogate, Unicode character to write.","pos":[0,46]}]}],"pos":[55575,55622],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[55766,55787],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[55893,55915],"yaml":true},{"content":"<code>ch</code> is a single surrogate character.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;ch&lt;/code&gt;</ph> is a single surrogate character.","source":"<code>ch</code> is a single surrogate character."}],"pos":[56009,56058],"yaml":true},{"content":"Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.","nodes":[{"pos":[0,101],"content":"Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.","nodes":[{"content":"Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.","pos":[0,101]}]}],"pos":[57559,57661],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,141],"content":"The following table lists examples of other typical or related I/O tasks.","nodes":[{"content":"The following table lists examples of other typical or related I/O tasks.","pos":[0,73]}]},{"pos":[148,161],"content":"To do this...","nodes":[{"content":"To do this...","pos":[0,13]}]},{"pos":[162,194],"content":"See the example in this topic...","nodes":[{"content":"See the example in this topic...","pos":[0,32]}]},{"pos":[262,281],"content":"Create a text file.","nodes":[{"content":"Create a text file.","pos":[0,19]}]},{"pos":[282,363],"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>","source":"[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"},{"pos":[368,389],"content":"Write to a text file.","nodes":[{"content":"Write to a text file.","pos":[0,21]}]},{"pos":[390,471],"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>","source":"[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"},{"pos":[476,498],"content":"Read from a text file.","nodes":[{"content":"Read from a text file.","pos":[0,22]}]},{"pos":[499,582],"content":"<bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>","source":"[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)"},{"pos":[587,609],"content":"Append text to a file.","nodes":[{"content":"Append text to a file.","pos":[0,22]}]},{"pos":[610,859],"content":"[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">[</bpt>How to: Open and Append to a Log File<ept id=\"p1\">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept>","pos":[0,99],"source":"[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)"},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.File.AppendText%2A?displayProperty=fullName&gt;</ph>","pos":[112,172],"source":" <xref:System.IO.File.AppendText%2A?displayProperty=fullName>"},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName&gt;</ph>","pos":[185,249],"source":" <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>"}]},{"pos":[864,887],"content":"Get the size of a file.","nodes":[{"content":"Get the size of a file.","pos":[0,23]}]},{"pos":[888,948],"content":"<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>","nodes":[]},{"pos":[953,982],"content":"Get the attributes of a file.","nodes":[{"content":"Get the attributes of a file.","pos":[0,29]}]},{"pos":[983,1046],"content":"<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>","nodes":[]},{"pos":[1051,1080],"content":"Set the attributes of a file.","nodes":[{"content":"Set the attributes of a file.","pos":[0,29]}]},{"pos":[1081,1144],"content":"<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>","nodes":[]},{"pos":[1149,1176],"content":"Determine if a file exists.","nodes":[{"content":"Determine if a file exists.","pos":[0,27]}]},{"pos":[1177,1233],"content":"<xref:System.IO.File.Exists%2A?displayProperty=fullName>","nodes":[]},{"pos":[1238,1262],"content":"Read from a binary file.","nodes":[{"content":"Read from a binary file.","pos":[0,24]}]},{"pos":[1263,1390],"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"},{"pos":[1395,1418],"content":"Write to a binary file.","nodes":[{"content":"Write to a binary file.","pos":[0,23]}]},{"pos":[1419,1546],"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"}],"pos":[57672,59237],"yaml":true,"extradata":"MT"},{"content":"The two-byte signed integer to write.","nodes":[{"pos":[0,37],"content":"The two-byte signed integer to write.","nodes":[{"content":"The two-byte signed integer to write.","pos":[0,37]}]}],"pos":[59377,59415],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[59559,59580],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[59686,59708],"yaml":true},{"content":"Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.","nodes":[{"pos":[0,112],"content":"Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.","nodes":[{"content":"Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.","pos":[0,112]}]}],"pos":[61198,61311],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[61322,61418],"yaml":true,"extradata":"MT"},{"content":"The eight-byte floating-point value to write.","nodes":[{"pos":[0,45],"content":"The eight-byte floating-point value to write.","nodes":[{"content":"The eight-byte floating-point value to write.","pos":[0,45]}]}],"pos":[62319,62365],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[62509,62530],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[62636,62658],"yaml":true},{"content":"Writes a decimal value to the current stream and advances the stream position by sixteen bytes.","nodes":[{"pos":[0,95],"content":"Writes a decimal value to the current stream and advances the stream position by sixteen bytes.","nodes":[{"content":"Writes a decimal value to the current stream and advances the stream position by sixteen bytes.","pos":[0,95]}]}],"pos":[64171,64267],"yaml":true},{"content":"The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|","nodes":[{"pos":[0,73],"content":"The following table lists examples of other typical or related I/O tasks.","nodes":[{"content":"The following table lists examples of other typical or related I/O tasks.","pos":[0,73]}]},{"pos":[80,93],"content":"To do this...","nodes":[{"content":"To do this...","pos":[0,13]}]},{"pos":[94,126],"content":"See the example in this topic...","nodes":[{"content":"See the example in this topic...","pos":[0,32]}]},{"pos":[194,213],"content":"Create a text file.","nodes":[{"content":"Create a text file.","pos":[0,19]}]},{"pos":[214,295],"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>","source":"[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"},{"pos":[300,321],"content":"Write to a text file.","nodes":[{"content":"Write to a text file.","pos":[0,21]}]},{"pos":[322,403],"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>","source":"[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"},{"pos":[408,430],"content":"Read from a text file.","nodes":[{"content":"Read from a text file.","pos":[0,22]}]},{"pos":[431,514],"content":"<bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>","source":"[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)"},{"pos":[519,541],"content":"Append text to a file.","nodes":[{"content":"Append text to a file.","pos":[0,22]}]},{"pos":[542,791],"content":"[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">[</bpt>How to: Open and Append to a Log File<ept id=\"p1\">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept>","pos":[0,99],"source":"[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)"},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.File.AppendText%2A?displayProperty=fullName&gt;</ph>","pos":[112,172],"source":" <xref:System.IO.File.AppendText%2A?displayProperty=fullName>"},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName&gt;</ph>","pos":[185,249],"source":" <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>"}]},{"pos":[796,819],"content":"Get the size of a file.","nodes":[{"content":"Get the size of a file.","pos":[0,23]}]},{"pos":[820,880],"content":"<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>","nodes":[]},{"pos":[885,914],"content":"Get the attributes of a file.","nodes":[{"content":"Get the attributes of a file.","pos":[0,29]}]},{"pos":[915,978],"content":"<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>","nodes":[]},{"pos":[983,1012],"content":"Set the attributes of a file.","nodes":[{"content":"Set the attributes of a file.","pos":[0,29]}]},{"pos":[1013,1076],"content":"<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>","nodes":[]},{"pos":[1081,1108],"content":"Determine if a file exists.","nodes":[{"content":"Determine if a file exists.","pos":[0,27]}]},{"pos":[1109,1165],"content":"<xref:System.IO.File.Exists%2A?displayProperty=fullName>","nodes":[]},{"pos":[1170,1194],"content":"Read from a binary file.","nodes":[{"content":"Read from a binary file.","pos":[0,24]}]},{"pos":[1195,1322],"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"},{"pos":[1327,1350],"content":"Write to a binary file.","nodes":[{"content":"Write to a binary file.","pos":[0,23]}]},{"pos":[1351,1478],"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"}],"pos":[64278,65773],"yaml":true,"extradata":"MT"},{"content":"The decimal value to write.","nodes":[{"pos":[0,27],"content":"The decimal value to write.","nodes":[{"content":"The decimal value to write.","pos":[0,27]}]}],"pos":[65917,65945],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[66089,66110],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[66216,66238],"yaml":true},{"content":"Writes a character array to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream.","nodes":[{"pos":[0,190],"content":"Writes a character array to the current stream and advances the current position of the stream in accordance with the <ph id=\"ph1\">`Encoding`</ph> used and the specific characters being written to the stream.","source":"Writes a character array to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream."}],"pos":[67728,67919],"yaml":true},{"content":"The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|","nodes":[{"pos":[0,73],"content":"The following table lists examples of other typical or related I/O tasks.","nodes":[{"content":"The following table lists examples of other typical or related I/O tasks.","pos":[0,73]}]},{"pos":[80,93],"content":"To do this...","nodes":[{"content":"To do this...","pos":[0,13]}]},{"pos":[94,126],"content":"See the example in this topic...","nodes":[{"content":"See the example in this topic...","pos":[0,32]}]},{"pos":[194,213],"content":"Create a text file.","nodes":[{"content":"Create a text file.","pos":[0,19]}]},{"pos":[214,295],"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>","source":"[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"},{"pos":[300,321],"content":"Write to a text file.","nodes":[{"content":"Write to a text file.","pos":[0,21]}]},{"pos":[322,403],"content":"<bpt id=\"p1\">[</bpt>How to: Write Text to a File<ept id=\"p1\">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>","source":"[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)"},{"pos":[408,430],"content":"Read from a text file.","nodes":[{"content":"Read from a text file.","pos":[0,22]}]},{"pos":[431,514],"content":"<bpt id=\"p1\">[</bpt>How to: Read Text from a File<ept id=\"p1\">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>","source":"[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)"},{"pos":[519,541],"content":"Append text to a file.","nodes":[{"content":"Append text to a file.","pos":[0,22]}]},{"pos":[542,791],"content":"[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>","nodes":[{"content":"<bpt id=\"p1\">[</bpt>How to: Open and Append to a Log File<ept id=\"p1\">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept>","pos":[0,99],"source":"[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)"},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.File.AppendText%2A?displayProperty=fullName&gt;</ph>","pos":[112,172],"source":" <xref:System.IO.File.AppendText%2A?displayProperty=fullName>"},{"content":"<ph id=\"ph1\">&lt;xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName&gt;</ph>","pos":[185,249],"source":" <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>"}]},{"pos":[796,819],"content":"Get the size of a file.","nodes":[{"content":"Get the size of a file.","pos":[0,23]}]},{"pos":[820,880],"content":"<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>","nodes":[]},{"pos":[885,914],"content":"Get the attributes of a file.","nodes":[{"content":"Get the attributes of a file.","pos":[0,29]}]},{"pos":[915,978],"content":"<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>","nodes":[]},{"pos":[983,1012],"content":"Set the attributes of a file.","nodes":[{"content":"Set the attributes of a file.","pos":[0,29]}]},{"pos":[1013,1076],"content":"<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>","nodes":[]},{"pos":[1081,1108],"content":"Determine if a file exists.","nodes":[{"content":"Determine if a file exists.","pos":[0,27]}]},{"pos":[1109,1165],"content":"<xref:System.IO.File.Exists%2A?displayProperty=fullName>","nodes":[]},{"pos":[1170,1194],"content":"Read from a binary file.","nodes":[{"content":"Read from a binary file.","pos":[0,24]}]},{"pos":[1195,1322],"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"},{"pos":[1327,1350],"content":"Write to a binary file.","nodes":[{"content":"Write to a binary file.","pos":[0,23]}]},{"pos":[1351,1478],"content":"<bpt id=\"p1\">[</bpt>How to: Read and Write to a Newly Created Data File<ept id=\"p1\">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>","source":"[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)"}],"pos":[67930,69425],"yaml":true,"extradata":"MT"},{"content":"A character array containing the data to write.","nodes":[{"pos":[0,47],"content":"A character array containing the data to write.","nodes":[{"content":"A character array containing the data to write.","pos":[0,47]}]}],"pos":[70166,70214],"yaml":true},{"content":"<code>chars</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;chars&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>chars</code> is `null`."}],"pos":[70372,70402],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[70508,70530],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[70618,70639],"yaml":true},{"content":"Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the `Encoding` used and perhaps the specific characters being written to the stream.","nodes":[{"pos":[0,212],"content":"Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the <ph id=\"ph1\">`Encoding`</ph> used and perhaps the specific characters being written to the stream.","source":"Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the `Encoding` used and perhaps the specific characters being written to the stream."}],"pos":[72249,72462],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[72473,72569],"yaml":true,"extradata":"MT"},{"content":"A character array containing the data to write.","nodes":[{"pos":[0,47],"content":"A character array containing the data to write.","nodes":[{"content":"A character array containing the data to write.","pos":[0,47]}]}],"pos":[73344,73392],"yaml":true},{"content":"The starting point in <code>chars</code> from which to begin writing.","nodes":[{"pos":[0,69],"content":"The starting point in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">chars</ph><ept id=\"p1\">&lt;/code&gt;</ept> from which to begin writing.","source":"The starting point in <code>chars</code> from which to begin writing."}],"pos":[73452,73522],"yaml":true},{"content":"The number of characters to write.","nodes":[{"pos":[0,34],"content":"The number of characters to write.","nodes":[{"content":"The number of characters to write.","pos":[0,34]}]}],"pos":[73582,73617],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[73767,73843],"yaml":true},{"content":"<code>chars</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;chars&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>chars</code> is `null`."}],"pos":[73945,73975],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[74089,74143],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[74231,74252],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[74358,74380],"yaml":true},{"content":"Writes a byte array to the underlying stream.","nodes":[{"pos":[0,45],"content":"Writes a byte array to the underlying stream.","nodes":[{"content":"Writes a byte array to the underlying stream.","pos":[0,45]}]}],"pos":[75870,75916],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[75927,76023],"yaml":true,"extradata":"MT"},{"content":"A byte array containing the data to write.","nodes":[{"pos":[0,42],"content":"A byte array containing the data to write.","nodes":[{"content":"A byte array containing the data to write.","pos":[0,42]}]}],"pos":[76817,76860],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[77004,77025],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[77131,77153],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[77255,77286],"yaml":true},{"content":"Writes an unsigned byte to the current stream and advances the stream position by one byte.","nodes":[{"pos":[0,91],"content":"Writes an unsigned byte to the current stream and advances the stream position by one byte.","nodes":[{"content":"Writes an unsigned byte to the current stream and advances the stream position by one byte.","pos":[0,91]}]}],"pos":[78764,78856],"yaml":true},{"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:  \n  \n-   UTF-7  \n  \n-   ISO-2022-JP  \n  \n-   ISCII  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,104],"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","nodes":[{"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","pos":[0,104]}]},{"pos":[114,119],"content":"UTF-7","nodes":[{"content":"UTF-7","pos":[0,5]}]},{"pos":[129,140],"content":"ISO-2022-JP","nodes":[{"content":"ISO-2022-JP","pos":[0,11]}]},{"pos":[150,155],"content":"ISCII","nodes":[{"content":"ISCII","pos":[0,5]}]},{"pos":[162,257],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[78867,79135],"yaml":true,"extradata":"MT"},{"content":"The unsigned byte to write.","nodes":[{"pos":[0,27],"content":"The unsigned byte to write.","nodes":[{"content":"The unsigned byte to write.","pos":[0,27]}]}],"pos":[79908,79936],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[80080,80101],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[80207,80229],"yaml":true},{"content":"Writes a one-byte `Boolean` value to the current stream, with 0 representing `false` and 1 representing `true`.","nodes":[{"pos":[0,111],"content":"Writes a one-byte <ph id=\"ph1\">`Boolean`</ph> value to the current stream, with 0 representing <ph id=\"ph2\">`false`</ph> and 1 representing <ph id=\"ph3\">`true`</ph>.","source":"Writes a one-byte `Boolean` value to the current stream, with 0 representing `false` and 1 representing `true`."}],"pos":[81725,81837],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[81848,81944],"yaml":true,"extradata":"MT"},{"content":"The `Boolean` value to write (0 or 1).","nodes":[{"pos":[0,38],"content":"The <ph id=\"ph1\">`Boolean`</ph> value to write (0 or 1).","source":"The `Boolean` value to write (0 or 1)."}],"pos":[82493,82532],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[82676,82697],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[82803,82825],"yaml":true},{"content":"Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.","nodes":[{"pos":[0,103],"content":"Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.","nodes":[{"content":"Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.","pos":[0,103]}]}],"pos":[84309,84413],"yaml":true},{"content":"`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`BinaryWriter`</ph> stores this data type in little endian format.","source":"`BinaryWriter` stores this data type in little endian format."},{"pos":[68,163],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[84424,84592],"yaml":true,"extradata":"MT"},{"content":"The four-byte signed integer to write.","nodes":[{"pos":[0,38],"content":"The four-byte signed integer to write.","nodes":[{"content":"The four-byte signed integer to write.","pos":[0,38]}]}],"pos":[85138,85177],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[85321,85342],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[85448,85470],"yaml":true},{"content":"Writes a 32-bit integer in a compressed format.","nodes":[{"pos":[0,47],"content":"Writes a 32-bit integer in a compressed format.","nodes":[{"content":"Writes a 32-bit integer in a compressed format.","pos":[0,47]}]}],"pos":[87038,87086],"yaml":true},{"content":"The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits. The high bit of a byte indicates whether there are more bytes to be written after this one.  \n  \n If `value` will fit in seven bits, it takes only one byte of space. If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written. This process is repeated until the entire integer has been written.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,213],"content":"The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits. The high bit of a byte indicates whether there are more bytes to be written after this one.","nodes":[{"content":"The integer of the <ph id=\"ph1\">`value`</ph> parameter is written out seven bits at a time, starting with the seven least-significant bits.","pos":[0,121],"source":"The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits."},{"content":"The high bit of a byte indicates whether there are more bytes to be written after this one.","pos":[122,213]}]},{"pos":[220,517],"content":"If `value` will fit in seven bits, it takes only one byte of space. If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written. This process is repeated until the entire integer has been written.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> will fit in seven bits, it takes only one byte of space.","pos":[0,67],"source":"If `value` will fit in seven bits, it takes only one byte of space."},{"content":"If <ph id=\"ph1\">`value`</ph> will not fit in seven bits, the high bit is set on the first byte and written out.","pos":[68,161],"source":" If `value` will not fit in seven bits, the high bit is set on the first byte and written out."},{"content":"<ph id=\"ph1\">`value`</ph> is then shifted by seven bits and the next byte is written.","pos":[162,229],"source":"`value` is then shifted by seven bits and the next byte is written."},{"content":"This process is repeated until the entire integer has been written.","pos":[230,297]}]},{"pos":[524,619],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[87097,87723],"yaml":true,"extradata":"MT"},{"content":"The 32-bit integer to be written.","nodes":[{"pos":[0,33],"content":"The 32-bit integer to be written.","nodes":[{"content":"The 32-bit integer to be written.","pos":[0,33]}]}],"pos":[87870,87904],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[88080,88114],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[88220,88242],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[88330,88352],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.BinaryWriter\n  commentId: T:System.IO.BinaryWriter\n  id: BinaryWriter\n  children:\n  - System.IO.BinaryWriter.#ctor\n  - System.IO.BinaryWriter.#ctor(System.IO.Stream)\n  - System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - System.IO.BinaryWriter.BaseStream\n  - System.IO.BinaryWriter.Close\n  - System.IO.BinaryWriter.Dispose\n  - System.IO.BinaryWriter.Dispose(System.Boolean)\n  - System.IO.BinaryWriter.Flush\n  - System.IO.BinaryWriter.Null\n  - System.IO.BinaryWriter.OutStream\n  - System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)\n  - System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.BinaryWriter.Write(System.UInt64)\n  - System.IO.BinaryWriter.Write(System.UInt32)\n  - System.IO.BinaryWriter.Write(System.UInt16)\n  - System.IO.BinaryWriter.Write(System.String)\n  - System.IO.BinaryWriter.Write(System.Single)\n  - System.IO.BinaryWriter.Write(System.SByte)\n  - System.IO.BinaryWriter.Write(System.Int64)\n  - System.IO.BinaryWriter.Write(System.Char)\n  - System.IO.BinaryWriter.Write(System.Int16)\n  - System.IO.BinaryWriter.Write(System.Double)\n  - System.IO.BinaryWriter.Write(System.Decimal)\n  - System.IO.BinaryWriter.Write(System.Char[])\n  - System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)\n  - System.IO.BinaryWriter.Write(System.Byte[])\n  - System.IO.BinaryWriter.Write(System.Byte)\n  - System.IO.BinaryWriter.Write(System.Boolean)\n  - System.IO.BinaryWriter.Write(System.Int32)\n  - System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)\n  langs:\n  - csharp\n  name: BinaryWriter\n  nameWithType: BinaryWriter\n  fullName: System.IO.BinaryWriter\n  type: Class\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes primitive types in binary to a stream and supports writing strings in a specific encoding.\n  remarks: \"The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream. For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value. The class includes write methods that support different data types.  \\n  \\n When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object. If you do not specify an encoding type, UTF-8 is used.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.  \\n  \\n A derived class can override the methods of this class to give unique character encodings.\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class BinaryWriter : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.#ctor\n  commentId: M:System.IO.BinaryWriter.#ctor\n  id: '#ctor'\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: BinaryWriter()\n  nameWithType: BinaryWriter.BinaryWriter()\n  fullName: BinaryWriter.BinaryWriter()\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class that writes to a stream.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: protected BinaryWriter ();\n    parameters: []\n  overload: System.IO.BinaryWriter.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream)\n  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: BinaryWriter(Stream)\n  nameWithType: BinaryWriter.BinaryWriter(Stream)\n  fullName: BinaryWriter.BinaryWriter(Stream)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and using UTF-8 encoding.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public BinaryWriter (System.IO.Stream output);\n    parameters:\n    - id: output\n      type: System.IO.Stream\n      description: The output stream.\n  overload: System.IO.BinaryWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support writing or is already closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>output</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: BinaryWriter(Stream, Encoding)\n  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding)\n  fullName: BinaryWriter.BinaryWriter(Stream, Encoding)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and character encoding.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding);\n    parameters:\n    - id: output\n      type: System.IO.Stream\n      description: The output stream.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.BinaryWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support writing or is already closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>output</code> or <code>encoding</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: BinaryWriter(Stream, Encoding, Boolean)\n  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)\n  fullName: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.\n  syntax:\n    content: public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding, bool leaveOpen);\n    parameters:\n    - id: output\n      type: System.IO.Stream\n      description: The output stream.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream open after the <xref href=\"System.IO.BinaryWriter\"></xref> object is disposed; otherwise, `false`.'\n  overload: System.IO.BinaryWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support writing or is already closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>output</code> or <code>encoding</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.BaseStream\n  commentId: P:System.IO.BinaryWriter.BaseStream\n  id: BaseStream\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: BinaryWriter.BaseStream\n  fullName: BinaryWriter.BaseStream\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Gets the underlying stream of the <xref href=\"System.IO.BinaryWriter\"></xref>.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class. `MemoryStream` only reads and writes `Byte` data.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]\"\n  syntax:\n    content: public virtual System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: The underlying stream associated with the `BinaryWriter`.\n  overload: System.IO.BinaryWriter.BaseStream*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Close\n  commentId: M:System.IO.BinaryWriter.Close\n  id: Close\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: BinaryWriter.Close()\n  fullName: BinaryWriter.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Closes the current <xref href=\"System.IO.BinaryWriter\"></xref> and the underlying stream.\n  remarks: \"This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.\"\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  overload: System.IO.BinaryWriter.Close*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Dispose\n  commentId: M:System.IO.BinaryWriter.Dispose\n  id: Dispose\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: BinaryWriter.Dispose()\n  fullName: BinaryWriter.Dispose()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryWriter\"></xref> class.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.BinaryWriter.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Dispose(System.Boolean)\n  commentId: M:System.IO.BinaryWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: BinaryWriter.Dispose(Boolean)\n  fullName: BinaryWriter.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryWriter\"></xref> and optionally releases the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.BinaryWriter.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Flush\n  commentId: M:System.IO.BinaryWriter.Flush\n  id: Flush\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: BinaryWriter.Flush()\n  fullName: BinaryWriter.Flush()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.\n  remarks: \"All derived classes should override `Flush` to ensure that all buffered data is sent to the stream.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual void Flush ();\n    parameters: []\n  overload: System.IO.BinaryWriter.Flush*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Null\n  commentId: F:System.IO.BinaryWriter.Null\n  id: \"Null\"\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: BinaryWriter.Null\n  fullName: BinaryWriter.Null\n  type: Field\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Specifies a <xref href=\"System.IO.BinaryWriter\"></xref> with no backing store.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: public static readonly System.IO.BinaryWriter Null;\n    return:\n      type: System.IO.BinaryWriter\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.OutStream\n  commentId: F:System.IO.BinaryWriter.OutStream\n  id: OutStream\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: OutStream\n  nameWithType: BinaryWriter.OutStream\n  fullName: BinaryWriter.OutStream\n  type: Field\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Holds the underlying stream.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: protected System.IO.Stream OutStream;\n    return:\n      type: System.IO.Stream\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)\n  commentId: M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)\n  id: Seek(System.Int32,System.IO.SeekOrigin)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Seek(Int32, SeekOrigin)\n  nameWithType: BinaryWriter.Seek(Int32, SeekOrigin)\n  fullName: BinaryWriter.Seek(Int32, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Sets the position within the current stream.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following example writes a series of byte values to a file. The example uses <xref:System.IO.BinaryWriter.Seek%2A> to move to various locations in the file, and then writes marker bytes by using the <xref:System.IO.BinaryWriter.Write%2A> method.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CPP/source3.cpp#5)]\\n [!code-csharp[System.IO.BinaryReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source3.cs#5)]\\n [!code-vb[System.IO.BinaryReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source3.vb#5)]\"\n  syntax:\n    content: public virtual long Seek (int offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: A byte offset relative to <code>origin</code>.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: A field of <xref href=\"System.IO.SeekOrigin\"></xref> indicating the reference point from which the new position is to be obtained.\n    return:\n      type: System.Int64\n      description: The position with the current stream.\n  overload: System.IO.BinaryWriter.Seek*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The file pointer was moved to an invalid location.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.IO.SeekOrigin\"></xref> value is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: BinaryWriter.Write(Byte[], Int32, Int32)\n  fullName: BinaryWriter.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a region of a byte array to the current stream.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]\"\n  syntax:\n    content: public virtual void Write (byte[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A byte array containing the data to write.\n    - id: index\n      type: System.Int32\n      description: The starting point in <code>buffer</code> at which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.UInt64)\n  commentId: M:System.IO.BinaryWriter.Write(System.UInt64)\n  id: Write(System.UInt64)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(UInt64)\n  nameWithType: BinaryWriter.Write(UInt64)\n  fullName: BinaryWriter.Write(UInt64)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual void Write (ulong value);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: The eight-byte unsigned integer to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.UInt32)\n  commentId: M:System.IO.BinaryWriter.Write(System.UInt32)\n  id: Write(System.UInt32)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(UInt32)\n  nameWithType: BinaryWriter.Write(UInt32)\n  fullName: BinaryWriter.Write(UInt32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual void Write (uint value);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: The four-byte unsigned integer to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.UInt16)\n  commentId: M:System.IO.BinaryWriter.Write(System.UInt16)\n  id: Write(System.UInt16)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(UInt16)\n  nameWithType: BinaryWriter.Write(UInt16)\n  fullName: BinaryWriter.Write(UInt16)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual void Write (ushort value);\n    parameters:\n    - id: value\n      type: System.UInt16\n      description: The two-byte unsigned integer to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.String)\n  commentId: M:System.IO.BinaryWriter.Write(System.String)\n  id: Write(System.String)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: BinaryWriter.Write(String)\n  fullName: BinaryWriter.Write(String)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a length-prefixed string to this stream in the current encoding of the <xref href=\"System.IO.BinaryWriter\"></xref>, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.\n  remarks: \"Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream. This value is written as an unsigned integer. This method then writes that many bytes to the stream.  \\n  \\n For example, the string \\\"A\\\" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual void Write (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The value to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Single)\n  commentId: M:System.IO.BinaryWriter.Write(System.Single)\n  id: Write(System.Single)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Single)\n  nameWithType: BinaryWriter.Write(Single)\n  fullName: BinaryWriter.Write(Single)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual void Write (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: The four-byte floating-point value to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.SByte)\n  commentId: M:System.IO.BinaryWriter.Write(System.SByte)\n  id: Write(System.SByte)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(SByte)\n  nameWithType: BinaryWriter.Write(SByte)\n  fullName: BinaryWriter.Write(SByte)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a signed byte to the current stream and advances the stream position by one byte.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual void Write (sbyte value);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: The signed byte to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Int64)\n  commentId: M:System.IO.BinaryWriter.Write(System.Int64)\n  id: Write(System.Int64)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Int64)\n  nameWithType: BinaryWriter.Write(Int64)\n  fullName: BinaryWriter.Write(Int64)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual void Write (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The eight-byte signed integer to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Char)\n  commentId: M:System.IO.BinaryWriter.Write(System.Char)\n  id: Write(System.Char)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Char)\n  nameWithType: BinaryWriter.Write(Char)\n  fullName: BinaryWriter.Write(Char)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream.\n  remarks: \"Because of data formatting conflicts, using this method with the following encodings is not recommended:  \\n  \\n-   UTF-7  \\n  \\n-   ISO-2022-JP  \\n  \\n-   ISCII  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \\n  \\n Unicode surrogate characters must be written out as pairs together in the same call, not individually. If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.\"\n  example:\n  - \"The following code example shows how to read and write data using memory as a backing store.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]\"\n  syntax:\n    content: public virtual void Write (char ch);\n    parameters:\n    - id: ch\n      type: System.Char\n      description: The non-surrogate, Unicode character to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ch</code> is a single surrogate character.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Int16)\n  commentId: M:System.IO.BinaryWriter.Write(System.Int16)\n  id: Write(System.Int16)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Int16)\n  nameWithType: BinaryWriter.Write(Int16)\n  fullName: BinaryWriter.Write(Int16)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n The following table lists examples of other typical or related I/O tasks.  \\n  \\n|To do this...|See the example in this topic...|  \\n|-------------------|--------------------------------------|  \\n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \\n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \\n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \\n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \\n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \\n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \\n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \\n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \\n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \\n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|\"\n  syntax:\n    content: public virtual void Write (short value);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: The two-byte signed integer to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Double)\n  commentId: M:System.IO.BinaryWriter.Write(System.Double)\n  id: Write(System.Double)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Double)\n  nameWithType: BinaryWriter.Write(Double)\n  fullName: BinaryWriter.Write(Double)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class. `MemoryStream` only reads and writes `Byte` data.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]\"\n  syntax:\n    content: public virtual void Write (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The eight-byte floating-point value to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Decimal)\n  commentId: M:System.IO.BinaryWriter.Write(System.Decimal)\n  id: Write(System.Decimal)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Decimal)\n  nameWithType: BinaryWriter.Write(Decimal)\n  fullName: BinaryWriter.Write(Decimal)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a decimal value to the current stream and advances the stream position by sixteen bytes.\n  remarks: \"The following table lists examples of other typical or related I/O tasks.  \\n  \\n|To do this...|See the example in this topic...|  \\n|-------------------|--------------------------------------|  \\n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \\n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \\n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \\n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \\n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \\n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \\n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \\n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \\n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \\n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|\"\n  syntax:\n    content: public virtual void Write (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The decimal value to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Char[])\n  commentId: M:System.IO.BinaryWriter.Write(System.Char[])\n  id: Write(System.Char[])\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Char[])\n  nameWithType: BinaryWriter.Write(Char[])\n  fullName: BinaryWriter.Write(Char[])\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a character array to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream.\n  remarks: \"The following table lists examples of other typical or related I/O tasks.  \\n  \\n|To do this...|See the example in this topic...|  \\n|-------------------|--------------------------------------|  \\n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \\n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \\n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \\n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \\n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \\n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \\n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \\n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \\n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \\n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|\"\n  example:\n  - \"The following code example shows how to read and write data using memory as a backing store.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]\"\n  syntax:\n    content: public virtual void Write (char[] chars);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: A character array containing the data to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>chars</code> is `null`.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Char[], Int32, Int32)\n  nameWithType: BinaryWriter.Write(Char[], Int32, Int32)\n  fullName: BinaryWriter.Write(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the `Encoding` used and perhaps the specific characters being written to the stream.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example shows how to read and write data using memory as a backing store.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]\"\n  syntax:\n    content: public virtual void Write (char[] chars, int index, int count);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: A character array containing the data to write.\n    - id: index\n      type: System.Int32\n      description: The starting point in <code>chars</code> from which to begin writing.\n    - id: count\n      type: System.Int32\n      description: The number of characters to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>chars</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Byte[])\n  commentId: M:System.IO.BinaryWriter.Write(System.Byte[])\n  id: Write(System.Byte[])\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Byte[])\n  nameWithType: BinaryWriter.Write(Byte[])\n  fullName: BinaryWriter.Write(Byte[])\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a byte array to the underlying stream.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]\"\n  syntax:\n    content: public virtual void Write (byte[] buffer);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A byte array containing the data to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Byte)\n  commentId: M:System.IO.BinaryWriter.Write(System.Byte)\n  id: Write(System.Byte)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Byte)\n  nameWithType: BinaryWriter.Write(Byte)\n  fullName: BinaryWriter.Write(Byte)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes an unsigned byte to the current stream and advances the stream position by one byte.\n  remarks: \"Because of data formatting conflicts, using this method with the following encodings is not recommended:  \\n  \\n-   UTF-7  \\n  \\n-   ISO-2022-JP  \\n  \\n-   ISCII  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]\"\n  syntax:\n    content: public virtual void Write (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: The unsigned byte to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Boolean)\n  commentId: M:System.IO.BinaryWriter.Write(System.Boolean)\n  id: Write(System.Boolean)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Boolean)\n  nameWithType: BinaryWriter.Write(Boolean)\n  fullName: BinaryWriter.Write(Boolean)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a one-byte `Boolean` value to the current stream, with 0 representing `false` and 1 representing `true`.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual void Write (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: The `Boolean` value to write (0 or 1).\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write(System.Int32)\n  commentId: M:System.IO.BinaryWriter.Write(System.Int32)\n  id: Write(System.Int32)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write(Int32)\n  nameWithType: BinaryWriter.Write(Int32)\n  fullName: BinaryWriter.Write(Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.\n  remarks: \"`BinaryWriter` stores this data type in little endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual void Write (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The four-byte signed integer to write.\n  overload: System.IO.BinaryWriter.Write*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)\n  commentId: M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)\n  id: Write7BitEncodedInt(System.Int32)\n  parent: System.IO.BinaryWriter\n  langs:\n  - csharp\n  name: Write7BitEncodedInt(Int32)\n  nameWithType: BinaryWriter.Write7BitEncodedInt(Int32)\n  fullName: BinaryWriter.Write7BitEncodedInt(Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Writes a 32-bit integer in a compressed format.\n  remarks: \"The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits. The high bit of a byte indicates whether there are more bytes to be written after this one.  \\n  \\n If `value` will fit in seven bits, it takes only one byte of space. If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written. This process is repeated until the entire integer has been written.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: protected void Write7BitEncodedInt (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The 32-bit integer to be written.\n  overload: System.IO.BinaryWriter.Write7BitEncodedInt*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.IO.EndOfStreamException\n  parent: System.IO\n  isExternal: false\n  name: EndOfStreamException\n  nameWithType: EndOfStreamException\n  fullName: System.IO.EndOfStreamException\n- uid: System.IO.BinaryWriter.#ctor\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BinaryWriter()\n  nameWithType: BinaryWriter.BinaryWriter()\n  fullName: BinaryWriter.BinaryWriter()\n- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BinaryWriter(Stream)\n  nameWithType: BinaryWriter.BinaryWriter(Stream)\n  fullName: BinaryWriter.BinaryWriter(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BinaryWriter(Stream, Encoding)\n  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding)\n  fullName: BinaryWriter.BinaryWriter(Stream, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BinaryWriter(Stream, Encoding, Boolean)\n  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)\n  fullName: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.BinaryWriter.BaseStream\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BaseStream\n  nameWithType: BinaryWriter.BaseStream\n  fullName: BinaryWriter.BaseStream\n- uid: System.IO.BinaryWriter.Close\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Close()\n  nameWithType: BinaryWriter.Close()\n  fullName: BinaryWriter.Close()\n- uid: System.IO.BinaryWriter.Dispose\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Dispose()\n  nameWithType: BinaryWriter.Dispose()\n  fullName: BinaryWriter.Dispose()\n- uid: System.IO.BinaryWriter.Dispose(System.Boolean)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: BinaryWriter.Dispose(Boolean)\n  fullName: BinaryWriter.Dispose(Boolean)\n- uid: System.IO.BinaryWriter.Flush\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Flush()\n  nameWithType: BinaryWriter.Flush()\n  fullName: BinaryWriter.Flush()\n- uid: System.IO.BinaryWriter.Null\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: \"Null\"\n  nameWithType: BinaryWriter.Null\n  fullName: BinaryWriter.Null\n- uid: System.IO.BinaryWriter\n  parent: System.IO\n  isExternal: false\n  name: BinaryWriter\n  nameWithType: BinaryWriter\n  fullName: System.IO.BinaryWriter\n- uid: System.IO.BinaryWriter.OutStream\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: OutStream\n  nameWithType: BinaryWriter.OutStream\n  fullName: BinaryWriter.OutStream\n- uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Seek(Int32, SeekOrigin)\n  nameWithType: BinaryWriter.Seek(Int32, SeekOrigin)\n  fullName: BinaryWriter.Seek(Int32, SeekOrigin)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: BinaryWriter.Write(Byte[], Int32, Int32)\n  fullName: BinaryWriter.Write(Byte[], Int32, Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.BinaryWriter.Write(System.UInt64)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(UInt64)\n  nameWithType: BinaryWriter.Write(UInt64)\n  fullName: BinaryWriter.Write(UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.IO.BinaryWriter.Write(System.UInt32)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(UInt32)\n  nameWithType: BinaryWriter.Write(UInt32)\n  fullName: BinaryWriter.Write(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IO.BinaryWriter.Write(System.UInt16)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(UInt16)\n  nameWithType: BinaryWriter.Write(UInt16)\n  fullName: BinaryWriter.Write(UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.IO.BinaryWriter.Write(System.String)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(String)\n  nameWithType: BinaryWriter.Write(String)\n  fullName: BinaryWriter.Write(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.BinaryWriter.Write(System.Single)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Single)\n  nameWithType: BinaryWriter.Write(Single)\n  fullName: BinaryWriter.Write(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.IO.BinaryWriter.Write(System.SByte)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(SByte)\n  nameWithType: BinaryWriter.Write(SByte)\n  fullName: BinaryWriter.Write(SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.IO.BinaryWriter.Write(System.Int64)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Int64)\n  nameWithType: BinaryWriter.Write(Int64)\n  fullName: BinaryWriter.Write(Int64)\n- uid: System.IO.BinaryWriter.Write(System.Char)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Char)\n  nameWithType: BinaryWriter.Write(Char)\n  fullName: BinaryWriter.Write(Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.IO.BinaryWriter.Write(System.Int16)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Int16)\n  nameWithType: BinaryWriter.Write(Int16)\n  fullName: BinaryWriter.Write(Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IO.BinaryWriter.Write(System.Double)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Double)\n  nameWithType: BinaryWriter.Write(Double)\n  fullName: BinaryWriter.Write(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.IO.BinaryWriter.Write(System.Decimal)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Decimal)\n  nameWithType: BinaryWriter.Write(Decimal)\n  fullName: BinaryWriter.Write(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.IO.BinaryWriter.Write(System.Char[])\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Char[])\n  nameWithType: BinaryWriter.Write(Char[])\n  fullName: BinaryWriter.Write(Char[])\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Char[], Int32, Int32)\n  nameWithType: BinaryWriter.Write(Char[], Int32, Int32)\n  fullName: BinaryWriter.Write(Char[], Int32, Int32)\n- uid: System.IO.BinaryWriter.Write(System.Byte[])\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Byte[])\n  nameWithType: BinaryWriter.Write(Byte[])\n  fullName: BinaryWriter.Write(Byte[])\n- uid: System.IO.BinaryWriter.Write(System.Byte)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Byte)\n  nameWithType: BinaryWriter.Write(Byte)\n  fullName: BinaryWriter.Write(Byte)\n- uid: System.IO.BinaryWriter.Write(System.Boolean)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Boolean)\n  nameWithType: BinaryWriter.Write(Boolean)\n  fullName: BinaryWriter.Write(Boolean)\n- uid: System.IO.BinaryWriter.Write(System.Int32)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write(Int32)\n  nameWithType: BinaryWriter.Write(Int32)\n  fullName: BinaryWriter.Write(Int32)\n- uid: System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write7BitEncodedInt(Int32)\n  nameWithType: BinaryWriter.Write7BitEncodedInt(Int32)\n  fullName: BinaryWriter.Write7BitEncodedInt(Int32)\n- uid: System.IO.BinaryWriter.#ctor*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BinaryWriter\n  nameWithType: BinaryWriter.BinaryWriter\n  fullName: BinaryWriter.BinaryWriter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.BaseStream*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: BaseStream\n  nameWithType: BinaryWriter.BaseStream\n  fullName: BinaryWriter.BaseStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.Close*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Close\n  nameWithType: BinaryWriter.Close\n  fullName: BinaryWriter.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.Dispose*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Dispose\n  nameWithType: BinaryWriter.Dispose\n  fullName: BinaryWriter.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.Flush*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Flush\n  nameWithType: BinaryWriter.Flush\n  fullName: BinaryWriter.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.Seek*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Seek\n  nameWithType: BinaryWriter.Seek\n  fullName: BinaryWriter.Seek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.Write*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write\n  nameWithType: BinaryWriter.Write\n  fullName: BinaryWriter.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.IO.BinaryWriter.Write7BitEncodedInt*\n  parent: System.IO.BinaryWriter\n  isExternal: false\n  name: Write7BitEncodedInt\n  nameWithType: BinaryWriter.Write7BitEncodedInt\n  fullName: BinaryWriter.Write7BitEncodedInt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}