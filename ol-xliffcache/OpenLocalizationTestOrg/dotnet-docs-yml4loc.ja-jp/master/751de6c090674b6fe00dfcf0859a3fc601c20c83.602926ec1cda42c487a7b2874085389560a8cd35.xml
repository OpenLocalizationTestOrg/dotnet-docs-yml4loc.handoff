{"nodes":[{"content":"Creates an object graph from a source XAML node stream.","nodes":[{"pos":[0,55],"content":"Creates an object graph from a source XAML node stream.","nodes":[{"content":"Creates an object graph from a source XAML node stream.","pos":[0,55]}]}],"pos":[1672,1728],"yaml":true},{"content":"The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method. <xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.  \n  \n## Scope  \n A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph. For a particular scope, certain operations might be valid or invalid, or produce a no-operation result. For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.  \n  \n A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class. The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.  \n  \n## Callbacks  \n To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions. Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback. The following is a list of relevant callbacks:  \n  \n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.  \n  \n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.  \n  \n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.  \n  \n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.  \n  \n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.  \n  \n## Writing Dictionary Keys  \n The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph. In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior. However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.  \n  \n## Checks for Disposed  \n XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim. Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.","nodes":[{"pos":[0,397],"content":"The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method. <xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.","nodes":[{"content":"The <ph id=\"ph1\">`Write`</ph> methods of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> implement a pattern so that the <ph id=\"ph3\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> uses the <ph id=\"ph4\">&lt;xref:System.Xaml.XamlWriter&gt;</ph> that is defined by the <ph id=\"ph5\">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> method.","pos":[0,239],"source":"The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> logic switches between the <ph id=\"ph2\">`Write`</ph> methods, depending on which node type is at the current position in the reader.","pos":[240,397],"source":" <xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader."}]},{"pos":[406,411],"content":"Scope","linkify":"Scope","nodes":[{"content":"Scope","pos":[0,5]}]},{"pos":[415,916],"content":"A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph. For a particular scope, certain operations might be valid or invalid, or produce a no-operation result. For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.","nodes":[{"content":"A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph. For a particular scope, certain operations might be valid or invalid, or produce a no-operation result. For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.","pos":[0,501],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> has a concept of scope; that is, the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> maintains a conceptual point of reference in its output object graph.","pos":[0,180],"source":"A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph."},{"content":"For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.","pos":[181,284]},{"content":"For example, if you call <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.","pos":[285,501],"source":" For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception."}]}]},{"pos":[923,1252],"content":"A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class. The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.","nodes":[{"content":"A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class. The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.","pos":[0,329],"nodes":[{"content":"A possible technique for tracking scope in a custom <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> is to align the node actions with a stack or frame class.","pos":[0,145],"source":"A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class."},{"content":"The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> writes the object graph.","pos":[146,329],"source":" The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph."}]}]},{"pos":[1261,1270],"content":"Callbacks","linkify":"Callbacks","nodes":[{"content":"Callbacks","pos":[0,9]}]},{"pos":[1274,1808],"content":"To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions. Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback. The following is a list of relevant callbacks:","nodes":[{"content":"To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions. Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback. The following is a list of relevant callbacks:","pos":[0,534],"nodes":[{"content":"To support intermediate and advanced <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> commits or is about to commit certain actions.","pos":[0,256],"source":"To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions."},{"content":"Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.","pos":[257,487]},{"content":"The following is a list of relevant callbacks:","pos":[488,534]}]}]},{"pos":[1818,2088],"content":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.","nodes":[{"content":"The callback that is declared by <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A&gt;</ph> is invoked when the scope goes to a new object and at the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ISupportInitialize.BeginInit%2A&gt;</ph> phase of object lifetime for each created object.","pos":[0,270],"source":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object."}]},{"pos":[2098,2364],"content":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.","nodes":[{"content":"The callback that is declared by <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A&gt;</ph> is invoked when the scope goes to a new object and at the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ISupportInitialize.EndInit%2A&gt;</ph> phase of object lifetime for each created object.","pos":[0,266],"source":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object."}]},{"pos":[2374,2663],"content":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.","nodes":[{"content":"The callback that is declared by <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A&gt;</ph> is invoked when the scope starts in an object, and occurs when the first <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> call to that object scope is made but not yet committed.","pos":[0,289],"source":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed."}]},{"pos":[2673,2954],"content":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.","nodes":[{"content":"The callback that is declared by <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A&gt;</ph> is invoked when the scope starts in an object, and happens when the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> call to that object scope is made but not yet committed.","pos":[0,281],"source":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed."}]},{"pos":[2964,3140],"content":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.","nodes":[{"content":"The callback that is declared by <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A&gt;</ph> is invoked when <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.OnSetValue%2A&gt;</ph> is called.","pos":[0,176],"source":"The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called."}]},{"pos":[3149,3172],"content":"Writing Dictionary Keys","linkify":"Writing Dictionary Keys","nodes":[{"content":"Writing Dictionary Keys","pos":[0,23]}]},{"pos":[3176,3815],"content":"The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph. In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior. However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.","nodes":[{"content":"The default implementation of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> supports type conversion on the constraints of a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before the dictionary contents are added to the object graph.","pos":[0,225],"source":"The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph."},{"content":"In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic <ph id=\"ph1\">`Add`</ph> and indexer behavior.","pos":[226,361],"source":" In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior."},{"content":"However, as implemented for the base <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, this capability exists only for object graph creation from the base <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class and not for derived classes of <ph id=\"ph3\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.","pos":[362,639],"source":" However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>."}]},{"pos":[3824,3843],"content":"Checks for Disposed","linkify":"Checks for Disposed","nodes":[{"content":"Checks for Disposed","pos":[0,19]}]},{"pos":[3847,4116],"content":"XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim. Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.","nodes":[{"content":"XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim. Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.","pos":[0,269],"nodes":[{"content":"XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.","pos":[0,151]},{"content":"Various APIs of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might throw <ph id=\"ph2\">&lt;xref:System.ObjectDisposedException&gt;</ph> in these cases.","pos":[152,269],"source":" Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases."}]}]}],"pos":[1739,5882],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlObjectWriter\"></xref> class using  the XAML schema context that is used by a <xref href=\"System.Xaml.XamlReader\"></xref>.","nodes":[{"pos":[0,183],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph> class using  the XAML schema context that is used by a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlObjectWriter\"></xref> class using  the XAML schema context that is used by a <xref href=\"System.Xaml.XamlReader\"></xref>."}],"pos":[7595,7779],"yaml":true},{"content":"A XAML schema context that is shared with the XAML reader that provides nodes for writing.","nodes":[{"pos":[0,90],"content":"A XAML schema context that is shared with the XAML reader that provides nodes for writing.","nodes":[{"content":"A XAML schema context that is shared with the XAML reader that provides nodes for writing.","pos":[0,90]}]}],"pos":[7974,8065],"yaml":true},{"content":"<code>schemaContext</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>schemaContext</code> is `null`."}],"pos":[8229,8267],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlObjectWriter\"></xref> class using the context that is used by a <xref href=\"System.Xaml.XamlReader\"></xref> and its settings.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph> class using the context that is used by a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlReader\"&gt;&lt;/xref&gt;</ph> and its settings.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlObjectWriter\"></xref> class using the context that is used by a <xref href=\"System.Xaml.XamlReader\"></xref> and its settings."}],"pos":[9462,9650],"yaml":true},{"content":"A XAML schema context that is shared with the XAML reader that provides nodes for writing.","nodes":[{"pos":[0,90],"content":"A XAML schema context that is shared with the XAML reader that provides nodes for writing.","nodes":[{"content":"A XAML schema context that is shared with the XAML reader that provides nodes for writing.","pos":[0,90]}]}],"pos":[9892,9983],"yaml":true},{"content":"A settings object that specifies certain options for <xref href=\"System.Xaml.XamlObjectWriter\"></xref> behavior and output.","nodes":[{"pos":[0,123],"content":"A settings object that specifies certain options for <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph> behavior and output.","source":"A settings object that specifies certain options for <xref href=\"System.Xaml.XamlObjectWriter\"></xref> behavior and output."}],"pos":[10070,10194],"yaml":true},{"content":"<code>schemaContext</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;schemaContext&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>schemaContext</code> is `null`."}],"pos":[10358,10396],"yaml":true},{"content":"Resets all possible frames and clears the object graph.","nodes":[{"pos":[0,55],"content":"Resets all possible frames and clears the object graph.","nodes":[{"content":"Resets all possible frames and clears the object graph.","pos":[0,55]}]}],"pos":[11218,11274],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlObjectWriter\"></xref>, and optionally, releases the managed resources.","nodes":[{"pos":[0,143],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph>, and optionally, releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlObjectWriter\"></xref>, and optionally, releases the managed resources."}],"pos":[12306,12450],"yaml":true},{"content":"`true` to release the managed resources; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> to release the managed resources; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to release the managed resources; otherwise, `false`."}],"pos":[12605,12668],"yaml":true},{"content":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler\"></xref> method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.","nodes":[{"pos":[0,240],"content":"Invokes any <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler\"&gt;&lt;/xref&gt;</ph> method that is associated with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler\"></xref> method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>."}],"pos":[13686,13927],"yaml":true},{"content":"The object to report on. The object is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"pos":[0,134],"content":"The object to report on. The object is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"content":"The object to report on.","pos":[0,24]},{"content":"The object is packaged into <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectEventArgs\"&gt;&lt;/xref&gt;</ph> when the handler is invoked.","pos":[25,134],"source":" The object is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked."}]}],"pos":[14083,14218],"yaml":true},{"content":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler\"></xref> method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.","nodes":[{"pos":[0,238],"content":"Invokes any <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler\"&gt;&lt;/xref&gt;</ph> method that is associated with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler\"></xref> method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>."}],"pos":[15233,15472],"yaml":true},{"content":"The object to report on. The value  is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"pos":[0,134],"content":"The object to report on. The value  is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"content":"The object to report on.","pos":[0,24]},{"content":"The value  is packaged into <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectEventArgs\"&gt;&lt;/xref&gt;</ph> when the handler is invoked.","pos":[25,134],"source":" The value  is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked."}]}],"pos":[15626,15761],"yaml":true},{"content":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.","nodes":[{"pos":[0,252],"content":"Invokes any <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler\"&gt;&lt;/xref&gt;</ph> referenced method that is associated with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>."}],"pos":[16792,17045],"yaml":true},{"content":"The object to report on. This is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"pos":[0,128],"content":"The object to report on. This is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"content":"The object to report on.","pos":[0,24]},{"content":"This is packaged into <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectEventArgs\"&gt;&lt;/xref&gt;</ph> when the handler is invoked.","pos":[25,128],"source":" This is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked."}]}],"pos":[17202,17331],"yaml":true},{"content":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.","nodes":[{"pos":[0,253],"content":"Invokes any <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler\"&gt;&lt;/xref&gt;</ph> referenced method that is associated with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlObjectWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>."}],"pos":[18371,18625],"yaml":true},{"content":"The value to pass through <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.","nodes":[{"pos":[0,107],"content":"The value to pass through <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectEventArgs\"&gt;&lt;/xref&gt;</ph> when the handler is invoked.","source":"The value to pass through <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked."}],"pos":[18783,18891],"yaml":true},{"content":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this writer, as long as <code>handled</code> in <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref> event data is not `true`.","nodes":[{"pos":[0,332],"content":"Invokes any <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler\"&gt;&lt;/xref&gt;</ph> referenced method that is associated with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlObjectWriterSettings\"&gt;&lt;/xref&gt;</ph> for this writer, as long as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">handled</ph><ept id=\"p1\">&lt;/code&gt;</ept> in <ph id=\"ph4\">&lt;xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"&gt;&lt;/xref&gt;</ph> event data is not <ph id=\"ph5\">`true`</ph>.","source":"Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this writer, as long as <code>handled</code> in <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref> event data is not `true`."}],"pos":[20055,20388],"yaml":true},{"content":"If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler. The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data. If no handler exists and this method is invoked, the call returns `false`.","nodes":[{"pos":[0,533],"content":"If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler. The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data. If no handler exists and this method is invoked, the call returns `false`.","nodes":[{"content":"If the <ph id=\"ph1\">`SetValue`</ph> operation for this XAML writer has an associated handler (a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A&gt;</ph> is declared in <ph id=\"ph3\">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>), this method creates new <ph id=\"ph4\">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> and passes them to the handler.","pos":[0,312],"source":"If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler."},{"content":"The return value is set by reading the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A&gt;</ph> value that is passed through the event data.","pos":[313,458],"source":" The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data."},{"content":"If no handler exists and this method is invoked, the call returns <ph id=\"ph1\">`false`</ph>.","pos":[459,533],"source":" If no handler exists and this method is invoked, the call returns `false`."}]}],"pos":[20399,20933],"yaml":true,"extradata":"MT"},{"content":"The object to report as the source to the handler.","nodes":[{"pos":[0,50],"content":"The object to report as the source to the handler.","nodes":[{"content":"The object to report as the source to the handler.","pos":[0,50]}]}],"pos":[21140,21191],"yaml":true},{"content":"The name of the property to set, which is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>.","nodes":[{"pos":[0,140],"content":"The name of the property to set, which is passed to the handler as part of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the property to set, which is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>."}],"pos":[21262,21403],"yaml":true},{"content":"The value to provide for the property that is named by <code>property</code>. The value is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>.","nodes":[{"pos":[0,189],"content":"The value to provide for the property that is named by <code>property</code>. The value is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>.","nodes":[{"content":"The value to provide for the property that is named by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">property</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,77],"source":"The value to provide for the property that is named by <code>property</code>."},{"content":"The value is passed to the handler as part of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"&gt;&lt;/xref&gt;</ph>.","pos":[78,189],"source":" The value is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>."}]}],"pos":[21464,21654],"yaml":true},{"content":"A Boolean value that is set by any associated handler; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"A Boolean value that is set by any associated handler; otherwise, <ph id=\"ph1\">`false`</ph>.","source":"A Boolean value that is set by any associated handler; otherwise, `false`."}],"pos":[21712,21787],"yaml":true},{"content":"Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.","nodes":[{"pos":[0,129],"content":"Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.","nodes":[{"content":"Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.","pos":[0,129],"nodes":[{"content":"Gets the last object that was written.","pos":[0,38]},{"content":"Typically only called when the node stream is at its end and the object graph is complete.","pos":[39,129]}]}]}],"pos":[22681,22811],"yaml":true},{"content":"The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete. Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.  \n  \n <xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.","nodes":[{"pos":[0,275],"content":"The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete. Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.","nodes":[{"content":"The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete. Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.","pos":[0,275],"nodes":[{"content":"The most typical usage of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.Result%2A&gt;</ph> is to call it only when the node stream is known to be at its end, and the object graph is complete.","pos":[0,172],"source":"The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete."},{"content":"Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.","pos":[173,275]}]}]},{"pos":[282,544],"content":"<xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.Result%2A&gt;</ph> typically only contains a non-null value if it is called immediately after a call to <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, and if the current scope is in the member where the object provides a value.","pos":[0,262],"source":"<xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value."}]}],"pos":[22822,23371],"yaml":true,"extradata":"MT"},{"content":"The last object written, or `null`.","nodes":[{"pos":[0,35],"content":"The last object written, or <ph id=\"ph1\">`null`</ph>.","source":"The last object written, or `null`."}],"pos":[23489,23525],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Markup.INameScope\"></xref> service that maintains the XAML namescope for the absolute node root of the XAML object writer.","nodes":[{"pos":[0,158],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.INameScope\"&gt;&lt;/xref&gt;</ph> service that maintains the XAML namescope for the absolute node root of the XAML object writer.","source":"Gets the <xref href=\"System.Windows.Markup.INameScope\"></xref> service that maintains the XAML namescope for the absolute node root of the XAML object writer."}],"pos":[24457,24616],"yaml":true},{"content":"The value of this property may come from the object writer context.","nodes":[{"pos":[0,67],"content":"The value of this property may come from the object writer context.","nodes":[{"content":"The value of this property may come from the object writer context.","pos":[0,67]}]}],"pos":[24627,24695],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Markup.INameScope\"></xref> service that maintains the XAML namescope for the current root of the object writer.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.INameScope\"&gt;&lt;/xref&gt;</ph> service that maintains the XAML namescope for the current root of the object writer.","source":"The <xref href=\"System.Windows.Markup.INameScope\"></xref> service that maintains the XAML namescope for the current root of the object writer."}],"pos":[24857,25000],"yaml":true},{"content":"Gets the active XAML schema context.","nodes":[{"pos":[0,36],"content":"Gets the active XAML schema context.","nodes":[{"content":"Gets the active XAML schema context.","pos":[0,36]}]}],"pos":[25939,25976],"yaml":true},{"content":"XAML schema context is a necessary information source for most practical object-writing scenarios. The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist. The default XAML schema context is based on CLR type-mapping rules. Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.","nodes":[{"pos":[0,483],"content":"XAML schema context is a necessary information source for most practical object-writing scenarios. The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist. The default XAML schema context is based on CLR type-mapping rules. Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.","nodes":[{"content":"XAML schema context is a necessary information source for most practical object-writing scenarios. The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist. The default XAML schema context is based on CLR type-mapping rules. Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.","pos":[0,483],"nodes":[{"content":"XAML schema context is a necessary information source for most practical object-writing scenarios.","pos":[0,98]},{"content":"The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.","pos":[99,237]},{"content":"The default XAML schema context is based on CLR type-mapping rules.","pos":[238,305]},{"content":"Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.","pos":[306,483]}]}]}],"pos":[25987,26471],"yaml":true,"extradata":"MT"},{"content":"The XAML schema context.","nodes":[{"pos":[0,24],"content":"The XAML schema context.","nodes":[{"content":"The XAML schema context.","pos":[0,24]}]}],"pos":[26636,26661],"yaml":true},{"content":"Implements <xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"></xref> and provides line information for exceptions.","nodes":[{"pos":[0,150],"content":"Implements <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> and provides line information for exceptions.","source":"Implements <xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"></xref> and provides line information for exceptions."}],"pos":[27709,27860],"yaml":true},{"content":"This service method is not intended to be called directly from your code. However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.","nodes":[{"pos":[0,267],"content":"This service method is not intended to be called directly from your code. However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.","nodes":[{"content":"This service method is not intended to be called directly from your code. However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.","pos":[0,267],"nodes":[{"content":"This service method is not intended to be called directly from your code.","pos":[0,73]},{"content":"However, if you are creating a derived class from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> and expect to report a context where line numbers are unavailable or not useful, this method may be called.","pos":[74,267],"source":" However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called."}]}]}],"pos":[27871,28139],"yaml":true,"extradata":"MT"},{"content":"The line number from the reader.","nodes":[{"pos":[0,32],"content":"The line number from the reader.","nodes":[{"content":"The line number from the reader.","pos":[0,32]}]}],"pos":[28303,28336],"yaml":true},{"content":"The line position from the reader.","nodes":[{"pos":[0,34],"content":"The line position from the reader.","nodes":[{"content":"The line position from the reader.","pos":[0,34]}]}],"pos":[28403,28438],"yaml":true},{"content":"Gets a value that reports whether a line information service should provide values and therefore, should also call the <xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"></xref> method when it is relevant.","nodes":[{"pos":[0,240],"content":"Gets a value that reports whether a line information service should provide values and therefore, should also call the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> method when it is relevant.","source":"Gets a value that reports whether a line information service should provide values and therefore, should also call the <xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"></xref> method when it is relevant."}],"pos":[29423,29664],"yaml":true},{"content":"This implementation always returns `true`.","nodes":[{"pos":[0,42],"content":"This implementation always returns <ph id=\"ph1\">`true`</ph>.","source":"This implementation always returns `true`."}],"pos":[29675,29718],"yaml":true,"extradata":"MT"},{"content":"`true` if line information is used by the writer; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if line information is used by the writer; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if line information is used by the writer; otherwise, `false`."}],"pos":[29842,29914],"yaml":true},{"content":"Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.","nodes":[{"pos":[0,154],"content":"Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.","nodes":[{"content":"Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.","pos":[0,154],"nodes":[{"content":"Closes the current member scope, and may write the value of the member scope while it closes.","pos":[0,93]},{"content":"The new scope becomes the parent object scope of the member.","pos":[94,154]}]}]}],"pos":[30871,31026],"yaml":true},{"content":"Failed to create member value from a value node that is encountered between this call and a previous `StartMember`.","nodes":[{"pos":[0,115],"content":"Failed to create member value from a value node that is encountered between this call and a previous <ph id=\"ph1\">`StartMember`</ph>.","source":"Failed to create member value from a value node that is encountered between this call and a previous `StartMember`."}],"pos":[31299,31415],"yaml":true},{"content":"Closes the current object scope in the writer. The new object scope becomes the parent member scope.","nodes":[{"pos":[0,100],"content":"Closes the current object scope in the writer. The new object scope becomes the parent member scope.","nodes":[{"content":"Closes the current object scope in the writer. The new object scope becomes the parent member scope.","pos":[0,100],"nodes":[{"content":"Closes the current object scope in the writer.","pos":[0,46]},{"content":"The new object scope becomes the parent member scope.","pos":[47,100]}]}]}],"pos":[32291,32392],"yaml":true},{"content":"If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.  \n  \n The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters. For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.","nodes":[{"pos":[0,107],"content":"If this <ph id=\"ph1\">`EndObject`</ph> position scope is closing the root object, the new object scope becomes the root scope.","source":"If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope."},{"pos":[114,458],"content":"The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters. For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.","nodes":[{"content":"The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters. For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.","pos":[0,344],"nodes":[{"content":"The call to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.","pos":[0,233],"source":"The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters."},{"content":"For these cases, the call to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> actually writes the object.","pos":[234,344],"source":" For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object."}]}]}],"pos":[32403,32866],"yaml":true,"extradata":"MT"},{"content":"Writes the conceptual `StartObject` into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.","nodes":[{"pos":[0,330],"content":"Writes the conceptual `StartObject` into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.","nodes":[{"content":"Writes the conceptual <ph id=\"ph1\">`StartObject`</ph> into the object graph when the specified object is a default or implicit value of the parent property.","pos":[0,138],"source":"Writes the conceptual `StartObject` into the object graph when the specified object is a default or implicit value of the parent property."},{"content":"The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.","pos":[139,330]}]}],"pos":[33898,34229],"yaml":true},{"content":"The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct. Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it. In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.  \n  \n If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call. Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.  \n  \n The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream. A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.","nodes":[{"pos":[0,751],"content":"The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct. Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it. In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.","nodes":[{"content":"The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct. Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it. In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.","pos":[0,751],"nodes":[{"content":"The difference between writing with <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> and writing with <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> can be seen in the resulting object graph.","pos":[0,205],"source":"The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> does not construct an instance of a type because the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> API has no information to inform the object graph of what to construct.","pos":[206,438],"source":" <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct."},{"content":"Instead, the object was created when the parent property was initialized; so a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> does not need to construct it.","pos":[439,584],"source":" Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it."},{"content":"In contrast, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> specifies that an instance of that type should be constructed and inserted into the object graph.","pos":[585,751],"source":" In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph."}]}]},{"pos":[758,1256],"content":"If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call. Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.","nodes":[{"content":"If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call. Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.","pos":[0,498],"nodes":[{"content":"If you think of the XAML node stream as a series of frames, a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> is balanced to a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> call.","pos":[0,192],"source":"If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call."},{"content":"Therefore, the number of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A&gt;</ph> plus <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> calls should equal the number of <ph id=\"ph3\">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph> calls as part of a complete object-writing evaluation of the XAML node stream.","pos":[193,498],"source":" Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream."}]}]},{"pos":[1263,1745],"content":"The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream. A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.","nodes":[{"content":"The conceptual <ph id=\"ph1\">`StartObject`</ph> position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.","pos":[0,250],"source":"The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream."},{"content":"A typical scenario where this occurs is when <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.","pos":[251,482],"source":" A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property."}]}],"pos":[34240,35992],"yaml":true,"extradata":"MT"},{"content":"Defines a namespace declaration that applies to the next object scope or member scope.","nodes":[{"pos":[0,86],"content":"Defines a namespace declaration that applies to the next object scope or member scope.","nodes":[{"content":"Defines a namespace declaration that applies to the next object scope or member scope.","pos":[0,86]}]}],"pos":[37186,37273],"yaml":true},{"content":"A namespace declaration can be written if the current scope is a root scope, object scope, or member scope. However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node. Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.  \n  \n <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor. Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility. To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.  \n  \n A namespace declaration may have a <xref:System.String.Empty?displayProperty=fullName> value for the prefix. A <xref:System.String.Empty?displayProperty=fullName> prefix represents a declaration of the default XAML namespace. Do not attempt to use null to represent the default prefix;  it throws an exception in this API. For more information, see <xref:System.Xaml.NamespaceDeclaration>.","nodes":[{"pos":[0,702],"content":"A namespace declaration can be written if the current scope is a root scope, object scope, or member scope. However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node. Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.","nodes":[{"content":"A namespace declaration can be written if the current scope is a root scope, object scope, or member scope. However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node. Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.","pos":[0,702],"nodes":[{"content":"A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.","pos":[0,107]},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> can only be called immediately before a call to one of the following: <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph>.","pos":[108,412],"source":" However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>."},{"content":"The consecutive <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> case is for writing multiple namespace declarations to the same node.","pos":[413,552],"source":" The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node."},{"content":"Eventually, either <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A&gt;</ph> must be called.","pos":[553,702],"source":" Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called."}]}]},{"pos":[709,1199],"content":"<xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor. Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility. To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A&gt;</ph> does not use a <ph id=\"ph2\">`Start`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`End`</ph> metaphor.","pos":[0,92],"source":"<xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor."},{"content":"Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> for extensibility.","pos":[93,289],"source":" Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility."},{"content":"To access the values of a <ph id=\"ph1\">&lt;xref:System.Xaml.NamespaceDeclaration&gt;</ph>, you access its <ph id=\"ph2\">&lt;xref:System.Xaml.NamespaceDeclaration.Namespace%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xaml.NamespaceDeclaration.Prefix%2A&gt;</ph> properties.","pos":[290,490],"source":" To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties."}]},{"pos":[1206,1595],"content":"A namespace declaration may have a <xref:System.String.Empty?displayProperty=fullName> value for the prefix. A <xref:System.String.Empty?displayProperty=fullName> prefix represents a declaration of the default XAML namespace. Do not attempt to use null to represent the default prefix;  it throws an exception in this API. For more information, see <xref:System.Xaml.NamespaceDeclaration>.","nodes":[{"content":"A namespace declaration may have a <xref:System.String.Empty?displayProperty=fullName> value for the prefix. A <xref:System.String.Empty?displayProperty=fullName> prefix represents a declaration of the default XAML namespace. Do not attempt to use null to represent the default prefix;  it throws an exception in this API. For more information, see <xref:System.Xaml.NamespaceDeclaration>.","pos":[0,389],"nodes":[{"content":"A namespace declaration may have a <ph id=\"ph1\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph> value for the prefix.","pos":[0,108],"source":"A namespace declaration may have a <xref:System.String.Empty?displayProperty=fullName> value for the prefix."},{"content":"A <ph id=\"ph1\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph> prefix represents a declaration of the default XAML namespace.","pos":[109,225],"source":" A <xref:System.String.Empty?displayProperty=fullName> prefix represents a declaration of the default XAML namespace."},{"content":"Do not attempt to use null to represent the default prefix;  it throws an exception in this API.","pos":[226,322]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Xaml.NamespaceDeclaration&gt;</ph>.","pos":[323,389],"source":" For more information, see <xref:System.Xaml.NamespaceDeclaration>."}]}]}],"pos":[37284,38886],"yaml":true,"extradata":"MT"},{"content":"The namespace declaration to write.","nodes":[{"pos":[0,35],"content":"The namespace declaration to write.","nodes":[{"content":"The namespace declaration to write.","pos":[0,35]}]}],"pos":[39113,39149],"yaml":true},{"content":"The <code>namespaceDeclaration</code> is `null`.","nodes":[{"pos":[0,48],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">namespaceDeclaration</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The <code>namespaceDeclaration</code> is `null`."}],"pos":[39322,39371],"yaml":true},{"content":"A component of <code>namespaceDeclaration</code> is `null`.","nodes":[{"pos":[0,59],"content":"A component of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">namespaceDeclaration</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"A component of <code>namespaceDeclaration</code> is `null`."}],"pos":[39465,39525],"yaml":true},{"content":"Tried to write a XAML namespace node in an invalid scope.","nodes":[{"pos":[0,57],"content":"Tried to write a XAML namespace node in an invalid scope.","nodes":[{"content":"Tried to write a XAML namespace node in an invalid scope.","pos":[0,57]}]}],"pos":[39645,39703],"yaml":true},{"content":"Writes a new member node into the current object scope, and the scope becomes a new member scope.","nodes":[{"pos":[0,97],"content":"Writes a new member node into the current object scope, and the scope becomes a new member scope.","nodes":[{"content":"Writes a new member node into the current object scope, and the scope becomes a new member scope.","pos":[0,97]}]}],"pos":[40693,40791],"yaml":true},{"content":"> [!TIP]\n>  Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.","nodes":[{"pos":[2,756],"content":"[!TIP]\n Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.","leadings":["","> "],"nodes":[{"content":" Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.","pos":[7,752],"nodes":[{"content":"Watch for a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlDuplicateMemberException&gt;</ph>, which occurs when the same XAML property is set twice in the XAML input.","pos":[1,134],"source":" Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input."},{"content":"In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.","pos":[135,298]},{"content":"However, more subtle cases can occur that are more difficult to spot.","pos":[299,368]},{"content":"For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.","pos":[369,558]},{"content":"In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.","pos":[559,745]}]}]}],"pos":[40802,41571],"yaml":true,"extradata":"MT"},{"content":"The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.","nodes":[{"pos":[0,121],"content":"The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.","nodes":[{"content":"The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.","pos":[0,121],"nodes":[{"content":"The XAML property to write.","pos":[0,27]},{"content":"Typically you obtain this value from a XAML reader through the XAML node stream intermediate.","pos":[28,121]}]}]}],"pos":[41756,41878],"yaml":true},{"content":"<code>property</code> has <xref href=\"System.Xaml.XamlMember.IsUnknown\"></xref> set to `true`.  \n  \n -or-  \n  \n <xref href=\"System.Xaml.XamlLanguage.UnknownContent\"></xref> passed, which indicates that the XAML node stream contained content for an object that does not support content.  \n  \n -or-  \n  \n Attempted to write a start member in an invalid scope.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;property&lt;/code&gt;</ph> has <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember.IsUnknown\"&gt;&lt;/xref&gt;</ph> set to <ph id=\"ph3\">`true`</ph>.","source":"<code>property</code> has <xref href=\"System.Xaml.XamlMember.IsUnknown\"></xref> set to `true`."},{"pos":[101,105],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[112,285],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlLanguage.UnknownContent\"&gt;&lt;/xref&gt;</ph> passed, which indicates that the XAML node stream contained content for an object that does not support content.","source":"<xref href=\"System.Xaml.XamlLanguage.UnknownContent\"></xref> passed, which indicates that the XAML node stream contained content for an object that does not support content."},{"pos":[292,296],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[303,357],"content":"Attempted to write a start member in an invalid scope.","nodes":[{"content":"Attempted to write a start member in an invalid scope.","pos":[0,54]}]}],"pos":[42071,42443],"yaml":true},{"content":"<code>property</code> specifies a property that is already explicitly set in the parent object scope.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;property&lt;/code&gt;</ph> specifies a property that is already explicitly set in the parent object scope.","source":"<code>property</code> specifies a property that is already explicitly set in the parent object scope."}],"pos":[42569,42671],"yaml":true},{"content":"<code>property</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;property&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>property</code> is `null`."}],"pos":[42773,42806],"yaml":true},{"content":"Writes an object node into the current scope, and sets the scope to a new object scope.","nodes":[{"pos":[0,87],"content":"Writes an object node into the current scope, and sets the scope to a new object scope.","nodes":[{"content":"Writes an object node into the current scope, and sets the scope to a new object scope.","pos":[0,87]}]}],"pos":[43784,43872],"yaml":true},{"content":"The type to write. Typically you obtain this value from a XAML reader.","nodes":[{"pos":[0,70],"content":"The type to write. Typically you obtain this value from a XAML reader.","nodes":[{"content":"The type to write. Typically you obtain this value from a XAML reader.","pos":[0,70],"nodes":[{"content":"The type to write.","pos":[0,18]},{"content":"Typically you obtain this value from a XAML reader.","pos":[19,70]}]}]}],"pos":[44053,44124],"yaml":true},{"content":"Processing an <xref href=\"System.Xaml.XamlType.IsUnknown\"></xref> type and cannot create an object.  \n  \n -or-  \n  \n Attempted to write a start object in an invalid scope.","nodes":[{"pos":[0,99],"content":"Processing an <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType.IsUnknown\"&gt;&lt;/xref&gt;</ph> type and cannot create an object.","source":"Processing an <xref href=\"System.Xaml.XamlType.IsUnknown\"></xref> type and cannot create an object."},{"pos":[106,110],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[117,171],"content":"Attempted to write a start object in an invalid scope.","nodes":[{"content":"Attempted to write a start object in an invalid scope.","pos":[0,54]}]}],"pos":[44317,44497],"yaml":true},{"content":"Attempted to write a root object when the root object was already provided in the settings.","nodes":[{"pos":[0,91],"content":"Attempted to write a root object when the root object was already provided in the settings.","nodes":[{"content":"Attempted to write a root object when the root object was already provided in the settings.","pos":[0,91]}]}],"pos":[44603,44695],"yaml":true},{"content":"<code>xamlType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;xamlType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>xamlType</code> is `null`."}],"pos":[44797,44830],"yaml":true},{"content":"Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.","nodes":[{"pos":[0,184],"content":"Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.","nodes":[{"content":"Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.","pos":[0,184],"nodes":[{"content":"Writes a value to the current member scope.","pos":[0,43]},{"content":"If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.","pos":[44,184]}]}]}],"pos":[45745,45930],"yaml":true},{"content":"The value to write.","nodes":[{"pos":[0,19],"content":"The value to write.","nodes":[{"content":"The value to write.","pos":[0,19]}]}],"pos":[46078,46098],"yaml":true},{"content":"Attempted to write a value in an invalid scope.","nodes":[{"pos":[0,47],"content":"Attempted to write a value in an invalid scope.","nodes":[{"content":"Attempted to write a value in an invalid scope.","pos":[0,47]}]}],"pos":[46285,46333],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlObjectWriter\n  commentId: T:System.Xaml.XamlObjectWriter\n  id: XamlObjectWriter\n  children:\n  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)\n  - System.Xaml.XamlObjectWriter.Clear\n  - System.Xaml.XamlObjectWriter.Dispose(System.Boolean)\n  - System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)\n  - System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)\n  - System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)\n  - System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)\n  - System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)\n  - System.Xaml.XamlObjectWriter.Result\n  - System.Xaml.XamlObjectWriter.RootNameScope\n  - System.Xaml.XamlObjectWriter.SchemaContext\n  - System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)\n  - System.Xaml.XamlObjectWriter.ShouldProvideLineInfo\n  - System.Xaml.XamlObjectWriter.WriteEndMember\n  - System.Xaml.XamlObjectWriter.WriteEndObject\n  - System.Xaml.XamlObjectWriter.WriteGetObject\n  - System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)\n  - System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)\n  - System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)\n  - System.Xaml.XamlObjectWriter.WriteValue(System.Object)\n  langs:\n  - csharp\n  name: XamlObjectWriter\n  nameWithType: XamlObjectWriter\n  fullName: System.Xaml.XamlObjectWriter\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Creates an object graph from a source XAML node stream.\n  remarks: \"The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method. <xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.  \\n  \\n## Scope  \\n A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph. For a particular scope, certain operations might be valid or invalid, or produce a no-operation result. For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.  \\n  \\n A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class. The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.  \\n  \\n## Callbacks  \\n To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions. Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback. The following is a list of relevant callbacks:  \\n  \\n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.  \\n  \\n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.  \\n  \\n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.  \\n  \\n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.  \\n  \\n-   The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.  \\n  \\n## Writing Dictionary Keys  \\n The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph. In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior. However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.  \\n  \\n## Checks for Disposed  \\n XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim. Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.\"\n  syntax:\n    content: 'public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer'\n  inheritance:\n  - System.Object\n  - System.Xaml.XamlWriter\n  implements:\n  - System.Xaml.IXamlLineInfoConsumer\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Xaml.XamlWriter.Close\n  - System.Xaml.XamlWriter.IsDisposed\n  - System.Xaml.XamlWriter.System#IDisposable#Dispose\n  - System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: XamlObjectWriter(XamlSchemaContext)\n  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)\n  fullName: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlObjectWriter\"></xref> class using  the XAML schema context that is used by a <xref href=\"System.Xaml.XamlReader\"></xref>.\n  syntax:\n    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: A XAML schema context that is shared with the XAML reader that provides nodes for writing.\n  overload: System.Xaml.XamlObjectWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>schemaContext</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)\n  commentId: M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)\n  id: '#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)'\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: XamlObjectWriter(XamlSchemaContext, XamlObjectWriterSettings)\n  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext, XamlObjectWriterSettings)\n  fullName: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext, XamlObjectWriterSettings)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlObjectWriter\"></xref> class using the context that is used by a <xref href=\"System.Xaml.XamlReader\"></xref> and its settings.\n  syntax:\n    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);\n    parameters:\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: A XAML schema context that is shared with the XAML reader that provides nodes for writing.\n    - id: settings\n      type: System.Xaml.XamlObjectWriterSettings\n      description: A settings object that specifies certain options for <xref href=\"System.Xaml.XamlObjectWriter\"></xref> behavior and output.\n  overload: System.Xaml.XamlObjectWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>schemaContext</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.Clear\n  commentId: M:System.Xaml.XamlObjectWriter.Clear\n  id: Clear\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: XamlObjectWriter.Clear()\n  fullName: XamlObjectWriter.Clear()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Resets all possible frames and clears the object graph.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Xaml.XamlObjectWriter.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)\n  commentId: M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: XamlObjectWriter.Dispose(Boolean)\n  fullName: XamlObjectWriter.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Xaml.XamlObjectWriter\"></xref>, and optionally, releases the managed resources.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release the managed resources; otherwise, `false`.'\n  overload: System.Xaml.XamlObjectWriter.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)\n  commentId: M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)\n  id: OnAfterBeginInit(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: OnAfterBeginInit(Object)\n  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)\n  fullName: XamlObjectWriter.OnAfterBeginInit(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler\"></xref> method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.\n  syntax:\n    content: protected virtual void OnAfterBeginInit (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to report on. The object is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.\n  overload: System.Xaml.XamlObjectWriter.OnAfterBeginInit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)\n  commentId: M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)\n  id: OnAfterEndInit(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: OnAfterEndInit(Object)\n  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)\n  fullName: XamlObjectWriter.OnAfterEndInit(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler\"></xref> method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.\n  syntax:\n    content: protected virtual void OnAfterEndInit (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to report on. The value  is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.\n  overload: System.Xaml.XamlObjectWriter.OnAfterEndInit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)\n  commentId: M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)\n  id: OnAfterProperties(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: OnAfterProperties(Object)\n  nameWithType: XamlObjectWriter.OnAfterProperties(Object)\n  fullName: XamlObjectWriter.OnAfterProperties(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.\n  syntax:\n    content: protected virtual void OnAfterProperties (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to report on. This is packaged into <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.\n  overload: System.Xaml.XamlObjectWriter.OnAfterProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)\n  commentId: M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)\n  id: OnBeforeProperties(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: OnBeforeProperties(Object)\n  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)\n  fullName: XamlObjectWriter.OnBeforeProperties(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this <xref href=\"System.Xaml.XamlObjectWriter\"></xref>.\n  syntax:\n    content: protected virtual void OnBeforeProperties (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to pass through <xref href=\"System.Xaml.XamlObjectEventArgs\"></xref> when the handler is invoked.\n  overload: System.Xaml.XamlObjectWriter.OnBeforeProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)\n  commentId: M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)\n  id: OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: OnSetValue(Object, XamlMember, Object)\n  nameWithType: XamlObjectWriter.OnSetValue(Object, XamlMember, Object)\n  fullName: XamlObjectWriter.OnSetValue(Object, XamlMember, Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Invokes any <xref href=\"System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler\"></xref> referenced method that is associated with <xref href=\"System.Xaml.XamlObjectWriterSettings\"></xref> for this writer, as long as <code>handled</code> in <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref> event data is not `true`.\n  remarks: If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler. The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data. If no handler exists and this method is invoked, the call returns `false`.\n  syntax:\n    content: protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);\n    parameters:\n    - id: eventSender\n      type: System.Object\n      description: The object to report as the source to the handler.\n    - id: member\n      type: System.Xaml.XamlMember\n      description: The name of the property to set, which is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>.\n    - id: value\n      type: System.Object\n      description: The value to provide for the property that is named by <code>property</code>. The value is passed to the handler as part of <xref href=\"System.Windows.Markup.XamlSetValueEventArgs\"></xref>.\n    return:\n      type: System.Boolean\n      description: A Boolean value that is set by any associated handler; otherwise, `false`.\n  overload: System.Xaml.XamlObjectWriter.OnSetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.Result\n  commentId: P:System.Xaml.XamlObjectWriter.Result\n  id: Result\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: Result\n  nameWithType: XamlObjectWriter.Result\n  fullName: XamlObjectWriter.Result\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.\n  remarks: \"The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete. Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.  \\n  \\n <xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.\"\n  syntax:\n    content: public virtual object Result { get; }\n    return:\n      type: System.Object\n      description: The last object written, or `null`.\n  overload: System.Xaml.XamlObjectWriter.Result*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.RootNameScope\n  commentId: P:System.Xaml.XamlObjectWriter.RootNameScope\n  id: RootNameScope\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: RootNameScope\n  nameWithType: XamlObjectWriter.RootNameScope\n  fullName: XamlObjectWriter.RootNameScope\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Windows.Markup.INameScope\"></xref> service that maintains the XAML namescope for the absolute node root of the XAML object writer.\n  remarks: The value of this property may come from the object writer context.\n  syntax:\n    content: public System.Windows.Markup.INameScope RootNameScope { get; }\n    return:\n      type: System.Windows.Markup.INameScope\n      description: The <xref href=\"System.Windows.Markup.INameScope\"></xref> service that maintains the XAML namescope for the current root of the object writer.\n  overload: System.Xaml.XamlObjectWriter.RootNameScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.SchemaContext\n  commentId: P:System.Xaml.XamlObjectWriter.SchemaContext\n  id: SchemaContext\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: SchemaContext\n  nameWithType: XamlObjectWriter.SchemaContext\n  fullName: XamlObjectWriter.SchemaContext\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the active XAML schema context.\n  remarks: XAML schema context is a necessary information source for most practical object-writing scenarios. The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist. The default XAML schema context is based on CLR type-mapping rules. Frameworks typically provide their own XAML schema context in order to assure that that the assembly-loading mechanisms match the framework's programming amd application models.\n  syntax:\n    content: public override System.Xaml.XamlSchemaContext SchemaContext { get; }\n    return:\n      type: System.Xaml.XamlSchemaContext\n      description: The XAML schema context.\n  overload: System.Xaml.XamlObjectWriter.SchemaContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)\n  commentId: M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)\n  id: SetLineInfo(System.Int32,System.Int32)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: SetLineInfo(Int32, Int32)\n  nameWithType: XamlObjectWriter.SetLineInfo(Int32, Int32)\n  fullName: XamlObjectWriter.SetLineInfo(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Implements <xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"></xref> and provides line information for exceptions.\n  remarks: This service method is not intended to be called directly from your code. However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.\n  syntax:\n    content: public void SetLineInfo (int lineNumber, int linePosition);\n    parameters:\n    - id: lineNumber\n      type: System.Int32\n      description: The line number from the reader.\n    - id: linePosition\n      type: System.Int32\n      description: The line position from the reader.\n  overload: System.Xaml.XamlObjectWriter.SetLineInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo\n  commentId: P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo\n  id: ShouldProvideLineInfo\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: ShouldProvideLineInfo\n  nameWithType: XamlObjectWriter.ShouldProvideLineInfo\n  fullName: XamlObjectWriter.ShouldProvideLineInfo\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that reports whether a line information service should provide values and therefore, should also call the <xref href=\"System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)\"></xref> method when it is relevant.\n  remarks: This implementation always returns `true`.\n  syntax:\n    content: public bool ShouldProvideLineInfo { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if line information is used by the writer; otherwise, `false`.'\n  overload: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteEndMember\n  commentId: M:System.Xaml.XamlObjectWriter.WriteEndMember\n  id: WriteEndMember\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteEndMember()\n  nameWithType: XamlObjectWriter.WriteEndMember()\n  fullName: XamlObjectWriter.WriteEndMember()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.\n  syntax:\n    content: public override void WriteEndMember ();\n    parameters: []\n  overload: System.Xaml.XamlObjectWriter.WriteEndMember*\n  exceptions:\n  - type: System.Xaml.XamlObjectWriterException\n    commentId: T:System.Xaml.XamlObjectWriterException\n    description: Failed to create member value from a value node that is encountered between this call and a previous `StartMember`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteEndObject\n  commentId: M:System.Xaml.XamlObjectWriter.WriteEndObject\n  id: WriteEndObject\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteEndObject()\n  nameWithType: XamlObjectWriter.WriteEndObject()\n  fullName: XamlObjectWriter.WriteEndObject()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Closes the current object scope in the writer. The new object scope becomes the parent member scope.\n  remarks: \"If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.  \\n  \\n The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters. For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.\"\n  syntax:\n    content: public override void WriteEndObject ();\n    parameters: []\n  overload: System.Xaml.XamlObjectWriter.WriteEndObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteGetObject\n  commentId: M:System.Xaml.XamlObjectWriter.WriteGetObject\n  id: WriteGetObject\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteGetObject()\n  nameWithType: XamlObjectWriter.WriteGetObject()\n  fullName: XamlObjectWriter.WriteGetObject()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Writes the conceptual `StartObject` into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.\n  remarks: \"The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct. Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it. In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.  \\n  \\n If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call. Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.  \\n  \\n The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream. A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.\"\n  syntax:\n    content: public override void WriteGetObject ();\n    parameters: []\n  overload: System.Xaml.XamlObjectWriter.WriteGetObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)\n  commentId: M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)\n  id: WriteNamespace(System.Xaml.NamespaceDeclaration)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteNamespace(NamespaceDeclaration)\n  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)\n  fullName: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Defines a namespace declaration that applies to the next object scope or member scope.\n  remarks: \"A namespace declaration can be written if the current scope is a root scope, object scope, or member scope. However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>. The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node. Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.  \\n  \\n <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor. Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility. To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.  \\n  \\n A namespace declaration may have a <xref:System.String.Empty?displayProperty=fullName> value for the prefix. A <xref:System.String.Empty?displayProperty=fullName> prefix represents a declaration of the default XAML namespace. Do not attempt to use null to represent the default prefix;  it throws an exception in this API. For more information, see <xref:System.Xaml.NamespaceDeclaration>.\"\n  syntax:\n    content: public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);\n    parameters:\n    - id: namespaceDeclaration\n      type: System.Xaml.NamespaceDeclaration\n      description: The namespace declaration to write.\n  overload: System.Xaml.XamlObjectWriter.WriteNamespace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>namespaceDeclaration</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A component of <code>namespaceDeclaration</code> is `null`.\n  - type: System.Xaml.XamlObjectReaderException\n    commentId: T:System.Xaml.XamlObjectReaderException\n    description: Tried to write a XAML namespace node in an invalid scope.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)\n  commentId: M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)\n  id: WriteStartMember(System.Xaml.XamlMember)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteStartMember(XamlMember)\n  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)\n  fullName: XamlObjectWriter.WriteStartMember(XamlMember)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Writes a new member node into the current object scope, and the scope becomes a new member scope.\n  remarks: >-\n    > [!TIP]\n\n    >  Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.\n  syntax:\n    content: public override void WriteStartMember (System.Xaml.XamlMember property);\n    parameters:\n    - id: property\n      type: System.Xaml.XamlMember\n      description: The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.\n  overload: System.Xaml.XamlObjectWriter.WriteStartMember*\n  exceptions:\n  - type: System.Xaml.XamlObjectWriterException\n    commentId: T:System.Xaml.XamlObjectWriterException\n    description: \"<code>property</code> has <xref href=\\\"System.Xaml.XamlMember.IsUnknown\\\"></xref> set to `true`.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.Xaml.XamlLanguage.UnknownContent\\\"></xref> passed, which indicates that the XAML node stream contained content for an object that does not support content.  \\n  \\n -or-  \\n  \\n Attempted to write a start member in an invalid scope.\"\n  - type: System.Xaml.XamlDuplicateMemberException\n    commentId: T:System.Xaml.XamlDuplicateMemberException\n    description: <code>property</code> specifies a property that is already explicitly set in the parent object scope.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>property</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)\n  commentId: M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)\n  id: WriteStartObject(System.Xaml.XamlType)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteStartObject(XamlType)\n  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)\n  fullName: XamlObjectWriter.WriteStartObject(XamlType)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Writes an object node into the current scope, and sets the scope to a new object scope.\n  syntax:\n    content: public override void WriteStartObject (System.Xaml.XamlType xamlType);\n    parameters:\n    - id: xamlType\n      type: System.Xaml.XamlType\n      description: The type to write. Typically you obtain this value from a XAML reader.\n  overload: System.Xaml.XamlObjectWriter.WriteStartObject*\n  exceptions:\n  - type: System.Xaml.XamlObjectWriterException\n    commentId: T:System.Xaml.XamlObjectWriterException\n    description: \"Processing an <xref href=\\\"System.Xaml.XamlType.IsUnknown\\\"></xref> type and cannot create an object.  \\n  \\n -or-  \\n  \\n Attempted to write a start object in an invalid scope.\"\n  - type: System.Xaml.XamlParseException\n    commentId: T:System.Xaml.XamlParseException\n    description: Attempted to write a root object when the root object was already provided in the settings.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>xamlType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)\n  commentId: M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)\n  id: WriteValue(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  langs:\n  - csharp\n  name: WriteValue(Object)\n  nameWithType: XamlObjectWriter.WriteValue(Object)\n  fullName: XamlObjectWriter.WriteValue(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.\n  syntax:\n    content: public override void WriteValue (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to write.\n  overload: System.Xaml.XamlObjectWriter.WriteValue*\n  exceptions:\n  - type: System.Xaml.XamlObjectWriterException\n    commentId: T:System.Xaml.XamlObjectWriterException\n    description: Attempted to write a value in an invalid scope.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Xaml.XamlWriter\n  parent: System.Xaml\n  isExternal: false\n  name: XamlWriter\n  nameWithType: XamlWriter\n  fullName: System.Xaml.XamlWriter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xaml.XamlObjectWriterException\n  parent: System.Xaml\n  isExternal: false\n  name: XamlObjectWriterException\n  nameWithType: XamlObjectWriterException\n  fullName: System.Xaml.XamlObjectWriterException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Xaml.XamlObjectReaderException\n  parent: System.Xaml\n  isExternal: false\n  name: XamlObjectReaderException\n  nameWithType: XamlObjectReaderException\n  fullName: System.Xaml.XamlObjectReaderException\n- uid: System.Xaml.XamlDuplicateMemberException\n  parent: System.Xaml\n  isExternal: false\n  name: XamlDuplicateMemberException\n  nameWithType: XamlDuplicateMemberException\n  fullName: System.Xaml.XamlDuplicateMemberException\n- uid: System.Xaml.XamlParseException\n  parent: System.Xaml\n  isExternal: false\n  name: XamlParseException\n  nameWithType: XamlParseException\n  fullName: System.Xaml.XamlParseException\n- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: XamlObjectWriter(XamlSchemaContext)\n  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)\n  fullName: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: XamlObjectWriter(XamlSchemaContext, XamlObjectWriterSettings)\n  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext, XamlObjectWriterSettings)\n  fullName: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext, XamlObjectWriterSettings)\n- uid: System.Xaml.XamlObjectWriterSettings\n  parent: System.Xaml\n  isExternal: false\n  name: XamlObjectWriterSettings\n  nameWithType: XamlObjectWriterSettings\n  fullName: System.Xaml.XamlObjectWriterSettings\n- uid: System.Xaml.XamlObjectWriter.Clear\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: Clear()\n  nameWithType: XamlObjectWriter.Clear()\n  fullName: XamlObjectWriter.Clear()\n- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: XamlObjectWriter.Dispose(Boolean)\n  fullName: XamlObjectWriter.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnAfterBeginInit(Object)\n  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)\n  fullName: XamlObjectWriter.OnAfterBeginInit(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnAfterEndInit(Object)\n  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)\n  fullName: XamlObjectWriter.OnAfterEndInit(Object)\n- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnAfterProperties(Object)\n  nameWithType: XamlObjectWriter.OnAfterProperties(Object)\n  fullName: XamlObjectWriter.OnAfterProperties(Object)\n- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnBeforeProperties(Object)\n  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)\n  fullName: XamlObjectWriter.OnBeforeProperties(Object)\n- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnSetValue(Object, XamlMember, Object)\n  nameWithType: XamlObjectWriter.OnSetValue(Object, XamlMember, Object)\n  fullName: XamlObjectWriter.OnSetValue(Object, XamlMember, Object)\n- uid: System.Xaml.XamlMember\n  parent: System.Xaml\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n- uid: System.Xaml.XamlObjectWriter.Result\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: Result\n  nameWithType: XamlObjectWriter.Result\n  fullName: XamlObjectWriter.Result\n- uid: System.Xaml.XamlObjectWriter.RootNameScope\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: RootNameScope\n  nameWithType: XamlObjectWriter.RootNameScope\n  fullName: XamlObjectWriter.RootNameScope\n- uid: System.Windows.Markup.INameScope\n  parent: System.Windows.Markup\n  isExternal: false\n  name: INameScope\n  nameWithType: INameScope\n  fullName: System.Windows.Markup.INameScope\n- uid: System.Xaml.XamlObjectWriter.SchemaContext\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlObjectWriter.SchemaContext\n  fullName: XamlObjectWriter.SchemaContext\n- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: SetLineInfo(Int32, Int32)\n  nameWithType: XamlObjectWriter.SetLineInfo(Int32, Int32)\n  fullName: XamlObjectWriter.SetLineInfo(Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: ShouldProvideLineInfo\n  nameWithType: XamlObjectWriter.ShouldProvideLineInfo\n  fullName: XamlObjectWriter.ShouldProvideLineInfo\n- uid: System.Xaml.XamlObjectWriter.WriteEndMember\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteEndMember()\n  nameWithType: XamlObjectWriter.WriteEndMember()\n  fullName: XamlObjectWriter.WriteEndMember()\n- uid: System.Xaml.XamlObjectWriter.WriteEndObject\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteEndObject()\n  nameWithType: XamlObjectWriter.WriteEndObject()\n  fullName: XamlObjectWriter.WriteEndObject()\n- uid: System.Xaml.XamlObjectWriter.WriteGetObject\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteGetObject()\n  nameWithType: XamlObjectWriter.WriteGetObject()\n  fullName: XamlObjectWriter.WriteGetObject()\n- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteNamespace(NamespaceDeclaration)\n  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)\n  fullName: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)\n- uid: System.Xaml.NamespaceDeclaration\n  parent: System.Xaml\n  isExternal: false\n  name: NamespaceDeclaration\n  nameWithType: NamespaceDeclaration\n  fullName: System.Xaml.NamespaceDeclaration\n- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteStartMember(XamlMember)\n  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)\n  fullName: XamlObjectWriter.WriteStartMember(XamlMember)\n- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteStartObject(XamlType)\n  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)\n  fullName: XamlObjectWriter.WriteStartObject(XamlType)\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteValue(Object)\n  nameWithType: XamlObjectWriter.WriteValue(Object)\n  fullName: XamlObjectWriter.WriteValue(Object)\n- uid: System.Xaml.XamlObjectWriter.#ctor*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: XamlObjectWriter\n  nameWithType: XamlObjectWriter.XamlObjectWriter\n  fullName: XamlObjectWriter.XamlObjectWriter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.Clear*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: Clear\n  nameWithType: XamlObjectWriter.Clear\n  fullName: XamlObjectWriter.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.Dispose*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: Dispose\n  nameWithType: XamlObjectWriter.Dispose\n  fullName: XamlObjectWriter.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnAfterBeginInit\n  nameWithType: XamlObjectWriter.OnAfterBeginInit\n  fullName: XamlObjectWriter.OnAfterBeginInit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnAfterEndInit\n  nameWithType: XamlObjectWriter.OnAfterEndInit\n  fullName: XamlObjectWriter.OnAfterEndInit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.OnAfterProperties*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnAfterProperties\n  nameWithType: XamlObjectWriter.OnAfterProperties\n  fullName: XamlObjectWriter.OnAfterProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnBeforeProperties\n  nameWithType: XamlObjectWriter.OnBeforeProperties\n  fullName: XamlObjectWriter.OnBeforeProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.OnSetValue*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: OnSetValue\n  nameWithType: XamlObjectWriter.OnSetValue\n  fullName: XamlObjectWriter.OnSetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.Result*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: Result\n  nameWithType: XamlObjectWriter.Result\n  fullName: XamlObjectWriter.Result\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.RootNameScope*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: RootNameScope\n  nameWithType: XamlObjectWriter.RootNameScope\n  fullName: XamlObjectWriter.RootNameScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.SchemaContext*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: SchemaContext\n  nameWithType: XamlObjectWriter.SchemaContext\n  fullName: XamlObjectWriter.SchemaContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.SetLineInfo*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: SetLineInfo\n  nameWithType: XamlObjectWriter.SetLineInfo\n  fullName: XamlObjectWriter.SetLineInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: ShouldProvideLineInfo\n  nameWithType: XamlObjectWriter.ShouldProvideLineInfo\n  fullName: XamlObjectWriter.ShouldProvideLineInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteEndMember*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteEndMember\n  nameWithType: XamlObjectWriter.WriteEndMember\n  fullName: XamlObjectWriter.WriteEndMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteEndObject*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteEndObject\n  nameWithType: XamlObjectWriter.WriteEndObject\n  fullName: XamlObjectWriter.WriteEndObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteGetObject*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteGetObject\n  nameWithType: XamlObjectWriter.WriteGetObject\n  fullName: XamlObjectWriter.WriteGetObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteNamespace*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteNamespace\n  nameWithType: XamlObjectWriter.WriteNamespace\n  fullName: XamlObjectWriter.WriteNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteStartMember*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteStartMember\n  nameWithType: XamlObjectWriter.WriteStartMember\n  fullName: XamlObjectWriter.WriteStartMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteStartObject*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteStartObject\n  nameWithType: XamlObjectWriter.WriteStartObject\n  fullName: XamlObjectWriter.WriteStartObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Xaml.XamlObjectWriter.WriteValue*\n  parent: System.Xaml.XamlObjectWriter\n  isExternal: false\n  name: WriteValue\n  nameWithType: XamlObjectWriter.WriteValue\n  fullName: XamlObjectWriter.WriteValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlObjectWriter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Xaml.XamlWriter.Close\n  parent: System.Xaml.XamlWriter\n  isExternal: false\n  name: Close()\n  nameWithType: XamlWriter.Close()\n  fullName: XamlWriter.Close()\n- uid: System.Xaml.XamlWriter.IsDisposed\n  parent: System.Xaml.XamlWriter\n  isExternal: false\n  name: IsDisposed\n  nameWithType: XamlWriter.IsDisposed\n  fullName: XamlWriter.IsDisposed\n- uid: System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)\n  parent: System.Xaml.XamlWriter\n  isExternal: false\n  name: WriteNode(XamlReader)\n  nameWithType: XamlWriter.WriteNode(XamlReader)\n  fullName: XamlWriter.WriteNode(XamlReader)\n- uid: System.Xaml.XamlWriter.System#IDisposable#Dispose\n  parent: System.Xaml.XamlWriter\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: XamlWriter.IDisposable.Dispose()\n  fullName: XamlWriter.IDisposable.Dispose()\n- uid: System.Xaml.IXamlLineInfoConsumer\n  parent: System.Xaml\n  isExternal: false\n  name: IXamlLineInfoConsumer\n  nameWithType: IXamlLineInfoConsumer\n  fullName: System.Xaml.IXamlLineInfoConsumer\n"}