### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.BindingElement
  commentId: T:System.ServiceModel.Channels.BindingElement
  id: BindingElement
  children:
  - System.ServiceModel.Channels.BindingElement.#ctor
  - System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.Clone
  - System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  langs:
  - csharp
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.
  remarks: "A binding consists of an ordered set of binding elements that inherit from this abstract base class.  The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.  \n  \n Creating a binding and binding element for your transport is optional if you are just using the channel model. It is possible to do everything you need through the channel factory and listener as long as they are made public.  \n  \n The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model uses a factory pattern where the binding is used to create the channel stack. If you want to use the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model, then using a transport binding element is required. Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport. It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.  \n  \n On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages.  \n  \n Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages. The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel. The application then uses this channel to receive incoming messages.  \n  \n> [!NOTE]\n>  If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>."
  example:
  - "The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.  \n  \n [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]\n [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]"
  syntax:
    content: public abstract class BindingElement
  inheritance:
  - System.Object
  derivedClasses:
  - System.ServiceModel.Channels.CompositeDuplexBindingElement
  - System.ServiceModel.Channels.ContextBindingElement
  - System.ServiceModel.Channels.HttpCookieContainerBindingElement
  - System.ServiceModel.Channels.MessageEncodingBindingElement
  - System.ServiceModel.Channels.OneWayBindingElement
  - System.ServiceModel.Channels.PeerResolverBindingElement
  - System.ServiceModel.Channels.PrivacyNoticeBindingElement
  - System.ServiceModel.Channels.ReliableSessionBindingElement
  - System.ServiceModel.Channels.SecurityBindingElement
  - System.ServiceModel.Channels.StreamUpgradeBindingElement
  - System.ServiceModel.Channels.TransactionFlowBindingElement
  - System.ServiceModel.Channels.TransportBindingElement
  - System.ServiceModel.Channels.UseManagedPresentationBindingElement
  - System.ServiceModel.Discovery.DiscoveryClientBindingElement
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.BindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: BindingElement()
  nameWithType: BindingElement.BindingElement()
  fullName: BindingElement.BindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.BindingElement"></xref> class.
  syntax:
    content: protected BindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.BindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)
  commentId: M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)
  id: '#ctor(System.ServiceModel.Channels.BindingElement)'
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: BindingElement(BindingElement)
  nameWithType: BindingElement.BindingElement(BindingElement)
  fullName: BindingElement.BindingElement(BindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.BindingElement"></xref> class from a specified binding element.
  syntax:
    content: protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);
    parameters:
    - id: elementToBeCloned
      type: System.ServiceModel.Channels.BindingElement
      description: The <xref href="System.ServiceModel.Channels.BindingElement"></xref> to be cloned.
  overload: System.ServiceModel.Channels.BindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a channel factory for producing channels of a specified type from the binding context.
  remarks: ''
  example:
  - '[!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]'
  syntax:
    content: public virtual System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> that provides context for the binding element.
    typeParameters:
    - id: TChannel
      description: The type of channel the factory builds.
    return:
      type: System.ServiceModel.Channels.IChannelFactory`1
      description: The <xref href="System.ServiceModel.Channels.IChannelFactory`1"></xref> of type <code>TChannel</code> initialized from the <code>context</code>.
  overload: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: BindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: BindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a channel listener to accept channels of a specified type from the binding context.
  remarks: ''
  example:
  - '[!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]'
  syntax:
    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> that provides context for the binding element.
    typeParameters:
    - id: TChannel
      description: The type of channel the listener is built to accept.
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: The <xref href="System.ServiceModel.Channels.IChannelListener`1"></xref> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> initialized from the <code>context</code>.
  overload: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.
  remarks: Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory. Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.
  example:
  - '[!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]'
  syntax:
    content: public virtual bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> that provides context for the binding element.
    typeParameters:
    - id: TChannel
      description: The type of channel the channel factory produces.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.Channels.IChannelFactory`1"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`.'
  overload: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a value that indicates whether the binding element can build a listener for a specific type of channel.
  remarks: Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener. Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.
  example:
  - '[!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]'
  syntax:
    content: 'public virtual bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> that provides context for the binding element.
    typeParameters:
    - id: TChannel
      description: The type of channel the listener accepts.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.Channels.IChannelListener`1"></xref> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> can be built by the binding element; otherwise, `false`.'
  overload: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.Clone
  commentId: M:System.ServiceModel.Channels.BindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: BindingElement.Clone()
  fullName: BindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, returns a copy of the binding element object.
  remarks: "Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element. Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  \n  \n A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects."
  syntax:
    content: public abstract System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: A <xref href="System.ServiceModel.Channels.BindingElement"></xref> object that is a deep clone of the original.
  overload: System.ServiceModel.Channels.BindingElement.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  langs:
  - csharp
  name: GetProperty<T>(BindingContext)
  nameWithType: BindingElement.GetProperty<T>(BindingContext)
  fullName: BindingElement.GetProperty<T>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.
  remarks: "Use this to retrieve capabilities, requirements and parameters from the binding element stack. If a binding element supports returning the requested object, it returns it. If not, it delegates the call down to the next binding element in the stack. If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.  \n  \n> [!NOTE]\n>  If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>."
  example:
  - '[!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]'
  syntax:
    content: 'public abstract T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the binding element.
    typeParameters:
    - id: T
      description: The typed object for which the method is querying.
    return:
      type: T
      description: The typed object <code>T</code> requested if it is present or `null` if it is not present.
  overload: System.ServiceModel.Channels.BindingElement.GetProperty``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ServiceModel.Channels.BindingElement.#ctor
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BindingElement()
  nameWithType: BindingElement.BindingElement()
  fullName: BindingElement.BindingElement()
- uid: System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BindingElement(BindingElement)
  nameWithType: BindingElement.BindingElement(BindingElement)
  fullName: BindingElement.BindingElement(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: BindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: BindingElement.BuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.BindingElement.Clone
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: Clone()
  nameWithType: BindingElement.Clone()
  fullName: BindingElement.Clone()
- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  nameWithType: BindingElement.GetProperty<T>(BindingContext)
  fullName: BindingElement.GetProperty<T>(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.BindingElement.#ctor*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BindingElement
  nameWithType: BindingElement.BindingElement
  fullName: BindingElement.BindingElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: BindingElement.BuildChannelFactory<TChannel>
  fullName: BindingElement.BuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: BindingElement.BuildChannelListener<TChannel>
  fullName: BindingElement.BuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>
  fullName: BindingElement.CanBuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: BindingElement.CanBuildChannelListener<TChannel>
  fullName: BindingElement.CanBuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.ServiceModel.Channels.BindingElement.Clone*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: Clone
  nameWithType: BindingElement.Clone
  fullName: BindingElement.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1*
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: BindingElement.GetProperty<T>
  fullName: BindingElement.GetProperty<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
