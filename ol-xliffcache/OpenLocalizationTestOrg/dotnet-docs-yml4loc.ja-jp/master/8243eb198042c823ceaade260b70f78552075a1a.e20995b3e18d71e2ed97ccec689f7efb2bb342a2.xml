{"nodes":[{"content":"Represents the set of captures made by a single capturing group.","nodes":[{"pos":[0,64],"content":"Represents the set of captures made by a single capturing group.","nodes":[{"content":"Represents the set of captures made by a single capturing group.","pos":[0,64]}]}],"pos":[3741,3806],"yaml":true},{"content":"The collection is immutable (read-only) and has no public constructor. The <xref:System.Text.RegularExpressions.CaptureCollection> object contains one or more <xref:System.Text.RegularExpressions.Capture> objects.  \n  \n Instances of the <xref:System.Text.RegularExpressions.CaptureCollection> class are returned by the following properties:  \n  \n-   The <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Each member of the collection represents a substring captured by a capturing group. If a quantifier is not applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes a single <xref:System.Text.RegularExpressions.Capture> object that represents the same captured substring as the <xref:System.Text.RegularExpressions.Group> object. If a quantifier is applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes one <xref:System.Text.RegularExpressions.Capture> object for each captured substring, and the <xref:System.Text.RegularExpressions.Group> object provides information only about the last captured substring.  \n  \n-   The `Match.Captures` property. In this case, the collection consists of a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the match as a whole. That is, the <xref:System.Text.RegularExpressions.CaptureCollection> object provides the same information as the <xref:System.Text.RegularExpressions.Match> object.  \n  \n To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next` in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A> method.","nodes":[{"pos":[0,213],"content":"The collection is immutable (read-only) and has no public constructor. The <xref:System.Text.RegularExpressions.CaptureCollection> object contains one or more <xref:System.Text.RegularExpressions.Capture> objects.","nodes":[{"content":"The collection is immutable (read-only) and has no public constructor. The <xref:System.Text.RegularExpressions.CaptureCollection> object contains one or more <xref:System.Text.RegularExpressions.Capture> objects.","pos":[0,213],"nodes":[{"content":"The collection is immutable (read-only) and has no public constructor.","pos":[0,70]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object contains one or more <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects.","pos":[71,213],"source":" The <xref:System.Text.RegularExpressions.CaptureCollection> object contains one or more <xref:System.Text.RegularExpressions.Capture> objects."}]}]},{"pos":[220,340],"content":"Instances of the <xref:System.Text.RegularExpressions.CaptureCollection> class are returned by the following properties:","nodes":[{"content":"Instances of the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> class are returned by the following properties:","pos":[0,120],"source":"Instances of the <xref:System.Text.RegularExpressions.CaptureCollection> class are returned by the following properties:"}]},{"pos":[350,1139],"content":"The <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Each member of the collection represents a substring captured by a capturing group. If a quantifier is not applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes a single <xref:System.Text.RegularExpressions.Capture> object that represents the same captured substring as the <xref:System.Text.RegularExpressions.Group> object. If a quantifier is applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes one <xref:System.Text.RegularExpressions.Capture> object for each captured substring, and the <xref:System.Text.RegularExpressions.Group> object provides information only about the last captured substring.","nodes":[{"content":"The <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Each member of the collection represents a substring captured by a capturing group. If a quantifier is not applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes a single <xref:System.Text.RegularExpressions.Capture> object that represents the same captured substring as the <xref:System.Text.RegularExpressions.Group> object. If a quantifier is applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes one <xref:System.Text.RegularExpressions.Capture> object for each captured substring, and the <xref:System.Text.RegularExpressions.Group> object provides information only about the last captured substring.","pos":[0,789],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,94],"source":"The <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property."},{"content":"Each member of the collection represents a substring captured by a capturing group.","pos":[95,178]},{"content":"If a quantifier is not applied to a capturing group, the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> includes a single <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same captured substring as the <ph id=\"ph3\">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.","pos":[179,465],"source":" If a quantifier is not applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes a single <xref:System.Text.RegularExpressions.Capture> object that represents the same captured substring as the <xref:System.Text.RegularExpressions.Group> object."},{"content":"If a quantifier is applied to a capturing group, the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> includes one <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object for each captured substring, and the <ph id=\"ph3\">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object provides information only about the last captured substring.","pos":[466,789],"source":" If a quantifier is applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes one <xref:System.Text.RegularExpressions.Capture> object for each captured substring, and the <xref:System.Text.RegularExpressions.Group> object provides information only about the last captured substring."}]}]},{"pos":[1149,1501],"content":"The `Match.Captures` property. In this case, the collection consists of a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the match as a whole. That is, the <xref:System.Text.RegularExpressions.CaptureCollection> object provides the same information as the <xref:System.Text.RegularExpressions.Match> object.","nodes":[{"content":"The <ph id=\"ph1\">`Match.Captures`</ph> property.","pos":[0,30],"source":"The `Match.Captures` property."},{"content":"In this case, the collection consists of a single <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that provides information about the match as a whole.","pos":[31,187],"source":" In this case, the collection consists of a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the match as a whole."},{"content":"That is, the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object provides the same information as the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object.","pos":[188,352],"source":" That is, the <xref:System.Text.RegularExpressions.CaptureCollection> object provides the same information as the <xref:System.Text.RegularExpressions.Match> object."}]},{"pos":[1508,1839],"content":"To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next` in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A> method.","nodes":[{"content":"To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id=\"ph1\">`foreach`</ph> in C# and <ph id=\"ph2\">`For Each`</ph>…<ph id=\"ph3\">`Next`</ph>","pos":[0,172],"source":"To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next`"},{"content":"in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A&gt;</ph> method.","pos":[173,331],"source":" in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A> method."}]}],"pos":[3817,5667],"yaml":true,"extradata":"MT"},{"content":"Copies all the elements of the collection to the given array beginning at the given index.","nodes":[{"pos":[0,90],"content":"Copies all the elements of the collection to the given array beginning at the given index.","nodes":[{"content":"Copies all the elements of the collection to the given array beginning at the given index.","pos":[0,90]}]}],"pos":[10822,10913],"yaml":true},{"content":"Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.  \n  \n> [!WARNING]\n>  This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName> method instead.","nodes":[{"pos":[0,150],"content":"Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.","nodes":[{"content":"Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.","pos":[0,150]}]},{"pos":[158,522],"content":"[!WARNING]\n This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName> method instead.","leadings":["","> "],"nodes":[{"content":" This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName> method instead.","pos":[11,362],"nodes":[{"content":"This member is not present in the <ph id=\"ph1\">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.","pos":[1,91],"source":" This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]."},{"content":"If you are developing applications that target the <ph id=\"ph1\">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName&gt;</ph> method instead.","pos":[92,351],"source":" If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName> method instead."}]}]}],"pos":[10924,11452],"yaml":true,"extradata":"MT"},{"content":"The array the collection is to be copied into.","nodes":[{"pos":[0,46],"content":"The array the collection is to be copied into.","nodes":[{"content":"The array the collection is to be copied into.","pos":[0,46]}]}],"pos":[11601,11648],"yaml":true},{"content":"The position in the destination array where copying is to begin.","nodes":[{"pos":[0,64],"content":"The position in the destination array where copying is to begin.","nodes":[{"content":"The position in the destination array where copying is to begin.","pos":[0,64]}]}],"pos":[11713,11778],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[11963,11993],"yaml":true},{"content":"<code>arrayIndex</code> is outside the bounds of <code>array</code>.  \n  \n -or-  \n  \n <code>arrayIndex</code> plus <xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"></xref> is outside the bounds of <code>array</code>.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is outside the bounds of <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>arrayIndex</code> is outside the bounds of <code>array</code>."},{"pos":[75,79],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[86,235],"content":"<ph id=\"ph1\">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> plus <ph id=\"ph2\">&lt;xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"&gt;&lt;/xref&gt;</ph> is outside the bounds of <ph id=\"ph3\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>arrayIndex</code> plus <xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"></xref> is outside the bounds of <code>array</code>."}],"pos":[12107,12351],"yaml":true},{"content":"Gets the number of substrings captured by the group.","nodes":[{"pos":[0,52],"content":"Gets the number of substrings captured by the group.","nodes":[{"content":"Gets the number of substrings captured by the group.","pos":[0,52]}]}],"pos":[14746,14799],"yaml":true},{"content":"The number of items in the <xref href=\"System.Text.RegularExpressions.CaptureCollection\"></xref>.","nodes":[{"pos":[0,97],"content":"The number of items in the <ph id=\"ph1\">&lt;xref href=\"System.Text.RegularExpressions.CaptureCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The number of items in the <xref href=\"System.Text.RegularExpressions.CaptureCollection\"></xref>."}],"pos":[14904,15002],"yaml":true},{"content":"Provides an enumerator that iterates through the collection.","nodes":[{"pos":[0,60],"content":"Provides an enumerator that iterates through the collection.","nodes":[{"content":"Provides an enumerator that iterates through the collection.","pos":[0,60]}]}],"pos":[16649,16710],"yaml":true},{"content":"Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next` in Visual Basic) that is provided by your programming language.","nodes":[{"pos":[0,387],"content":"Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next` in Visual Basic) that is provided by your programming language.","nodes":[{"content":"Instead of calling the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id=\"ph3\">`foreach`</ph> in C# and <ph id=\"ph4\">`For Each`</ph>…<ph id=\"ph5\">`Next`</ph>","pos":[0,323],"source":"Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`"},{"content":"in Visual Basic) that is provided by your programming language.","pos":[324,387]}]}],"pos":[16721,17109],"yaml":true,"extradata":"MT"},{"content":"An object that contains all <xref href=\"System.Text.RegularExpressions.Capture\"></xref> objects within the <xref href=\"System.Text.RegularExpressions.CaptureCollection\"></xref>.","nodes":[{"pos":[0,177],"content":"An object that contains all <ph id=\"ph1\">&lt;xref href=\"System.Text.RegularExpressions.Capture\"&gt;&lt;/xref&gt;</ph> objects within the <ph id=\"ph2\">&lt;xref href=\"System.Text.RegularExpressions.CaptureCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An object that contains all <xref href=\"System.Text.RegularExpressions.Capture\"></xref> objects within the <xref href=\"System.Text.RegularExpressions.CaptureCollection\"></xref>."}],"pos":[17281,17459],"yaml":true},{"content":"Gets a value that indicates whether the collection is read only.","nodes":[{"pos":[0,64],"content":"Gets a value that indicates whether the collection is read only.","nodes":[{"content":"Gets a value that indicates whether the collection is read only.","pos":[0,64]}]}],"pos":[19092,19157],"yaml":true},{"content":"`true` in all cases.","nodes":[{"pos":[0,20],"content":"<ph id=\"ph1\">`true`</ph> in all cases.","source":"`true` in all cases."}],"pos":[19270,19293],"yaml":true},{"content":"Gets a value that indicates whether access to the collection is synchronized (thread-safe).","nodes":[{"pos":[0,91],"content":"Gets a value that indicates whether access to the collection is synchronized (thread-safe).","nodes":[{"content":"Gets a value that indicates whether access to the collection is synchronized (thread-safe).","pos":[0,91]}]}],"pos":[20643,20735],"yaml":true},{"content":"> [!WARNING]\n>  This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName> property instead.","nodes":[{"pos":[2,376],"content":"[!WARNING]\n This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName> property instead.","leadings":["","> "],"nodes":[{"content":" This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName> property instead.","pos":[11,372],"nodes":[{"content":"This member is not present in the <ph id=\"ph1\">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.","pos":[1,91],"source":" This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]."},{"content":"If you are developing applications that target the <ph id=\"ph1\">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName&gt;</ph> property instead.","pos":[92,361],"source":" If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName> property instead."}]}]}],"pos":[20746,21135],"yaml":true,"extradata":"MT"},{"content":"`false` in all cases.","nodes":[{"pos":[0,21],"content":"<ph id=\"ph1\">`false`</ph> in all cases.","source":"`false` in all cases."}],"pos":[21252,21276],"yaml":true},{"content":"Gets an individual member of the collection.","nodes":[{"pos":[0,44],"content":"Gets an individual member of the collection.","nodes":[{"content":"Gets an individual member of the collection.","pos":[0,44]}]}],"pos":[22633,22678],"yaml":true},{"content":"Index into the capture collection.","nodes":[{"pos":[0,34],"content":"Index into the capture collection.","nodes":[{"content":"Index into the capture collection.","pos":[0,34]}]}],"pos":[22840,22875],"yaml":true},{"content":"The captured substring at position <code>i</code> in the collection.","nodes":[{"pos":[0,68],"content":"The captured substring at position <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">i</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the collection.","source":"The captured substring at position <code>i</code> in the collection."}],"pos":[22957,23026],"yaml":true},{"content":"<code>i</code> is less than 0 or greater than <xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"></xref>.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> is less than 0 or greater than <ph id=\"ph2\">&lt;xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>i</code> is less than 0 or greater than <xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"></xref>."}],"pos":[23221,23344],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the collection.","nodes":[{"pos":[0,72],"content":"Gets an object that can be used to synchronize access to the collection.","nodes":[{"content":"Gets an object that can be used to synchronize access to the collection.","pos":[0,72]}]}],"pos":[24872,24945],"yaml":true},{"content":"> [!WARNING]\n>  This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName> property instead.","nodes":[{"pos":[2,370],"content":"[!WARNING]\n This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName> property instead.","leadings":["","> "],"nodes":[{"content":" This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName> property instead.","pos":[11,366],"nodes":[{"content":"This member is not present in the <ph id=\"ph1\">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.","pos":[1,91],"source":" This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]."},{"content":"If you are developing applications that target the <ph id=\"ph1\">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName&gt;</ph> property instead.","pos":[92,355],"source":" If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName> property instead."}]}]}],"pos":[24956,25339],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the collection.","nodes":[{"pos":[0,67],"content":"An object that can be used to synchronize access to the collection.","nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]}],"pos":[25451,25519],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.RegularExpressions.CaptureCollection\n  commentId: T:System.Text.RegularExpressions.CaptureCollection\n  id: CaptureCollection\n  children:\n  - System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.Count\n  - System.Text.RegularExpressions.CaptureCollection.GetEnumerator\n  - System.Text.RegularExpressions.CaptureCollection.IsReadOnly\n  - System.Text.RegularExpressions.CaptureCollection.IsSynchronized\n  - System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.SyncRoot\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)\n  - System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: CaptureCollection\n  nameWithType: CaptureCollection\n  fullName: System.Text.RegularExpressions.CaptureCollection\n  type: Class\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Represents the set of captures made by a single capturing group.\n  remarks: \"The collection is immutable (read-only) and has no public constructor. The <xref:System.Text.RegularExpressions.CaptureCollection> object contains one or more <xref:System.Text.RegularExpressions.Capture> objects.  \\n  \\n Instances of the <xref:System.Text.RegularExpressions.CaptureCollection> class are returned by the following properties:  \\n  \\n-   The <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Each member of the collection represents a substring captured by a capturing group. If a quantifier is not applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes a single <xref:System.Text.RegularExpressions.Capture> object that represents the same captured substring as the <xref:System.Text.RegularExpressions.Group> object. If a quantifier is applied to a capturing group, the <xref:System.Text.RegularExpressions.CaptureCollection> includes one <xref:System.Text.RegularExpressions.Capture> object for each captured substring, and the <xref:System.Text.RegularExpressions.Group> object provides information only about the last captured substring.  \\n  \\n-   The `Match.Captures` property. In this case, the collection consists of a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the match as a whole. That is, the <xref:System.Text.RegularExpressions.CaptureCollection> object provides the same information as the <xref:System.Text.RegularExpressions.Match> object.  \\n  \\n To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next` in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A> method.\"\n  example:\n  - \"The following example compares the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> object returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> and `Match.Captures` properties. It also compares <xref:System.Text.RegularExpressions.Group> objects with the <xref:System.Text.RegularExpressions.Capture> objects in the <xref:System.Text.RegularExpressions.CaptureCollection> returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. The example uses the following two regular expressions to find matches in a single input string:  \\n  \\n-   `\\\\b\\\\w+\\\\W{1,2}`  \\n  \\n     This regular expression pattern identifies a word that consists of one or more word characters, followed by either one or two non-word characters such as white space or punctuation. The regular expression does not include any capturing groups. The output from the example shows that both the <xref:System.Text.RegularExpressions.Match> object and the <xref:System.Text.RegularExpressions.CaptureCollection> objects returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> and `Match.Captures` properties contain information about the same match.  \\n  \\n-   `(\\\\b\\\\w+\\\\W{1,2})+`  \\n  \\n     This regular expression pattern identifies the words in a sentence. The pattern defines a single capturing group that consists of one or more word characters followed by one or two non-word characters. The regular expression pattern uses the `+` quantifier to match one or more occurrences of this group. The output from this example shows that the <xref:System.Text.RegularExpressions.Match> object and the <xref:System.Text.RegularExpressions.CaptureCollection> object returned by the `Match.Captures` property contain information about the same match. The second <xref:System.Text.RegularExpressions.Group> object, which corresponds to the only capturing group in the regular expression, identifies only the last captured string, whereas the <xref:System.Text.RegularExpressions.CaptureCollection> object returned by the first capturing group's <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property includes all captured substrings.  \\n  \\n [!code-csharp[System.Text.RegularExpressions.CaptureCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capturecollection/cs/capturecollectionex1.cs#1)]\\n [!code-vb[System.Text.RegularExpressions.CaptureCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capturecollection/vb/capturecollectionex1.vb#1)]\"\n  syntax:\n    content: 'public class CaptureCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: CaptureCollection.CopyTo(Array, Int32)\n  fullName: CaptureCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: Copies all the elements of the collection to the given array beginning at the given index.\n  remarks: \"Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.  \\n  \\n> [!WARNING]\\n>  This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName> method instead.\"\n  syntax:\n    content: public void CopyTo (Array array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The array the collection is to be copied into.\n    - id: arrayIndex\n      type: System.Int32\n      description: The position in the destination array where copying is to begin.\n  overload: System.Text.RegularExpressions.CaptureCollection.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>arrayIndex</code> is outside the bounds of <code>array</code>.  \\n  \\n -or-  \\n  \\n <code>arrayIndex</code> plus <xref href=\\\"System.Text.RegularExpressions.CaptureCollection.Count\\\"></xref> is outside the bounds of <code>array</code>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)\n  id: CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: CopyTo(Capture[], Int32)\n  nameWithType: CaptureCollection.CopyTo(Capture[], Int32)\n  fullName: CaptureCollection.CopyTo(Capture[], Int32)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: public void CopyTo (System.Text.RegularExpressions.Capture[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Text.RegularExpressions.Capture[]\n      description: ''\n    - id: arrayIndex\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.CopyTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.Count\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.Count\n  id: Count\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: CaptureCollection.Count\n  fullName: CaptureCollection.Count\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Gets the number of substrings captured by the group.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the <xref href=\"System.Text.RegularExpressions.CaptureCollection\"></xref>.\n  overload: System.Text.RegularExpressions.CaptureCollection.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: CaptureCollection.GetEnumerator()\n  fullName: CaptureCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Provides an enumerator that iterates through the collection.\n  remarks: Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next` in Visual Basic) that is provided by your programming language.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that contains all <xref href=\"System.Text.RegularExpressions.Capture\"></xref> objects within the <xref href=\"System.Text.RegularExpressions.CaptureCollection\"></xref>.\n  overload: System.Text.RegularExpressions.CaptureCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: CaptureCollection.IsReadOnly\n  fullName: CaptureCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: Gets a value that indicates whether the collection is read only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` in all cases.'\n  overload: System.Text.RegularExpressions.CaptureCollection.IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: CaptureCollection.IsSynchronized\n  fullName: CaptureCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: Gets a value that indicates whether access to the collection is synchronized (thread-safe).\n  remarks: >-\n    > [!WARNING]\n\n    >  This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName> property instead.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases.'\n  overload: System.Text.RegularExpressions.CaptureCollection.IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: CaptureCollection.Item(Int32)\n  fullName: CaptureCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Gets an individual member of the collection.\n  syntax:\n    content: public System.Text.RegularExpressions.Capture this[int i] { get; }\n    parameters:\n    - id: i\n      type: System.Int32\n      description: Index into the capture collection.\n    return:\n      type: System.Text.RegularExpressions.Capture\n      description: The captured substring at position <code>i</code> in the collection.\n  overload: System.Text.RegularExpressions.CaptureCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>i</code> is less than 0 or greater than <xref href=\"System.Text.RegularExpressions.CaptureCollection.Count\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: CaptureCollection.SyncRoot\n  fullName: CaptureCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: Gets an object that can be used to synchronize access to the collection.\n  remarks: >-\n    > [!WARNING]\n\n    >  This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName> property instead.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Text.RegularExpressions.CaptureCollection.SyncRoot*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection<System#Text#RegularExpressions#Capture>#Add(System.Text.RegularExpressions.Capture)\n  id: System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection<Capture>.Add(Capture)\n  nameWithType: CaptureCollection.ICollection<Capture>.Add(Capture)\n  fullName: CaptureCollection.ICollection<Capture>.Add(Capture)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void ICollection<Capture>.Add (System.Text.RegularExpressions.Capture item);\n    parameters:\n    - id: item\n      type: System.Text.RegularExpressions.Capture\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection<System#Text#RegularExpressions#Capture>#Clear\n  id: System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection<Capture>.Clear()\n  nameWithType: CaptureCollection.ICollection<Capture>.Clear()\n  fullName: CaptureCollection.ICollection<Capture>.Clear()\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void ICollection<Capture>.Clear ();\n    parameters: []\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection<System#Text#RegularExpressions#Capture>#Contains(System.Text.RegularExpressions.Capture)\n  id: System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection<Capture>.Contains(Capture)\n  nameWithType: CaptureCollection.ICollection<Capture>.Contains(Capture)\n  fullName: CaptureCollection.ICollection<Capture>.Contains(Capture)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: bool ICollection<Capture>.Contains (System.Text.RegularExpressions.Capture item);\n    parameters:\n    - id: item\n      type: System.Text.RegularExpressions.Capture\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection<System#Text#RegularExpressions#Capture>#Remove(System.Text.RegularExpressions.Capture)\n  id: System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection<Capture>.Remove(Capture)\n  nameWithType: CaptureCollection.ICollection<Capture>.Remove(Capture)\n  fullName: CaptureCollection.ICollection<Capture>.Remove(Capture)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: bool ICollection<Capture>.Remove (System.Text.RegularExpressions.Capture item);\n    parameters:\n    - id: item\n      type: System.Text.RegularExpressions.Capture\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable<System#Text#RegularExpressions#Capture>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IEnumerable<Capture>.GetEnumerator()\n  nameWithType: CaptureCollection.IEnumerable<Capture>.GetEnumerator()\n  fullName: CaptureCollection.IEnumerable<Capture>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Text.RegularExpressions.Capture> IEnumerable<Capture>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Text.RegularExpressions.Capture}\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList<System#Text#RegularExpressions#Capture>#IndexOf(System.Text.RegularExpressions.Capture)\n  id: System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList<Capture>.IndexOf(Capture)\n  nameWithType: CaptureCollection.IList<Capture>.IndexOf(Capture)\n  fullName: CaptureCollection.IList<Capture>.IndexOf(Capture)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: int IList<Capture>.IndexOf (System.Text.RegularExpressions.Capture item);\n    parameters:\n    - id: item\n      type: System.Text.RegularExpressions.Capture\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList<System#Text#RegularExpressions#Capture>#Insert(System.Int32,System.Text.RegularExpressions.Capture)\n  id: System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList<Capture>.Insert(Int32, Capture)\n  nameWithType: CaptureCollection.IList<Capture>.Insert(Int32, Capture)\n  fullName: CaptureCollection.IList<Capture>.Insert(Int32, Capture)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void IList<Capture>.Insert (int index, System.Text.RegularExpressions.Capture item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    - id: item\n      type: System.Text.RegularExpressions.Capture\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList<System#Text#RegularExpressions#Capture>#Item(System.Int32)\n  id: System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList<Capture>.Item(Int32)\n  nameWithType: CaptureCollection.IList<Capture>.Item(Int32)\n  fullName: CaptureCollection.IList<Capture>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: System.Text.RegularExpressions.Capture System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Text.RegularExpressions.Capture\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList<System#Text#RegularExpressions#Capture>#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList<Capture>.RemoveAt(Int32)\n  nameWithType: CaptureCollection.IList<Capture>.RemoveAt(Int32)\n  fullName: CaptureCollection.IList<Capture>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void IList<Capture>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: CaptureCollection.ICollection.CopyTo(Array, Int32)\n  fullName: CaptureCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void ICollection.CopyTo (Array array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Array\n      description: ''\n    - id: arrayIndex\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: CaptureCollection.ICollection.IsSynchronized\n  fullName: CaptureCollection.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: CaptureCollection.ICollection.SyncRoot\n  fullName: CaptureCollection.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: CaptureCollection.IList.Add(Object)\n  fullName: CaptureCollection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: CaptureCollection.IList.Clear()\n  fullName: CaptureCollection.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: CaptureCollection.IList.Contains(Object)\n  fullName: CaptureCollection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: CaptureCollection.IList.IndexOf(Object)\n  fullName: CaptureCollection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: CaptureCollection.IList.Insert(Int32, Object)\n  fullName: CaptureCollection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    - id: value\n      type: System.Object\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: CaptureCollection.IList.IsFixedSize\n  fullName: CaptureCollection.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: CaptureCollection.IList.Item(Int32)\n  fullName: CaptureCollection.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: CaptureCollection.IList.Remove(Object)\n  fullName: CaptureCollection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)\n  commentId: M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Text.RegularExpressions.CaptureCollection\n  langs:\n  - csharp\n  name: IList.RemoveAt(Int32)\n  nameWithType: CaptureCollection.IList.RemoveAt(Int32)\n  fullName: CaptureCollection.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n  overload: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: CaptureCollection.CopyTo(Array, Int32)\n  fullName: CaptureCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: CopyTo(Capture[], Int32)\n  nameWithType: CaptureCollection.CopyTo(Capture[], Int32)\n  fullName: CaptureCollection.CopyTo(Capture[], Int32)\n- uid: System.Text.RegularExpressions.Capture\n  name: Capture\n  nameWithType: Capture\n  fullName: System.Text.RegularExpressions.Capture\n- uid: System.Text.RegularExpressions.Capture[]\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: Capture[]\n  nameWithType: Capture[]\n  fullName: System.Text.RegularExpressions.Capture[]\n  spec.csharp:\n  - uid: System.Text.RegularExpressions.Capture\n    name: Capture\n    nameWithType: Capture\n    fullName: System.Text.RegularExpressions.Capture\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Text.RegularExpressions.CaptureCollection.Count\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: Count\n  nameWithType: CaptureCollection.Count\n  fullName: CaptureCollection.Count\n- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: CaptureCollection.GetEnumerator()\n  fullName: CaptureCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: CaptureCollection.IsReadOnly\n  fullName: CaptureCollection.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: CaptureCollection.IsSynchronized\n  fullName: CaptureCollection.IsSynchronized\n- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: CaptureCollection.Item(Int32)\n  fullName: CaptureCollection.Item(Int32)\n- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: CaptureCollection.SyncRoot\n  fullName: CaptureCollection.SyncRoot\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection<Capture>.Add(Capture)\n  nameWithType: CaptureCollection.ICollection<Capture>.Add(Capture)\n  fullName: CaptureCollection.ICollection<Capture>.Add(Capture)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection<Capture>.Clear()\n  nameWithType: CaptureCollection.ICollection<Capture>.Clear()\n  fullName: CaptureCollection.ICollection<Capture>.Clear()\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection<Capture>.Contains(Capture)\n  nameWithType: CaptureCollection.ICollection<Capture>.Contains(Capture)\n  fullName: CaptureCollection.ICollection<Capture>.Contains(Capture)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection<Capture>.Remove(Capture)\n  nameWithType: CaptureCollection.ICollection<Capture>.Remove(Capture)\n  fullName: CaptureCollection.ICollection<Capture>.Remove(Capture)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IEnumerable<Capture>.GetEnumerator()\n  nameWithType: CaptureCollection.IEnumerable<Capture>.GetEnumerator()\n  fullName: CaptureCollection.IEnumerable<Capture>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Text.RegularExpressions.Capture}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<Capture>\n  nameWithType: IEnumerator<Capture>\n  fullName: System.Collections.Generic.IEnumerator<System.Text.RegularExpressions.Capture>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Text.RegularExpressions.Capture\n    name: Capture\n    nameWithType: Capture\n    fullName: System.Text.RegularExpressions.Capture\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList<Capture>.IndexOf(Capture)\n  nameWithType: CaptureCollection.IList<Capture>.IndexOf(Capture)\n  fullName: CaptureCollection.IList<Capture>.IndexOf(Capture)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList<Capture>.Insert(Int32, Capture)\n  nameWithType: CaptureCollection.IList<Capture>.Insert(Int32, Capture)\n  fullName: CaptureCollection.IList<Capture>.Insert(Int32, Capture)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList<Capture>.Item(Int32)\n  nameWithType: CaptureCollection.IList<Capture>.Item(Int32)\n  fullName: CaptureCollection.IList<Capture>.Item(Int32)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList<Capture>.RemoveAt(Int32)\n  nameWithType: CaptureCollection.IList<Capture>.RemoveAt(Int32)\n  fullName: CaptureCollection.IList<Capture>.RemoveAt(Int32)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: CaptureCollection.ICollection.CopyTo(Array, Int32)\n  fullName: CaptureCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: CaptureCollection.ICollection.IsSynchronized\n  fullName: CaptureCollection.ICollection.IsSynchronized\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: CaptureCollection.ICollection.SyncRoot\n  fullName: CaptureCollection.ICollection.SyncRoot\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: CaptureCollection.IList.Add(Object)\n  fullName: CaptureCollection.IList.Add(Object)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: CaptureCollection.IList.Clear()\n  fullName: CaptureCollection.IList.Clear()\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: CaptureCollection.IList.Contains(Object)\n  fullName: CaptureCollection.IList.Contains(Object)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: CaptureCollection.IList.IndexOf(Object)\n  fullName: CaptureCollection.IList.IndexOf(Object)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: CaptureCollection.IList.Insert(Int32, Object)\n  fullName: CaptureCollection.IList.Insert(Int32, Object)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: CaptureCollection.IList.IsFixedSize\n  fullName: CaptureCollection.IList.IsFixedSize\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: CaptureCollection.IList.Item(Int32)\n  fullName: CaptureCollection.IList.Item(Int32)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: CaptureCollection.IList.Remove(Object)\n  fullName: CaptureCollection.IList.Remove(Object)\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IList.RemoveAt(Int32)\n  nameWithType: CaptureCollection.IList.RemoveAt(Int32)\n  fullName: CaptureCollection.IList.RemoveAt(Int32)\n- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: CaptureCollection.CopyTo\n  fullName: CaptureCollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.Count*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: Count\n  nameWithType: CaptureCollection.Count\n  fullName: CaptureCollection.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: CaptureCollection.GetEnumerator\n  fullName: CaptureCollection.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: CaptureCollection.IsReadOnly\n  fullName: CaptureCollection.IsReadOnly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: CaptureCollection.IsSynchronized\n  fullName: CaptureCollection.IsSynchronized\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.Item*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: Item\n  nameWithType: CaptureCollection.Item\n  fullName: CaptureCollection.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: CaptureCollection.SyncRoot\n  fullName: CaptureCollection.SyncRoot\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Add\n  nameWithType: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Add\n  fullName: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Add\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Clear\n  nameWithType: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Clear\n  fullName: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Clear\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Contains\n  nameWithType: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Contains\n  fullName: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Contains\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Remove\n  nameWithType: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Remove\n  fullName: CaptureCollection.System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Remove\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Capture>.GetEnumerator\n  nameWithType: CaptureCollection.System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Capture>.GetEnumerator\n  fullName: CaptureCollection.System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Capture>.GetEnumerator\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.IndexOf\n  nameWithType: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.IndexOf\n  fullName: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.IndexOf\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Insert\n  nameWithType: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Insert\n  fullName: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Insert\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Item\n  nameWithType: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Item\n  fullName: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Item\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.RemoveAt\n  nameWithType: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.RemoveAt\n  fullName: CaptureCollection.System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.RemoveAt\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: CaptureCollection.System.Collections.ICollection.CopyTo\n  fullName: CaptureCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: CaptureCollection.System.Collections.ICollection.IsSynchronized\n  fullName: CaptureCollection.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: CaptureCollection.System.Collections.ICollection.SyncRoot\n  fullName: CaptureCollection.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: CaptureCollection.System.Collections.IList.Add\n  fullName: CaptureCollection.System.Collections.IList.Add\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: CaptureCollection.System.Collections.IList.Clear\n  fullName: CaptureCollection.System.Collections.IList.Clear\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: CaptureCollection.System.Collections.IList.Contains\n  fullName: CaptureCollection.System.Collections.IList.Contains\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: CaptureCollection.System.Collections.IList.IndexOf\n  fullName: CaptureCollection.System.Collections.IList.IndexOf\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: CaptureCollection.System.Collections.IList.Insert\n  fullName: CaptureCollection.System.Collections.IList.Insert\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: CaptureCollection.System.Collections.IList.IsFixedSize\n  fullName: CaptureCollection.System.Collections.IList.IsFixedSize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: CaptureCollection.System.Collections.IList.Item\n  fullName: CaptureCollection.System.Collections.IList.Item\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: CaptureCollection.System.Collections.IList.Remove\n  fullName: CaptureCollection.System.Collections.IList.Remove\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt*\n  parent: System.Text.RegularExpressions.CaptureCollection\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: CaptureCollection.System.Collections.IList.RemoveAt\n  fullName: CaptureCollection.System.Collections.IList.RemoveAt\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/CaptureCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}