{"nodes":[{"content":"Provides the position of input that is needed to create a manipulation.","nodes":[{"pos":[0,71],"content":"Provides the position of input that is needed to create a manipulation.","nodes":[{"content":"Provides the position of input that is needed to create a manipulation.","pos":[0,71]}]}],"pos":[610,682],"yaml":true},{"content":"Each touch point is an <xref:System.Windows.Input.IManipulator> object.  For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger.","nodes":[{"pos":[0,259],"content":"Each touch point is an <xref:System.Windows.Input.IManipulator> object.  For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger.","nodes":[{"content":"Each touch point is an <xref:System.Windows.Input.IManipulator> object.  For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger.","pos":[0,259],"nodes":[{"content":"Each touch point is an <ph id=\"ph1\">&lt;xref:System.Windows.Input.IManipulator&gt;</ph> object.","pos":[0,71],"source":"Each touch point is an <xref:System.Windows.Input.IManipulator> object."},{"content":"For example, if you use two fingers to resize an object, a <ph id=\"ph1\">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>, which implements <ph id=\"ph2\">&lt;xref:System.Windows.Input.IManipulator&gt;</ph>, is created for each finger.","pos":[73,259],"source":"  For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger."}]}]}],"pos":[693,953],"yaml":true,"extradata":"MT"},{"content":"Returns the position of the <xref href=\"System.Windows.Input.IManipulator\"></xref> object.","nodes":[{"pos":[0,90],"content":"Returns the position of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.IManipulator\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the position of the <xref href=\"System.Windows.Input.IManipulator\"></xref> object."}],"pos":[2130,2221],"yaml":true},{"content":"The element to use as the frame of reference for calculating the position of the <xref href=\"System.Windows.Input.IManipulator\"></xref>.","nodes":[{"pos":[0,136],"content":"The element to use as the frame of reference for calculating the position of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.IManipulator\"&gt;&lt;/xref&gt;</ph>.","source":"The element to use as the frame of reference for calculating the position of the <xref href=\"System.Windows.Input.IManipulator\"></xref>."}],"pos":[2424,2561],"yaml":true},{"content":"The position of the <xref href=\"System.Windows.Input.IManipulator\"></xref> object.","nodes":[{"pos":[0,82],"content":"The position of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.IManipulator\"&gt;&lt;/xref&gt;</ph> object.","source":"The position of the <xref href=\"System.Windows.Input.IManipulator\"></xref> object."}],"pos":[2625,2708],"yaml":true},{"content":"Gets or sets a unique identifier for the object.","nodes":[{"pos":[0,48],"content":"Gets or sets a unique identifier for the object.","nodes":[{"content":"Gets or sets a unique identifier for the object.","pos":[0,48]}]}],"pos":[3627,3676],"yaml":true},{"content":"The <xref:System.Windows.Input.IManipulator.Id%2A> property should be unique for each object of a certain type.  For example, if the types `Manipulator1` and `Manipulator2` implement <xref:System.Windows.Input.IManipulator>, all of the objects of type `Maniplulator1` must have unique <xref:System.Windows.Input.IManipulator.Id%2A> values, but an object of type `Manipulator1` might have the same <xref:System.Windows.Input.IManipulator.Id%2A> as an object of type `Manipulator2`.","nodes":[{"pos":[0,480],"content":"The <xref:System.Windows.Input.IManipulator.Id%2A> property should be unique for each object of a certain type.  For example, if the types `Manipulator1` and `Manipulator2` implement <xref:System.Windows.Input.IManipulator>, all of the objects of type `Maniplulator1` must have unique <xref:System.Windows.Input.IManipulator.Id%2A> values, but an object of type `Manipulator1` might have the same <xref:System.Windows.Input.IManipulator.Id%2A> as an object of type `Manipulator2`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.IManipulator.Id%2A&gt;</ph> property should be unique for each object of a certain type.","pos":[0,111],"source":"The <xref:System.Windows.Input.IManipulator.Id%2A> property should be unique for each object of a certain type."},{"content":"For example, if the types <ph id=\"ph1\">`Manipulator1`</ph> and <ph id=\"ph2\">`Manipulator2`</ph> implement <ph id=\"ph3\">&lt;xref:System.Windows.Input.IManipulator&gt;</ph>, all of the objects of type <ph id=\"ph4\">`Maniplulator1`</ph> must have unique <ph id=\"ph5\">&lt;xref:System.Windows.Input.IManipulator.Id%2A&gt;</ph> values, but an object of type <ph id=\"ph6\">`Manipulator1`</ph> might have the same <ph id=\"ph7\">&lt;xref:System.Windows.Input.IManipulator.Id%2A&gt;</ph> as an object of type <ph id=\"ph8\">`Manipulator2`</ph>.","pos":[113,480],"source":"  For example, if the types `Manipulator1` and `Manipulator2` implement <xref:System.Windows.Input.IManipulator>, all of the objects of type `Maniplulator1` must have unique <xref:System.Windows.Input.IManipulator.Id%2A> values, but an object of type `Manipulator1` might have the same <xref:System.Windows.Input.IManipulator.Id%2A> as an object of type `Manipulator2`."}]}],"pos":[3687,4168],"yaml":true,"extradata":"MT"},{"content":"A unique identifier for the object.","nodes":[{"pos":[0,35],"content":"A unique identifier for the object.","nodes":[{"content":"A unique identifier for the object.","pos":[0,35]}]}],"pos":[4270,4306],"yaml":true},{"content":"Called when the manipulation ends.","nodes":[{"pos":[0,34],"content":"Called when the manipulation ends.","nodes":[{"content":"Called when the manipulation ends.","pos":[0,34]}]}],"pos":[5401,5436],"yaml":true},{"content":"`true` if the manipulation is canceled; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the manipulation is canceled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the manipulation is canceled; otherwise, `false`."}],"pos":[5634,5696],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Input.IManipulator\"></xref> object changes position.","nodes":[{"pos":[0,95],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.IManipulator\"&gt;&lt;/xref&gt;</ph> object changes position.","source":"Occurs when the <xref href=\"System.Windows.Input.IManipulator\"></xref> object changes position."}],"pos":[6736,6832],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.IManipulator\n  commentId: T:System.Windows.Input.IManipulator\n  id: IManipulator\n  children:\n  - System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)\n  - System.Windows.Input.IManipulator.Id\n  - System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)\n  - System.Windows.Input.IManipulator.Updated\n  langs:\n  - csharp\n  name: IManipulator\n  nameWithType: IManipulator\n  fullName: System.Windows.Input.IManipulator\n  type: Interface\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides the position of input that is needed to create a manipulation.\n  remarks: Each touch point is an <xref:System.Windows.Input.IManipulator> object.  For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger.\n  syntax:\n    content: public interface IManipulator\n  derivedClasses:\n  - System.Windows.Input.TouchDevice\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)\n  id: GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.IManipulator\n  langs:\n  - csharp\n  name: GetPosition(IInputElement)\n  nameWithType: IManipulator.GetPosition(IInputElement)\n  fullName: IManipulator.GetPosition(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns the position of the <xref href=\"System.Windows.Input.IManipulator\"></xref> object.\n  syntax:\n    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The element to use as the frame of reference for calculating the position of the <xref href=\"System.Windows.Input.IManipulator\"></xref>.\n    return:\n      type: System.Windows.Point\n      description: The position of the <xref href=\"System.Windows.Input.IManipulator\"></xref> object.\n  overload: System.Windows.Input.IManipulator.GetPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.IManipulator.Id\n  commentId: P:System.Windows.Input.IManipulator.Id\n  id: Id\n  parent: System.Windows.Input.IManipulator\n  langs:\n  - csharp\n  name: Id\n  nameWithType: IManipulator.Id\n  fullName: IManipulator.Id\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets a unique identifier for the object.\n  remarks: The <xref:System.Windows.Input.IManipulator.Id%2A> property should be unique for each object of a certain type.  For example, if the types `Manipulator1` and `Manipulator2` implement <xref:System.Windows.Input.IManipulator>, all of the objects of type `Maniplulator1` must have unique <xref:System.Windows.Input.IManipulator.Id%2A> values, but an object of type `Manipulator1` might have the same <xref:System.Windows.Input.IManipulator.Id%2A> as an object of type `Manipulator2`.\n  syntax:\n    content: public int Id { get; }\n    return:\n      type: System.Int32\n      description: A unique identifier for the object.\n  overload: System.Windows.Input.IManipulator.Id*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)\n  commentId: M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)\n  id: ManipulationEnded(System.Boolean)\n  parent: System.Windows.Input.IManipulator\n  langs:\n  - csharp\n  name: ManipulationEnded(Boolean)\n  nameWithType: IManipulator.ManipulationEnded(Boolean)\n  fullName: IManipulator.ManipulationEnded(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Called when the manipulation ends.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void ManipulationEnded (bool cancel);\n    parameters:\n    - id: cancel\n      type: System.Boolean\n      description: '`true` if the manipulation is canceled; otherwise, `false`.'\n  overload: System.Windows.Input.IManipulator.ManipulationEnded*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.IManipulator.Updated\n  commentId: E:System.Windows.Input.IManipulator.Updated\n  id: Updated\n  parent: System.Windows.Input.IManipulator\n  langs:\n  - csharp\n  name: Updated\n  nameWithType: IManipulator.Updated\n  fullName: IManipulator.Updated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Occurs when the <xref href=\"System.Windows.Input.IManipulator\"></xref> object changes position.\n  syntax:\n    content: public event EventHandler Updated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: GetPosition(IInputElement)\n  nameWithType: IManipulator.GetPosition(IInputElement)\n  fullName: IManipulator.GetPosition(IInputElement)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.IManipulator.Id\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: Id\n  nameWithType: IManipulator.Id\n  fullName: IManipulator.Id\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: ManipulationEnded(Boolean)\n  nameWithType: IManipulator.ManipulationEnded(Boolean)\n  fullName: IManipulator.ManipulationEnded(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.IManipulator.Updated\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: Updated\n  nameWithType: IManipulator.Updated\n  fullName: IManipulator.Updated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Input.IManipulator.GetPosition*\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: GetPosition\n  nameWithType: IManipulator.GetPosition\n  fullName: IManipulator.GetPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n- uid: System.Windows.Input.IManipulator.Id*\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: Id\n  nameWithType: IManipulator.Id\n  fullName: IManipulator.Id\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n- uid: System.Windows.Input.IManipulator.ManipulationEnded*\n  parent: System.Windows.Input.IManipulator\n  isExternal: false\n  name: ManipulationEnded\n  nameWithType: IManipulator.ManipulationEnded\n  fullName: IManipulator.ManipulationEnded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/IManipulator.xml\n"}