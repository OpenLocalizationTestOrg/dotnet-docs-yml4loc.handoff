### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.OperationBehaviorAttribute
  commentId: T:System.ServiceModel.OperationBehaviorAttribute
  id: OperationBehaviorAttribute
  children:
  - System.ServiceModel.OperationBehaviorAttribute.#ctor
  - System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  - System.ServiceModel.OperationBehaviorAttribute.Impersonation
  - System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  - System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  - System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  langs:
  - csharp
  name: OperationBehaviorAttribute
  nameWithType: OperationBehaviorAttribute
  fullName: System.ServiceModel.OperationBehaviorAttribute
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies the local execution behavior of a service method.
  remarks: "Use the <xref:System.ServiceModel.OperationBehaviorAttribute> attribute to indicate what operation-specific execution behavior the operation has when executed. (To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)  \n  \n> [!NOTE]\n>  You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application. When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.  \n  \n The <xref:System.ServiceModel.OperationBehaviorAttribute> attribute is a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] programming model feature that enables common features that developers otherwise must implement themselves.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process."
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior
  inheritance:
  - System.Object
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IOperationBehavior
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor
  commentId: M:System.ServiceModel.OperationBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: OperationBehaviorAttribute()
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()
  fullName: OperationBehaviorAttribute.OperationBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.OperationBehaviorAttribute"></xref> class.
  remarks: "The default constructor creates an instance of the class with the following defaults:  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode.None>.  \n  \n-   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption.NotAllowed>."
  syntax:
    content: public OperationBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.OperationBehaviorAttribute.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  commentId: P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  id: AutoDisposeParameters
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: OperationBehaviorAttribute.AutoDisposeParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets whether parameters are to be automatically disposed.
  remarks: "This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message. The default value is `true`. Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required.  \n  \n For example, if <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> is `false`, then the sender is responsible for closing the stream on the sending side."
  syntax:
    content: public bool AutoDisposeParameters { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the parameters are to be automatically disposed; otherwise `false`.'
  overload: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  commentId: P:System.ServiceModel.OperationBehaviorAttribute.Impersonation
  id: Impersonation
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: OperationBehaviorAttribute.Impersonation
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates the level of caller impersonation that the operation supports.
  remarks: "Use the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property set to <xref:System.ServiceModel.ImpersonationOption.Allowed> or <xref:System.ServiceModel.ImpersonationOption.Required>) to execute under the caller's identity. For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption.Allowed> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName> property, see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) and [How to: Impersonate a Client on a Service](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  \n  \n> [!NOTE]\n>  When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> object. Using a configuration file requires no extra step.  \n  \n There may be specific scenarios when impersonation is not supported. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Unsupported Scenarios](~/docs/framework/wcf/feature-details/unsupported-scenarios.md)."
  example:
  - "The following service code example requires impersonation by setting the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property to <xref:System.ServiceModel.ImpersonationOption.Required>.  \n  \n [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]\n [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  \n  \n The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.  \n  \n [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]\n [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]"
  syntax:
    content: public System.ServiceModel.ImpersonationOption Impersonation { get; set; }
    return:
      type: System.ServiceModel.ImpersonationOption
      description: One of the <xref href="System.ServiceModel.ImpersonationOption"></xref> values. The default is <xref href="System.ServiceModel.ImpersonationOption.NotAllowed"></xref>.
  overload: System.ServiceModel.OperationBehaviorAttribute.Impersonation*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  commentId: P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  id: ReleaseInstanceMode
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: OperationBehaviorAttribute.ReleaseInstanceMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.
  remarks: "Use the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property to specify when [!INCLUDE[indigo1](~/includes/indigo1-md.md)] recycles a service object in the course of executing a method. The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value. Setting the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property changes that default behavior.  \n  \n The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> makes no threading guarantees. If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode.PerCall>.  \n  \n In transaction scenarios, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call. You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.  \n  \n You can choose the following behaviors:  \n  \n-   Recycle a service object before an operation is called.  \n  \n-   Recycle a service object after an operation is called.  \n  \n-   Recycle a service object both before and after an operation is called.  \n  \n-   No recycling behavior.  \n  \n You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application. When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=fullName> constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode.None>."
  example:
  - "The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.  \n  \n [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]\n [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]"
  syntax:
    content: public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }
    return:
      type: System.ServiceModel.ReleaseInstanceMode
      description: One of the <xref href="System.ServiceModel.ReleaseInstanceMode"></xref> values. The default is <xref href="System.ServiceModel.ReleaseInstanceMode.None"></xref>.
  overload: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is not one of the <xref href="System.ServiceModel.ReleaseInstanceMode"></xref> values.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  commentId: P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  id: TransactionAutoComplete
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: OperationBehaviorAttribute.TransactionAutoComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.
  remarks: "Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property to `false` to complete or abort transactions directly in the code for the operation.  \n  \n Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction. Only unhandled exceptions trigger an automatic abort."
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]"
  syntax:
    content: public bool TransactionAutoComplete { get; set; }
    return:
      type: System.Boolean
      description: '`true` to complete the transaction scope automatically on successful execution of the operation; otherwise, `false`. The default is `true`.'
  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  commentId: P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  id: TransactionScopeRequired
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: OperationBehaviorAttribute.TransactionScopeRequired
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates whether the method requires a transaction scope for its execution.
  remarks: "Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> to `true` to require your operation to execute within a transaction scope. If a flowed transaction is available, the operation executes within that transaction. If one is not available, a new transaction is created and used for the operation execution. The binding specified in the endpoint controls whether flowed transactions are supported. Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property. The following table shows the possible behavior.  \n  \n|TransactionScopeRequired|Binding permits transaction flow|Caller flows transaction|Result|  \n|-|-|-|-|  \n|False|False|No|Method executes without a transaction.|  \n|True|False|No|Method creates and executes within a new transaction.|  \n|True or False|False|Yes|A SOAP fault is returned for the transaction header.|  \n|False|True|Yes|Method executes without a transaction.|  \n|True|True|Yes|Method executes under the flowed transaction.|"
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]"
  syntax:
    content: public bool TransactionScopeRequired { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the method requires a transaction scope to execute; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: IOperationBehavior.AddBindingParameters(OperationDescription, BindingParameterCollection)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.AddBindingParameters(OperationDescription, BindingParameterCollection)
  fullName: OperationBehaviorAttribute.IOperationBehavior.AddBindingParameters(OperationDescription, BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Implements the <xref href="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)"></xref> method.
  syntax:
    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: The operation description modified to support <xref href="System.ServiceModel.OperationBehaviorAttribute"></xref> properties.
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: Binding parameters passed to support binding behaviors.
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  commentId: M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: IOperationBehavior.ApplyClientBehavior(OperationDescription, ClientOperation)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.ApplyClientBehavior(OperationDescription, ClientOperation)
  fullName: OperationBehaviorAttribute.IOperationBehavior.ApplyClientBehavior(OperationDescription, ClientOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Implements the client operation behavior.
  syntax:
    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: The operation description modified to support <xref href="System.ServiceModel.OperationBehaviorAttribute"></xref> properties.
    - id: proxy
      type: System.ServiceModel.Dispatcher.ClientOperation
      description: The extensibility access point to insert custom client modifications for this operation.
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  commentId: M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: IOperationBehavior.ApplyDispatchBehavior(OperationDescription, DispatchOperation)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.ApplyDispatchBehavior(OperationDescription, DispatchOperation)
  fullName: OperationBehaviorAttribute.IOperationBehavior.ApplyDispatchBehavior(OperationDescription, DispatchOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Implements the service operation behavior.
  syntax:
    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: The operation description modified to support <xref href="System.ServiceModel.OperationBehaviorAttribute"></xref> properties.
    - id: dispatch
      type: System.ServiceModel.Dispatcher.DispatchOperation
      description: The extensibility point to insert custom service modifications for this operation.
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  commentId: M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: IOperationBehavior.Validate(OperationDescription)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.Validate(OperationDescription)
  fullName: OperationBehaviorAttribute.IOperationBehavior.Validate(OperationDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Implements the validation behavior.
  syntax:
    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: The operation description to validate.
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: OperationBehaviorAttribute()
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()
  fullName: OperationBehaviorAttribute.OperationBehaviorAttribute()
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: OperationBehaviorAttribute.AutoDisposeParameters
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: OperationBehaviorAttribute.Impersonation
- uid: System.ServiceModel.ImpersonationOption
  parent: System.ServiceModel
  isExternal: false
  name: ImpersonationOption
  nameWithType: ImpersonationOption
  fullName: System.ServiceModel.ImpersonationOption
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: OperationBehaviorAttribute.ReleaseInstanceMode
- uid: System.ServiceModel.ReleaseInstanceMode
  parent: System.ServiceModel
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: ReleaseInstanceMode
  fullName: System.ServiceModel.ReleaseInstanceMode
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: OperationBehaviorAttribute.TransactionAutoComplete
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: OperationBehaviorAttribute.TransactionScopeRequired
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: IOperationBehavior.AddBindingParameters(OperationDescription, BindingParameterCollection)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.AddBindingParameters(OperationDescription, BindingParameterCollection)
  fullName: OperationBehaviorAttribute.IOperationBehavior.AddBindingParameters(OperationDescription, BindingParameterCollection)
- uid: System.ServiceModel.Description.OperationDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: IOperationBehavior.ApplyClientBehavior(OperationDescription, ClientOperation)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.ApplyClientBehavior(OperationDescription, ClientOperation)
  fullName: OperationBehaviorAttribute.IOperationBehavior.ApplyClientBehavior(OperationDescription, ClientOperation)
- uid: System.ServiceModel.Dispatcher.ClientOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ClientOperation
  nameWithType: ClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientOperation
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: IOperationBehavior.ApplyDispatchBehavior(OperationDescription, DispatchOperation)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.ApplyDispatchBehavior(OperationDescription, DispatchOperation)
  fullName: OperationBehaviorAttribute.IOperationBehavior.ApplyDispatchBehavior(OperationDescription, DispatchOperation)
- uid: System.ServiceModel.Dispatcher.DispatchOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: DispatchOperation
  nameWithType: DispatchOperation
  fullName: System.ServiceModel.Dispatcher.DispatchOperation
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: IOperationBehavior.Validate(OperationDescription)
  nameWithType: OperationBehaviorAttribute.IOperationBehavior.Validate(OperationDescription)
  fullName: OperationBehaviorAttribute.IOperationBehavior.Validate(OperationDescription)
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: OperationBehaviorAttribute
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute
  fullName: OperationBehaviorAttribute.OperationBehaviorAttribute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: OperationBehaviorAttribute.AutoDisposeParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: OperationBehaviorAttribute.Impersonation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: OperationBehaviorAttribute.ReleaseInstanceMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: OperationBehaviorAttribute.TransactionAutoComplete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: OperationBehaviorAttribute.TransactionScopeRequired
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  fullName: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  fullName: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  fullName: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate
  fullName: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationBehaviorAttribute.xml
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.ServiceModel.Description.IOperationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: IOperationBehavior
  nameWithType: IOperationBehavior
  fullName: System.ServiceModel.Description.IOperationBehavior
