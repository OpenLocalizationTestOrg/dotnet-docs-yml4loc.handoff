### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.HitTestFilterCallback
  commentId: T:System.Windows.Media.HitTestFilterCallback
  id: HitTestFilterCallback
  langs:
  - csharp
  name: HitTestFilterCallback
  nameWithType: HitTestFilterCallback
  fullName: System.Windows.Media.HitTestFilterCallback
  type: Delegate
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Represents the callback method that specifies parts of the visual tree to omit from hit test processing
  remarks: "The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree. However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function. The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take. For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration. This means that the hit test results callback method will not see these objects in its enumeration.  \n  \n> [!NOTE]\n>  Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.  \n  \n ![Pruning a visual tree using a hit test filter](~/add/media/filteredvisualtree-01.png \"Pruning a visual tree using a hit test filter\")  \nPruning a visual tree"
  example:
  - "The following example shows how to invoke <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> by using a <xref:System.Windows.Media.HitTestFilterCallback> value. The corresponding hit test callback method is also defined.  \n  \n [!code-csharp[HitTestingOverview#104](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#104)]\n [!code-vb[HitTestingOverview#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#104)]  \n  \n The following example shows how to return a <xref:System.Windows.Media.HitTestFilterBehavior> value from a hit test filter callback method.  \n  \n [!code-csharp[HitTestingOverview#106](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#106)]\n [!code-vb[HitTestingOverview#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#106)]"
  syntax:
    content: public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);
  inheritance:
  - System.Object
  - System.Delegate
  extensionMethods:
  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/HitTestFilterCallback.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
references:
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  parent: System.Reflection.RuntimeReflectionExtensions
  isExternal: false
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
