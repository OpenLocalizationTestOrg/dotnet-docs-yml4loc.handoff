{"nodes":[{"content":"Contains information used to uniquely identify a manifest-based application. This class cannot be inherited.","nodes":[{"pos":[0,108],"content":"Contains information used to uniquely identify a manifest-based application. This class cannot be inherited.","nodes":[{"content":"Contains information used to uniquely identify a manifest-based application. This class cannot be inherited.","pos":[0,108],"nodes":[{"content":"Contains information used to uniquely identify a manifest-based application.","pos":[0,76]},{"content":"This class cannot be inherited.","pos":[77,108]}]}]}],"pos":[789,898],"yaml":true},{"content":"An application identity consists of the publisher's public key, the application name, the target processor architecture, the application culture, and the application version. The application identity properties values correspond to information contained in the application manifest. For more information about the application manifest, see [ClickOnce Application Manifest](http://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243).  \n  \n <xref:System.ApplicationId> is used by the <xref:System.Security.Policy.ApplicationSecurityInfo> class to identify a manifest-based application.","nodes":[{"pos":[0,445],"content":"An application identity consists of the publisher's public key, the application name, the target processor architecture, the application culture, and the application version. The application identity properties values correspond to information contained in the application manifest. For more information about the application manifest, see [ClickOnce Application Manifest](http://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243).","nodes":[{"content":"An application identity consists of the publisher's public key, the application name, the target processor architecture, the application culture, and the application version.","pos":[0,174]},{"content":"The application identity properties values correspond to information contained in the application manifest.","pos":[175,282]},{"content":"For more information about the application manifest, see <bpt id=\"p1\">[</bpt>ClickOnce Application Manifest<ept id=\"p1\">](http://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243)</ept>.","pos":[283,445],"source":" For more information about the application manifest, see [ClickOnce Application Manifest](http://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243)."}]},{"pos":[452,596],"content":"<xref:System.ApplicationId> is used by the <xref:System.Security.Policy.ApplicationSecurityInfo> class to identify a manifest-based application.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ApplicationId&gt;</ph> is used by the <ph id=\"ph2\">&lt;xref:System.Security.Policy.ApplicationSecurityInfo&gt;</ph> class to identify a manifest-based application.","pos":[0,144],"source":"<xref:System.ApplicationId> is used by the <xref:System.Security.Policy.ApplicationSecurityInfo> class to identify a manifest-based application."}]}],"pos":[909,1510],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ApplicationId\"></xref> class.","nodes":[{"pos":[0,82],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ApplicationId\"></xref> class."}],"pos":[3987,4070],"yaml":true},{"content":"The constructor initializes the <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, and <xref:System.ApplicationId.Version%2A> properties of the <xref:System.ApplicationId>.","nodes":[{"pos":[0,299],"content":"The constructor initializes the <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, and <xref:System.ApplicationId.Version%2A> properties of the <xref:System.ApplicationId>.","nodes":[{"content":"The constructor initializes the <ph id=\"ph1\">&lt;xref:System.ApplicationId.Culture%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ApplicationId.Name%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ApplicationId.ProcessorArchitecture%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ApplicationId.PublicKeyToken%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.ApplicationId.Version%2A&gt;</ph> properties of the <ph id=\"ph6\">&lt;xref:System.ApplicationId&gt;</ph>.","pos":[0,299],"source":"The constructor initializes the <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, and <xref:System.ApplicationId.Version%2A> properties of the <xref:System.ApplicationId>."}]}],"pos":[4081,4381],"yaml":true,"extradata":"MT"},{"content":"The array of bytes representing the raw public key data.","nodes":[{"pos":[0,56],"content":"The array of bytes representing the raw public key data.","nodes":[{"content":"The array of bytes representing the raw public key data.","pos":[0,56]}]}],"pos":[4612,4669],"yaml":true},{"content":"The name of the application.","nodes":[{"pos":[0,28],"content":"The name of the application.","nodes":[{"content":"The name of the application.","pos":[0,28]}]}],"pos":[4729,4758],"yaml":true},{"content":"A <xref href=\"System.Version\"></xref> object that specifies the version of the application.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> object that specifies the version of the application.","source":"A <xref href=\"System.Version\"></xref> object that specifies the version of the application."}],"pos":[4822,4914],"yaml":true},{"content":"The processor architecture of the application.","nodes":[{"pos":[0,46],"content":"The processor architecture of the application.","nodes":[{"content":"The processor architecture of the application.","pos":[0,46]}]}],"pos":[4991,5038],"yaml":true},{"content":"The culture of the application.","nodes":[{"pos":[0,31],"content":"The culture of the application.","nodes":[{"content":"The culture of the application.","pos":[0,31]}]}],"pos":[5101,5133],"yaml":true},{"content":"<code>name</code> is `null`.  \n  \n -or-  \n  \n <code>version</code> is `null`.  \n  \n -or-  \n  \n <code>publicKeyToken</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,77],"content":"<ph id=\"ph1\">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>version</code> is `null`."},{"pos":[84,88],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[95,133],"content":"<ph id=\"ph1\">&lt;code&gt;publicKeyToken&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>publicKeyToken</code> is `null`."}],"pos":[5289,5433],"yaml":true},{"content":"<code>name</code> is an empty string.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string.","source":"<code>name</code> is an empty string."}],"pos":[5527,5565],"yaml":true},{"content":"Creates and returns an identical copy of the current application identity.","nodes":[{"pos":[0,74],"content":"Creates and returns an identical copy of the current application identity.","nodes":[{"content":"Creates and returns an identical copy of the current application identity.","pos":[0,74]}]}],"pos":[6622,6697],"yaml":true},{"content":"The copy returned by this method is equal to the original as substantiated by the <xref:System.ApplicationId.Equals%2A> method. The hash codes for the original and the copy are also equal.","nodes":[{"pos":[0,188],"content":"The copy returned by this method is equal to the original as substantiated by the <xref:System.ApplicationId.Equals%2A> method. The hash codes for the original and the copy are also equal.","nodes":[{"content":"The copy returned by this method is equal to the original as substantiated by the <xref:System.ApplicationId.Equals%2A> method. The hash codes for the original and the copy are also equal.","pos":[0,188],"nodes":[{"content":"The copy returned by this method is equal to the original as substantiated by the <ph id=\"ph1\">&lt;xref:System.ApplicationId.Equals%2A&gt;</ph> method.","pos":[0,127],"source":"The copy returned by this method is equal to the original as substantiated by the <xref:System.ApplicationId.Equals%2A> method."},{"content":"The hash codes for the original and the copy are also equal.","pos":[128,188]}]}]}],"pos":[6708,6897],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ApplicationId\"></xref> object that represents an exact copy of the original.","nodes":[{"pos":[0,98],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph> object that represents an exact copy of the original.","source":"An <xref href=\"System.ApplicationId\"></xref> object that represents an exact copy of the original."}],"pos":[7033,7132],"yaml":true},{"content":"Gets a string representing the culture information for the application.","nodes":[{"pos":[0,71],"content":"Gets a string representing the culture information for the application.","nodes":[{"content":"Gets a string representing the culture information for the application.","pos":[0,71]}]}],"pos":[8259,8331],"yaml":true},{"content":"The <xref:System.ApplicationId.Culture%2A> value can include language information, for example, \"en-US\".  \n  \n For information about culture values, see <xref:System.Globalization.CultureInfo>.","nodes":[{"pos":[0,104],"content":"The <xref:System.ApplicationId.Culture%2A> value can include language information, for example, \"en-US\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ApplicationId.Culture%2A&gt;</ph> value can include language information, for example, \"en-US\".","pos":[0,104],"source":"The <xref:System.ApplicationId.Culture%2A> value can include language information, for example, \"en-US\"."}]},{"pos":[111,193],"content":"For information about culture values, see <xref:System.Globalization.CultureInfo>.","nodes":[{"content":"For information about culture values, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.","pos":[0,82],"source":"For information about culture values, see <xref:System.Globalization.CultureInfo>."}]}],"pos":[8342,8542],"yaml":true,"extradata":"MT"},{"content":"The culture information for the application.","nodes":[{"pos":[0,44],"content":"The culture information for the application.","nodes":[{"content":"The culture information for the application.","pos":[0,44]}]}],"pos":[9366,9411],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.ApplicationId\"></xref> object is equivalent to the current <xref href=\"System.ApplicationId\"></xref>.","nodes":[{"pos":[0,153],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph> object is equivalent to the current <ph id=\"ph2\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the specified <xref href=\"System.ApplicationId\"></xref> object is equivalent to the current <xref href=\"System.ApplicationId\"></xref>."}],"pos":[10602,10756],"yaml":true},{"content":"This method overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName> method.","nodes":[{"pos":[0,105],"content":"This method overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName> method.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method.","pos":[0,105],"source":"This method overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName> method."}]}],"pos":[10767,10873],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ApplicationId\"></xref> object to compare to the current <xref href=\"System.ApplicationId\"></xref>.","nodes":[{"pos":[0,121],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph> object to compare to the current <ph id=\"ph2\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ApplicationId\"></xref> object to compare to the current <xref href=\"System.ApplicationId\"></xref>."}],"pos":[11009,11131],"yaml":true},{"content":"`true` if the specified <xref href=\"System.ApplicationId\"></xref> object is equivalent to the current <xref href=\"System.ApplicationId\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,164],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph> object is equivalent to the current <ph id=\"ph3\">&lt;xref href=\"System.ApplicationId\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.ApplicationId\"></xref> object is equivalent to the current <xref href=\"System.ApplicationId\"></xref>; otherwise, `false`."}],"pos":[11189,11356],"yaml":true},{"content":"Gets the hash code for the current application identity.","nodes":[{"pos":[0,56],"content":"Gets the hash code for the current application identity.","nodes":[{"content":"Gets the hash code for the current application identity.","pos":[0,56]}]}],"pos":[12513,12570],"yaml":true},{"content":"This method generates the same hash code for two objects that have the same values for their <xref:System.ApplicationId.Name%2A> and <xref:System.ApplicationId.Version%2A> properties.","nodes":[{"pos":[0,183],"content":"This method generates the same hash code for two objects that have the same values for their <xref:System.ApplicationId.Name%2A> and <xref:System.ApplicationId.Version%2A> properties.","nodes":[{"content":"This method generates the same hash code for two objects that have the same values for their <ph id=\"ph1\">&lt;xref:System.ApplicationId.Name%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ApplicationId.Version%2A&gt;</ph> properties.","pos":[0,183],"source":"This method generates the same hash code for two objects that have the same values for their <xref:System.ApplicationId.Name%2A> and <xref:System.ApplicationId.Version%2A> properties."}]}],"pos":[12581,12765],"yaml":true,"extradata":"MT"},{"content":"The hash code for the current application identity.","nodes":[{"pos":[0,51],"content":"The hash code for the current application identity.","nodes":[{"content":"The hash code for the current application identity.","pos":[0,51]}]}],"pos":[12899,12951],"yaml":true},{"content":"Gets the name of the application.","nodes":[{"pos":[0,33],"content":"Gets the name of the application.","nodes":[{"content":"Gets the name of the application.","pos":[0,33]}]}],"pos":[14067,14101],"yaml":true},{"content":"<xref:System.ApplicationId.Name%2A> is the simple, unencrypted name of the application.","nodes":[{"pos":[0,87],"content":"<xref:System.ApplicationId.Name%2A> is the simple, unencrypted name of the application.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ApplicationId.Name%2A&gt;</ph> is the simple, unencrypted name of the application.","pos":[0,87],"source":"<xref:System.ApplicationId.Name%2A> is the simple, unencrypted name of the application."}]}],"pos":[14112,14200],"yaml":true,"extradata":"MT"},{"content":"The name of the application.","nodes":[{"pos":[0,28],"content":"The name of the application.","nodes":[{"content":"The name of the application.","pos":[0,28]}]}],"pos":[15017,15046],"yaml":true},{"content":"Gets the target processor architecture for the application.","nodes":[{"pos":[0,59],"content":"Gets the target processor architecture for the application.","nodes":[{"content":"Gets the target processor architecture for the application.","pos":[0,59]}]}],"pos":[16257,16317],"yaml":true},{"content":"Valid values include \"msil\", \"x86\", \"ia64\", and \"amd64\". The default is \"msil\", or Microsoft intermediate language, which means all your assemblies are platform independent, and the common language runtime will compile them when they are needed by your application.","nodes":[{"pos":[0,265],"content":"Valid values include \"msil\", \"x86\", \"ia64\", and \"amd64\". The default is \"msil\", or Microsoft intermediate language, which means all your assemblies are platform independent, and the common language runtime will compile them when they are needed by your application.","nodes":[{"content":"Valid values include \"msil\", \"x86\", \"ia64\", and \"amd64\". The default is \"msil\", or Microsoft intermediate language, which means all your assemblies are platform independent, and the common language runtime will compile them when they are needed by your application.","pos":[0,265],"nodes":[{"content":"Valid values include \"msil\", \"x86\", \"ia64\", and \"amd64\".","pos":[0,56]},{"content":"The default is \"msil\", or Microsoft intermediate language, which means all your assemblies are platform independent, and the common language runtime will compile them when they are needed by your application.","pos":[57,265]}]}]}],"pos":[16328,16594],"yaml":true,"extradata":"MT"},{"content":"The processor architecture of the application.","nodes":[{"pos":[0,46],"content":"The processor architecture of the application.","nodes":[{"content":"The processor architecture of the application.","pos":[0,46]}]}],"pos":[17446,17493],"yaml":true},{"content":"Gets the public key token for the application.","nodes":[{"pos":[0,46],"content":"Gets the public key token for the application.","nodes":[{"content":"Gets the public key token for the application.","pos":[0,46]}]}],"pos":[18679,18726],"yaml":true},{"content":"The public key token is represented by the last 8 bytes of the SHA-1 hash of the public key under which the application is signed.  \n  \n For more information, see <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>.","nodes":[{"pos":[0,130],"content":"The public key token is represented by the last 8 bytes of the SHA-1 hash of the public key under which the application is signed.","nodes":[{"content":"The public key token is represented by the last 8 bytes of the SHA-1 hash of the public key under which the application is signed.","pos":[0,130]}]},{"pos":[137,247],"content":"For more information, see <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName&gt;</ph>.","pos":[0,110],"source":"For more information, see <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>."}]}],"pos":[18737,18989],"yaml":true,"extradata":"MT"},{"content":"A byte array containing the public key token for the application.","nodes":[{"pos":[0,65],"content":"A byte array containing the public key token for the application.","nodes":[{"content":"A byte array containing the public key token for the application.","pos":[0,65]}]}],"pos":[19830,19896],"yaml":true},{"content":"Creates and returns a string representation of the application identity.","nodes":[{"pos":[0,72],"content":"Creates and returns a string representation of the application identity.","nodes":[{"content":"Creates and returns a string representation of the application identity.","pos":[0,72]}]}],"pos":[21043,21116],"yaml":true},{"content":"This method overrides the <xref:System.Object.ToString%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,91],"content":"This method overrides the <xref:System.Object.ToString%2A?displayProperty=fullName> method.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.Object.ToString%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,91],"source":"This method overrides the <xref:System.Object.ToString%2A?displayProperty=fullName> method."}]}],"pos":[21127,21219],"yaml":true,"extradata":"MT"},{"content":"A string representation of the application identity.","nodes":[{"pos":[0,52],"content":"A string representation of the application identity.","nodes":[{"content":"A string representation of the application identity.","pos":[0,52]}]}],"pos":[21354,21407],"yaml":true},{"content":"Gets the version of the application.","nodes":[{"pos":[0,36],"content":"Gets the version of the application.","nodes":[{"content":"Gets the version of the application.","pos":[0,36]}]}],"pos":[22538,22575],"yaml":true},{"content":"For more information, see <xref:System.Version?displayProperty=fullName>.","nodes":[{"pos":[0,73],"content":"For more information, see <xref:System.Version?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Version?displayProperty=fullName&gt;</ph>.","pos":[0,73],"source":"For more information, see <xref:System.Version?displayProperty=fullName>."}]}],"pos":[22586,22660],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Version\"></xref> that specifies the version of the application.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Version\"&gt;&lt;/xref&gt;</ph> that specifies the version of the application.","source":"A <xref href=\"System.Version\"></xref> that specifies the version of the application."}],"pos":[23489,23574],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ApplicationId\n  commentId: T:System.ApplicationId\n  id: ApplicationId\n  children:\n  - System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)\n  - System.ApplicationId.Copy\n  - System.ApplicationId.Culture\n  - System.ApplicationId.Equals(System.Object)\n  - System.ApplicationId.GetHashCode\n  - System.ApplicationId.Name\n  - System.ApplicationId.ProcessorArchitecture\n  - System.ApplicationId.PublicKeyToken\n  - System.ApplicationId.ToString\n  - System.ApplicationId.Version\n  langs:\n  - csharp\n  name: ApplicationId\n  nameWithType: ApplicationId\n  fullName: System.ApplicationId\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Contains information used to uniquely identify a manifest-based application. This class cannot be inherited.\n  remarks: \"An application identity consists of the publisher's public key, the application name, the target processor architecture, the application culture, and the application version. The application identity properties values correspond to information contained in the application manifest. For more information about the application manifest, see [ClickOnce Application Manifest](http://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243).  \\n  \\n <xref:System.ApplicationId> is used by the <xref:System.Security.Policy.ApplicationSecurityInfo> class to identify a manifest-based application.\"\n  example:\n  - \"The following code example displays the <xref:System.ApplicationId> properties by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  \\n  \\n [!code-csharp[System.ApplicationIdentity#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#1)]\\n [!code-vb[System.ApplicationIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ApplicationId\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)\n  commentId: M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)\n  id: '#ctor(System.Byte[],System.String,System.Version,System.String,System.String)'\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: ApplicationId(Byte[], String, Version, String, String)\n  nameWithType: ApplicationId.ApplicationId(Byte[], String, Version, String, String)\n  fullName: ApplicationId.ApplicationId(Byte[], String, Version, String, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.ApplicationId\"></xref> class.\n  remarks: The constructor initializes the <xref:System.ApplicationId.Culture%2A>, <xref:System.ApplicationId.Name%2A>, <xref:System.ApplicationId.ProcessorArchitecture%2A>, <xref:System.ApplicationId.PublicKeyToken%2A>, and <xref:System.ApplicationId.Version%2A> properties of the <xref:System.ApplicationId>.\n  syntax:\n    content: public ApplicationId (byte[] publicKeyToken, string name, Version version, string processorArchitecture, string culture);\n    parameters:\n    - id: publicKeyToken\n      type: System.Byte[]\n      description: The array of bytes representing the raw public key data.\n    - id: name\n      type: System.String\n      description: The name of the application.\n    - id: version\n      type: System.Version\n      description: A <xref href=\"System.Version\"></xref> object that specifies the version of the application.\n    - id: processorArchitecture\n      type: System.String\n      description: The processor architecture of the application.\n    - id: culture\n      type: System.String\n      description: The culture of the application.\n  overload: System.ApplicationId.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>name</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>version</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>publicKeyToken</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is an empty string.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.Copy\n  commentId: M:System.ApplicationId.Copy\n  id: Copy\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ApplicationId.Copy()\n  fullName: ApplicationId.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Creates and returns an identical copy of the current application identity.\n  remarks: The copy returned by this method is equal to the original as substantiated by the <xref:System.ApplicationId.Equals%2A> method. The hash codes for the original and the copy are also equal.\n  syntax:\n    content: public ApplicationId Copy ();\n    parameters: []\n    return:\n      type: System.ApplicationId\n      description: An <xref href=\"System.ApplicationId\"></xref> object that represents an exact copy of the original.\n  overload: System.ApplicationId.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.Culture\n  commentId: P:System.ApplicationId.Culture\n  id: Culture\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: Culture\n  nameWithType: ApplicationId.Culture\n  fullName: ApplicationId.Culture\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets a string representing the culture information for the application.\n  remarks: \"The <xref:System.ApplicationId.Culture%2A> value can include language information, for example, \\\"en-US\\\".  \\n  \\n For information about culture values, see <xref:System.Globalization.CultureInfo>.\"\n  example:\n  - \"The following code example displays the <xref:System.ApplicationId.Culture%2A> property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \\n  \\n [!code-csharp[System.ApplicationIdentity#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#8)]\\n [!code-vb[System.ApplicationIdentity#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#8)]\"\n  syntax:\n    content: public string Culture { get; }\n    return:\n      type: System.String\n      description: The culture information for the application.\n  overload: System.ApplicationId.Culture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.Equals(System.Object)\n  commentId: M:System.ApplicationId.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ApplicationId.Equals(Object)\n  fullName: ApplicationId.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Determines whether the specified <xref href=\"System.ApplicationId\"></xref> object is equivalent to the current <xref href=\"System.ApplicationId\"></xref>.\n  remarks: This method overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName> method.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.ApplicationId\"></xref> object to compare to the current <xref href=\"System.ApplicationId\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.ApplicationId\"></xref> object is equivalent to the current <xref href=\"System.ApplicationId\"></xref>; otherwise, `false`.'\n  overload: System.ApplicationId.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.GetHashCode\n  commentId: M:System.ApplicationId.GetHashCode\n  id: GetHashCode\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ApplicationId.GetHashCode()\n  fullName: ApplicationId.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets the hash code for the current application identity.\n  remarks: This method generates the same hash code for two objects that have the same values for their <xref:System.ApplicationId.Name%2A> and <xref:System.ApplicationId.Version%2A> properties.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current application identity.\n  overload: System.ApplicationId.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.Name\n  commentId: P:System.ApplicationId.Name\n  id: Name\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ApplicationId.Name\n  fullName: ApplicationId.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets the name of the application.\n  remarks: <xref:System.ApplicationId.Name%2A> is the simple, unencrypted name of the application.\n  example:\n  - \"The following code example displays the <xref:System.ApplicationId.Name%2A> property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \\n  \\n [!code-csharp[System.ApplicationIdentity#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#7)]\\n [!code-vb[System.ApplicationIdentity#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#7)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the application.\n  overload: System.ApplicationId.Name*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.ProcessorArchitecture\n  commentId: P:System.ApplicationId.ProcessorArchitecture\n  id: ProcessorArchitecture\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: ProcessorArchitecture\n  nameWithType: ApplicationId.ProcessorArchitecture\n  fullName: ApplicationId.ProcessorArchitecture\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets the target processor architecture for the application.\n  remarks: Valid values include \"msil\", \"x86\", \"ia64\", and \"amd64\". The default is \"msil\", or Microsoft intermediate language, which means all your assemblies are platform independent, and the common language runtime will compile them when they are needed by your application.\n  example:\n  - \"The following code example displays the <xref:System.ApplicationId.ProcessorArchitecture%2A> property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application.  This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \\n  \\n [!code-csharp[System.ApplicationIdentity#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#9)]\\n [!code-vb[System.ApplicationIdentity#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#9)]\"\n  syntax:\n    content: public string ProcessorArchitecture { get; }\n    return:\n      type: System.String\n      description: The processor architecture of the application.\n  overload: System.ApplicationId.ProcessorArchitecture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.PublicKeyToken\n  commentId: P:System.ApplicationId.PublicKeyToken\n  id: PublicKeyToken\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: PublicKeyToken\n  nameWithType: ApplicationId.PublicKeyToken\n  fullName: ApplicationId.PublicKeyToken\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets the public key token for the application.\n  remarks: \"The public key token is represented by the last 8 bytes of the SHA-1 hash of the public key under which the application is signed.  \\n  \\n For more information, see <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following code example displays the <xref:System.ApplicationId.PublicKeyToken%2A> property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \\n  \\n [!code-csharp[System.ApplicationIdentity#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#11)]\\n [!code-vb[System.ApplicationIdentity#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#11)]\"\n  syntax:\n    content: public byte[] PublicKeyToken { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array containing the public key token for the application.\n  overload: System.ApplicationId.PublicKeyToken*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.ToString\n  commentId: M:System.ApplicationId.ToString\n  id: ToString\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ApplicationId.ToString()\n  fullName: ApplicationId.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Creates and returns a string representation of the application identity.\n  remarks: This method overrides the <xref:System.Object.ToString%2A?displayProperty=fullName> method.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the application identity.\n  overload: System.ApplicationId.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ApplicationId.Version\n  commentId: P:System.ApplicationId.Version\n  id: Version\n  parent: System.ApplicationId\n  langs:\n  - csharp\n  name: Version\n  nameWithType: ApplicationId.Version\n  fullName: ApplicationId.Version\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Gets the version of the application.\n  remarks: For more information, see <xref:System.Version?displayProperty=fullName>.\n  example:\n  - \"The following code example displays the <xref:System.ApplicationId.Version%2A> property by obtaining the <xref:System.ApplicationId> from an <xref:System.Security.Policy.ApplicationSecurityInfo> instance created using the <xref:System.ActivationContext> for the currently executing manifest-based application. This code example is part of a larger example provided for the <xref:System.ApplicationId> class.  \\n  \\n [!code-csharp[System.ApplicationIdentity#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ApplicationIdentity/CS/program.cs#10)]\\n [!code-vb[System.ApplicationIdentity#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ApplicationIdentity/VB/program.vb#10)]\"\n  syntax:\n    content: public Version Version { get; }\n    return:\n      type: System.Version\n      description: A <xref href=\"System.Version\"></xref> that specifies the version of the application.\n  overload: System.ApplicationId.Version*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)\n  parent: System.ApplicationId\n  isExternal: false\n  name: ApplicationId(Byte[], String, Version, String, String)\n  nameWithType: ApplicationId.ApplicationId(Byte[], String, Version, String, String)\n  fullName: ApplicationId.ApplicationId(Byte[], String, Version, String, String)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.ApplicationId.Copy\n  parent: System.ApplicationId\n  isExternal: false\n  name: Copy()\n  nameWithType: ApplicationId.Copy()\n  fullName: ApplicationId.Copy()\n- uid: System.ApplicationId\n  parent: System\n  isExternal: false\n  name: ApplicationId\n  nameWithType: ApplicationId\n  fullName: System.ApplicationId\n- uid: System.ApplicationId.Culture\n  parent: System.ApplicationId\n  isExternal: false\n  name: Culture\n  nameWithType: ApplicationId.Culture\n  fullName: ApplicationId.Culture\n- uid: System.ApplicationId.Equals(System.Object)\n  parent: System.ApplicationId\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ApplicationId.Equals(Object)\n  fullName: ApplicationId.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ApplicationId.GetHashCode\n  parent: System.ApplicationId\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ApplicationId.GetHashCode()\n  fullName: ApplicationId.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ApplicationId.Name\n  parent: System.ApplicationId\n  isExternal: false\n  name: Name\n  nameWithType: ApplicationId.Name\n  fullName: ApplicationId.Name\n- uid: System.ApplicationId.ProcessorArchitecture\n  parent: System.ApplicationId\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: ApplicationId.ProcessorArchitecture\n  fullName: ApplicationId.ProcessorArchitecture\n- uid: System.ApplicationId.PublicKeyToken\n  parent: System.ApplicationId\n  isExternal: false\n  name: PublicKeyToken\n  nameWithType: ApplicationId.PublicKeyToken\n  fullName: ApplicationId.PublicKeyToken\n- uid: System.ApplicationId.ToString\n  parent: System.ApplicationId\n  isExternal: false\n  name: ToString()\n  nameWithType: ApplicationId.ToString()\n  fullName: ApplicationId.ToString()\n- uid: System.ApplicationId.Version\n  parent: System.ApplicationId\n  isExternal: false\n  name: Version\n  nameWithType: ApplicationId.Version\n  fullName: ApplicationId.Version\n- uid: System.ApplicationId.#ctor*\n  parent: System.ApplicationId\n  isExternal: false\n  name: ApplicationId\n  nameWithType: ApplicationId.ApplicationId\n  fullName: ApplicationId.ApplicationId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.Copy*\n  parent: System.ApplicationId\n  isExternal: false\n  name: Copy\n  nameWithType: ApplicationId.Copy\n  fullName: ApplicationId.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.Culture*\n  parent: System.ApplicationId\n  isExternal: false\n  name: Culture\n  nameWithType: ApplicationId.Culture\n  fullName: ApplicationId.Culture\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.Equals*\n  parent: System.ApplicationId\n  isExternal: false\n  name: Equals\n  nameWithType: ApplicationId.Equals\n  fullName: ApplicationId.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.GetHashCode*\n  parent: System.ApplicationId\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ApplicationId.GetHashCode\n  fullName: ApplicationId.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.Name*\n  parent: System.ApplicationId\n  isExternal: false\n  name: Name\n  nameWithType: ApplicationId.Name\n  fullName: ApplicationId.Name\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.ProcessorArchitecture*\n  parent: System.ApplicationId\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: ApplicationId.ProcessorArchitecture\n  fullName: ApplicationId.ProcessorArchitecture\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.PublicKeyToken*\n  parent: System.ApplicationId\n  isExternal: false\n  name: PublicKeyToken\n  nameWithType: ApplicationId.PublicKeyToken\n  fullName: ApplicationId.PublicKeyToken\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.ToString*\n  parent: System.ApplicationId\n  isExternal: false\n  name: ToString\n  nameWithType: ApplicationId.ToString\n  fullName: ApplicationId.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.ApplicationId.Version*\n  parent: System.ApplicationId\n  isExternal: false\n  name: Version\n  nameWithType: ApplicationId.Version\n  fullName: ApplicationId.Version\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ApplicationId.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}