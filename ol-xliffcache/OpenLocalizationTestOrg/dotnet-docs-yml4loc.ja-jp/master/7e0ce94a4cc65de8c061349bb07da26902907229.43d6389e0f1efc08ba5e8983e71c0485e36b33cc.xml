{"nodes":[{"content":"Represents a user or group account.","nodes":[{"pos":[0,35],"content":"Represents a user or group account.","nodes":[{"content":"Represents a user or group account.","pos":[0,35]}]}],"pos":[1130,1166],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified name.","nodes":[{"pos":[0,125],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> class by using the specified name.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified name."}],"pos":[3231,3357],"yaml":true},{"content":"The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.","nodes":[{"pos":[0,234],"content":"The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.","nodes":[{"content":"The specified name is not required to correspond to an existing account or group, but translation into other <ph id=\"ph1\">&lt;xref:System.Security.Principal.IdentityReference&gt;</ph>-derived types will not be possible unless the account or group does exist.","pos":[0,234],"source":"The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist."}]}],"pos":[3368,3603],"yaml":true,"extradata":"MT"},{"content":"The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object. This parameter cannot be `null` or an empty string.","nodes":[{"pos":[0,144],"content":"The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object. This parameter cannot be `null` or an empty string.","nodes":[{"content":"The name used to create the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,92],"source":"The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"content":"This parameter cannot be <ph id=\"ph1\">`null`</ph> or an empty string.","pos":[93,144],"source":" This parameter cannot be `null` or an empty string."}]}],"pos":[3734,3879],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[4050,4079],"yaml":true},{"content":"<code>name</code> is an empty string.  \n  \n -or-  \n  \n <code>name</code> is too long.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string.","source":"<code>name</code> is an empty string."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,85],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is too long.","source":"<code>name</code> is too long."}],"pos":[4173,4265],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified domain name and account name.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> class by using the specified domain name and account name.","source":"Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified domain name and account name."}],"pos":[5560,5710],"yaml":true},{"content":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.","nodes":[{"pos":[0,255],"content":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.","nodes":[{"content":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other <ph id=\"ph1\">&lt;xref:System.Security.Principal.IdentityReference&gt;</ph>-derived types will not be possible unless the account or group does exist.","pos":[0,255],"source":"The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist."}]}],"pos":[5721,5977],"yaml":true,"extradata":"MT"},{"content":"The name of the domain. This parameter can be `null` or an empty string. Domain names that are null values are treated like an empty string.","nodes":[{"pos":[0,140],"content":"The name of the domain. This parameter can be `null` or an empty string. Domain names that are null values are treated like an empty string.","nodes":[{"content":"The name of the domain.","pos":[0,23]},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph> or an empty string.","pos":[24,72],"source":" This parameter can be `null` or an empty string."},{"content":"Domain names that are null values are treated like an empty string.","pos":[73,140]}]}],"pos":[6140,6281],"yaml":true},{"content":"The name of the account. This parameter cannot be `null` or an empty string.","nodes":[{"pos":[0,76],"content":"The name of the account. This parameter cannot be `null` or an empty string.","nodes":[{"content":"The name of the account.","pos":[0,24]},{"content":"This parameter cannot be <ph id=\"ph1\">`null`</ph> or an empty string.","pos":[25,76],"source":" This parameter cannot be `null` or an empty string."}]}],"pos":[6348,6425],"yaml":true},{"content":"<code>accountName</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;accountName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>accountName</code> is `null`."}],"pos":[6596,6632],"yaml":true},{"content":"<code>accountName</code> is an empty string.  \n  \n -or-  \n  \n <code>accountName</code> is too long.  \n  \n -or-  \n  \n <code>domainName</code> is too long.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;accountName&lt;/code&gt;</ph> is an empty string.","source":"<code>accountName</code> is an empty string."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,99],"content":"<ph id=\"ph1\">&lt;code&gt;accountName&lt;/code&gt;</ph> is too long.","source":"<code>accountName</code> is too long."},{"pos":[106,110],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[117,153],"content":"<ph id=\"ph1\">&lt;code&gt;domainName&lt;/code&gt;</ph> is too long.","source":"<code>domainName</code> is too long."}],"pos":[6726,6890],"yaml":true},{"content":"Returns a value that indicates whether this <xref href=\"System.Security.Principal.NTAccount\"></xref> object is equal to a specified object.","nodes":[{"pos":[0,139],"content":"Returns a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object is equal to a specified object.","source":"Returns a value that indicates whether this <xref href=\"System.Security.Principal.NTAccount\"></xref> object is equal to a specified object."}],"pos":[8106,8246],"yaml":true},{"content":"An object to compare with this <xref href=\"System.Security.Principal.NTAccount\"></xref> object, or `null`.","nodes":[{"pos":[0,106],"content":"An object to compare with this <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph2\">`null`</ph>.","source":"An object to compare with this <xref href=\"System.Security.Principal.NTAccount\"></xref> object, or `null`."}],"pos":[8382,8489],"yaml":true},{"content":"`true` if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.NTAccount\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,170],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an object with the same underlying type and value as this <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.NTAccount\"></xref> object; otherwise, `false`."}],"pos":[8547,8720],"yaml":true},{"content":"Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object. The <xref href=\"System.Security.Principal.NTAccount.GetHashCode\"></xref> method is suitable for hashing algorithms and data structures like a hash table.","nodes":[{"pos":[0,260],"content":"Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object. The <xref href=\"System.Security.Principal.NTAccount.GetHashCode\"></xref> method is suitable for hashing algorithms and data structures like a hash table.","nodes":[{"content":"Serves as a hash function for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,106],"source":"Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount.GetHashCode\"&gt;&lt;/xref&gt;</ph> method is suitable for hashing algorithms and data structures like a hash table.","pos":[107,260],"source":" The <xref href=\"System.Security.Principal.NTAccount.GetHashCode\"></xref> method is suitable for hashing algorithms and data structures like a hash table."}]}],"pos":[9976,10237],"yaml":true},{"content":"A hash value for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object.","nodes":[{"pos":[0,93],"content":"A hash value for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash value for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object."}],"pos":[10371,10465],"yaml":true},{"content":"Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class.","nodes":[{"pos":[0,157],"content":"Returns a value that indicates whether the specified type is a valid translation type for the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> class.","source":"Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class."}],"pos":[11813,11971],"yaml":true},{"content":"The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>","nodes":[{"pos":[0,161],"content":"The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The following target types are valid:","nodes":[{"content":"The type being queried for validity to serve as a conversion from <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph>.","pos":[0,123],"source":"The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>."},{"content":"The following target types are valid:","pos":[124,161]}]},{"pos":[168,227],"content":"<ph id=\"ph1\">\\-</ph> <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph>","source":"\\- <xref href=\"System.Security.Principal.NTAccount\"></xref>"},{"pos":[234,302],"content":"<ph id=\"ph1\">\\-</ph> <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>","source":"\\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"}],"pos":[12132,12449],"yaml":true},{"content":"`true` if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class; otherwise `false`.","nodes":[{"pos":[0,152],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">targetType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a valid translation type for the <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> class; otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class; otherwise `false`."}],"pos":[12507,12662],"yaml":true},{"content":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if they are both `null`.","nodes":[{"pos":[0,319],"content":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if they are both `null`.","nodes":[{"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> objects to determine whether they are equal.","pos":[0,114],"source":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal."},{"content":"They are considered equal if they have the same canonical name representation as the one returned by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount.Value\"&gt;&lt;/xref&gt;</ph> property or if they are both <ph id=\"ph2\">`null`</ph>.","pos":[115,319],"source":" They are considered equal if they have the same canonical name representation as the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if they are both `null`."}]}],"pos":[14210,14530],"yaml":true},{"content":"The left operand to use for the equality comparison. This parameter can be `null`.","nodes":[{"pos":[0,82],"content":"The left operand to use for the equality comparison. This parameter can be `null`.","nodes":[{"content":"The left operand to use for the equality comparison.","pos":[0,52]},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[53,82],"source":" This parameter can be `null`."}]}],"pos":[14769,14852],"yaml":true},{"content":"The right operand to use for the equality comparison. This parameter can be `null`.","nodes":[{"pos":[0,83],"content":"The right operand to use for the equality comparison. This parameter can be `null`.","nodes":[{"content":"The right operand to use for the equality comparison.","pos":[0,53]},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[54,83],"source":" This parameter can be `null`."}]}],"pos":[14935,15019],"yaml":true},{"content":"`true` if <code>left</code> and <code>right</code> are equal; otherwise `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>left</code> and <code>right</code> are equal; otherwise `false`."}],"pos":[15077,15160],"yaml":true},{"content":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if one of the objects is `null` and the other is not.","nodes":[{"pos":[0,360],"content":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if one of the objects is `null` and the other is not.","nodes":[{"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> objects to determine whether they are not equal.","pos":[0,118],"source":"Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal."},{"content":"They are considered not equal if they have different canonical name representations than the one returned by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount.Value\"&gt;&lt;/xref&gt;</ph> property or if one of the objects is <ph id=\"ph2\">`null`</ph> and the other is not.","pos":[119,360],"source":" They are considered not equal if they have different canonical name representations than the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if one of the objects is `null` and the other is not."}]}],"pos":[16714,17075],"yaml":true},{"content":"The left operand to use for the inequality comparison. This parameter can be `null`.","nodes":[{"pos":[0,84],"content":"The left operand to use for the inequality comparison. This parameter can be `null`.","nodes":[{"content":"The left operand to use for the inequality comparison.","pos":[0,54]},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[55,84],"source":" This parameter can be `null`."}]}],"pos":[17316,17401],"yaml":true},{"content":"The right operand to use for the inequality comparison. This parameter can be `null`.","nodes":[{"pos":[0,85],"content":"The right operand to use for the inequality comparison. This parameter can be `null`.","nodes":[{"content":"The right operand to use for the inequality comparison.","pos":[0,55]},{"content":"This parameter can be <ph id=\"ph1\">`null`</ph>.","pos":[56,85],"source":" This parameter can be `null`."}]}],"pos":[17484,17570],"yaml":true},{"content":"`true` if <code>left</code> and <code>right</code> are not equal; otherwise `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not equal; otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>left</code> and <code>right</code> are not equal; otherwise `false`."}],"pos":[17628,17715],"yaml":true},{"content":"Returns the account name, in *Domain* **\\\\** *Account* format, for the account represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object.","nodes":[{"pos":[0,162],"content":"Returns the account name, in <bpt id=\"p1\">*</bpt>Domain<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">\\\\</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>Account<ept id=\"p3\">*</ept> format, for the account represented by the <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the account name, in *Domain* **\\\\** *Account* format, for the account represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object."}],"pos":[18960,19123],"yaml":true},{"content":"The account name, in *Domain* **\\\\** *Account* format.","nodes":[{"pos":[0,54],"content":"The account name, in <bpt id=\"p1\">*</bpt>Domain<ept id=\"p1\">*</ept> <bpt id=\"p2\">**</bpt><ph id=\"ph1\">\\\\</ph><ept id=\"p2\">**</ept> <bpt id=\"p3\">*</bpt>Account<ept id=\"p3\">*</ept> format.","source":"The account name, in *Domain* **\\\\** *Account* format."}],"pos":[19258,19313],"yaml":true},{"content":"Translates the account name represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type.","nodes":[{"pos":[0,202],"content":"Translates the account name represented by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object into another <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph>-derived type.","source":"Translates the account name represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type."}],"pos":[20610,20813],"yaml":true},{"content":"The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The target type must be a type that is considered valid by the <xref href=\"System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\"></xref> method.","nodes":[{"pos":[0,256],"content":"The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The target type must be a type that is considered valid by the <xref href=\"System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\"></xref> method.","nodes":[{"content":"The target type for the conversion from <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph>.","pos":[0,97],"source":"The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>."},{"content":"The target type must be a type that is considered valid by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\"&gt;&lt;/xref&gt;</ph> method.","pos":[98,256],"source":" The target type must be a type that is considered valid by the <xref href=\"System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\"></xref> method."}]}],"pos":[21005,21262],"yaml":true},{"content":"The converted identity.","nodes":[{"pos":[0,23],"content":"The converted identity.","nodes":[{"content":"The converted identity.","pos":[0,23]}]}],"pos":[21349,21373],"yaml":true},{"content":"<code>targetType</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetType</code> is `null`."}],"pos":[21548,21583],"yaml":true},{"content":"<code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">&lt;code&gt;targetType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> type.","source":"<code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type."}],"pos":[21677,21782],"yaml":true},{"content":"Some or all identity references could not be translated.","nodes":[{"pos":[0,56],"content":"Some or all identity references could not be translated.","nodes":[{"content":"Some or all identity references could not be translated.","pos":[0,56]}]}],"pos":[21932,21989],"yaml":true},{"content":"The source account name is too long.  \n  \n -or-  \n  \n A Win32 error code was returned.","nodes":[{"pos":[0,36],"content":"The source account name is too long.","nodes":[{"content":"The source account name is too long.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,86],"content":"A Win32 error code was returned.","nodes":[{"content":"A Win32 error code was returned.","pos":[0,32]}]}],"pos":[22079,22172],"yaml":true},{"content":"Returns an uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object.","nodes":[{"pos":[0,115],"content":"Returns an uppercase string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns an uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object."}],"pos":[23315,23431],"yaml":true},{"content":"The uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object.","nodes":[{"pos":[0,108],"content":"The uppercase string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> object.","source":"The uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object."}],"pos":[23549,23658],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.NTAccount\n  commentId: T:System.Security.Principal.NTAccount\n  id: NTAccount\n  children:\n  - System.Security.Principal.NTAccount.#ctor(System.String)\n  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  - System.Security.Principal.NTAccount.Equals(System.Object)\n  - System.Security.Principal.NTAccount.GetHashCode\n  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  - System.Security.Principal.NTAccount.ToString\n  - System.Security.Principal.NTAccount.Translate(System.Type)\n  - System.Security.Principal.NTAccount.Value\n  langs:\n  - csharp\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n  type: Class\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Represents a user or group account.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class NTAccount : System.Security.Principal.IdentityReference\n  inheritance:\n  - System.Object\n  - System.Security.Principal.IdentityReference\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.#ctor(System.String)\n  commentId: M:System.Security.Principal.NTAccount.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: NTAccount(String)\n  nameWithType: NTAccount.NTAccount(String)\n  fullName: NTAccount.NTAccount(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified name.\n  remarks: The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.\n  syntax:\n    content: public NTAccount (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used to create the <xref href=\"System.Security.Principal.NTAccount\"></xref> object. This parameter cannot be `null` or an empty string.\n  overload: System.Security.Principal.NTAccount.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>name</code> is too long.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  commentId: M:System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: NTAccount(String, String)\n  nameWithType: NTAccount.NTAccount(String, String)\n  fullName: NTAccount.NTAccount(String, String)\n  type: Constructor\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Initializes a new instance of the <xref href=\"System.Security.Principal.NTAccount\"></xref> class by using the specified domain name and account name.\n  remarks: The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.\n  syntax:\n    content: public NTAccount (string domainName, string accountName);\n    parameters:\n    - id: domainName\n      type: System.String\n      description: The name of the domain. This parameter can be `null` or an empty string. Domain names that are null values are treated like an empty string.\n    - id: accountName\n      type: System.String\n      description: The name of the account. This parameter cannot be `null` or an empty string.\n  overload: System.Security.Principal.NTAccount.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>accountName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>accountName</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>accountName</code> is too long.  \\n  \\n -or-  \\n  \\n <code>domainName</code> is too long.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.Equals(System.Object)\n  commentId: M:System.Security.Principal.NTAccount.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NTAccount.Equals(Object)\n  fullName: NTAccount.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether this <xref href=\"System.Security.Principal.NTAccount\"></xref> object is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: An object to compare with this <xref href=\"System.Security.Principal.NTAccount\"></xref> object, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>o</code> is an object with the same underlying type and value as this <xref href=\"System.Security.Principal.NTAccount\"></xref> object; otherwise, `false`.'\n  overload: System.Security.Principal.NTAccount.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.GetHashCode\n  commentId: M:System.Security.Principal.NTAccount.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NTAccount.GetHashCode()\n  fullName: NTAccount.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Serves as a hash function for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object. The <xref href=\"System.Security.Principal.NTAccount.GetHashCode\"></xref> method is suitable for hashing algorithms and data structures like a hash table.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash value for the current <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  overload: System.Security.Principal.NTAccount.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  commentId: M:System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  id: IsValidTargetType(System.Type)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: IsValidTargetType(Type)\n  nameWithType: NTAccount.IsValidTargetType(Type)\n  fullName: NTAccount.IsValidTargetType(Type)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class.\n  syntax:\n    content: public override bool IsValidTargetType (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: \"The type being queried for validity to serve as a conversion from <xref href=\\\"System.Security.Principal.NTAccount\\\"></xref>. The following target types are valid:  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.NTAccount\\\"></xref>  \\n  \\n \\\\- <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\"></xref>\"\n    return:\n      type: System.Boolean\n      description: '`true` if <code>targetType</code> is a valid translation type for the <xref href=\"System.Security.Principal.NTAccount\"></xref> class; otherwise `false`.'\n  overload: System.Security.Principal.NTAccount.IsValidTargetType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  commentId: M:System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: op_Equality(NTAccount, NTAccount)\n  nameWithType: NTAccount.op_Equality(NTAccount, NTAccount)\n  fullName: NTAccount.op_Equality(NTAccount, NTAccount)\n  type: Operator\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if they are both `null`.\n  syntax:\n    content: public static bool op_Equality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.NTAccount\n      description: The left operand to use for the equality comparison. This parameter can be `null`.\n    - id: right\n      type: System.Security.Principal.NTAccount\n      description: The right operand to use for the equality comparison. This parameter can be `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>left</code> and <code>right</code> are equal; otherwise `false`.'\n  overload: System.Security.Principal.NTAccount.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  commentId: M:System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: op_Inequality(NTAccount, NTAccount)\n  nameWithType: NTAccount.op_Inequality(NTAccount, NTAccount)\n  fullName: NTAccount.op_Inequality(NTAccount, NTAccount)\n  type: Operator\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Compares two <xref href=\"System.Security.Principal.NTAccount\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref href=\"System.Security.Principal.NTAccount.Value\"></xref> property or if one of the objects is `null` and the other is not.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.NTAccount\n      description: The left operand to use for the inequality comparison. This parameter can be `null`.\n    - id: right\n      type: System.Security.Principal.NTAccount\n      description: The right operand to use for the inequality comparison. This parameter can be `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>left</code> and <code>right</code> are not equal; otherwise `false`.'\n  overload: System.Security.Principal.NTAccount.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.ToString\n  commentId: M:System.Security.Principal.NTAccount.ToString\n  id: ToString\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: NTAccount.ToString()\n  fullName: NTAccount.ToString()\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns the account name, in *Domain* **\\\\** *Account* format, for the account represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The account name, in *Domain* **\\\\** *Account* format.\n  overload: System.Security.Principal.NTAccount.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.Translate(System.Type)\n  commentId: M:System.Security.Principal.NTAccount.Translate(System.Type)\n  id: Translate(System.Type)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Translate(Type)\n  nameWithType: NTAccount.Translate(Type)\n  fullName: NTAccount.Translate(Type)\n  type: Method\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Translates the account name represented by the <xref href=\"System.Security.Principal.NTAccount\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\"></xref>-derived type.\n  syntax:\n    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The target type for the conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The target type must be a type that is considered valid by the <xref href=\"System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\"></xref> method.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The converted identity.\n  overload: System.Security.Principal.NTAccount.Translate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n    description: Some or all identity references could not be translated.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: \"The source account name is too long.  \\n  \\n -or-  \\n  \\n A Win32 error code was returned.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.NTAccount.Value\n  commentId: P:System.Security.Principal.NTAccount.Value\n  id: Value\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: NTAccount.Value\n  type: Property\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Returns an uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  syntax:\n    content: public override string Value { get; }\n    return:\n      type: System.String\n      description: The uppercase string representation of this <xref href=\"System.Security.Principal.NTAccount\"></xref> object.\n  overload: System.Security.Principal.NTAccount.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Principal.IdentityNotMappedException\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityNotMappedException\n  nameWithType: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.Security.Principal.NTAccount.#ctor(System.String)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount(String)\n  nameWithType: NTAccount.NTAccount(String)\n  fullName: NTAccount.NTAccount(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount(String, String)\n  nameWithType: NTAccount.NTAccount(String, String)\n  fullName: NTAccount.NTAccount(String, String)\n- uid: System.Security.Principal.NTAccount.Equals(System.Object)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NTAccount.Equals(Object)\n  fullName: NTAccount.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Principal.NTAccount.GetHashCode\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NTAccount.GetHashCode()\n  fullName: NTAccount.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: IsValidTargetType(Type)\n  nameWithType: NTAccount.IsValidTargetType(Type)\n  fullName: NTAccount.IsValidTargetType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Equality(NTAccount, NTAccount)\n  nameWithType: NTAccount.op_Equality(NTAccount, NTAccount)\n  fullName: NTAccount.op_Equality(NTAccount, NTAccount)\n- uid: System.Security.Principal.NTAccount\n  parent: System.Security.Principal\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Inequality(NTAccount, NTAccount)\n  nameWithType: NTAccount.op_Inequality(NTAccount, NTAccount)\n  fullName: NTAccount.op_Inequality(NTAccount, NTAccount)\n- uid: System.Security.Principal.NTAccount.ToString\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: ToString()\n  nameWithType: NTAccount.ToString()\n  fullName: NTAccount.ToString()\n- uid: System.Security.Principal.NTAccount.Translate(System.Type)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Translate(Type)\n  nameWithType: NTAccount.Translate(Type)\n  fullName: NTAccount.Translate(Type)\n- uid: System.Security.Principal.NTAccount.Value\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: NTAccount.Value\n- uid: System.Security.Principal.NTAccount.#ctor*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount.NTAccount\n  fullName: NTAccount.NTAccount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.Equals*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Equals\n  nameWithType: NTAccount.Equals\n  fullName: NTAccount.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.GetHashCode*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: GetHashCode\n  nameWithType: NTAccount.GetHashCode\n  fullName: NTAccount.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.IsValidTargetType*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: IsValidTargetType\n  nameWithType: NTAccount.IsValidTargetType\n  fullName: NTAccount.IsValidTargetType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.op_Equality*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Equality\n  nameWithType: NTAccount.op_Equality\n  fullName: NTAccount.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.op_Inequality*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Inequality\n  nameWithType: NTAccount.op_Inequality\n  fullName: NTAccount.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.ToString*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: ToString\n  nameWithType: NTAccount.ToString\n  fullName: NTAccount.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.Translate*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Translate\n  nameWithType: NTAccount.Translate\n  fullName: NTAccount.Translate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Security.Principal.NTAccount.Value*\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: NTAccount.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: op_Equality(IdentityReference, IdentityReference)\n  nameWithType: IdentityReference.op_Equality(IdentityReference, IdentityReference)\n  fullName: IdentityReference.op_Equality(IdentityReference, IdentityReference)\n- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  parent: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: op_Inequality(IdentityReference, IdentityReference)\n  nameWithType: IdentityReference.op_Inequality(IdentityReference, IdentityReference)\n  fullName: IdentityReference.op_Inequality(IdentityReference, IdentityReference)\n"}