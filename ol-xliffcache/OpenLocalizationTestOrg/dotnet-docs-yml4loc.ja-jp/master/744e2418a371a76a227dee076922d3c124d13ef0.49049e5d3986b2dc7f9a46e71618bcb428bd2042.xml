{"nodes":[{"content":"Manages the debugging of each activity that is mapped to a state by the debugging infrastructure.","nodes":[{"pos":[0,97],"content":"Manages the debugging of each activity that is mapped to a state by the debugging infrastructure.","nodes":[{"content":"Manages the debugging of each activity that is mapped to a state by the debugging infrastructure.","pos":[0,97]}]}],"pos":[507,605],"yaml":true},{"content":"Exits each thread in the logical thread list and then clears the list.","nodes":[{"pos":[0,70],"content":"Exits each thread in the logical thread list and then clears the list.","nodes":[{"content":"Exits each thread in the logical thread list and then clears the list.","pos":[0,70]}]}],"pos":[1989,2060],"yaml":true},{"content":"Exits the specified thread and sets its location in the logical thread list to `null`.","nodes":[{"pos":[0,86],"content":"Exits the specified thread and sets its location in the logical thread list to <ph id=\"ph1\">`null`</ph>.","source":"Exits the specified thread and sets its location in the logical thread list to `null`."}],"pos":[3174,3261],"yaml":true},{"content":"A number that represents an index into a list of logical threads.","nodes":[{"pos":[0,65],"content":"A number that represents an index into a list of logical threads.","nodes":[{"content":"A number that represents an index into a list of logical threads.","pos":[0,65]}]}],"pos":[3402,3468],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Debugger.StateManager\n  commentId: T:System.Activities.Debugger.StateManager\n  id: StateManager\n  children:\n  - System.Activities.Debugger.StateManager.Dispose\n  - System.Activities.Debugger.StateManager.Exit(System.Int32)\n  langs:\n  - csharp\n  name: StateManager\n  nameWithType: StateManager\n  fullName: System.Activities.Debugger.StateManager\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Debugger\n  summary: Manages the debugging of each activity that is mapped to a state by the debugging infrastructure.\n  syntax:\n    content: 'public sealed class StateManager : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/StateManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Debugger.StateManager.Dispose\n  commentId: M:System.Activities.Debugger.StateManager.Dispose\n  id: Dispose\n  parent: System.Activities.Debugger.StateManager\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: StateManager.Dispose()\n  fullName: StateManager.Dispose()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Debugger\n  summary: Exits each thread in the logical thread list and then clears the list.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Activities.Debugger.StateManager.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/StateManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Debugger.StateManager.Exit(System.Int32)\n  commentId: M:System.Activities.Debugger.StateManager.Exit(System.Int32)\n  id: Exit(System.Int32)\n  parent: System.Activities.Debugger.StateManager\n  langs:\n  - csharp\n  name: Exit(Int32)\n  nameWithType: StateManager.Exit(Int32)\n  fullName: StateManager.Exit(Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Debugger\n  summary: Exits the specified thread and sets its location in the logical thread list to `null`.\n  syntax:\n    content: public void Exit (int threadIndex);\n    parameters:\n    - id: threadIndex\n      type: System.Int32\n      description: A number that represents an index into a list of logical threads.\n  overload: System.Activities.Debugger.StateManager.Exit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/StateManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Debugger.StateManager.Dispose\n  parent: System.Activities.Debugger.StateManager\n  isExternal: false\n  name: Dispose()\n  nameWithType: StateManager.Dispose()\n  fullName: StateManager.Dispose()\n- uid: System.Activities.Debugger.StateManager.Exit(System.Int32)\n  parent: System.Activities.Debugger.StateManager\n  isExternal: false\n  name: Exit(Int32)\n  nameWithType: StateManager.Exit(Int32)\n  fullName: StateManager.Exit(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Debugger.StateManager.Dispose*\n  parent: System.Activities.Debugger.StateManager\n  isExternal: false\n  name: Dispose\n  nameWithType: StateManager.Dispose\n  fullName: StateManager.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/StateManager.xml\n- uid: System.Activities.Debugger.StateManager.Exit*\n  parent: System.Activities.Debugger.StateManager\n  isExternal: false\n  name: Exit\n  nameWithType: StateManager.Exit\n  fullName: StateManager.Exit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Debugger/StateManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}