{"nodes":[{"content":"Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.","nodes":[{"pos":[0,128],"content":"Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.","nodes":[{"content":"Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.","pos":[0,128]}]}],"pos":[805,934],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface to control the creation and recycling of service objects when one is requested or disposed by an <xref:System.ServiceModel.InstanceContext> object.  \n  \n Once the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface is implemented, you must assign your custom instance provider object to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> property using either an endpoint behavior (a <xref:System.ServiceModel.Description.IEndpointBehavior> object) or a contract behavior (a <xref:System.ServiceModel.Description.IContractBehavior> object).  \n  \n If the insertion mechanism is an endpoint behavior you can also implement a <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object that can insert your custom behavior using a configuration file. If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute. (For an example of the contract behavior approach, see the Example section.)  \n  \n <xref:System.ServiceModel.Dispatcher.IInstanceProvider> has two methods, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> and <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>. These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object. Service object pooling is one example of custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> functionality.  \n  \n Typically, the <xref:System.ServiceModel.InstanceContext> invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> when the <xref:System.ServiceModel.InstanceContext> is first created and invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method when the <xref:System.ServiceModel.InstanceContext> is closed.  \n  \n There are two ways to cause an <xref:System.ServiceModel.InstanceContext> object to release a service object before the <xref:System.ServiceModel.InstanceContext> is closed. The first method is to set the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> to <xref:System.ServiceModel.ReleaseInstanceMode.AfterCall> or <xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall>. The second method is to call the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method. If this is done, the <xref:System.ServiceModel.InstanceContext> calls the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method on the dispatcher's instance provider. If a new message arrives after the instance has been released, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new instance using the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method.  \n  \n> [!NOTE]\n>  If the <xref:System.ServiceModel.InstanceContextMode> of the service is <xref:System.ServiceModel.InstanceContextMode.Single>, the system does not call the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> or <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> methods even when the user did not provide a well-known service object unless the user directly calls <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> and then calls <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>.","nodes":[{"pos":[0,227],"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface to control the creation and recycling of service objects when one is requested or disposed by an <xref:System.ServiceModel.InstanceContext> object.","nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> interface to control the creation and recycling of service objects when one is requested or disposed by an <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object.","pos":[0,227],"source":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface to control the creation and recycling of service objects when one is requested or disposed by an <xref:System.ServiceModel.InstanceContext> object."}]},{"pos":[234,661],"content":"Once the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface is implemented, you must assign your custom instance provider object to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> property using either an endpoint behavior (a <xref:System.ServiceModel.Description.IEndpointBehavior> object) or a contract behavior (a <xref:System.ServiceModel.Description.IContractBehavior> object).","nodes":[{"content":"Once the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> interface is implemented, you must assign your custom instance provider object to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> property using either an endpoint behavior (a <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> object) or a contract behavior (a <ph id=\"ph4\">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object).","pos":[0,427],"source":"Once the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface is implemented, you must assign your custom instance provider object to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> property using either an endpoint behavior (a <xref:System.ServiceModel.Description.IEndpointBehavior> object) or a contract behavior (a <xref:System.ServiceModel.Description.IContractBehavior> object)."}]},{"pos":[668,1136],"content":"If the insertion mechanism is an endpoint behavior you can also implement a <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object that can insert your custom behavior using a configuration file. If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute. (For an example of the contract behavior approach, see the Example section.)","nodes":[{"content":"If the insertion mechanism is an endpoint behavior you can also implement a <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object that can insert your custom behavior using a configuration file. If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute. (For an example of the contract behavior approach, see the Example section.)","pos":[0,468],"nodes":[{"content":"If the insertion mechanism is an endpoint behavior you can also implement a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement&gt;</ph> object that can insert your custom behavior using a configuration file.","pos":[0,213],"source":"If the insertion mechanism is an endpoint behavior you can also implement a <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object that can insert your custom behavior using a configuration file."},{"content":"If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute.","pos":[214,391]},{"content":"(For an example of the contract behavior approach, see the Example section.)","pos":[392,468]}]}]},{"pos":[1143,1664],"content":"<xref:System.ServiceModel.Dispatcher.IInstanceProvider> has two methods, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> and <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>. These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object. Service object pooling is one example of custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> functionality.","nodes":[{"content":"<xref:System.ServiceModel.Dispatcher.IInstanceProvider> has two methods, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> and <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>. These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object. Service object pooling is one example of custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> functionality.","pos":[0,521],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> has two methods, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph>.","pos":[0,223],"source":"<xref:System.ServiceModel.Dispatcher.IInstanceProvider> has two methods, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> and <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>."},{"content":"These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object.","pos":[224,402]},{"content":"Service object pooling is one example of custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> functionality.","pos":[403,521],"source":" Service object pooling is one example of custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> functionality."}]}]},{"pos":[1671,2041],"content":"Typically, the <xref:System.ServiceModel.InstanceContext> invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> when the <xref:System.ServiceModel.InstanceContext> is first created and invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method when the <xref:System.ServiceModel.InstanceContext> is closed.","nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> invokes the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> when the <ph id=\"ph3\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> is first created and invokes the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method when the <ph id=\"ph5\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> is closed.","pos":[0,370],"source":"Typically, the <xref:System.ServiceModel.InstanceContext> invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> when the <xref:System.ServiceModel.InstanceContext> is first created and invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method when the <xref:System.ServiceModel.InstanceContext> is closed."}]},{"pos":[2048,2985],"content":"There are two ways to cause an <xref:System.ServiceModel.InstanceContext> object to release a service object before the <xref:System.ServiceModel.InstanceContext> is closed. The first method is to set the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> to <xref:System.ServiceModel.ReleaseInstanceMode.AfterCall> or <xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall>. The second method is to call the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method. If this is done, the <xref:System.ServiceModel.InstanceContext> calls the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method on the dispatcher's instance provider. If a new message arrives after the instance has been released, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new instance using the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method.","nodes":[{"content":"There are two ways to cause an <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object to release a service object before the <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> is closed.","pos":[0,173],"source":"There are two ways to cause an <xref:System.ServiceModel.InstanceContext> object to release a service object before the <xref:System.ServiceModel.InstanceContext> is closed."},{"content":"The first method is to set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.ServiceModel.ReleaseInstanceMode.AfterCall&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall&gt;</ph>.","pos":[174,411],"source":" The first method is to set the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> to <xref:System.ServiceModel.ReleaseInstanceMode.AfterCall> or <xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall>."},{"content":"The second method is to call the <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> method.","pos":[412,521],"source":" The second method is to call the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method."},{"content":"If this is done, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> calls the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method on the dispatcher's instance provider.","pos":[522,716],"source":" If this is done, the <xref:System.ServiceModel.InstanceContext> calls the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method on the dispatcher's instance provider."},{"content":"If a new message arrives after the instance has been released, <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new instance using the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> method.","pos":[717,937],"source":" If a new message arrives after the instance has been released, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new instance using the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method."}]},{"pos":[2993,3560],"content":"[!NOTE]\n If the <xref:System.ServiceModel.InstanceContextMode> of the service is <xref:System.ServiceModel.InstanceContextMode.Single>, the system does not call the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> or <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> methods even when the user did not provide a well-known service object unless the user directly calls <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> and then calls <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>.","leadings":["","> "],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContextMode&gt;</ph> of the service is <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContextMode.Single&gt;</ph>, the system does not call the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> methods even when the user did not provide a well-known service object unless the user directly calls <ph id=\"ph5\">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> and then calls <ph id=\"ph6\">&lt;xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A&gt;</ph>.","pos":[9,565],"source":" If the <xref:System.ServiceModel.InstanceContextMode> of the service is <xref:System.ServiceModel.InstanceContextMode.Single>, the system does not call the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> or <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> methods even when the user did not provide a well-known service object unless the user directly calls <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> and then calls <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>."}]}],"pos":[945,4521],"yaml":true,"extradata":"MT"},{"content":"Returns a service object given the specified <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.","nodes":[{"pos":[0,109],"content":"Returns a service object given the specified <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a service object given the specified <xref href=\"System.ServiceModel.InstanceContext\"></xref> object."}],"pos":[6851,6961],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%29> method to control the exact service object that a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service receives when it attempts to create a new one.","nodes":[{"pos":[0,267],"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%29&gt;</ph> method to control the exact service object that a <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service receives when it attempts to create a new one.","source":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%29> method to control the exact service object that a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service receives when it attempts to create a new one."}],"pos":[6972,7240],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.","nodes":[{"pos":[0,76],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object.","source":"The current <xref href=\"System.ServiceModel.InstanceContext\"></xref> object."}],"pos":[8545,8622],"yaml":true},{"content":"A user-defined service object.","nodes":[{"pos":[0,30],"content":"A user-defined service object.","nodes":[{"content":"A user-defined service object.","pos":[0,30]}]}],"pos":[8679,8710],"yaml":true},{"content":"Returns a service object given the specified <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.","nodes":[{"pos":[0,109],"content":"Returns a service object given the specified <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a service object given the specified <xref href=\"System.ServiceModel.InstanceContext\"></xref> object."}],"pos":[10102,10212],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%2CSystem.ServiceModel.Channels.Message%29> method to control the exact service object that a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service receives when it attempts to create a new one.","nodes":[{"pos":[0,306],"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%2CSystem.ServiceModel.Channels.Message%29&gt;</ph> method to control the exact service object that a <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service receives when it attempts to create a new one.","source":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%2CSystem.ServiceModel.Channels.Message%29> method to control the exact service object that a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service receives when it attempts to create a new one."}],"pos":[10223,10530],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.","nodes":[{"pos":[0,76],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object.","source":"The current <xref href=\"System.ServiceModel.InstanceContext\"></xref> object."}],"pos":[11881,11958],"yaml":true},{"content":"The message that triggered the creation of a service object.","nodes":[{"pos":[0,60],"content":"The message that triggered the creation of a service object.","nodes":[{"content":"The message that triggered the creation of a service object.","pos":[0,60]}]}],"pos":[12044,12105],"yaml":true},{"content":"The service object.","nodes":[{"pos":[0,19],"content":"The service object.","nodes":[{"content":"The service object.","pos":[0,19]}]}],"pos":[12162,12182],"yaml":true},{"content":"Called when an <xref href=\"System.ServiceModel.InstanceContext\"></xref> object recycles a service object.","nodes":[{"pos":[0,105],"content":"Called when an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object recycles a service object.","source":"Called when an <xref href=\"System.ServiceModel.InstanceContext\"></xref> object recycles a service object."}],"pos":[13526,13632],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method to perform some custom resource disposal or other recycling customization when a service recycles a service object.","nodes":[{"pos":[0,205],"content":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method to perform some custom resource disposal or other recycling customization when a service recycles a service object.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method to perform some custom resource disposal or other recycling customization when a service recycles a service object.","pos":[0,205],"source":"Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method to perform some custom resource disposal or other recycling customization when a service recycles a service object."}]}],"pos":[13643,13849],"yaml":true,"extradata":"MT"},{"content":"The service's instance context.","nodes":[{"pos":[0,31],"content":"The service's instance context.","nodes":[{"content":"The service's instance context.","pos":[0,31]}]}],"pos":[14081,14113],"yaml":true},{"content":"The service object to be recycled.","nodes":[{"pos":[0,34],"content":"The service object to be recycled.","nodes":[{"content":"The service object to be recycled.","pos":[0,34]}]}],"pos":[14177,14212],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider\n  commentId: T:System.ServiceModel.Dispatcher.IInstanceProvider\n  id: IInstanceProvider\n  children:\n  - System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)\n  - System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  - System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)\n  langs:\n  - csharp\n  name: IInstanceProvider\n  nameWithType: IInstanceProvider\n  fullName: System.ServiceModel.Dispatcher.IInstanceProvider\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Declares methods that provide a service object or recycle a service object for a Windows Communication Foundation (WCF) service.\n  remarks: \"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface to control the creation and recycling of service objects when one is requested or disposed by an <xref:System.ServiceModel.InstanceContext> object.  \\n  \\n Once the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface is implemented, you must assign your custom instance provider object to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> property using either an endpoint behavior (a <xref:System.ServiceModel.Description.IEndpointBehavior> object) or a contract behavior (a <xref:System.ServiceModel.Description.IContractBehavior> object).  \\n  \\n If the insertion mechanism is an endpoint behavior you can also implement a <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object that can insert your custom behavior using a configuration file. If the insertion mechanism is a contract behavior, you can insert the behavior programmatically prior to the opening of the service host or you can implement a custom attribute. (For an example of the contract behavior approach, see the Example section.)  \\n  \\n <xref:System.ServiceModel.Dispatcher.IInstanceProvider> has two methods, <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> and <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A>. These methods are typically implemented to create service objects using a non-default constructor or to initialize or dispose of some state related to the lifetime of the object. Service object pooling is one example of custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider> functionality.  \\n  \\n Typically, the <xref:System.ServiceModel.InstanceContext> invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> when the <xref:System.ServiceModel.InstanceContext> is first created and invokes the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method when the <xref:System.ServiceModel.InstanceContext> is closed.  \\n  \\n There are two ways to cause an <xref:System.ServiceModel.InstanceContext> object to release a service object before the <xref:System.ServiceModel.InstanceContext> is closed. The first method is to set the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> to <xref:System.ServiceModel.ReleaseInstanceMode.AfterCall> or <xref:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall>. The second method is to call the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method. If this is done, the <xref:System.ServiceModel.InstanceContext> calls the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method on the dispatcher's instance provider. If a new message arrives after the instance has been released, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new instance using the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.ServiceModel.InstanceContextMode> of the service is <xref:System.ServiceModel.InstanceContextMode.Single>, the system does not call the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> or <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> methods even when the user did not provide a well-known service object unless the user directly calls <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> and then calls <xref:System.ServiceModel.InstanceContext.GetServiceInstance%2A>.\"\n  example:\n  - \"The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides \\\"singleton\\\" behavior; it always returns the same service instance and does not recycle it.  \\n  \\n [!code-csharp[IContractBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#1)]\\n [!code-vb[IContractBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#1)]  \\n  \\n The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.  \\n  \\n [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]\\n [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]\"\n  syntax:\n    content: public interface IInstanceProvider\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)\n  id: GetInstance(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  langs:\n  - csharp\n  name: GetInstance(InstanceContext)\n  nameWithType: IInstanceProvider.GetInstance(InstanceContext)\n  fullName: IInstanceProvider.GetInstance(InstanceContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a service object given the specified <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.\n  remarks: Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%29> method to control the exact service object that a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service receives when it attempts to create a new one.\n  example:\n  - \"The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides \\\"singleton\\\" behavior; it always returns the same service instance and does not recycle it.  \\n  \\n [!code-csharp[IContractBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#1)]\\n [!code-vb[IContractBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#1)]  \\n  \\n The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.  \\n  \\n [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]\\n [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]\"\n  syntax:\n    content: public object GetInstance (System.ServiceModel.InstanceContext instanceContext);\n    parameters:\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The current <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.\n    return:\n      type: System.Object\n      description: A user-defined service object.\n  overload: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  id: GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  langs:\n  - csharp\n  name: GetInstance(InstanceContext, Message)\n  nameWithType: IInstanceProvider.GetInstance(InstanceContext, Message)\n  fullName: IInstanceProvider.GetInstance(InstanceContext, Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Returns a service object given the specified <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.\n  remarks: Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%28System.ServiceModel.InstanceContext%2CSystem.ServiceModel.Channels.Message%29> method to control the exact service object that a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service receives when it attempts to create a new one.\n  example:\n  - \"The following code example shows how to implement <xref:System.ServiceModel.Dispatcher.IInstanceProvider> that provides \\\"singleton\\\" behavior; it always returns the same service instance and does not recycle it.  \\n  \\n [!code-csharp[IContractBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#1)]\\n [!code-vb[IContractBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#1)]  \\n  \\n The following code example shows how to implement a custom attribute that implements <xref:System.ServiceModel.Description.IContractBehavior> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its use to a specific contract.  \\n  \\n [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]\\n [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]\"\n  syntax:\n    content: public object GetInstance (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The current <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message that triggered the creation of a service object.\n    return:\n      type: System.Object\n      description: The service object.\n  overload: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)\n  id: ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  langs:\n  - csharp\n  name: ReleaseInstance(InstanceContext, Object)\n  nameWithType: IInstanceProvider.ReleaseInstance(InstanceContext, Object)\n  fullName: IInstanceProvider.ReleaseInstance(InstanceContext, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called when an <xref href=\"System.ServiceModel.InstanceContext\"></xref> object recycles a service object.\n  remarks: Use the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method to perform some custom resource disposal or other recycling customization when a service recycles a service object.\n  syntax:\n    content: public void ReleaseInstance (System.ServiceModel.InstanceContext instanceContext, object instance);\n    parameters:\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The service's instance context.\n    - id: instance\n      type: System.Object\n      description: The service object to be recycled.\n  overload: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  isExternal: false\n  name: GetInstance(InstanceContext)\n  nameWithType: IInstanceProvider.GetInstance(InstanceContext)\n  fullName: IInstanceProvider.GetInstance(InstanceContext)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.InstanceContext\n  parent: System.ServiceModel\n  isExternal: false\n  name: InstanceContext\n  nameWithType: InstanceContext\n  fullName: System.ServiceModel.InstanceContext\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  isExternal: false\n  name: GetInstance(InstanceContext, Message)\n  nameWithType: IInstanceProvider.GetInstance(InstanceContext, Message)\n  fullName: IInstanceProvider.GetInstance(InstanceContext, Message)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  isExternal: false\n  name: ReleaseInstance(InstanceContext, Object)\n  nameWithType: IInstanceProvider.ReleaseInstance(InstanceContext, Object)\n  fullName: IInstanceProvider.ReleaseInstance(InstanceContext, Object)\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance*\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  isExternal: false\n  name: GetInstance\n  nameWithType: IInstanceProvider.GetInstance\n  fullName: IInstanceProvider.GetInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml\n- uid: System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance*\n  parent: System.ServiceModel.Dispatcher.IInstanceProvider\n  isExternal: false\n  name: ReleaseInstance\n  nameWithType: IInstanceProvider.ReleaseInstance\n  fullName: IInstanceProvider.ReleaseInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceProvider.xml\n"}