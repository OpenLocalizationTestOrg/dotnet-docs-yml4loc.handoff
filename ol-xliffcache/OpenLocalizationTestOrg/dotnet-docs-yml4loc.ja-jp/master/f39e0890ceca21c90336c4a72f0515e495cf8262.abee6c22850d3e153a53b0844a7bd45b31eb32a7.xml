{"nodes":[{"content":"Defines a contract that components can use to access an object across application domain and process boundaries.","nodes":[{"pos":[0,112],"content":"Defines a contract that components can use to access an object across application domain and process boundaries.","nodes":[{"content":"Defines a contract that components can use to access an object across application domain and process boundaries.","pos":[0,112]}]}],"pos":[636,749],"yaml":true},{"content":"When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.","nodes":[{"pos":[0,573],"content":"When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.","nodes":[{"content":"When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.","pos":[0,573],"nodes":[{"content":"When you implement <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> on a type, components can use the contract to access type information for objects of the type.","pos":[0,175],"source":"When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type."},{"content":"Components access type information by calling the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method to obtain an <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>.","pos":[176,385],"source":" Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph> interface defines a contract that components can use to access specific type and member information, and to invoke members.","pos":[386,573],"source":" The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members."}]}]}],"pos":[760,1334],"yaml":true,"extradata":"MT"},{"content":"Returns an <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>.","nodes":[{"pos":[0,200],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"&gt;&lt;/xref&gt;</ph> that specifies the type of the current <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>."}],"pos":[2621,2822],"yaml":true},{"content":"Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.","nodes":[{"pos":[0,227],"content":"Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method to access the members of the remote object that the current <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> identifies.","pos":[0,227],"source":"Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies."}]}],"pos":[2833,3061],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>.","nodes":[{"pos":[0,192],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"&gt;&lt;/xref&gt;</ph> that specifies the type of the current <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>."}],"pos":[3277,3470],"yaml":true},{"content":"Casts the object identified by the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> to a specified type.","nodes":[{"pos":[0,139],"content":"Casts the object identified by the current <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"&gt;&lt;/xref&gt;</ph> to a specified type.","source":"Casts the object identified by the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> to a specified type."}],"pos":[4674,4814],"yaml":true},{"content":"A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended. An example of the recommended format of a canonical name is \"ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application\".  \n  \n The canonical name for a type cannot change after a type is published in a component. Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.  \n  \n It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails.","nodes":[{"pos":[0,293],"content":"A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended. An example of the recommended format of a canonical name is \"ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application\".","nodes":[{"content":"A canonical name is a globally unique name, such as a GUID.","pos":[0,59]},{"content":"Strings in the format <ph id=\"ph1\">\\&lt;</ph><bpt id=\"p1\">*</bpt>assembly name<ept id=\"p1\">*</ept>&gt;, <ph id=\"ph2\">\\&lt;</ph><bpt id=\"p2\">*</bpt>fully qualified type name<ept id=\"p2\">*</ept>&gt; are recommended.","pos":[60,149],"source":" Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended."},{"content":"An example of the recommended format of a canonical name is \"ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application\".","pos":[150,293]}]},{"pos":[300,546],"content":"The canonical name for a type cannot change after a type is published in a component. Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.","nodes":[{"content":"The canonical name for a type cannot change after a type is published in a component. Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.","pos":[0,246],"nodes":[{"content":"The canonical name for a type cannot change after a type is published in a component.","pos":[0,85]},{"content":"Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.","pos":[86,246]}]}]},{"pos":[553,740],"content":"It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails.","nodes":[{"content":"It is recommended that <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A&gt;</ph> implementations throw an <ph id=\"ph2\">&lt;xref:System.InvalidCastException&gt;</ph> if the cast operation fails.","pos":[0,187],"source":"It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails."}]}],"pos":[4825,5576],"yaml":true,"extradata":"MT"},{"content":"The canonical name of the type to cast the object to.","nodes":[{"pos":[0,53],"content":"The canonical name of the type to cast the object to.","nodes":[{"content":"The canonical name of the type to cast the object to.","pos":[0,53]}]}],"pos":[5763,5817],"yaml":true},{"content":"A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that represents the result of the cast operation.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;&lt;/xref&gt;</ph> that represents the result of the cast operation.","source":"A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that represents the result of the cast operation."}],"pos":[5897,6007],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract\n  commentId: T:System.AddIn.Contract.Automation.IRemoteObjectContract\n  id: IRemoteObjectContract\n  children:\n  - System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  - System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  langs:\n  - csharp\n  name: IRemoteObjectContract\n  nameWithType: IRemoteObjectContract\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Defines a contract that components can use to access an object across application domain and process boundaries.\n  remarks: When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type. Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.\n  syntax:\n    content: 'public interface IRemoteObjectContract : System.AddIn.Contract.IContract'\n  derivedClasses:\n  - System.AddIn.Contract.Automation.IRemoteDelegateContract\n  implements:\n  - System.AddIn.Contract.IContract\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Automation/IRemoteObjectContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  commentId: M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  id: GetRemoteType\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  langs:\n  - csharp\n  name: GetRemoteType()\n  nameWithType: IRemoteObjectContract.GetRemoteType()\n  fullName: IRemoteObjectContract.GetRemoteType()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Returns an <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>.\n  remarks: Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.\n  syntax:\n    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();\n    parameters: []\n    return:\n      type: System.AddIn.Contract.Automation.IRemoteTypeContract\n      description: An <xref href=\"System.AddIn.Contract.Automation.IRemoteTypeContract\"></xref> that specifies the type of the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref>.\n  overload: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Automation/IRemoteObjectContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  commentId: M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  id: RemoteCast(System.String)\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  langs:\n  - csharp\n  name: RemoteCast(String)\n  nameWithType: IRemoteObjectContract.RemoteCast(String)\n  fullName: IRemoteObjectContract.RemoteCast(String)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Automation\n  summary: Casts the object identified by the current <xref href=\"System.AddIn.Contract.Automation.IRemoteObjectContract\"></xref> to a specified type.\n  remarks: \"A canonical name is a globally unique name, such as a GUID. Strings in the format \\\\<*assembly name*>, \\\\<*fully qualified type name*> are recommended. An example of the recommended format of a canonical name is \\\"ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application\\\".  \\n  \\n The canonical name for a type cannot change after a type is published in a component. Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.  \\n  \\n It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails.\"\n  syntax:\n    content: public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);\n    parameters:\n    - id: canonicalName\n      type: System.String\n      description: The canonical name of the type to cast the object to.\n    return:\n      type: System.AddIn.Contract.RemoteArgument\n      description: A <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> that represents the result of the cast operation.\n  overload: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Automation/IRemoteObjectContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: GetRemoteType()\n  nameWithType: IRemoteObjectContract.GetRemoteType()\n  fullName: IRemoteObjectContract.GetRemoteType()\n- uid: System.AddIn.Contract.Automation.IRemoteTypeContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteTypeContract\n  nameWithType: IRemoteTypeContract\n  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: RemoteCast(String)\n  nameWithType: IRemoteObjectContract.RemoteCast(String)\n  fullName: IRemoteObjectContract.RemoteCast(String)\n- uid: System.AddIn.Contract.RemoteArgument\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: RemoteArgument\n  nameWithType: RemoteArgument\n  fullName: System.AddIn.Contract.RemoteArgument\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType*\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: GetRemoteType\n  nameWithType: IRemoteObjectContract.GetRemoteType\n  fullName: IRemoteObjectContract.GetRemoteType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Automation/IRemoteObjectContract.xml\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast*\n  parent: System.AddIn.Contract.Automation.IRemoteObjectContract\n  isExternal: false\n  name: RemoteCast\n  nameWithType: IRemoteObjectContract.RemoteCast\n  fullName: IRemoteObjectContract.RemoteCast\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Automation/IRemoteObjectContract.xml\n- uid: System.AddIn.Contract.IContract\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IContract\n  nameWithType: IContract\n  fullName: System.AddIn.Contract.IContract\n"}