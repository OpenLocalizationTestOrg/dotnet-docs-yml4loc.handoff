### YamlMime:ManagedReference
items:
- uid: System.ModuleHandle
  commentId: T:System.ModuleHandle
  id: ModuleHandle
  children:
  - System.ModuleHandle.EmptyHandle
  - System.ModuleHandle.Equals(System.ModuleHandle)
  - System.ModuleHandle.Equals(System.Object)
  - System.ModuleHandle.GetHashCode
  - System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  - System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  - System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  - System.ModuleHandle.MDStreamVersion
  - System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)
  - System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)
  - System.ModuleHandle.ResolveFieldHandle(System.Int32)
  - System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  - System.ModuleHandle.ResolveMethodHandle(System.Int32)
  - System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  - System.ModuleHandle.ResolveTypeHandle(System.Int32)
  - System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  langs:
  - csharp
  name: ModuleHandle
  nameWithType: ModuleHandle
  fullName: System.ModuleHandle
  type: Struct
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Represents a runtime handle for a module.
  remarks: The <xref:System.ModuleHandle.ResolveFieldHandle%2A>, <xref:System.ModuleHandle.ResolveMethodHandle%2A>, and <xref:System.ModuleHandle.ResolveTypeHandle%2A> methods provide efficient resolution of metadata tokens to runtime handles for fields, methods, and types in the current module.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct ModuleHandle
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.EmptyHandle
  commentId: F:System.ModuleHandle.EmptyHandle
  id: EmptyHandle
  parent: System.ModuleHandle
  langs:
  - csharp
  name: EmptyHandle
  nameWithType: ModuleHandle.EmptyHandle
  fullName: ModuleHandle.EmptyHandle
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Represents an empty module handle.
  syntax:
    content: public static readonly ModuleHandle EmptyHandle;
    return:
      type: System.ModuleHandle
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.Equals(System.ModuleHandle)
  commentId: M:System.ModuleHandle.Equals(System.ModuleHandle)
  id: Equals(System.ModuleHandle)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: Equals(ModuleHandle)
  nameWithType: ModuleHandle.Equals(ModuleHandle)
  fullName: ModuleHandle.Equals(ModuleHandle)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a <xref href="System.Boolean"></xref> value indicating whether the specified <xref href="System.ModuleHandle"></xref> structure is equal to the current <xref href="System.ModuleHandle"></xref>.
  syntax:
    content: public bool Equals (ModuleHandle handle);
    parameters:
    - id: handle
      type: System.ModuleHandle
      description: The <xref href="System.ModuleHandle"></xref> structure to be compared with the current <xref href="System.ModuleHandle"></xref>.
    return:
      type: System.Boolean
      description: '`true` if <code>handle</code> is equal to the current <xref href="System.ModuleHandle"></xref> structure; otherwise `false`.'
  overload: System.ModuleHandle.Equals*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.Equals(System.Object)
  commentId: M:System.ModuleHandle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ModuleHandle.Equals(Object)
  fullName: ModuleHandle.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a <xref href="System.Boolean"></xref> value indicating whether the specified object is a <xref href="System.ModuleHandle"></xref> structure, and equal to the current <xref href="System.ModuleHandle"></xref>.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to be compared with the current <xref href="System.ModuleHandle"></xref> structure.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> is a <xref href="System.ModuleHandle"></xref> structure, and is equal to the current <xref href="System.ModuleHandle"></xref> structure; otherwise, `false`.'
  overload: System.ModuleHandle.Equals*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.GetHashCode
  commentId: M:System.ModuleHandle.GetHashCode
  id: GetHashCode
  parent: System.ModuleHandle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ModuleHandle.GetHashCode()
  fullName: ModuleHandle.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
  overload: System.ModuleHandle.GetHashCode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  commentId: M:System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  id: GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: GetRuntimeFieldHandleFromMetadataToken(Int32)
  nameWithType: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)
  fullName: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime handle for the field identified by the specified metadata token.
  syntax:
    content: public RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken (int fieldToken);
    parameters:
    - id: fieldToken
      type: System.Int32
      description: A metadata token that identifies a field in the module.
    return:
      type: System.RuntimeFieldHandle
      description: A <xref href="System.RuntimeFieldHandle"></xref> for the field identified by <code>fieldToken</code>.
  overload: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  commentId: M:System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  id: GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: GetRuntimeMethodHandleFromMetadataToken(Int32)
  nameWithType: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)
  fullName: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime method handle for the method or constructor identified by the specified metadata token.
  syntax:
    content: public RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken (int methodToken);
    parameters:
    - id: methodToken
      type: System.Int32
      description: A metadata token that identifies a method or constructor in the module.
    return:
      type: System.RuntimeMethodHandle
      description: A <xref href="System.RuntimeMethodHandle"></xref> for the method or constructor identified by <code>methodToken</code>.
  overload: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  commentId: M:System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  id: GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: GetRuntimeTypeHandleFromMetadataToken(Int32)
  nameWithType: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)
  fullName: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime type handle for the type identified by the specified metadata token.
  syntax:
    content: public RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken (int typeToken);
    parameters:
    - id: typeToken
      type: System.Int32
      description: A metadata token that identifies a type in the module.
    return:
      type: System.RuntimeTypeHandle
      description: A <xref href="System.RuntimeTypeHandle"></xref> for the type identified by <code>typeToken</code>.
  overload: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.MDStreamVersion
  commentId: P:System.ModuleHandle.MDStreamVersion
  id: MDStreamVersion
  parent: System.ModuleHandle
  langs:
  - csharp
  name: MDStreamVersion
  nameWithType: ModuleHandle.MDStreamVersion
  fullName: ModuleHandle.MDStreamVersion
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets the metadata stream version.
  remarks: >-
    > [!NOTE]

    >  For more information on the metadata header, see the Partition II: Metadata Definition and Semantics documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public int MDStreamVersion { get; }
    return:
      type: System.Int32
      description: A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.
  overload: System.ModuleHandle.MDStreamVersion*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)
  commentId: M:System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)
  id: op_Equality(System.ModuleHandle,System.ModuleHandle)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: op_Equality(ModuleHandle, ModuleHandle)
  nameWithType: ModuleHandle.op_Equality(ModuleHandle, ModuleHandle)
  fullName: ModuleHandle.op_Equality(ModuleHandle, ModuleHandle)
  type: Operator
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Tests whether two <xref href="System.ModuleHandle"></xref> structures are equal.
  remarks: The equivalent method for this operator is <xref:System.ModuleHandle.Equals%28System.ModuleHandle%2CSystem.ModuleHandle%29?displayProperty=fullName>
  syntax:
    content: public static bool op_Equality (ModuleHandle left, ModuleHandle right);
    parameters:
    - id: left
      type: System.ModuleHandle
      description: The <xref href="System.ModuleHandle"></xref> structure to the left of the equality operator.
    - id: right
      type: System.ModuleHandle
      description: The <xref href="System.ModuleHandle"></xref> structure to the right of the equality operator.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ModuleHandle"></xref> structures are equal; otherwise, `false`.'
  overload: System.ModuleHandle.op_Equality*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)
  commentId: M:System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)
  id: op_Inequality(System.ModuleHandle,System.ModuleHandle)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: op_Inequality(ModuleHandle, ModuleHandle)
  nameWithType: ModuleHandle.op_Inequality(ModuleHandle, ModuleHandle)
  fullName: ModuleHandle.op_Inequality(ModuleHandle, ModuleHandle)
  type: Operator
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Tests whether two <xref href="System.ModuleHandle"></xref> structures are unequal.
  remarks: The equivalent method for this operator is <xref:System.ModuleHandle.Equals%28System.ModuleHandle%2CSystem.ModuleHandle%29?displayProperty=fullName>
  syntax:
    content: public static bool op_Inequality (ModuleHandle left, ModuleHandle right);
    parameters:
    - id: left
      type: System.ModuleHandle
      description: The <xref href="System.ModuleHandle"></xref> structure to the left of the inequality operator.
    - id: right
      type: System.ModuleHandle
      description: The <xref href="System.ModuleHandle"></xref> structure to the right of the inequality operator.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ModuleHandle"></xref> structures are unequal; otherwise, `false`.'
  overload: System.ModuleHandle.op_Inequality*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32)
  commentId: M:System.ModuleHandle.ResolveFieldHandle(System.Int32)
  id: ResolveFieldHandle(System.Int32)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: ResolveFieldHandle(Int32)
  nameWithType: ModuleHandle.ResolveFieldHandle(Int32)
  fullName: ModuleHandle.ResolveFieldHandle(Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime handle for the field identified by the specified metadata token.
  remarks: "To resolve a metadata token that identifies a field whose parent `TypeSpec` has a signature containing element type `var` or `mvar`, use the <xref:System.ModuleHandle.ResolveFieldHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> method overload, which allows you to supply the necessary context.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."
  syntax:
    content: public RuntimeFieldHandle ResolveFieldHandle (int fieldToken);
    parameters:
    - id: fieldToken
      type: System.Int32
      description: A metadata token that identifies a field in the module.
    return:
      type: System.RuntimeFieldHandle
      description: A <xref href="System.RuntimeFieldHandle"></xref> for the field identified by <code>fieldToken</code>.
  overload: System.ModuleHandle.ResolveFieldHandle*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>metadataToken</code> is not a valid token in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is not a token for a field in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> identifies a field whose parent `TypeSpec` has a signature containing element type `var` or `mvar`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is called on an empty field handle.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  commentId: M:System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  id: ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  langs:
  - csharp
  name: ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  nameWithType: ModuleHandle.ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  fullName: ModuleHandle.ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime field handle for the field identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.
  remarks: >-
    > [!NOTE]

    >  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public RuntimeFieldHandle ResolveFieldHandle (int fieldToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);
    parameters:
    - id: fieldToken
      type: System.Int32
      description: A metadata token that identifies a field in the module.
    - id: typeInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of <xref href="System.RuntimeTypeHandle"></xref> structures representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.
    - id: methodInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of <xref href="System.RuntimeTypeHandle"></xref> structures representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.
    return:
      type: System.RuntimeFieldHandle
      description: A <xref href="System.RuntimeFieldHandle"></xref> for the field identified by <code>fieldToken</code>.
  overload: System.ModuleHandle.ResolveFieldHandle*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>metadataToken</code> is not a valid token in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is not a token for a field in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> identifies a field whose parent `TypeSpec` has a signature containing element type `var` or `mvar`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is called on an empty field handle.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>fieldToken</code> is not a valid token.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32)
  commentId: M:System.ModuleHandle.ResolveMethodHandle(System.Int32)
  id: ResolveMethodHandle(System.Int32)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: ResolveMethodHandle(Int32)
  nameWithType: ModuleHandle.ResolveMethodHandle(Int32)
  fullName: ModuleHandle.ResolveMethodHandle(Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime method handle for the method or constructor identified by the specified metadata token.
  remarks: "To resolve a metadata token for a `MethodSpec` whose signature contains element type `var` or `mvar`, use the <xref:System.ModuleHandle.ResolveMethodHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> method overload, which allows you to supply the necessary context.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."
  syntax:
    content: public RuntimeMethodHandle ResolveMethodHandle (int methodToken);
    parameters:
    - id: methodToken
      type: System.Int32
      description: A metadata token that identifies a method or constructor in the module.
    return:
      type: System.RuntimeMethodHandle
      description: A <xref href="System.RuntimeMethodHandle"></xref> for the method or constructor identified by <code>methodToken</code>.
  overload: System.ModuleHandle.ResolveMethodHandle*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>methodToken</code> is not a valid metadata token for a method in the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is not a token for a method or constructor in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `MethodSpec` whose signature contains element type `var` or `mvar`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is called on an empty method handle.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  commentId: M:System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  id: ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  langs:
  - csharp
  name: ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  nameWithType: ModuleHandle.ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  fullName: ModuleHandle.ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime method handle for the method or constructor identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.
  remarks: >-
    > [!NOTE]

    >  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public RuntimeMethodHandle ResolveMethodHandle (int methodToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);
    parameters:
    - id: methodToken
      type: System.Int32
      description: A metadata token that identifies a method or constructor in the module.
    - id: typeInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of <xref href="System.RuntimeTypeHandle"></xref> structures representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.
    - id: methodInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of <xref href="System.RuntimeTypeHandle"></xref> structures representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.
    return:
      type: System.RuntimeMethodHandle
      description: A <xref href="System.RuntimeMethodHandle"></xref> for the method or constructor identified by <code>methodToken</code>.
  overload: System.ModuleHandle.ResolveMethodHandle*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>methodToken</code> is not a valid metadata token for a method in the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is not a token for a method or constructor in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `MethodSpec` whose signature contains element type `var` or `mvar`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is called on an empty method handle.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>methodToken</code> is not a valid token.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32)
  commentId: M:System.ModuleHandle.ResolveTypeHandle(System.Int32)
  id: ResolveTypeHandle(System.Int32)
  parent: System.ModuleHandle
  langs:
  - csharp
  name: ResolveTypeHandle(Int32)
  nameWithType: ModuleHandle.ResolveTypeHandle(Int32)
  fullName: ModuleHandle.ResolveTypeHandle(Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime type handle for the type identified by the specified metadata token.
  remarks: "To resolve a metadata token for a `TypeSpec` whose signature contains element type `var` or `mvar`, use the <xref:System.ModuleHandle.ResolveTypeHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> method overload, which allows you to supply the necessary context.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."
  syntax:
    content: public RuntimeTypeHandle ResolveTypeHandle (int typeToken);
    parameters:
    - id: typeToken
      type: System.Int32
      description: A metadata token that identifies a type in the module.
    return:
      type: System.RuntimeTypeHandle
      description: A <xref href="System.RuntimeTypeHandle"></xref> for the type identified by <code>typeToken</code>.
  overload: System.ModuleHandle.ResolveTypeHandle*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>typeToken</code> is not a valid metadata token for a type in the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is not a token for a type in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `TypeSpec` whose signature contains element type `var` or `mvar`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is called on an empty type handle.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  commentId: M:System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  id: ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  langs:
  - csharp
  name: ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  nameWithType: ModuleHandle.ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  fullName: ModuleHandle.ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a runtime type handle for the type identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.
  remarks: >-
    > [!NOTE]

    >  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public RuntimeTypeHandle ResolveTypeHandle (int typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);
    parameters:
    - id: typeToken
      type: System.Int32
      description: A metadata token that identifies a type in the module.
    - id: typeInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of <xref href="System.RuntimeTypeHandle"></xref> structures representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.
    - id: methodInstantiationContext
      type: System.RuntimeTypeHandle[]
      description: An array of <xref href="System.RuntimeTypeHandle"></xref> structures objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.
    return:
      type: System.RuntimeTypeHandle
      description: A <xref href="System.RuntimeTypeHandle"></xref> for the type identified by <code>typeToken</code>.
  overload: System.ModuleHandle.ResolveTypeHandle*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>typeToken</code> is not a valid metadata token for a type in the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is not a token for a type in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `TypeSpec` whose signature contains element type `var` or `mvar`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is called on an empty type handle.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>typeToken</code> is not a valid token.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.BadImageFormatException
  parent: System
  isExternal: false
  name: BadImageFormatException
  nameWithType: BadImageFormatException
  fullName: System.BadImageFormatException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ModuleHandle.EmptyHandle
  parent: System.ModuleHandle
  isExternal: false
  name: EmptyHandle
  nameWithType: ModuleHandle.EmptyHandle
  fullName: ModuleHandle.EmptyHandle
- uid: System.ModuleHandle
  parent: System
  isExternal: false
  name: ModuleHandle
  nameWithType: ModuleHandle
  fullName: System.ModuleHandle
- uid: System.ModuleHandle.Equals(System.ModuleHandle)
  parent: System.ModuleHandle
  isExternal: false
  name: Equals(ModuleHandle)
  nameWithType: ModuleHandle.Equals(ModuleHandle)
  fullName: ModuleHandle.Equals(ModuleHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ModuleHandle.Equals(System.Object)
  parent: System.ModuleHandle
  isExternal: false
  name: Equals(Object)
  nameWithType: ModuleHandle.Equals(Object)
  fullName: ModuleHandle.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ModuleHandle.GetHashCode
  parent: System.ModuleHandle
  isExternal: false
  name: GetHashCode()
  nameWithType: ModuleHandle.GetHashCode()
  fullName: ModuleHandle.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  isExternal: false
  name: GetRuntimeFieldHandleFromMetadataToken(Int32)
  nameWithType: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)
  fullName: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: false
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
- uid: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  isExternal: false
  name: GetRuntimeMethodHandleFromMetadataToken(Int32)
  nameWithType: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)
  fullName: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: false
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)
  parent: System.ModuleHandle
  isExternal: false
  name: GetRuntimeTypeHandleFromMetadataToken(Int32)
  nameWithType: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)
  fullName: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.ModuleHandle.MDStreamVersion
  parent: System.ModuleHandle
  isExternal: false
  name: MDStreamVersion
  nameWithType: ModuleHandle.MDStreamVersion
  fullName: ModuleHandle.MDStreamVersion
- uid: System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)
  parent: System.ModuleHandle
  isExternal: false
  name: op_Equality(ModuleHandle, ModuleHandle)
  nameWithType: ModuleHandle.op_Equality(ModuleHandle, ModuleHandle)
  fullName: ModuleHandle.op_Equality(ModuleHandle, ModuleHandle)
- uid: System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)
  parent: System.ModuleHandle
  isExternal: false
  name: op_Inequality(ModuleHandle, ModuleHandle)
  nameWithType: ModuleHandle.op_Inequality(ModuleHandle, ModuleHandle)
  fullName: ModuleHandle.op_Inequality(ModuleHandle, ModuleHandle)
- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32)
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveFieldHandle(Int32)
  nameWithType: ModuleHandle.ResolveFieldHandle(Int32)
  fullName: ModuleHandle.ResolveFieldHandle(Int32)
- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  nameWithType: ModuleHandle.ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  fullName: ModuleHandle.ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
- uid: System.RuntimeTypeHandle[]
  parent: System
  isExternal: false
  name: RuntimeTypeHandle[]
  nameWithType: RuntimeTypeHandle[]
  fullName: System.RuntimeTypeHandle[]
  spec.csharp:
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    nameWithType: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32)
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveMethodHandle(Int32)
  nameWithType: ModuleHandle.ResolveMethodHandle(Int32)
  fullName: ModuleHandle.ResolveMethodHandle(Int32)
- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  nameWithType: ModuleHandle.ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  fullName: ModuleHandle.ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32)
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveTypeHandle(Int32)
  nameWithType: ModuleHandle.ResolveTypeHandle(Int32)
  fullName: ModuleHandle.ResolveTypeHandle(Int32)
- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  nameWithType: ModuleHandle.ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
  fullName: ModuleHandle.ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[])
- uid: System.ModuleHandle.Equals*
  parent: System.ModuleHandle
  isExternal: false
  name: Equals
  nameWithType: ModuleHandle.Equals
  fullName: ModuleHandle.Equals
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.GetHashCode*
  parent: System.ModuleHandle
  isExternal: false
  name: GetHashCode
  nameWithType: ModuleHandle.GetHashCode
  fullName: ModuleHandle.GetHashCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken*
  parent: System.ModuleHandle
  isExternal: false
  name: GetRuntimeFieldHandleFromMetadataToken
  nameWithType: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken
  fullName: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken*
  parent: System.ModuleHandle
  isExternal: false
  name: GetRuntimeMethodHandleFromMetadataToken
  nameWithType: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken
  fullName: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken*
  parent: System.ModuleHandle
  isExternal: false
  name: GetRuntimeTypeHandleFromMetadataToken
  nameWithType: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken
  fullName: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.MDStreamVersion*
  parent: System.ModuleHandle
  isExternal: false
  name: MDStreamVersion
  nameWithType: ModuleHandle.MDStreamVersion
  fullName: ModuleHandle.MDStreamVersion
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.op_Equality*
  parent: System.ModuleHandle
  isExternal: false
  name: op_Equality
  nameWithType: ModuleHandle.op_Equality
  fullName: ModuleHandle.op_Equality
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.op_Inequality*
  parent: System.ModuleHandle
  isExternal: false
  name: op_Inequality
  nameWithType: ModuleHandle.op_Inequality
  fullName: ModuleHandle.op_Inequality
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.ResolveFieldHandle*
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveFieldHandle
  nameWithType: ModuleHandle.ResolveFieldHandle
  fullName: ModuleHandle.ResolveFieldHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.ResolveMethodHandle*
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveMethodHandle
  nameWithType: ModuleHandle.ResolveMethodHandle
  fullName: ModuleHandle.ResolveMethodHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
- uid: System.ModuleHandle.ResolveTypeHandle*
  parent: System.ModuleHandle
  isExternal: false
  name: ResolveTypeHandle
  nameWithType: ModuleHandle.ResolveTypeHandle
  fullName: ModuleHandle.ResolveTypeHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ModuleHandle.xml
