{"nodes":[{"content":"Contains helper methods for using the MEF attributed programming model with composition.","nodes":[{"pos":[0,88],"content":"Contains helper methods for using the MEF attributed programming model with composition.","nodes":[{"content":"Contains helper methods for using the MEF attributed programming model with composition.","pos":[0,88]}]}],"pos":[3929,4018],"yaml":true},{"content":"Creates a part from the specified value and adds it to the specified batch.","nodes":[{"pos":[0,75],"content":"Creates a part from the specified value and adds it to the specified batch.","nodes":[{"content":"Creates a part from the specified value and adds it to the specified batch.","pos":[0,75]}]}],"pos":[5927,6003],"yaml":true},{"content":"The batch to add to.","nodes":[{"pos":[0,20],"content":"The batch to add to.","nodes":[{"content":"The batch to add to.","pos":[0,20]}]}],"pos":[6332,6353],"yaml":true},{"content":"The value to add.","nodes":[{"pos":[0,17],"content":"The value to add.","nodes":[{"content":"The value to add.","pos":[0,17]}]}],"pos":[6410,6428],"yaml":true},{"content":"The type of the new part.","nodes":[{"pos":[0,25],"content":"The type of the new part.","nodes":[{"content":"The type of the new part.","pos":[0,25]}]}],"pos":[6479,6505],"yaml":true},{"content":"The new part.","nodes":[{"pos":[0,13],"content":"The new part.","nodes":[{"content":"The new part.","pos":[0,13]}]}],"pos":[6608,6622],"yaml":true},{"content":"Creates a part from the specified value and adds it to the specified batch with the specified contract name.","nodes":[{"pos":[0,108],"content":"Creates a part from the specified value and adds it to the specified batch with the specified contract name.","nodes":[{"content":"Creates a part from the specified value and adds it to the specified batch with the specified contract name.","pos":[0,108]}]}],"pos":[8294,8403],"yaml":true},{"content":"The batch to add to.","nodes":[{"pos":[0,20],"content":"The batch to add to.","nodes":[{"content":"The batch to add to.","pos":[0,20]}]}],"pos":[8753,8774],"yaml":true},{"content":"The contract name of the export.","nodes":[{"pos":[0,32],"content":"The contract name of the export.","nodes":[{"content":"The contract name of the export.","pos":[0,32]}]}],"pos":[8842,8875],"yaml":true},{"content":"The value to add.","nodes":[{"pos":[0,17],"content":"The value to add.","nodes":[{"content":"The value to add.","pos":[0,17]}]}],"pos":[8932,8950],"yaml":true},{"content":"The type of the new part.","nodes":[{"pos":[0,25],"content":"The type of the new part.","nodes":[{"content":"The type of the new part.","pos":[0,25]}]}],"pos":[9001,9027],"yaml":true},{"content":"The new part.","nodes":[{"pos":[0,13],"content":"The new part.","nodes":[{"content":"The new part.","pos":[0,13]}]}],"pos":[9130,9144],"yaml":true},{"content":"Creates a composable part from the specified attributed object, and adds it to the specified composition batch.","nodes":[{"pos":[0,111],"content":"Creates a composable part from the specified attributed object, and adds it to the specified composition batch.","nodes":[{"content":"Creates a composable part from the specified attributed object, and adds it to the specified composition batch.","pos":[0,111]}]}],"pos":[10723,10835],"yaml":true},{"content":"The batch to add to.","nodes":[{"pos":[0,20],"content":"The batch to add to.","nodes":[{"content":"The batch to add to.","pos":[0,20]}]}],"pos":[11158,11179],"yaml":true},{"content":"The object to add.","nodes":[{"pos":[0,18],"content":"The object to add.","nodes":[{"content":"The object to add.","pos":[0,18]}]}],"pos":[11249,11268],"yaml":true},{"content":"The new part.","nodes":[{"pos":[0,13],"content":"The new part.","nodes":[{"content":"The new part.","pos":[0,13]}]}],"pos":[11371,11385],"yaml":true},{"content":"Creates a part from the specified value and composes it in the specified composition container.","nodes":[{"pos":[0,95],"content":"Creates a part from the specified value and composes it in the specified composition container.","nodes":[{"content":"Creates a part from the specified value and composes it in the specified composition container.","pos":[0,95]}]}],"pos":[13027,13123],"yaml":true},{"content":"The composition container to perform composition in.","nodes":[{"pos":[0,52],"content":"The composition container to perform composition in.","nodes":[{"content":"The composition container to perform composition in.","pos":[0,52]}]}],"pos":[13417,13470],"yaml":true},{"content":"The value to compose.","nodes":[{"pos":[0,21],"content":"The value to compose.","nodes":[{"content":"The value to compose.","pos":[0,21]}]}],"pos":[13527,13549],"yaml":true},{"content":"The type of the new part.","nodes":[{"pos":[0,25],"content":"The type of the new part.","nodes":[{"content":"The type of the new part.","pos":[0,25]}]}],"pos":[13600,13626],"yaml":true},{"content":"Creates a part from the specified object under the specified contract name and composes it in the specified composition container.","nodes":[{"pos":[0,130],"content":"Creates a part from the specified object under the specified contract name and composes it in the specified composition container.","nodes":[{"content":"Creates a part from the specified object under the specified contract name and composes it in the specified composition container.","pos":[0,130]}]}],"pos":[15350,15481],"yaml":true},{"content":"The composition container to perform composition in.","nodes":[{"pos":[0,52],"content":"The composition container to perform composition in.","nodes":[{"content":"The composition container to perform composition in.","pos":[0,52]}]}],"pos":[15796,15849],"yaml":true},{"content":"The contract name to export the part under.","nodes":[{"pos":[0,43],"content":"The contract name to export the part under.","nodes":[{"content":"The contract name to export the part under.","pos":[0,43]}]}],"pos":[15917,15961],"yaml":true},{"content":"The value to compose.","nodes":[{"pos":[0,21],"content":"The value to compose.","nodes":[{"content":"The value to compose.","pos":[0,21]}]}],"pos":[16018,16040],"yaml":true},{"content":"The type of the new part.","nodes":[{"pos":[0,25],"content":"The type of the new part.","nodes":[{"content":"The type of the new part.","pos":[0,25]}]}],"pos":[16091,16117],"yaml":true},{"content":"Creates composable parts from an array of attributed objects and composes them in the specified composition container.","nodes":[{"pos":[0,118],"content":"Creates composable parts from an array of attributed objects and composes them in the specified composition container.","nodes":[{"content":"Creates composable parts from an array of attributed objects and composes them in the specified composition container.","pos":[0,118]}]}],"pos":[17766,17885],"yaml":true},{"content":"The composition container to perform composition in.","nodes":[{"pos":[0,52],"content":"The composition container to perform composition in.","nodes":[{"content":"The composition container to perform composition in.","pos":[0,52]}]}],"pos":[18177,18230],"yaml":true},{"content":"An array of attributed objects to compose.","nodes":[{"pos":[0,42],"content":"An array of attributed objects to compose.","nodes":[{"content":"An array of attributed objects to compose.","pos":[0,42]}]}],"pos":[18303,18346],"yaml":true},{"content":"Creates a composable part from the specified attributed object.","nodes":[{"pos":[0,63],"content":"Creates a composable part from the specified attributed object.","nodes":[{"content":"Creates a composable part from the specified attributed object.","pos":[0,63]}]}],"pos":[19705,19769],"yaml":true},{"content":"The attributed object.","nodes":[{"pos":[0,22],"content":"The attributed object.","nodes":[{"content":"The attributed object.","pos":[0,22]}]}],"pos":[19988,20011],"yaml":true},{"content":"The created part.","nodes":[{"pos":[0,17],"content":"The created part.","nodes":[{"content":"The created part.","pos":[0,17]}]}],"pos":[20114,20132],"yaml":true},{"content":"Creates a composable part from the specified attributed object, using the specified part definition.","nodes":[{"pos":[0,100],"content":"Creates a composable part from the specified attributed object, using the specified part definition.","nodes":[{"content":"Creates a composable part from the specified attributed object, using the specified part definition.","pos":[0,100]}]}],"pos":[21777,21878],"yaml":true},{"content":"The definition of the new part.","nodes":[{"pos":[0,31],"content":"The definition of the new part.","nodes":[{"content":"The definition of the new part.","pos":[0,31]}]}],"pos":[22239,22271],"yaml":true},{"content":"The attributed object.","nodes":[{"pos":[0,22],"content":"The attributed object.","nodes":[{"content":"The attributed object.","pos":[0,22]}]}],"pos":[22341,22364],"yaml":true},{"content":"The created part.","nodes":[{"pos":[0,17],"content":"The created part.","nodes":[{"content":"The created part.","pos":[0,17]}]}],"pos":[22467,22485],"yaml":true},{"content":"Creates a composable part from the specified attributed object, using the specified reflection context.","nodes":[{"pos":[0,103],"content":"Creates a composable part from the specified attributed object, using the specified reflection context.","nodes":[{"content":"Creates a composable part from the specified attributed object, using the specified reflection context.","pos":[0,103]}]}],"pos":[24007,24111],"yaml":true},{"content":"The attributed object.","nodes":[{"pos":[0,22],"content":"The attributed object.","nodes":[{"content":"The attributed object.","pos":[0,22]}]}],"pos":[24385,24408],"yaml":true},{"content":"The reflection context for the part.","nodes":[{"pos":[0,36],"content":"The reflection context for the part.","nodes":[{"content":"The reflection context for the part.","pos":[0,36]}]}],"pos":[24503,24540],"yaml":true},{"content":"The created part.","nodes":[{"pos":[0,17],"content":"The created part.","nodes":[{"content":"The created part.","pos":[0,17]}]}],"pos":[24643,24661],"yaml":true},{"content":"<code>reflectionContext</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reflectionContext</code> is `null`."}],"pos":[24859,24901],"yaml":true},{"content":"Creates a part definition with the specified type and origin.","nodes":[{"pos":[0,61],"content":"Creates a part definition with the specified type and origin.","nodes":[{"content":"Creates a part definition with the specified type and origin.","pos":[0,61]}]}],"pos":[26465,26527],"yaml":true},{"content":"The type of the definition.","nodes":[{"pos":[0,27],"content":"The type of the definition.","nodes":[{"content":"The type of the definition.","pos":[0,27]}]}],"pos":[26815,26843],"yaml":true},{"content":"The origin of the definition.","nodes":[{"pos":[0,29],"content":"The origin of the definition.","nodes":[{"content":"The origin of the definition.","pos":[0,29]}]}],"pos":[26956,26986],"yaml":true},{"content":"The new part definition.","nodes":[{"pos":[0,24],"content":"The new part definition.","nodes":[{"content":"The new part definition.","pos":[0,24]}]}],"pos":[27099,27124],"yaml":true},{"content":"Creates a part definition with the specified type and origin.","nodes":[{"pos":[0,61],"content":"Creates a part definition with the specified type and origin.","nodes":[{"content":"Creates a part definition with the specified type and origin.","pos":[0,61]}]}],"pos":[28869,28931],"yaml":true},{"content":"The type of the definition.","nodes":[{"pos":[0,27],"content":"The type of the definition.","nodes":[{"content":"The type of the definition.","pos":[0,27]}]}],"pos":[29246,29274],"yaml":true},{"content":"The origin of the definition.","nodes":[{"pos":[0,29],"content":"The origin of the definition.","nodes":[{"content":"The origin of the definition.","pos":[0,29]}]}],"pos":[29387,29417],"yaml":true},{"content":"A value indicating whether or not the new definition should be discoverable.","nodes":[{"pos":[0,76],"content":"A value indicating whether or not the new definition should be discoverable.","nodes":[{"content":"A value indicating whether or not the new definition should be discoverable.","pos":[0,76]}]}],"pos":[29494,29571],"yaml":true},{"content":"The new part definition.","nodes":[{"pos":[0,24],"content":"The new part definition.","nodes":[{"content":"The new part definition.","pos":[0,24]}]}],"pos":[29684,29709],"yaml":true},{"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","nodes":[{"pos":[0,118],"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","nodes":[{"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","pos":[0,118]}]}],"pos":[31334,31453],"yaml":true},{"content":"The part to search.","nodes":[{"pos":[0,19],"content":"The part to search.","nodes":[{"content":"The part to search.","pos":[0,19]}]}],"pos":[31737,31757],"yaml":true},{"content":"The contract type.","nodes":[{"pos":[0,18],"content":"The contract type.","nodes":[{"content":"The contract type.","pos":[0,18]}]}],"pos":[31823,31842],"yaml":true},{"content":"`true` if <code>part</code> contains an export definition that matches <code>contractType</code>; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">part</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an export definition that matches <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">contractType</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>part</code> contains an export definition that matches <code>contractType</code>; otherwise, `false`."}],"pos":[31900,32020],"yaml":true},{"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","nodes":[{"pos":[0,118],"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","nodes":[{"content":"Returns a value that indicates whether the specified part contains an export that matches the specified contract type.","pos":[0,118]}]}],"pos":[33596,33715],"yaml":true},{"content":"The part to search.","nodes":[{"pos":[0,19],"content":"The part to search.","nodes":[{"content":"The part to search.","pos":[0,19]}]}],"pos":[33983,34003],"yaml":true},{"content":"The contract type.","nodes":[{"pos":[0,18],"content":"The contract type.","nodes":[{"content":"The contract type.","pos":[0,18]}]}],"pos":[34054,34073],"yaml":true},{"content":"`true` if <code>part</code> contains an export definition of type <code>T</code>; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">part</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an export definition of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>part</code> contains an export definition of type <code>T</code>; otherwise, `false`."}],"pos":[34131,34235],"yaml":true},{"content":"Gets a canonical contract name for the specified type.","nodes":[{"pos":[0,54],"content":"Gets a canonical contract name for the specified type.","nodes":[{"content":"Gets a canonical contract name for the specified type.","pos":[0,54]}]}],"pos":[35610,35665],"yaml":true},{"content":"The type to use.","nodes":[{"pos":[0,16],"content":"The type to use.","nodes":[{"content":"The type to use.","pos":[0,16]}]}],"pos":[35812,35829],"yaml":true},{"content":"A contract name created from the specified type.","nodes":[{"pos":[0,48],"content":"A contract name created from the specified type.","nodes":[{"content":"A contract name created from the specified type.","pos":[0,48]}]}],"pos":[35886,35935],"yaml":true},{"content":"Gets a metadata view object from a dictionary of loose metadata.","nodes":[{"pos":[0,64],"content":"Gets a metadata view object from a dictionary of loose metadata.","nodes":[{"content":"Gets a metadata view object from a dictionary of loose metadata.","pos":[0,64]}]}],"pos":[37603,37668],"yaml":true},{"content":"A collection of loose metadata.","nodes":[{"pos":[0,31],"content":"A collection of loose metadata.","nodes":[{"content":"A collection of loose metadata.","pos":[0,31]}]}],"pos":[37950,37982],"yaml":true},{"content":"The type of the metadata view object to get.","nodes":[{"pos":[0,44],"content":"The type of the metadata view object to get.","nodes":[{"content":"The type of the metadata view object to get.","pos":[0,44]}]}],"pos":[38045,38090],"yaml":true},{"content":"A metadata view containing the specified metadata.","nodes":[{"pos":[0,50],"content":"A metadata view containing the specified metadata.","nodes":[{"content":"A metadata view containing the specified metadata.","pos":[0,50]}]}],"pos":[38147,38198],"yaml":true},{"content":"Gets the unique identifier for the specified method.","nodes":[{"pos":[0,52],"content":"Gets the unique identifier for the specified method.","nodes":[{"content":"Gets the unique identifier for the specified method.","pos":[0,52]}]}],"pos":[39650,39703],"yaml":true},{"content":"The method to examine.","nodes":[{"pos":[0,22],"content":"The method to examine.","nodes":[{"content":"The method to examine.","pos":[0,22]}]}],"pos":[39895,39918],"yaml":true},{"content":"The unique identifier for the method.","nodes":[{"pos":[0,37],"content":"The unique identifier for the method.","nodes":[{"content":"The unique identifier for the method.","pos":[0,37]}]}],"pos":[39975,40013],"yaml":true},{"content":"Gets the unique identifier for the specified type.","nodes":[{"pos":[0,50],"content":"Gets the unique identifier for the specified type.","nodes":[{"content":"Gets the unique identifier for the specified type.","pos":[0,50]}]}],"pos":[41393,41444],"yaml":true},{"content":"The type to examine.","nodes":[{"pos":[0,20],"content":"The type to examine.","nodes":[{"content":"The type to examine.","pos":[0,20]}]}],"pos":[41591,41612],"yaml":true},{"content":"The unique identifier for the type.","nodes":[{"pos":[0,35],"content":"The unique identifier for the type.","nodes":[{"content":"The unique identifier for the type.","pos":[0,35]}]}],"pos":[41669,41705],"yaml":true},{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","nodes":[{"pos":[0,118],"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","nodes":[{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","pos":[0,118]}]}],"pos":[43325,43444],"yaml":true},{"content":"The part to search.","nodes":[{"pos":[0,19],"content":"The part to search.","nodes":[{"content":"The part to search.","pos":[0,19]}]}],"pos":[43728,43748],"yaml":true},{"content":"The contract type.","nodes":[{"pos":[0,18],"content":"The contract type.","nodes":[{"content":"The contract type.","pos":[0,18]}]}],"pos":[43814,43833],"yaml":true},{"content":"`true` if <code>part</code> contains an import definition that matches <code>contractType</code>; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">part</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an import definition that matches <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">contractType</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>part</code> contains an import definition that matches <code>contractType</code>; otherwise, `false`."}],"pos":[43891,44011],"yaml":true},{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","nodes":[{"pos":[0,141],"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","nodes":[{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","pos":[0,141]}]}],"pos":[45869,46011],"yaml":true},{"content":"The part to search.","nodes":[{"pos":[0,19],"content":"The part to search.","nodes":[{"content":"The part to search.","pos":[0,19]}]}],"pos":[46377,46397],"yaml":true},{"content":"The contract type.","nodes":[{"pos":[0,18],"content":"The contract type.","nodes":[{"content":"The contract type.","pos":[0,18]}]}],"pos":[46463,46482],"yaml":true},{"content":"The import cardinality.","nodes":[{"pos":[0,23],"content":"The import cardinality.","nodes":[{"content":"The import cardinality.","pos":[0,23]}]}],"pos":[46604,46628],"yaml":true},{"content":"`true` if <code>part</code> contains an import definition that matches <code>contractType</code> and <code>importCardinality</code>; otherwise, `false`.","nodes":[{"pos":[0,152],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">part</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an import definition that matches <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">contractType</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">importCardinality</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if <code>part</code> contains an import definition that matches <code>contractType</code> and <code>importCardinality</code>; otherwise, `false`."}],"pos":[46686,46841],"yaml":true},{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","nodes":[{"pos":[0,118],"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","nodes":[{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type.","pos":[0,118]}]}],"pos":[48417,48536],"yaml":true},{"content":"The part to search.","nodes":[{"pos":[0,19],"content":"The part to search.","nodes":[{"content":"The part to search.","pos":[0,19]}]}],"pos":[48804,48824],"yaml":true},{"content":"The contract type.","nodes":[{"pos":[0,18],"content":"The contract type.","nodes":[{"content":"The contract type.","pos":[0,18]}]}],"pos":[48875,48894],"yaml":true},{"content":"`true` if <code>part</code> contains an import definition of type <code>T</code>; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">part</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an import definition of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>part</code> contains an import definition of type <code>T</code>; otherwise, `false`."}],"pos":[48952,49056],"yaml":true},{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","nodes":[{"pos":[0,141],"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","nodes":[{"content":"Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.","pos":[0,141]}]}],"pos":[50881,51023],"yaml":true},{"content":"The part to search.","nodes":[{"pos":[0,19],"content":"The part to search.","nodes":[{"content":"The part to search.","pos":[0,19]}]}],"pos":[51373,51393],"yaml":true},{"content":"The import cardinality.","nodes":[{"pos":[0,23],"content":"The import cardinality.","nodes":[{"content":"The import cardinality.","pos":[0,23]}]}],"pos":[51515,51539],"yaml":true},{"content":"The contract type.","nodes":[{"pos":[0,18],"content":"The contract type.","nodes":[{"content":"The contract type.","pos":[0,18]}]}],"pos":[51590,51609],"yaml":true},{"content":"`true` if <code>part</code> contains an import definition of type <code>T</code> that has the specified import cardinality; otherwise, `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">part</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains an import definition of type <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">T</ph><ept id=\"p2\">&lt;/code&gt;</ept> that has the specified import cardinality; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>part</code> contains an import definition of type <code>T</code> that has the specified import cardinality; otherwise, `false`."}],"pos":[51667,51813],"yaml":true},{"content":"Composes the specified part by using the specified composition service, with recomposition disabled.","nodes":[{"pos":[0,100],"content":"Composes the specified part by using the specified composition service, with recomposition disabled.","nodes":[{"content":"Composes the specified part by using the specified composition service, with recomposition disabled.","pos":[0,100]}]}],"pos":[53443,53544],"yaml":true},{"content":"Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.","nodes":[{"pos":[0,146],"content":"Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind<ph id=\"ph1\">`compositionService`</ph> changes.","source":"Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes."}],"pos":[53555,53702],"yaml":true,"extradata":"MT"},{"content":"The composition service to use.","nodes":[{"pos":[0,31],"content":"The composition service to use.","nodes":[{"content":"The composition service to use.","pos":[0,31]}]}],"pos":[54052,54084],"yaml":true},{"content":"The part to compose.","nodes":[{"pos":[0,20],"content":"The part to compose.","nodes":[{"content":"The part to compose.","pos":[0,20]}]}],"pos":[54154,54175],"yaml":true},{"content":"The composed part.","nodes":[{"pos":[0,18],"content":"The composed part.","nodes":[{"content":"The composed part.","pos":[0,18]}]}],"pos":[54278,54297],"yaml":true},{"content":"Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.","nodes":[{"pos":[0,143],"content":"Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.","nodes":[{"content":"Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.","pos":[0,143]}]}],"pos":[56100,56244],"yaml":true},{"content":"The composition service to use.","nodes":[{"pos":[0,31],"content":"The composition service to use.","nodes":[{"content":"The composition service to use.","pos":[0,31]}]}],"pos":[56649,56681],"yaml":true},{"content":"The part to compose.","nodes":[{"pos":[0,20],"content":"The part to compose.","nodes":[{"content":"The part to compose.","pos":[0,20]}]}],"pos":[56751,56772],"yaml":true},{"content":"The reflection context for the part.","nodes":[{"pos":[0,36],"content":"The reflection context for the part.","nodes":[{"content":"The reflection context for the part.","pos":[0,36]}]}],"pos":[56867,56904],"yaml":true},{"content":"The composed part.","nodes":[{"pos":[0,18],"content":"The composed part.","nodes":[{"content":"The composed part.","pos":[0,18]}]}],"pos":[57007,57026],"yaml":true},{"content":"<code>reflectionContext</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;reflectionContext&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reflectionContext</code> is `null`."}],"pos":[57232,57274],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.AttributedModelServices\n  commentId: T:System.ComponentModel.Composition.AttributedModelServices\n  id: AttributedModelServices\n  children:\n  - System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)\n  - System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  - System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  - System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  - System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  langs:\n  - csharp\n  name: AttributedModelServices\n  nameWithType: AttributedModelServices\n  fullName: System.ComponentModel.Composition.AttributedModelServices\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Contains helper methods for using the MEF attributed programming model with composition.\n  syntax:\n    content: public static class AttributedModelServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)\n  id: AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: AddExportedValue<T>(CompositionBatch, T)\n  nameWithType: AttributedModelServices.AddExportedValue<T>(CompositionBatch, T)\n  fullName: AttributedModelServices.AddExportedValue<T>(CompositionBatch, T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part from the specified value and adds it to the specified batch.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);\n    parameters:\n    - id: batch\n      type: System.ComponentModel.Composition.Hosting.CompositionBatch\n      description: The batch to add to.\n    - id: exportedValue\n      type: T\n      description: The value to add.\n    typeParameters:\n    - id: T\n      description: The type of the new part.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The new part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)\n  id: AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: AddExportedValue<T>(CompositionBatch, String, T)\n  nameWithType: AttributedModelServices.AddExportedValue<T>(CompositionBatch, String, T)\n  fullName: AttributedModelServices.AddExportedValue<T>(CompositionBatch, String, T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part from the specified value and adds it to the specified batch with the specified contract name.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);\n    parameters:\n    - id: batch\n      type: System.ComponentModel.Composition.Hosting.CompositionBatch\n      description: The batch to add to.\n    - id: contractName\n      type: System.String\n      description: The contract name of the export.\n    - id: exportedValue\n      type: T\n      description: The value to add.\n    typeParameters:\n    - id: T\n      description: The type of the new part.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The new part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)\n  id: AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: AddPart(CompositionBatch, Object)\n  nameWithType: AttributedModelServices.AddPart(CompositionBatch, Object)\n  fullName: AttributedModelServices.AddPart(CompositionBatch, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object, and adds it to the specified composition batch.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);\n    parameters:\n    - id: batch\n      type: System.ComponentModel.Composition.Hosting.CompositionBatch\n      description: The batch to add to.\n    - id: attributedPart\n      type: System.Object\n      description: The object to add.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The new part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.AddPart*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)\n  id: ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: ComposeExportedValue<T>(CompositionContainer, T)\n  nameWithType: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, T)\n  fullName: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part from the specified value and composes it in the specified composition container.\n  syntax:\n    content: public static void ComposeExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);\n    parameters:\n    - id: container\n      type: System.ComponentModel.Composition.Hosting.CompositionContainer\n      description: The composition container to perform composition in.\n    - id: exportedValue\n      type: T\n      description: The value to compose.\n    typeParameters:\n    - id: T\n      description: The type of the new part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)\n  id: ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: ComposeExportedValue<T>(CompositionContainer, String, T)\n  nameWithType: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, String, T)\n  fullName: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, String, T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part from the specified object under the specified contract name and composes it in the specified composition container.\n  syntax:\n    content: public static void ComposeExportedValue<T> (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);\n    parameters:\n    - id: container\n      type: System.ComponentModel.Composition.Hosting.CompositionContainer\n      description: The composition container to perform composition in.\n    - id: contractName\n      type: System.String\n      description: The contract name to export the part under.\n    - id: exportedValue\n      type: T\n      description: The value to compose.\n    typeParameters:\n    - id: T\n      description: The type of the new part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])\n  id: ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: ComposeParts(CompositionContainer, Object[])\n  nameWithType: AttributedModelServices.ComposeParts(CompositionContainer, Object[])\n  fullName: AttributedModelServices.ComposeParts(CompositionContainer, Object[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates composable parts from an array of attributed objects and composes them in the specified composition container.\n  syntax:\n    content: public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts);\n    parameters:\n    - id: container\n      type: System.ComponentModel.Composition.Hosting.CompositionContainer\n      description: The composition container to perform composition in.\n    - id: attributedParts\n      type: System.Object[]\n      description: An array of attributed objects to compose.\n  overload: System.ComponentModel.Composition.AttributedModelServices.ComposeParts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  id: CreatePart(System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePart(Object)\n  nameWithType: AttributedModelServices.CreatePart(Object)\n  fullName: AttributedModelServices.CreatePart(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);\n    parameters:\n    - id: attributedPart\n      type: System.Object\n      description: The attributed object.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The created part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  id: CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePart(ComposablePartDefinition, Object)\n  nameWithType: AttributedModelServices.CreatePart(ComposablePartDefinition, Object)\n  fullName: AttributedModelServices.CreatePart(ComposablePartDefinition, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object, using the specified part definition.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The definition of the new part.\n    - id: attributedPart\n      type: System.Object\n      description: The attributed object.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The created part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  id: CreatePart(System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePart(Object, ReflectionContext)\n  nameWithType: AttributedModelServices.CreatePart(Object, ReflectionContext)\n  fullName: AttributedModelServices.CreatePart(Object, ReflectionContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a composable part from the specified attributed object, using the specified reflection context.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);\n    parameters:\n    - id: attributedPart\n      type: System.Object\n      description: The attributed object.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The reflection context for the part.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The created part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reflectionContext</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePartDefinition(Type, ICompositionElement)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement)\n  fullName: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part definition with the specified type and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the definition.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The origin of the definition.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The new part definition.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  id: CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: CreatePartDefinition(Type, ICompositionElement, Boolean)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement, Boolean)\n  fullName: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement, Boolean)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Creates a part definition with the specified type and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of the definition.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The origin of the definition.\n    - id: ensureIsDiscoverable\n      type: System.Boolean\n      description: A value indicating whether or not the new definition should be discoverable.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The new part definition.\n  overload: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  id: Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Exports(ComposablePartDefinition, Type)\n  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition, Type)\n  fullName: AttributedModelServices.Exports(ComposablePartDefinition, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an export that matches the specified contract type.\n  syntax:\n    content: public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: contractType\n      type: System.Type\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>part</code> contains an export definition that matches <code>contractType</code>; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.AttributedModelServices.Exports*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  id: Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Exports<T>(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Exports<T>(ComposablePartDefinition)\n  fullName: AttributedModelServices.Exports<T>(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an export that matches the specified contract type.\n  syntax:\n    content: public static bool Exports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    typeParameters:\n    - id: T\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>part</code> contains an export definition of type <code>T</code>; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.AttributedModelServices.Exports``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  id: GetContractName(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetContractName(Type)\n  nameWithType: AttributedModelServices.GetContractName(Type)\n  fullName: AttributedModelServices.GetContractName(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets a canonical contract name for the specified type.\n  syntax:\n    content: public static string GetContractName (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to use.\n    return:\n      type: System.String\n      description: A contract name created from the specified type.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetContractName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  id: GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetMetadataView<TMetadataView>(IDictionary<String,Object>)\n  nameWithType: AttributedModelServices.GetMetadataView<TMetadataView>(IDictionary<String,Object>)\n  fullName: AttributedModelServices.GetMetadataView<TMetadataView>(IDictionary<String,Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets a metadata view object from a dictionary of loose metadata.\n  syntax:\n    content: public static TMetadataView GetMetadataView<TMetadataView> (System.Collections.Generic.IDictionary<string,object> metadata);\n    parameters:\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A collection of loose metadata.\n    typeParameters:\n    - id: TMetadataView\n      description: The type of the metadata view object to get.\n    return:\n      type: TMetadataView\n      description: A metadata view containing the specified metadata.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  id: GetTypeIdentity(System.Reflection.MethodInfo)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetTypeIdentity(MethodInfo)\n  nameWithType: AttributedModelServices.GetTypeIdentity(MethodInfo)\n  fullName: AttributedModelServices.GetTypeIdentity(MethodInfo)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the unique identifier for the specified method.\n  syntax:\n    content: public static string GetTypeIdentity (System.Reflection.MethodInfo method);\n    parameters:\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: The method to examine.\n    return:\n      type: System.String\n      description: The unique identifier for the method.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  id: GetTypeIdentity(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: GetTypeIdentity(Type)\n  nameWithType: AttributedModelServices.GetTypeIdentity(Type)\n  fullName: AttributedModelServices.GetTypeIdentity(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the unique identifier for the specified type.\n  syntax:\n    content: public static string GetTypeIdentity (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to examine.\n    return:\n      type: System.String\n      description: The unique identifier for the type.\n  overload: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition, Type)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition, Type)\n  fullName: AttributedModelServices.Imports(ComposablePartDefinition, Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an import that matches the specified contract type.\n  syntax:\n    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: contractType\n      type: System.Type\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>part</code> contains an import definition that matches <code>contractType</code>; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports(ComposablePartDefinition, Type, ImportCardinality)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition, Type, ImportCardinality)\n  fullName: AttributedModelServices.Imports(ComposablePartDefinition, Type, ImportCardinality)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.\n  syntax:\n    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: contractType\n      type: System.Type\n      description: The contract type.\n    - id: importCardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The import cardinality.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>part</code> contains an import definition that matches <code>contractType</code> and <code>importCardinality</code>; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  id: Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports<T>(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Imports<T>(ComposablePartDefinition)\n  fullName: AttributedModelServices.Imports<T>(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an import that matches the specified contract type.\n  syntax:\n    content: public static bool Imports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    typeParameters:\n    - id: T\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>part</code> contains an import definition of type <code>T</code>; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  id: Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: Imports<T>(ComposablePartDefinition, ImportCardinality)\n  nameWithType: AttributedModelServices.Imports<T>(ComposablePartDefinition, ImportCardinality)\n  fullName: AttributedModelServices.Imports<T>(ComposablePartDefinition, ImportCardinality)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.\n  syntax:\n    content: public static bool Imports<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to search.\n    - id: importCardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The import cardinality.\n    typeParameters:\n    - id: T\n      description: The contract type.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>part</code> contains an import definition of type <code>T</code> that has the specified import cardinality; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.AttributedModelServices.Imports``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  id: SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: SatisfyImportsOnce(ICompositionService, Object)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object)\n  fullName: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Composes the specified part by using the specified composition service, with recomposition disabled.\n  remarks: Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);\n    parameters:\n    - id: compositionService\n      type: System.ComponentModel.Composition.ICompositionService\n      description: The composition service to use.\n    - id: attributedPart\n      type: System.Object\n      description: The part to compose.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The composed part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  commentId: M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  id: SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  langs:\n  - csharp\n  name: SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  fullName: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);\n    parameters:\n    - id: compositionService\n      type: System.ComponentModel.Composition.ICompositionService\n      description: The composition service to use.\n    - id: attributedPart\n      type: System.Object\n      description: The part to compose.\n    - id: reflectionContext\n      type: System.Reflection.ReflectionContext\n      description: The reflection context for the part.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The composed part.\n  overload: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reflectionContext</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddExportedValue<T>(CompositionBatch, T)\n  nameWithType: AttributedModelServices.AddExportedValue<T>(CompositionBatch, T)\n  fullName: AttributedModelServices.AddExportedValue<T>(CompositionBatch, T)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePart\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePart\n  nameWithType: ComposablePart\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePart\n- uid: System.ComponentModel.Composition.Hosting.CompositionBatch\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: CompositionBatch\n  nameWithType: CompositionBatch\n  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddExportedValue<T>(CompositionBatch, String, T)\n  nameWithType: AttributedModelServices.AddExportedValue<T>(CompositionBatch, String, T)\n  fullName: AttributedModelServices.AddExportedValue<T>(CompositionBatch, String, T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddPart(CompositionBatch, Object)\n  nameWithType: AttributedModelServices.AddPart(CompositionBatch, Object)\n  fullName: AttributedModelServices.AddPart(CompositionBatch, Object)\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeExportedValue<T>(CompositionContainer, T)\n  nameWithType: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, T)\n  fullName: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, T)\n- uid: System.ComponentModel.Composition.Hosting.CompositionContainer\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: CompositionContainer\n  nameWithType: CompositionContainer\n  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeExportedValue<T>(CompositionContainer, String, T)\n  nameWithType: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, String, T)\n  fullName: AttributedModelServices.ComposeExportedValue<T>(CompositionContainer, String, T)\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeParts(CompositionContainer, Object[])\n  nameWithType: AttributedModelServices.ComposeParts(CompositionContainer, Object[])\n  fullName: AttributedModelServices.ComposeParts(CompositionContainer, Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart(Object)\n  nameWithType: AttributedModelServices.CreatePart(Object)\n  fullName: AttributedModelServices.CreatePart(Object)\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart(ComposablePartDefinition, Object)\n  nameWithType: AttributedModelServices.CreatePart(ComposablePartDefinition, Object)\n  fullName: AttributedModelServices.CreatePart(ComposablePartDefinition, Object)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart(Object, ReflectionContext)\n  nameWithType: AttributedModelServices.CreatePart(Object, ReflectionContext)\n  fullName: AttributedModelServices.CreatePart(Object, ReflectionContext)\n- uid: System.Reflection.ReflectionContext\n  parent: System.Reflection\n  isExternal: false\n  name: ReflectionContext\n  nameWithType: ReflectionContext\n  fullName: System.Reflection.ReflectionContext\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePartDefinition(Type, ICompositionElement)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement)\n  fullName: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.Primitives.ICompositionElement\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ICompositionElement\n  nameWithType: ICompositionElement\n  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePartDefinition(Type, ICompositionElement, Boolean)\n  nameWithType: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement, Boolean)\n  fullName: AttributedModelServices.CreatePartDefinition(Type, ICompositionElement, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports(ComposablePartDefinition, Type)\n  nameWithType: AttributedModelServices.Exports(ComposablePartDefinition, Type)\n  fullName: AttributedModelServices.Exports(ComposablePartDefinition, Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports<T>(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Exports<T>(ComposablePartDefinition)\n  fullName: AttributedModelServices.Exports<T>(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetContractName(Type)\n  nameWithType: AttributedModelServices.GetContractName(Type)\n  fullName: AttributedModelServices.GetContractName(Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetMetadataView<TMetadataView>(IDictionary<String,Object>)\n  nameWithType: AttributedModelServices.GetMetadataView<TMetadataView>(IDictionary<String,Object>)\n  fullName: AttributedModelServices.GetMetadataView<TMetadataView>(IDictionary<String,Object>)\n- uid: TMetadataView\n  isExternal: true\n  name: TMetadataView\n  nameWithType: TMetadataView\n  fullName: TMetadataView\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetTypeIdentity(MethodInfo)\n  nameWithType: AttributedModelServices.GetTypeIdentity(MethodInfo)\n  fullName: AttributedModelServices.GetTypeIdentity(MethodInfo)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetTypeIdentity(Type)\n  nameWithType: AttributedModelServices.GetTypeIdentity(Type)\n  fullName: AttributedModelServices.GetTypeIdentity(Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports(ComposablePartDefinition, Type)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition, Type)\n  fullName: AttributedModelServices.Imports(ComposablePartDefinition, Type)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports(ComposablePartDefinition, Type, ImportCardinality)\n  nameWithType: AttributedModelServices.Imports(ComposablePartDefinition, Type, ImportCardinality)\n  fullName: AttributedModelServices.Imports(ComposablePartDefinition, Type, ImportCardinality)\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports<T>(ComposablePartDefinition)\n  nameWithType: AttributedModelServices.Imports<T>(ComposablePartDefinition)\n  fullName: AttributedModelServices.Imports<T>(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports<T>(ComposablePartDefinition, ImportCardinality)\n  nameWithType: AttributedModelServices.Imports<T>(ComposablePartDefinition, ImportCardinality)\n  fullName: AttributedModelServices.Imports<T>(ComposablePartDefinition, ImportCardinality)\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce(ICompositionService, Object)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object)\n  fullName: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object)\n- uid: System.ComponentModel.Composition.ICompositionService\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ICompositionService\n  nameWithType: ICompositionService\n  fullName: System.ComponentModel.Composition.ICompositionService\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  fullName: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddExportedValue<T>\n  nameWithType: AttributedModelServices.AddExportedValue<T>\n  fullName: AttributedModelServices.AddExportedValue<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.AddPart*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: AddPart\n  nameWithType: AttributedModelServices.AddPart\n  fullName: AttributedModelServices.AddPart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeExportedValue<T>\n  nameWithType: AttributedModelServices.ComposeExportedValue<T>\n  fullName: AttributedModelServices.ComposeExportedValue<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.ComposeParts*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: ComposeParts\n  nameWithType: AttributedModelServices.ComposeParts\n  fullName: AttributedModelServices.ComposeParts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePart*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePart\n  nameWithType: AttributedModelServices.CreatePart\n  fullName: AttributedModelServices.CreatePart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: CreatePartDefinition\n  nameWithType: AttributedModelServices.CreatePartDefinition\n  fullName: AttributedModelServices.CreatePartDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports\n  nameWithType: AttributedModelServices.Exports\n  fullName: AttributedModelServices.Exports\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.Exports``1*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Exports<T>\n  nameWithType: AttributedModelServices.Exports<T>\n  fullName: AttributedModelServices.Exports<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetContractName*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetContractName\n  nameWithType: AttributedModelServices.GetContractName\n  fullName: AttributedModelServices.GetContractName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetMetadataView<TMetadataView>\n  nameWithType: AttributedModelServices.GetMetadataView<TMetadataView>\n  fullName: AttributedModelServices.GetMetadataView<TMetadataView>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: GetTypeIdentity\n  nameWithType: AttributedModelServices.GetTypeIdentity\n  fullName: AttributedModelServices.GetTypeIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports\n  nameWithType: AttributedModelServices.Imports\n  fullName: AttributedModelServices.Imports\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.Imports``1*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: Imports<T>\n  nameWithType: AttributedModelServices.Imports<T>\n  fullName: AttributedModelServices.Imports<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce*\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce\n  nameWithType: AttributedModelServices.SatisfyImportsOnce\n  fullName: AttributedModelServices.SatisfyImportsOnce\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/AttributedModelServices.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}