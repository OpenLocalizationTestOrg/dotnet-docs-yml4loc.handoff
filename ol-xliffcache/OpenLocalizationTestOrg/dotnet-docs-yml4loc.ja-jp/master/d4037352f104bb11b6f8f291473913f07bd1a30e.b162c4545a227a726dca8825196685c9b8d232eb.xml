{"nodes":[{"content":"Defines events for a class.","nodes":[{"pos":[0,27],"content":"Defines events for a class.","nodes":[{"content":"Defines events for a class.","pos":[0,27]}]}],"pos":[1713,1741],"yaml":true},{"content":"An `EventBuilder` is always associated with a `TypeBuilder`. The TypeBuilder.DefineEvent method will return a new `EventBuilder` to a client.","nodes":[{"pos":[0,141],"content":"An `EventBuilder` is always associated with a `TypeBuilder`. The TypeBuilder.DefineEvent method will return a new `EventBuilder` to a client.","nodes":[{"content":"An <ph id=\"ph1\">`EventBuilder`</ph> is always associated with a <ph id=\"ph2\">`TypeBuilder`</ph>.","pos":[0,60],"source":"An `EventBuilder` is always associated with a `TypeBuilder`."},{"content":"The TypeBuilder.DefineEvent method will return a new <ph id=\"ph1\">`EventBuilder`</ph> to a client.","pos":[61,141],"source":" The TypeBuilder.DefineEvent method will return a new `EventBuilder` to a client."}]}],"pos":[1752,1894],"yaml":true,"extradata":"MT"},{"content":"Adds one of the \"other\" methods associated with this event. \"Other\" methods are methods other than the \"on\" and \"raise\" methods associated with an event. This function can be called many times to add as many \"other\" methods.","nodes":[{"pos":[0,224],"content":"Adds one of the \"other\" methods associated with this event. \"Other\" methods are methods other than the \"on\" and \"raise\" methods associated with an event. This function can be called many times to add as many \"other\" methods.","nodes":[{"content":"Adds one of the \"other\" methods associated with this event. \"Other\" methods are methods other than the \"on\" and \"raise\" methods associated with an event. This function can be called many times to add as many \"other\" methods.","pos":[0,224],"nodes":[{"content":"Adds one of the \"other\" methods associated with this event.","pos":[0,59]},{"content":"\"Other\" methods are methods other than the \"on\" and \"raise\" methods associated with an event.","pos":[60,153]},{"content":"This function can be called many times to add as many \"other\" methods.","pos":[154,224]}]}]}],"pos":[4736,4961],"yaml":true},{"content":"A `MethodBuilder` object that represents the other method.","nodes":[{"pos":[0,58],"content":"A <ph id=\"ph1\">`MethodBuilder`</ph> object that represents the other method.","source":"A `MethodBuilder` object that represents the other method."}],"pos":[5165,5224],"yaml":true},{"content":"<code>mdBuilder</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;mdBuilder&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>mdBuilder</code> is `null`."}],"pos":[5404,5438],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has been called on the enclosing type.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type."}],"pos":[5548,5654],"yaml":true},{"content":"Returns the token for this event.","nodes":[{"pos":[0,33],"content":"Returns the token for this event.","nodes":[{"content":"Returns the token for this event.","pos":[0,33]}]}],"pos":[6817,6851],"yaml":true},{"content":"Returns the `EventToken` for this event.","nodes":[{"pos":[0,40],"content":"Returns the <ph id=\"ph1\">`EventToken`</ph> for this event.","source":"Returns the `EventToken` for this event."}],"pos":[7029,7070],"yaml":true},{"content":"Sets the method used to subscribe to this event.","nodes":[{"pos":[0,48],"content":"Sets the method used to subscribe to this event.","nodes":[{"content":"Sets the method used to subscribe to this event.","pos":[0,48]}]}],"pos":[8363,8412],"yaml":true},{"content":"A `MethodBuilder` object that represents the method used to subscribe to this event.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">`MethodBuilder`</ph> object that represents the method used to subscribe to this event.","source":"A `MethodBuilder` object that represents the method used to subscribe to this event."}],"pos":[8616,8701],"yaml":true},{"content":"<code>mdBuilder</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;mdBuilder&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>mdBuilder</code> is `null`."}],"pos":[8881,8915],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has been called on the enclosing type.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type."}],"pos":[9025,9131],"yaml":true},{"content":"Sets a custom attribute using a custom attribute builder.","nodes":[{"pos":[0,57],"content":"Sets a custom attribute using a custom attribute builder.","nodes":[{"content":"Sets a custom attribute using a custom attribute builder.","pos":[0,57]}]}],"pos":[10558,10616],"yaml":true},{"content":"An instance of a helper class to describe the custom attribute.","nodes":[{"pos":[0,63],"content":"An instance of a helper class to describe the custom attribute.","nodes":[{"content":"An instance of a helper class to describe the custom attribute.","pos":[0,63]}]}],"pos":[10850,10914],"yaml":true},{"content":"<code>con</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>con</code> is `null`."}],"pos":[11098,11126],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has been called on the enclosing type.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type."}],"pos":[11236,11342],"yaml":true},{"content":"Set a custom attribute using a specified custom attribute blob.","nodes":[{"pos":[0,63],"content":"Set a custom attribute using a specified custom attribute blob.","nodes":[{"content":"Set a custom attribute using a specified custom attribute blob.","pos":[0,63]}]}],"pos":[12778,12842],"yaml":true},{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"pos":[0,414],"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format <ph id=\"ph1\">`binaryAttribute`</ph>.","pos":[0,117],"source":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[118,414],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]}],"pos":[12853,13268],"yaml":true,"extradata":"MT"},{"content":"The constructor for the custom attribute.","nodes":[{"pos":[0,41],"content":"The constructor for the custom attribute.","nodes":[{"content":"The constructor for the custom attribute.","pos":[0,41]}]}],"pos":[13548,13590],"yaml":true},{"content":"A byte blob representing the attributes.","nodes":[{"pos":[0,40],"content":"A byte blob representing the attributes.","nodes":[{"content":"A byte blob representing the attributes.","pos":[0,40]}]}],"pos":[13661,13702],"yaml":true},{"content":"<code>con</code> or <code>binaryAttribute</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binaryAttribute&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>con</code> or <code>binaryAttribute</code> is `null`."}],"pos":[13886,13946],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has been called on the enclosing type.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type."}],"pos":[14056,14162],"yaml":true},{"content":"Sets the method used to raise this event.","nodes":[{"pos":[0,41],"content":"Sets the method used to raise this event.","nodes":[{"content":"Sets the method used to raise this event.","pos":[0,41]}]}],"pos":[15586,15628],"yaml":true},{"content":"A `MethodBuilder` object that represents the method used to raise this event.","nodes":[{"pos":[0,77],"content":"A <ph id=\"ph1\">`MethodBuilder`</ph> object that represents the method used to raise this event.","source":"A `MethodBuilder` object that represents the method used to raise this event."}],"pos":[15832,15910],"yaml":true},{"content":"<code>mdBuilder</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;mdBuilder&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>mdBuilder</code> is `null`."}],"pos":[16090,16124],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has been called on the enclosing type.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type."}],"pos":[16234,16340],"yaml":true},{"content":"Sets the method used to unsubscribe to this event.","nodes":[{"pos":[0,50],"content":"Sets the method used to unsubscribe to this event.","nodes":[{"content":"Sets the method used to unsubscribe to this event.","pos":[0,50]}]}],"pos":[17707,17758],"yaml":true},{"content":"A `MethodBuilder` object that represents the method used to unsubscribe to this event.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">`MethodBuilder`</ph> object that represents the method used to unsubscribe to this event.","source":"A `MethodBuilder` object that represents the method used to unsubscribe to this event."}],"pos":[17965,18052],"yaml":true},{"content":"<code>mdBuilder</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;mdBuilder&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>mdBuilder</code> is `null`."}],"pos":[18235,18269],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has been called on the enclosing type.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type."}],"pos":[18379,18485],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[20157,20225],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[20236,20423],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[20629,20672],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[20737,20776],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[20838,20871],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[20931,20983],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[21047,21121],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[21349,21429],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[22830,22945],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[22956,23141],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[23315,23347],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[23407,23455],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[23518,23579],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[23805,23885],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[25187,25280],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[25291,25481],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[25639,25740],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[25971,26051],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[27737,27801],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[27812,27992],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[28261,28284],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[28342,28385],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[28445,28497],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[28558,28600],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[28667,28827],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[28893,28951],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[29017,29077],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[29141,29192],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[29413,29493],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.EventBuilder\n  commentId: T:System.Reflection.Emit.EventBuilder\n  id: EventBuilder\n  children:\n  - System.Reflection.Emit.EventBuilder.#ctor\n  - System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.GetEventToken\n  - System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: EventBuilder\n  nameWithType: EventBuilder\n  fullName: System.Reflection.Emit.EventBuilder\n  type: Class\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines events for a class.\n  remarks: An `EventBuilder` is always associated with a `TypeBuilder`. The TypeBuilder.DefineEvent method will return a new `EventBuilder` to a client.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class EventBuilder : System.Runtime.InteropServices._EventBuilder\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.InteropServices._EventBuilder\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.#ctor\n  commentId: M:System.Reflection.Emit.EventBuilder.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: EventBuilder()\n  nameWithType: EventBuilder.EventBuilder()\n  fullName: EventBuilder.EventBuilder()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public EventBuilder ();\n    parameters: []\n  overload: System.Reflection.Emit.EventBuilder.#ctor*\n  exceptions: []\n  version:\n  - xamarinios-10.8\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  id: AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: AddOtherMethod(MethodBuilder)\n  nameWithType: EventBuilder.AddOtherMethod(MethodBuilder)\n  fullName: EventBuilder.AddOtherMethod(MethodBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Adds one of the \"other\" methods associated with this event. \"Other\" methods are methods other than the \"on\" and \"raise\" methods associated with an event. This function can be called many times to add as many \"other\" methods.\n  syntax:\n    content: public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: A `MethodBuilder` object that represents the other method.\n  overload: System.Reflection.Emit.EventBuilder.AddOtherMethod*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mdBuilder</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.GetEventToken\n  commentId: M:System.Reflection.Emit.EventBuilder.GetEventToken\n  id: GetEventToken\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: GetEventToken()\n  nameWithType: EventBuilder.GetEventToken()\n  fullName: EventBuilder.GetEventToken()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token for this event.\n  syntax:\n    content: public System.Reflection.Emit.EventToken GetEventToken ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.EventToken\n      description: Returns the `EventToken` for this event.\n  overload: System.Reflection.Emit.EventBuilder.GetEventToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  id: SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: SetAddOnMethod(MethodBuilder)\n  nameWithType: EventBuilder.SetAddOnMethod(MethodBuilder)\n  fullName: EventBuilder.SetAddOnMethod(MethodBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the method used to subscribe to this event.\n  syntax:\n    content: public void SetAddOnMethod (System.Reflection.Emit.MethodBuilder mdBuilder);\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: A `MethodBuilder` object that represents the method used to subscribe to this event.\n  overload: System.Reflection.Emit.EventBuilder.SetAddOnMethod*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mdBuilder</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets a custom attribute using a custom attribute builder.\n  syntax:\n    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: An instance of a helper class to describe the custom attribute.\n  overload: System.Reflection.Emit.EventBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: EventBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: EventBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute using a specified custom attribute blob.\n  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: The constructor for the custom attribute.\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: A byte blob representing the attributes.\n  overload: System.Reflection.Emit.EventBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> or <code>binaryAttribute</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  id: SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: SetRaiseMethod(MethodBuilder)\n  nameWithType: EventBuilder.SetRaiseMethod(MethodBuilder)\n  fullName: EventBuilder.SetRaiseMethod(MethodBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the method used to raise this event.\n  syntax:\n    content: public void SetRaiseMethod (System.Reflection.Emit.MethodBuilder mdBuilder);\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: A `MethodBuilder` object that represents the method used to raise this event.\n  overload: System.Reflection.Emit.EventBuilder.SetRaiseMethod*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mdBuilder</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  commentId: M:System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  id: SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: SetRemoveOnMethod(MethodBuilder)\n  nameWithType: EventBuilder.SetRemoveOnMethod(MethodBuilder)\n  fullName: EventBuilder.SetRemoveOnMethod(MethodBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the method used to unsubscribe to this event.\n  syntax:\n    content: public void SetRemoveOnMethod (System.Reflection.Emit.MethodBuilder mdBuilder);\n    parameters:\n    - id: mdBuilder\n      type: System.Reflection.Emit.MethodBuilder\n      description: A `MethodBuilder` object that represents the method used to unsubscribe to this event.\n  overload: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mdBuilder</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has been called on the enclosing type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: _EventBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: EventBuilder._EventBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: EventBuilder._EventBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _EventBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: _EventBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: EventBuilder._EventBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: EventBuilder._EventBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _EventBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: _EventBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: EventBuilder._EventBuilder.GetTypeInfoCount(UInt32)\n  fullName: EventBuilder._EventBuilder.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _EventBuilder.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.EventBuilder\n  langs:\n  - csharp\n  name: _EventBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: EventBuilder._EventBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: EventBuilder._EventBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _EventBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.Emit.EventBuilder.#ctor\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: EventBuilder()\n  nameWithType: EventBuilder.EventBuilder()\n  fullName: EventBuilder.EventBuilder()\n- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: AddOtherMethod(MethodBuilder)\n  nameWithType: EventBuilder.AddOtherMethod(MethodBuilder)\n  fullName: EventBuilder.AddOtherMethod(MethodBuilder)\n- uid: System.Reflection.Emit.MethodBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodBuilder\n  nameWithType: MethodBuilder\n  fullName: System.Reflection.Emit.MethodBuilder\n- uid: System.Reflection.Emit.EventBuilder.GetEventToken\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: GetEventToken()\n  nameWithType: EventBuilder.GetEventToken()\n  fullName: EventBuilder.GetEventToken()\n- uid: System.Reflection.Emit.EventToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: EventToken\n  nameWithType: EventToken\n  fullName: System.Reflection.Emit.EventToken\n- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetAddOnMethod(MethodBuilder)\n  nameWithType: EventBuilder.SetAddOnMethod(MethodBuilder)\n  fullName: EventBuilder.SetAddOnMethod(MethodBuilder)\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: EventBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: EventBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetRaiseMethod(MethodBuilder)\n  nameWithType: EventBuilder.SetRaiseMethod(MethodBuilder)\n  fullName: EventBuilder.SetRaiseMethod(MethodBuilder)\n- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetRemoveOnMethod(MethodBuilder)\n  nameWithType: EventBuilder.SetRemoveOnMethod(MethodBuilder)\n  fullName: EventBuilder.SetRemoveOnMethod(MethodBuilder)\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: _EventBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: EventBuilder._EventBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: EventBuilder._EventBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: _EventBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: EventBuilder._EventBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: EventBuilder._EventBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: _EventBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: EventBuilder._EventBuilder.GetTypeInfoCount(UInt32)\n  fullName: EventBuilder._EventBuilder.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: _EventBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: EventBuilder._EventBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: EventBuilder._EventBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.EventBuilder.#ctor*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: EventBuilder\n  nameWithType: EventBuilder.EventBuilder\n  fullName: EventBuilder.EventBuilder\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: AddOtherMethod\n  nameWithType: EventBuilder.AddOtherMethod\n  fullName: EventBuilder.AddOtherMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.GetEventToken*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: GetEventToken\n  nameWithType: EventBuilder.GetEventToken\n  fullName: EventBuilder.GetEventToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetAddOnMethod\n  nameWithType: EventBuilder.SetAddOnMethod\n  fullName: EventBuilder.SetAddOnMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetCustomAttribute\n  nameWithType: EventBuilder.SetCustomAttribute\n  fullName: EventBuilder.SetCustomAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetRaiseMethod\n  nameWithType: EventBuilder.SetRaiseMethod\n  fullName: EventBuilder.SetRaiseMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: SetRemoveOnMethod\n  nameWithType: EventBuilder.SetRemoveOnMethod\n  fullName: EventBuilder.SetRemoveOnMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._EventBuilder.GetIDsOfNames\n  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetIDsOfNames\n  fullName: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._EventBuilder.GetTypeInfo\n  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfo\n  fullName: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount\n  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount\n  fullName: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke*\n  parent: System.Reflection.Emit.EventBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._EventBuilder.Invoke\n  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.Invoke\n  fullName: EventBuilder.System.Runtime.InteropServices._EventBuilder.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/EventBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.InteropServices._EventBuilder\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _EventBuilder\n  nameWithType: _EventBuilder\n  fullName: System.Runtime.InteropServices._EventBuilder\n"}