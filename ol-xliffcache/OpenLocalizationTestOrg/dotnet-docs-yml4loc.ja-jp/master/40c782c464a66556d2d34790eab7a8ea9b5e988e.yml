### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder
  commentId: T:System.Activities.Presentation.Metadata.AttributeTableBuilder
  id: AttributeTableBuilder
  children:
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  langs:
  - csharp
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder
  type: Class
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Creates and populates an <xref href="System.Activities.Presentation.Metadata.AttributeTable"></xref> that is used by the <xref href="System.Activities.Presentation.Metadata.MetadataStore"></xref> to provide attribute lookup and registration.
  remarks: Use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, and <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> to populate the builder, then call <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> to acquire an <xref:System.Activities.Presentation.Metadata.AttributeTable> containing the desired collection of attributes.
  syntax:
    content: public class AttributeTableBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: AttributeTableBuilder.AttributeTableBuilder()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Creates a new instance of the <xref href="System.Activities.Presentation.Metadata.AttributeTableBuilder"></xref> class.
  syntax:
    content: public AttributeTableBuilder ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  id: AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCallback(Type, AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type, AttributeCallback)
  fullName: AttributeTableBuilder.AddCallback(Type, AttributeCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Specifies a callback that will be invoked when metadata for the given type is needed.
  remarks: The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> returned by <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> is queried for attributes for `type`, `callback` is called to provide the metadata information.
  syntax:
    content: public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: The type for which the callback will provide metadata.
    - id: callback
      type: System.Activities.Presentation.Metadata.AttributeCallback
      description: The callback method.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Adds the contents of the provided attributes to this builder.
  remarks: "If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."
  syntax:
    content: public void AddCustomAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: The type to add class-level attributes to.
    - id: attributes
      type: System.Attribute[]
      description: The attributes that are added to the builder.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>type</code> or <code>attributes</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type, MemberDescriptor, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Adds the contents of the provided attributes to this builder.
  remarks: "If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: The type that contains the member identified by <code>descriptor</code>.
    - id: descriptor
      type: System.ComponentModel.MemberDescriptor
      description: The event or property info that the attributes are added to.
    - id: attributes
      type: System.Attribute[]
      description: The attributes that are added to the builder.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type, MemberInfo, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Adds the contents of the provided attributes to this builder.
  remarks: "If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: The type that contains the member identified by <code>member</code>.
    - id: member
      type: System.Reflection.MemberInfo
      description: The event or property info that the attributes are added to.
    - id: attributes
      type: System.Attribute[]
      description: The attributes that are added to the builder.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>ownerType</code>, <code>member</code> or <code>attributes</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type, String, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Adds the contents of the provided attributes to this builder.
  remarks: "If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."
  syntax:
    content: public void AddCustomAttributes (Type ownerType, string memberName, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: The type that contains the member identified by <code>memberName</code>.
    - id: memberName
      type: System.String
      description: The name of the event or property info that the attributes are added to.
    - id: attributes
      type: System.Attribute[]
      description: The attributes that are added to the builder.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type, DependencyProperty, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Adds the contents of the provided attributes to this builder.
  remarks: "If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: The type that contains the dependency identified by <code>dp</code>.
    - id: dp
      type: System.Windows.DependencyProperty
      description: A dependency property to add attributes to.
    - id: attributes
      type: System.Attribute[]
      description: The attributes that are added to the builder.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>ownerType</code>, <code>dp</code> or <code>attributes</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  id: AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: AttributeTableBuilder.AddTable(AttributeTable)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Adds the contents of the provided attribute table to this builder.
  remarks: If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.
  syntax:
    content: public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);
    parameters:
    - id: table
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: The source attribute table.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>table</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  id: CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: AttributeTableBuilder.CreateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Creates an attribute table that contains all of the attribute definitions provided through <xref href="System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])"></xref> calls.
  remarks: "The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> calls are not included in the table.  \n  \n If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>. Instead, the table will contain those callbacks and will evaluate them as needed."
  syntax:
    content: public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();
    parameters: []
    return:
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: An <xref href="System.Activities.Presentation.Metadata.AttributeTable"></xref> that can be passed to the metadata store.
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  id: ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: AttributeTableBuilder.ValidateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: Verifies that the attribute table that is being built contains valid attribute information.
  remarks: Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>cannot validate that values passed to their parameters represent valid members on classes. <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members. This method can take a long time to complete and is not recommended unless validation is explicitly needed.
  syntax:
    content: public void ValidateTable ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  exceptions:
  - type: System.Activities.Presentation.Metadata.AttributeTableValidationException
    commentId: T:System.Activities.Presentation.Metadata.AttributeTableValidationException
    description: the state of the table is invalid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Activities.Presentation.Metadata.AttributeTableValidationException
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTableValidationException
  nameWithType: AttributeTableValidationException
  fullName: System.Activities.Presentation.Metadata.AttributeTableValidationException
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: AttributeTableBuilder.AttributeTableBuilder()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback(Type, AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type, AttributeCallback)
  fullName: AttributeTableBuilder.AddCallback(Type, AttributeCallback)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Metadata.AttributeCallback
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeCallback
  nameWithType: AttributeCallback
  fullName: System.Activities.Presentation.Metadata.AttributeCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])
- uid: System.Attribute
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Attribute[]
  parent: System
  isExternal: false
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type, MemberDescriptor, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type, MemberInfo, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type, String, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type, DependencyProperty, Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])
  fullName: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: AttributeTableBuilder.AddTable(AttributeTable)
- uid: System.Activities.Presentation.Metadata.AttributeTable
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTable
  nameWithType: AttributeTable
  fullName: System.Activities.Presentation.Metadata.AttributeTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: AttributeTableBuilder.CreateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: AttributeTableBuilder.ValidateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes
  nameWithType: AttributeTableBuilder.AddCustomAttributes
  fullName: AttributeTableBuilder.AddCustomAttributes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder.AttributeTableBuilder
  fullName: AttributeTableBuilder.AttributeTableBuilder
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback
  nameWithType: AttributeTableBuilder.AddCallback
  fullName: AttributeTableBuilder.AddCallback
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable
  nameWithType: AttributeTableBuilder.AddTable
  fullName: AttributeTableBuilder.AddTable
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable
  nameWithType: AttributeTableBuilder.CreateTable
  fullName: AttributeTableBuilder.CreateTable
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable
  nameWithType: AttributeTableBuilder.ValidateTable
  fullName: AttributeTableBuilder.ValidateTable
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
