{"nodes":[{"content":"Represents a license that enables access to protected rights managed content.","nodes":[{"pos":[0,77],"content":"Represents a license that enables access to protected rights managed content.","nodes":[{"content":"Represents a license that enables access to protected rights managed content.","pos":[0,77]}]}],"pos":[935,1013],"yaml":true},{"content":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UseLicense> is only usable in full trust applications.","nodes":[{"pos":[0,154],"content":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UseLicense> is only usable in full trust applications.","nodes":[{"content":"As with other <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement&gt;</ph> types, <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> is only usable in full trust applications.","pos":[0,154],"source":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UseLicense> is only usable in full trust applications."}]}],"pos":[1024,1179],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> class."}],"pos":[3155,3261],"yaml":true},{"content":"A use license in serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] form.","nodes":[{"pos":[0,93],"content":"A use license in serialized <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> form.","source":"A use license in serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] form."}],"pos":[3405,3499],"yaml":true},{"content":"<code>useLicense</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;useLicense&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>useLicense</code> is `null`."}],"pos":[3678,3713],"yaml":true},{"content":"<code>useLicense</code> is invalid.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;useLicense&lt;/code&gt;</ph> is invalid.","source":"<code>useLicense</code> is invalid."}],"pos":[3875,3911],"yaml":true},{"content":"Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.","nodes":[{"pos":[0,135],"content":"Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.","nodes":[{"content":"Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.","pos":[0,135]}]}],"pos":[4902,5038],"yaml":true},{"content":"One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair \"Allow_Server_Editing\"/\"True\".  When the issuance license \"Allow_Server_Editing\"/\"True\" is set, the service, or any trusted service, can reuse the content key.  \n  \n The key/value pair \"NOLICCACHE\" / \"1\" controls the Use License embedding policy of consuming applications.  When \"NOLICCACHE\" / \"1\" is set, applications are expected not to embed the Use License within the rights managed document.","nodes":[{"pos":[0,265],"content":"One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair \"Allow_Server_Editing\"/\"True\".  When the issuance license \"Allow_Server_Editing\"/\"True\" is set, the service, or any trusted service, can reuse the content key.","nodes":[{"content":"One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair \"Allow_Server_Editing\"/\"True\".  When the issuance license \"Allow_Server_Editing\"/\"True\" is set, the service, or any trusted service, can reuse the content key.","pos":[0,265],"nodes":[{"content":"One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair \"Allow_Server_Editing\"/\"True\".","pos":[0,136]},{"content":"When the issuance license \"Allow_Server_Editing\"/\"True\" is set, the service, or any trusted service, can reuse the content key.","pos":[138,265]}]}]},{"pos":[272,502],"content":"The key/value pair \"NOLICCACHE\" / \"1\" controls the Use License embedding policy of consuming applications.  When \"NOLICCACHE\" / \"1\" is set, applications are expected not to embed the Use License within the rights managed document.","nodes":[{"content":"The key/value pair \"NOLICCACHE\" / \"1\" controls the Use License embedding policy of consuming applications.  When \"NOLICCACHE\" / \"1\" is set, applications are expected not to embed the Use License within the rights managed document.","pos":[0,230],"nodes":[{"content":"The key/value pair \"NOLICCACHE\" / \"1\" controls the Use License embedding policy of consuming applications.","pos":[0,106]},{"content":"When \"NOLICCACHE\" / \"1\" is set, applications are expected not to embed the Use License within the rights managed document.","pos":[108,230]}]}]}],"pos":[5049,5572],"yaml":true,"extradata":"MT"},{"content":"The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.","nodes":[{"pos":[0,130],"content":"The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.","nodes":[{"content":"The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.","pos":[0,130]}]}],"pos":[5792,5923],"yaml":true},{"content":"Binds the license to a given <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.","nodes":[{"pos":[0,101],"content":"Binds the license to a given <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.SecureEnvironment\"&gt;&lt;/xref&gt;</ph>.","source":"Binds the license to a given <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>."}],"pos":[7149,7251],"yaml":true},{"content":"After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.  \n  \n The returned <xref:System.Security.RightsManagement.CryptoProvider> instance provides decryption and access to the protected rights managed content.","nodes":[{"pos":[0,127],"content":"After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.","nodes":[{"content":"After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.","pos":[0,127]}]},{"pos":[134,282],"content":"The returned <xref:System.Security.RightsManagement.CryptoProvider> instance provides decryption and access to the protected rights managed content.","nodes":[{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> instance provides decryption and access to the protected rights managed content.","pos":[0,148],"source":"The returned <xref:System.Security.RightsManagement.CryptoProvider> instance provides decryption and access to the protected rights managed content."}]}],"pos":[7262,7549],"yaml":true,"extradata":"MT"},{"content":"The environment to bind the license to.","nodes":[{"pos":[0,39],"content":"The environment to bind the license to.","nodes":[{"content":"The environment to bind the license to.","pos":[0,39]}]}],"pos":[8326,8366],"yaml":true},{"content":"A <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> instance if the license binding succeeded; otherwise, `null`.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;&lt;/xref&gt;</ph> instance if the license binding succeeded; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> instance if the license binding succeeded; otherwise, `null`."}],"pos":[8457,8590],"yaml":true},{"content":"<code>secureEnvironment</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;secureEnvironment&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>secureEnvironment</code> is `null`."}],"pos":[8768,8810],"yaml":true},{"content":"Gets the content identifier created by the publisher.","nodes":[{"pos":[0,53],"content":"Gets the content identifier created by the publisher.","nodes":[{"content":"Gets the content identifier created by the publisher.","pos":[0,53]}]}],"pos":[9765,9819],"yaml":true},{"content":"<xref:System.Security.RightsManagement.UseLicense.ContentId%2A> is created by the publisher and can be used to match content to a <xref:System.Security.RightsManagement.UseLicense> and <xref:System.Security.RightsManagement.PublishLicense>.","nodes":[{"pos":[0,240],"content":"<xref:System.Security.RightsManagement.UseLicense.ContentId%2A> is created by the publisher and can be used to match content to a <xref:System.Security.RightsManagement.UseLicense> and <xref:System.Security.RightsManagement.PublishLicense>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense.ContentId%2A&gt;</ph> is created by the publisher and can be used to match content to a <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.","pos":[0,240],"source":"<xref:System.Security.RightsManagement.UseLicense.ContentId%2A> is created by the publisher and can be used to match content to a <xref:System.Security.RightsManagement.UseLicense> and <xref:System.Security.RightsManagement.PublishLicense>."}]}],"pos":[9830,10071],"yaml":true,"extradata":"MT"},{"content":"The content identifier created by the publisher.","nodes":[{"pos":[0,48],"content":"The content identifier created by the publisher.","nodes":[{"content":"The content identifier created by the publisher.","pos":[0,48]}]}],"pos":[10180,10229],"yaml":true},{"content":"Indicates if this license is equivalent to another given license.","nodes":[{"pos":[0,65],"content":"Indicates if this license is equivalent to another given license.","nodes":[{"content":"Indicates if this license is equivalent to another given license.","pos":[0,65]}]}],"pos":[11317,11383],"yaml":true},{"content":"<xref:System.Security.RightsManagement.UseLicense.Equals%2A> tests for equivalence comparing the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] strings specified to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructors.","nodes":[{"pos":[0,268],"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.UseLicense.Equals%2A&gt;</ph> tests for equivalence comparing the serialized <ph id=\"ph2\">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> strings specified to the <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructors.","source":"<xref:System.Security.RightsManagement.UseLicense.Equals%2A> tests for equivalence comparing the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] strings specified to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructors."}],"pos":[11394,11663],"yaml":true,"extradata":"MT"},{"content":"The license to compare.","nodes":[{"pos":[0,23],"content":"The license to compare.","nodes":[{"content":"The license to compare.","pos":[0,23]}]}],"pos":[11799,11823],"yaml":true},{"content":"`true` if both licenses are the equivalent; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if both licenses are the equivalent; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if both licenses are the equivalent; otherwise, `false`."}],"pos":[11881,11947],"yaml":true},{"content":"Returns the hash code associated with this license.","nodes":[{"pos":[0,51],"content":"Returns the hash code associated with this license.","nodes":[{"content":"Returns the hash code associated with this license.","pos":[0,51]}]}],"pos":[12999,13051],"yaml":true},{"content":"The returned hash code is based on the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor.","nodes":[{"pos":[0,205],"content":"The returned hash code is based on the serialized <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string passed to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.","source":"The returned hash code is based on the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor."}],"pos":[13062,13268],"yaml":true,"extradata":"MT"},{"content":"A hash code for this license.","nodes":[{"pos":[0,29],"content":"A hash code for this license.","nodes":[{"content":"A hash code for this license.","pos":[0,29]}]}],"pos":[13402,13432],"yaml":true},{"content":"Gets the owner of the license.","nodes":[{"pos":[0,30],"content":"Gets the owner of the license.","nodes":[{"content":"Gets the owner of the license.","pos":[0,30]}]}],"pos":[14449,14480],"yaml":true},{"content":"The license owner is obtained from the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor.","nodes":[{"pos":[0,205],"content":"The license owner is obtained from the serialized <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string passed to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.","source":"The license owner is obtained from the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor."}],"pos":[14491,14697],"yaml":true,"extradata":"MT"},{"content":"The owner of the license.","nodes":[{"pos":[0,25],"content":"The owner of the license.","nodes":[{"content":"The owner of the license.","pos":[0,25]}]}],"pos":[14875,14901],"yaml":true},{"content":"Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string used to create this license.","nodes":[{"pos":[0,120],"content":"Returns the serialized <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]</ph> string used to create this license.","source":"Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string used to create this license."}],"pos":[15934,16055],"yaml":true},{"content":"The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string originally passed to the <xref href=\"System.Security.RightsManagement.UseLicense.#ctor(System.String)\"></xref> constructor.","nodes":[{"pos":[0,205],"content":"The serialized <ph id=\"ph1\">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string originally passed to the <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.UseLicense.#ctor(System.String)\"&gt;&lt;/xref&gt;</ph> constructor.","source":"The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string originally passed to the <xref href=\"System.Security.RightsManagement.UseLicense.#ctor(System.String)\"></xref> constructor."}],"pos":[16190,16396],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.UseLicense\n  commentId: T:System.Security.RightsManagement.UseLicense\n  id: UseLicense\n  children:\n  - System.Security.RightsManagement.UseLicense.#ctor(System.String)\n  - System.Security.RightsManagement.UseLicense.ApplicationData\n  - System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)\n  - System.Security.RightsManagement.UseLicense.ContentId\n  - System.Security.RightsManagement.UseLicense.Equals(System.Object)\n  - System.Security.RightsManagement.UseLicense.GetHashCode\n  - System.Security.RightsManagement.UseLicense.Owner\n  - System.Security.RightsManagement.UseLicense.ToString\n  langs:\n  - csharp\n  name: UseLicense\n  nameWithType: UseLicense\n  fullName: System.Security.RightsManagement.UseLicense\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Represents a license that enables access to protected rights managed content.\n  remarks: As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UseLicense> is only usable in full trust applications.\n  example:\n  - \"The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class UseLicense\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.#ctor(System.String)\n  commentId: M:System.Security.RightsManagement.UseLicense.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: UseLicense(String)\n  nameWithType: UseLicense.UseLicense(String)\n  fullName: UseLicense.UseLicense(String)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Initializes a new instance of the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> class.\n  syntax:\n    content: public UseLicense (string useLicense);\n    parameters:\n    - id: useLicense\n      type: System.String\n      description: A use license in serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] form.\n  overload: System.Security.RightsManagement.UseLicense.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>useLicense</code> is `null`.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: <code>useLicense</code> is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.ApplicationData\n  commentId: P:System.Security.RightsManagement.UseLicense.ApplicationData\n  id: ApplicationData\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: ApplicationData\n  nameWithType: UseLicense.ApplicationData\n  fullName: UseLicense.ApplicationData\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.\n  remarks: \"One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair \\\"Allow_Server_Editing\\\"/\\\"True\\\".  When the issuance license \\\"Allow_Server_Editing\\\"/\\\"True\\\" is set, the service, or any trusted service, can reuse the content key.  \\n  \\n The key/value pair \\\"NOLICCACHE\\\" / \\\"1\\\" controls the Use License embedding policy of consuming applications.  When \\\"NOLICCACHE\\\" / \\\"1\\\" is set, applications are expected not to embed the Use License within the rights managed document.\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> ApplicationData { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.\n  overload: System.Security.RightsManagement.UseLicense.ApplicationData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)\n  commentId: M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)\n  id: Bind(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: Bind(SecureEnvironment)\n  nameWithType: UseLicense.Bind(SecureEnvironment)\n  fullName: UseLicense.Bind(SecureEnvironment)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Binds the license to a given <xref href=\"System.Security.RightsManagement.SecureEnvironment\"></xref>.\n  remarks: \"After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.  \\n  \\n The returned <xref:System.Security.RightsManagement.CryptoProvider> instance provides decryption and access to the protected rights managed content.\"\n  example:\n  - \"The following example shows how to use this method to initialize a <xref:System.Security.RightsManagement.CryptoProvider>.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]\"\n  syntax:\n    content: public System.Security.RightsManagement.CryptoProvider Bind (System.Security.RightsManagement.SecureEnvironment secureEnvironment);\n    parameters:\n    - id: secureEnvironment\n      type: System.Security.RightsManagement.SecureEnvironment\n      description: The environment to bind the license to.\n    return:\n      type: System.Security.RightsManagement.CryptoProvider\n      description: A <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> instance if the license binding succeeded; otherwise, `null`.\n  overload: System.Security.RightsManagement.UseLicense.Bind*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>secureEnvironment</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.ContentId\n  commentId: P:System.Security.RightsManagement.UseLicense.ContentId\n  id: ContentId\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: ContentId\n  nameWithType: UseLicense.ContentId\n  fullName: UseLicense.ContentId\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the content identifier created by the publisher.\n  remarks: <xref:System.Security.RightsManagement.UseLicense.ContentId%2A> is created by the publisher and can be used to match content to a <xref:System.Security.RightsManagement.UseLicense> and <xref:System.Security.RightsManagement.PublishLicense>.\n  syntax:\n    content: public Guid ContentId { get; }\n    return:\n      type: System.Guid\n      description: The content identifier created by the publisher.\n  overload: System.Security.RightsManagement.UseLicense.ContentId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.Equals(System.Object)\n  commentId: M:System.Security.RightsManagement.UseLicense.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: UseLicense.Equals(Object)\n  fullName: UseLicense.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Indicates if this license is equivalent to another given license.\n  remarks: <xref:System.Security.RightsManagement.UseLicense.Equals%2A> tests for equivalence comparing the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] strings specified to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructors.\n  syntax:\n    content: public override bool Equals (object x);\n    parameters:\n    - id: x\n      type: System.Object\n      description: The license to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if both licenses are the equivalent; otherwise, `false`.'\n  overload: System.Security.RightsManagement.UseLicense.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.GetHashCode\n  commentId: M:System.Security.RightsManagement.UseLicense.GetHashCode\n  id: GetHashCode\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: UseLicense.GetHashCode()\n  fullName: UseLicense.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns the hash code associated with this license.\n  remarks: The returned hash code is based on the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for this license.\n  overload: System.Security.RightsManagement.UseLicense.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.Owner\n  commentId: P:System.Security.RightsManagement.UseLicense.Owner\n  id: Owner\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: UseLicense.Owner\n  fullName: UseLicense.Owner\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the owner of the license.\n  remarks: The license owner is obtained from the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor.\n  syntax:\n    content: public System.Security.RightsManagement.ContentUser Owner { get; }\n    return:\n      type: System.Security.RightsManagement.ContentUser\n      description: The owner of the license.\n  overload: System.Security.RightsManagement.UseLicense.Owner*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.UseLicense.ToString\n  commentId: M:System.Security.RightsManagement.UseLicense.ToString\n  id: ToString\n  parent: System.Security.RightsManagement.UseLicense\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: UseLicense.ToString()\n  fullName: UseLicense.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string used to create this license.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string originally passed to the <xref href=\"System.Security.RightsManagement.UseLicense.#ctor(System.String)\"></xref> constructor.\n  overload: System.Security.RightsManagement.UseLicense.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.RightsManagement.RightsManagementException\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: RightsManagementException\n  nameWithType: RightsManagementException\n  fullName: System.Security.RightsManagement.RightsManagementException\n- uid: System.Security.RightsManagement.UseLicense.#ctor(System.String)\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: UseLicense(String)\n  nameWithType: UseLicense.UseLicense(String)\n  fullName: UseLicense.UseLicense(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.RightsManagement.UseLicense.ApplicationData\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: ApplicationData\n  nameWithType: UseLicense.ApplicationData\n  fullName: UseLicense.ApplicationData\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: Bind(SecureEnvironment)\n  nameWithType: UseLicense.Bind(SecureEnvironment)\n  fullName: UseLicense.Bind(SecureEnvironment)\n- uid: System.Security.RightsManagement.CryptoProvider\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: CryptoProvider\n  nameWithType: CryptoProvider\n  fullName: System.Security.RightsManagement.CryptoProvider\n- uid: System.Security.RightsManagement.SecureEnvironment\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: SecureEnvironment\n  nameWithType: SecureEnvironment\n  fullName: System.Security.RightsManagement.SecureEnvironment\n- uid: System.Security.RightsManagement.UseLicense.ContentId\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: UseLicense.ContentId\n  fullName: UseLicense.ContentId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.RightsManagement.UseLicense.Equals(System.Object)\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: UseLicense.Equals(Object)\n  fullName: UseLicense.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.RightsManagement.UseLicense.GetHashCode\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: UseLicense.GetHashCode()\n  fullName: UseLicense.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.RightsManagement.UseLicense.Owner\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: Owner\n  nameWithType: UseLicense.Owner\n  fullName: UseLicense.Owner\n- uid: System.Security.RightsManagement.ContentUser\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: ContentUser\n  nameWithType: ContentUser\n  fullName: System.Security.RightsManagement.ContentUser\n- uid: System.Security.RightsManagement.UseLicense.ToString\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: ToString()\n  nameWithType: UseLicense.ToString()\n  fullName: UseLicense.ToString()\n- uid: System.Security.RightsManagement.UseLicense.#ctor*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: UseLicense\n  nameWithType: UseLicense.UseLicense\n  fullName: UseLicense.UseLicense\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.ApplicationData*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: ApplicationData\n  nameWithType: UseLicense.ApplicationData\n  fullName: UseLicense.ApplicationData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.Bind*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: Bind\n  nameWithType: UseLicense.Bind\n  fullName: UseLicense.Bind\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.ContentId*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: ContentId\n  nameWithType: UseLicense.ContentId\n  fullName: UseLicense.ContentId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.Equals*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: Equals\n  nameWithType: UseLicense.Equals\n  fullName: UseLicense.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.GetHashCode*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: GetHashCode\n  nameWithType: UseLicense.GetHashCode\n  fullName: UseLicense.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.Owner*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: Owner\n  nameWithType: UseLicense.Owner\n  fullName: UseLicense.Owner\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Security.RightsManagement.UseLicense.ToString*\n  parent: System.Security.RightsManagement.UseLicense\n  isExternal: false\n  name: ToString\n  nameWithType: UseLicense.ToString\n  fullName: UseLicense.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}