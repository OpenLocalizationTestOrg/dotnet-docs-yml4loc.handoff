{"nodes":[{"content":"Encapsulates group accounts. Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.","nodes":[{"pos":[0,142],"content":"Encapsulates group accounts. Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.","nodes":[{"content":"Encapsulates group accounts. Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.","pos":[0,142],"nodes":[{"content":"Encapsulates group accounts.","pos":[0,28]},{"content":"Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.","pos":[29,142]}]}]}],"pos":[1578,1721],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> class by using the specified context.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"&gt;&lt;/xref&gt;</ph> class by using the specified context.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> class by using the specified context."}],"pos":[6385,6536],"yaml":true},{"content":"The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.","nodes":[{"pos":[0,173],"content":"The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.","nodes":[{"content":"The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.","pos":[0,173],"nodes":[{"content":"The group principal account is not persisted when it is created.","pos":[0,64]},{"content":"To persist the account, call the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.AccountManagement.Principal.Save%2A&gt;</ph> method.","pos":[65,173],"source":" To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method."}]}]}],"pos":[6547,6721],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"&gt;&lt;/xref&gt;</ph> that specifies the server or domain against which operations are performed.","source":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed."}],"pos":[6962,7123],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> class and assigns it to the specified context and SAM account name.","nodes":[{"pos":[0,180],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"&gt;&lt;/xref&gt;</ph> class and assigns it to the specified context and SAM account name.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> class and assigns it to the specified context and SAM account name."}],"pos":[8590,8771],"yaml":true},{"content":"The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.","nodes":[{"pos":[0,173],"content":"The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.","nodes":[{"content":"The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.","pos":[0,173],"nodes":[{"content":"The group principal account is not persisted when it is created.","pos":[0,64]},{"content":"To persist the account, call the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.AccountManagement.Principal.Save%2A&gt;</ph> method.","pos":[65,173],"source":" To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method."}]}]}],"pos":[8782,8956],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"&gt;&lt;/xref&gt;</ph> that specifies the server or domain against which operations are performed.","source":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed."}],"pos":[9220,9381],"yaml":true},{"content":"The SAM account name for this principal.","nodes":[{"pos":[0,40],"content":"The SAM account name for this principal.","nodes":[{"content":"The SAM account name for this principal.","pos":[0,40]}]}],"pos":[9451,9492],"yaml":true},{"content":"Disposes the current instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> object.","nodes":[{"pos":[0,123],"content":"Disposes the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"&gt;&lt;/xref&gt;</ph> object.","source":"Disposes the current instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> object."}],"pos":[10640,10764],"yaml":true},{"content":"Returns a group principal object that matches the specified identity value.","nodes":[{"pos":[0,75],"content":"Returns a group principal object that matches the specified identity value.","nodes":[{"content":"Returns a group principal object that matches the specified identity value.","pos":[0,75]}]}],"pos":[12328,12404],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"&gt;&lt;/xref&gt;</ph> that specifies the server or domain against which operations are performed.","source":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed."}],"pos":[12732,12893],"yaml":true},{"content":"The identity of the group principal. This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration.","nodes":[{"pos":[0,184],"content":"The identity of the group principal. This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration.","nodes":[{"content":"The identity of the group principal.","pos":[0,36]},{"content":"This parameter can be any format that is contained in the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"&gt;&lt;/xref&gt;</ph> enumeration.","pos":[37,184],"source":" This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration."}]}],"pos":[12962,13147],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> object that matches the specified identity value and type, or null if no matches are found.","nodes":[{"pos":[0,172],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"&gt;&lt;/xref&gt;</ph> object that matches the specified identity value and type, or null if no matches are found.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> object that matches the specified identity value and type, or null if no matches are found."}],"pos":[13248,13421],"yaml":true},{"content":"Multiple group principal objects matching the current group object were found.","nodes":[{"pos":[0,78],"content":"Multiple group principal objects matching the current group object were found.","nodes":[{"content":"Multiple group principal objects matching the current group object were found.","pos":[0,78]}]}],"pos":[13629,13708],"yaml":true},{"content":"Returns a group principal object that matches the specified identity type, and value. This version of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity\"></xref> method determines the format of the identity value.","nodes":[{"pos":[0,251],"content":"Returns a group principal object that matches the specified identity type, and value. This version of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity\"></xref> method determines the format of the identity value.","nodes":[{"content":"Returns a group principal object that matches the specified identity type, and value.","pos":[0,85]},{"content":"This version of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity\"&gt;&lt;/xref&gt;</ph> method determines the format of the identity value.","pos":[86,251],"source":" This version of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity\"></xref> method determines the format of the identity value."}]}],"pos":[15311,15563],"yaml":true},{"content":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"&gt;&lt;/xref&gt;</ph> that specifies the server or domain against which operations are performed.","source":"The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed."}],"pos":[15961,16122],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration value that specifies the format of the <code>identityValue</code> parameter.","nodes":[{"pos":[0,167],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"&gt;&lt;/xref&gt;</ph> enumeration value that specifies the format of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">identityValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration value that specifies the format of the <code>identityValue</code> parameter."}],"pos":[16232,16400],"yaml":true},{"content":"The identity of the group principal. This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration.","nodes":[{"pos":[0,184],"content":"The identity of the group principal. This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration.","nodes":[{"content":"The identity of the group principal.","pos":[0,36]},{"content":"This parameter can be any format that is contained in the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"&gt;&lt;/xref&gt;</ph> enumeration.","pos":[37,184],"source":" This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration."}]}],"pos":[16469,16654],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> that matches the specified identity value and type, or null if no matches are found.","nodes":[{"pos":[0,165],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"&gt;&lt;/xref&gt;</ph> that matches the specified identity value and type, or null if no matches are found.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> that matches the specified identity value and type, or null if no matches are found."}],"pos":[16755,16921],"yaml":true},{"content":"Multiple group principal objects matching the current group object were found.","nodes":[{"pos":[0,78],"content":"Multiple group principal objects matching the current group object were found.","nodes":[{"content":"Multiple group principal objects matching the current group object were found.","pos":[0,78]}]}],"pos":[17129,17208],"yaml":true},{"content":"The identity value is not a valid <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration value.","nodes":[{"pos":[0,129],"content":"The identity value is not a valid <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"The identity value is not a valid <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration value."}],"pos":[17370,17500],"yaml":true},{"content":"Returns a collection of the principal objects that is contained in the group.","nodes":[{"pos":[0,77],"content":"Returns a collection of the principal objects that is contained in the group.","nodes":[{"content":"Returns a collection of the principal objects that is contained in the group.","pos":[0,77]}]}],"pos":[18572,18650],"yaml":true},{"content":"This method does not search the current group recursively. Therefore, group objects may be returned in the principal object collection.  \n  \n Members are returned without respect to the context. For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.","nodes":[{"pos":[0,135],"content":"This method does not search the current group recursively. Therefore, group objects may be returned in the principal object collection.","nodes":[{"content":"This method does not search the current group recursively. Therefore, group objects may be returned in the principal object collection.","pos":[0,135],"nodes":[{"content":"This method does not search the current group recursively.","pos":[0,58]},{"content":"Therefore, group objects may be returned in the principal object collection.","pos":[59,135]}]}]},{"pos":[142,593],"content":"Members are returned without respect to the context. For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.","nodes":[{"content":"Members are returned without respect to the context. For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.","pos":[0,451],"nodes":[{"content":"Members are returned without respect to the context.","pos":[0,52]},{"content":"For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched.","pos":[53,338]},{"content":"The returned principal collection may also contain members that are located in a different store than the group.","pos":[339,451]}]}]}],"pos":[18661,19263],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"></xref> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.","nodes":[{"pos":[0,215],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"&gt;&lt;/xref&gt;</ph> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"></xref> object that contains the principal objects that are members of the group, or an empty collection if the group has no members."}],"pos":[19608,19824],"yaml":true},{"content":"Returns a collection of the principal objects that is contained in the group. When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.","nodes":[{"pos":[0,206],"content":"Returns a collection of the principal objects that is contained in the group. When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.","nodes":[{"content":"Returns a collection of the principal objects that is contained in the group. When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.","pos":[0,206],"nodes":[{"content":"Returns a collection of the principal objects that is contained in the group.","pos":[0,77]},{"content":"When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.","pos":[78,206]}]}]}],"pos":[21064,21271],"yaml":true},{"content":"The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned. For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group. Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.  When the recursive flag is set to `false`, the returned collection may contain group objects.  \n  \n Members are returned without respect to the context. For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.","nodes":[{"pos":[0,571],"content":"The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned. For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group. Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.  When the recursive flag is set to `false`, the returned collection may contain group objects.","nodes":[{"content":"The returned principal collection does not contain group objects when the recursive flag is set to <ph id=\"ph1\">`true`</ph>; only leaf nodes are returned.","pos":[0,136],"source":"The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned."},{"content":"For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group.","pos":[137,371]},{"content":"Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.","pos":[372,476]},{"content":"When the recursive flag is set to <ph id=\"ph1\">`false`</ph>, the returned collection may contain group objects.","pos":[478,571],"source":"  When the recursive flag is set to `false`, the returned collection may contain group objects."}]},{"pos":[578,1029],"content":"Members are returned without respect to the context. For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.","nodes":[{"content":"Members are returned without respect to the context. For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.","pos":[0,451],"nodes":[{"content":"Members are returned without respect to the context.","pos":[0,52]},{"content":"For example, if an AD DS context based at \"CN=SpecialUsers,DC=Fabrikam,DC=com\", the PrincipalFindResult set will include group members that are located under \"CN=NormalUsers,DC=Fabrikam,DC=com\" also, even though they fall under a scope that is not part of the context that is searched.","pos":[53,338]},{"content":"The returned principal collection may also contain members that are located in a different store than the group.","pos":[339,451]}]}]}],"pos":[21282,22320],"yaml":true,"extradata":"MT"},{"content":"A Boolean value that specifies whether the group is searched recursively.","nodes":[{"pos":[0,73],"content":"A Boolean value that specifies whether the group is searched recursively.","nodes":[{"content":"A Boolean value that specifies whether the group is searched recursively.","pos":[0,73]}]}],"pos":[24009,24083],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"></xref> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.","nodes":[{"pos":[0,215],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"&gt;&lt;/xref&gt;</ph> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"></xref> object that contains the principal objects that are members of the group, or an empty collection if the group has no members."}],"pos":[24245,24461],"yaml":true},{"content":"Gets or sets a Nullable <xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"></xref> enumeration that specifies the scope for this group principal.","nodes":[{"pos":[0,161],"content":"Gets or sets a Nullable <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"&gt;&lt;/xref&gt;</ph> enumeration that specifies the scope for this group principal.","source":"Gets or sets a Nullable <xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"></xref> enumeration that specifies the scope for this group principal."}],"pos":[25628,25790],"yaml":true},{"content":"A nullable <xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"></xref> enumeration value that specifies the scope of this group or null if no scope has been set.","nodes":[{"pos":[0,176],"content":"A nullable <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"&gt;&lt;/xref&gt;</ph> enumeration value that specifies the scope of this group or null if no scope has been set.","source":"A nullable <xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"></xref> enumeration value that specifies the scope of this group or null if no scope has been set."}],"pos":[26023,26200],"yaml":true},{"content":"The application may not set this property to null.","nodes":[{"pos":[0,50],"content":"The application may not set this property to null.","nodes":[{"content":"The application may not set this property to null.","pos":[0,50]}]}],"pos":[26398,26449],"yaml":true},{"content":"Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.","nodes":[{"pos":[0,91],"content":"Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.","nodes":[{"content":"Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.","pos":[0,91]}]}],"pos":[27547,27639],"yaml":true},{"content":"When this property returns false, the group is temporarily not security-enabled. When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.  \n  \n If the principal has not been persisted in the store, this property returns null. After the principal is persisted, the default security-enabled setting depends on the store. The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.","nodes":[{"pos":[0,274],"content":"When this property returns false, the group is temporarily not security-enabled. When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.","nodes":[{"content":"When this property returns false, the group is temporarily not security-enabled. When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.","pos":[0,274],"nodes":[{"content":"When this property returns false, the group is temporarily not security-enabled.","pos":[0,80]},{"content":"When the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup&gt;</ph> property is reset to true later, the group will have the same properties as before it was set to false.","pos":[81,274],"source":" When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false."}]}]},{"pos":[281,591],"content":"If the principal has not been persisted in the store, this property returns null. After the principal is persisted, the default security-enabled setting depends on the store. The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.","nodes":[{"content":"If the principal has not been persisted in the store, this property returns null. After the principal is persisted, the default security-enabled setting depends on the store. The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.","pos":[0,310],"nodes":[{"content":"If the principal has not been persisted in the store, this property returns null.","pos":[0,81]},{"content":"After the principal is persisted, the default security-enabled setting depends on the store.","pos":[82,174]},{"content":"The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.","pos":[175,310]}]}]}],"pos":[27650,28246],"yaml":true,"extradata":"MT"},{"content":"`true` if the group is security enabled, or null if the group has not been persisted; otherwise `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if the group is security enabled, or null if the group has not been persisted; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the group is security enabled, or null if the group has not been persisted; otherwise `false`."}],"pos":[28396,28503],"yaml":true},{"content":"The application may not set this property to null.","nodes":[{"pos":[0,50],"content":"The application may not set this property to null.","nodes":[{"content":"The application may not set this property to null.","pos":[0,50]}]}],"pos":[28706,28757],"yaml":true},{"content":"Gets a collection of principal objects that represent the members of the group.","nodes":[{"pos":[0,79],"content":"Gets a collection of principal objects that represent the members of the group.","nodes":[{"content":"Gets a collection of principal objects that represent the members of the group.","pos":[0,79]}]}],"pos":[29807,29887],"yaml":true},{"content":"For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute. When the group contains these types of members, the following restrictions apply:  \n  \n-   The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A> method cannot be used to remove members that are part of the group because of their primaryId Attribute.  \n  \n-   The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A> method cannot be used to clear members that are part of the group because of their primaryId Attribute.","nodes":[{"pos":[0,281],"content":"For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute. When the group contains these types of members, the following restrictions apply:","nodes":[{"content":"For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute. When the group contains these types of members, the following restrictions apply:","pos":[0,281],"nodes":[{"content":"For AD DS groups, the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A&gt;</ph> property includes user principals that are members of the group because of their primaryId Attribute.","pos":[0,199],"source":"For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute."},{"content":"When the group contains these types of members, the following restrictions apply:","pos":[200,281]}]}]},{"pos":[291,478],"content":"The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A> method cannot be used to remove members that are part of the group because of their primaryId Attribute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A&gt;</ph> method cannot be used to remove members that are part of the group because of their primaryId Attribute.","pos":[0,187],"source":"The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A> method cannot be used to remove members that are part of the group because of their primaryId Attribute."}]},{"pos":[488,673],"content":"The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A> method cannot be used to clear members that are part of the group because of their primaryId Attribute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A&gt;</ph> method cannot be used to clear members that are part of the group because of their primaryId Attribute.","pos":[0,185],"source":"The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A> method cannot be used to clear members that are part of the group because of their primaryId Attribute."}]}],"pos":[29898,30578],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalCollection\"></xref> object that contains the principal objects that represent the members of the group.","nodes":[{"pos":[0,169],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.PrincipalCollection\"&gt;&lt;/xref&gt;</ph> object that contains the principal objects that represent the members of the group.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalCollection\"></xref> object that contains the principal objects that represent the members of the group."}],"pos":[32421,32591],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal\n  commentId: T:System.DirectoryServices.AccountManagement.GroupPrincipal\n  id: GroupPrincipal\n  children:\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup\n  - System.DirectoryServices.AccountManagement.GroupPrincipal.Members\n  langs:\n  - csharp\n  name: GroupPrincipal\n  nameWithType: GroupPrincipal\n  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal\n  type: Class\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Encapsulates group accounts. Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.\n  syntax:\n    content: >-\n      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix(\"CN\")]\n\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.AccountManagement.Principal\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted\n  - System.DirectoryServices.AccountManagement.Principal.Context\n  - System.DirectoryServices.AccountManagement.Principal.ContextRaw\n  - System.DirectoryServices.AccountManagement.Principal.ContextType\n  - System.DirectoryServices.AccountManagement.Principal.Delete\n  - System.DirectoryServices.AccountManagement.Principal.Description\n  - System.DirectoryServices.AccountManagement.Principal.DisplayName\n  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName\n  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)\n  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)\n  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)\n  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.GetGroups\n  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)\n  - System.DirectoryServices.AccountManagement.Principal.GetHashCode\n  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject\n  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType\n  - System.DirectoryServices.AccountManagement.Principal.Guid\n  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)\n  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  - System.DirectoryServices.AccountManagement.Principal.Name\n  - System.DirectoryServices.AccountManagement.Principal.SamAccountName\n  - System.DirectoryServices.AccountManagement.Principal.Save\n  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)\n  - System.DirectoryServices.AccountManagement.Principal.Sid\n  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass\n  - System.DirectoryServices.AccountManagement.Principal.ToString\n  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: GroupPrincipal(PrincipalContext)\n  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext)\n  fullName: GroupPrincipal.GroupPrincipal(PrincipalContext)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> class by using the specified context.\n  remarks: The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.\n  syntax:\n    content: public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)'\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: GroupPrincipal(PrincipalContext, String)\n  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext, String)\n  fullName: GroupPrincipal.GroupPrincipal(PrincipalContext, String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> class and assigns it to the specified context and SAM account name.\n  remarks: The group principal account is not persisted when it is created. To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.\n  syntax:\n    content: public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.\n    - id: samAccountName\n      type: System.String\n      description: The SAM account name for this principal.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose\n  id: Dispose\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: GroupPrincipal.Dispose()\n  fullName: GroupPrincipal.Dispose()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Disposes the current instance of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> object.\n  syntax:\n    content: public override void Dispose ();\n    parameters: []\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: FindByIdentity(PrincipalContext, String)\n  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext, String)\n  fullName: GroupPrincipal.FindByIdentity(PrincipalContext, String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Returns a group principal object that matches the specified identity value.\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.\n    - id: identityValue\n      type: System.String\n      description: The identity of the group principal. This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration.\n    return:\n      type: System.DirectoryServices.AccountManagement.GroupPrincipal\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> object that matches the specified identity value and type, or null if no matches are found.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*\n  exceptions:\n  - type: System.MultipleMatchesException\n    commentId: T:System.MultipleMatchesException\n    description: Multiple group principal objects matching the current group object were found.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: FindByIdentity(PrincipalContext, IdentityType, String)\n  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)\n  fullName: GroupPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Returns a group principal object that matches the specified identity type, and value. This version of the <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity\"></xref> method determines the format of the identity value.\n  syntax:\n    content: public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.AccountManagement.PrincipalContext\n      description: The <xref href=\"System.DirectoryServices.AccountManagement.PrincipalContext\"></xref> that specifies the server or domain against which operations are performed.\n    - id: identityType\n      type: System.DirectoryServices.AccountManagement.IdentityType\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration value that specifies the format of the <code>identityValue</code> parameter.\n    - id: identityValue\n      type: System.String\n      description: The identity of the group principal. This parameter can be any format that is contained in the <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration.\n    return:\n      type: System.DirectoryServices.AccountManagement.GroupPrincipal\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.GroupPrincipal\"></xref> that matches the specified identity value and type, or null if no matches are found.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*\n  exceptions:\n  - type: System.MultipleMatchesException\n    commentId: T:System.MultipleMatchesException\n    description: Multiple group principal objects matching the current group object were found.\n  - type: System.ComponenetModel.InvalidEnumerationOperatorException\n    commentId: T:System.ComponenetModel.InvalidEnumerationOperatorException\n    description: The identity value is not a valid <xref href=\"System.DirectoryServices.AccountManagement.IdentityType\"></xref> enumeration value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers\n  id: GetMembers\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: GetMembers()\n  nameWithType: GroupPrincipal.GetMembers()\n  fullName: GroupPrincipal.GetMembers()\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Returns a collection of the principal objects that is contained in the group.\n  remarks: \"This method does not search the current group recursively. Therefore, group objects may be returned in the principal object collection.  \\n  \\n Members are returned without respect to the context. For example, if an AD DS context based at \\\"CN=SpecialUsers,DC=Fabrikam,DC=com\\\", the PrincipalFindResult set will include group members that are located under \\\"CN=NormalUsers,DC=Fabrikam,DC=com\\\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.\"\n  syntax:\n    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetMembers ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"></xref> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)\n  commentId: M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)\n  id: GetMembers(System.Boolean)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: GetMembers(Boolean)\n  nameWithType: GroupPrincipal.GetMembers(Boolean)\n  fullName: GroupPrincipal.GetMembers(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Returns a collection of the principal objects that is contained in the group. When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.\n  remarks: \"The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned. For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group. Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.  When the recursive flag is set to `false`, the returned collection may contain group objects.  \\n  \\n Members are returned without respect to the context. For example, if an AD DS context based at \\\"CN=SpecialUsers,DC=Fabrikam,DC=com\\\", the PrincipalFindResult set will include group members that are located under \\\"CN=NormalUsers,DC=Fabrikam,DC=com\\\" also, even though they fall under a scope that is not part of the context that is searched. The returned principal collection may also contain members that are located in a different store than the group.\"\n  example:\n  - \"The following code connects to the LDAP domain \\\"fabrikam.com\\\" with the username set to \\\"administrator\\\" and the password set to \\\"SecretPwd123\\\" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \\n  \\n A search is performed to find the group that has the name \\\"Domain Admins\\\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor \\\"DC=fabrikam,DC=com.\\\" If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated  \\n  \\n```  \\nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      \\n                                            \\\"fabrikam.com\\\",   \\n                                            \\\"DC=fabrikam,DC=com\\\",   \\n                                            \\\"administrator\\\",   \\n                                            \\\"SecretPwd123\\\");  \\n  \\nGroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   \\n                                                   IdentityType.Name,   \\n                                                   \\\"Domain Admins\\\");  \\n  \\nif (grp != null)  \\n{  \\n    foreach (Principal p in grp.GetMembers(true))  \\n    {  \\n         Console.WriteLine(p.Name);  \\n    }  \\n    grp.Dispose();  \\n}  \\n  \\nctx.Dispose();   \\n```\"\n  syntax:\n    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetMembers (bool recursive);\n    parameters:\n    - id: recursive\n      type: System.Boolean\n      description: A Boolean value that specifies whether the group is searched recursively.\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalSearchResult'1\"></xref> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope\n  commentId: P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope\n  id: GroupScope\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: GroupScope\n  nameWithType: GroupPrincipal.GroupScope\n  fullName: GroupPrincipal.GroupScope\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Gets or sets a Nullable <xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"></xref> enumeration that specifies the scope for this group principal.\n  syntax:\n    content: public Nullable<System.DirectoryServices.AccountManagement.GroupScope> GroupScope { get; set; }\n    return:\n      type: System.Nullable{System.DirectoryServices.AccountManagement.GroupScope}\n      description: A nullable <xref href=\"System.DirectoryServices.AccountManagement.GroupScope\"></xref> enumeration value that specifies the scope of this group or null if no scope has been set.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The application may not set this property to null.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup\n  commentId: P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup\n  id: IsSecurityGroup\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: IsSecurityGroup\n  nameWithType: GroupPrincipal.IsSecurityGroup\n  fullName: GroupPrincipal.IsSecurityGroup\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.\n  remarks: \"When this property returns false, the group is temporarily not security-enabled. When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.  \\n  \\n If the principal has not been persisted in the store, this property returns null. After the principal is persisted, the default security-enabled setting depends on the store. The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.\"\n  syntax:\n    content: public Nullable<bool> IsSecurityGroup { get; set; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: '`true` if the group is security enabled, or null if the group has not been persisted; otherwise `false`.'\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The application may not set this property to null.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members\n  commentId: P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members\n  id: Members\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  langs:\n  - csharp\n  name: Members\n  nameWithType: GroupPrincipal.Members\n  fullName: GroupPrincipal.Members\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Gets a collection of principal objects that represent the members of the group.\n  remarks: \"For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute. When the group contains these types of members, the following restrictions apply:  \\n  \\n-   The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A> method cannot be used to remove members that are part of the group because of their primaryId Attribute.  \\n  \\n-   The <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A> method cannot be used to clear members that are part of the group because of their primaryId Attribute.\"\n  example:\n  - \"The following code connects to the LDAP domain \\\"fabrikam.com\\\" with the username set to \\\"administrator\\\" and the password set to \\\"SecretPwd123\\\" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.  \\n  \\n A search is performed to find the group that has name \\\"Domain Admins\\\" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, \\\"DC=fabrikam,DC=com.\\\" If the group is found, the user who has name \\\"John Smith\\\" is removed from the group and the user who has name \\\"Jim Daly\\\" is added to the group  \\n  \\n```  \\nPrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       \\n                                            \\\"fabrikam.com\\\",                                                                               \\n                                            \\\"DC=fabrikam,DC=com\\\",                                                                 \\n                                            \\\"administrator\\\",   \\n                                            \\\"SecretPwd123\\\");  \\n  \\nGroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   \\n                                                   IdentityType.Name,   \\n                                                   \\\"Domain Admins\\\");  \\n  \\nif (grp != null)  \\n{  \\n    grp.Members.Remove(ctx, IdentityType.Name, \\\"John Smith\\\");            \\n    grp.Members.Add(ctx, IdentityType.Name, \\\"Jim Daly\\\");  \\n    grp.Save();  \\n    grp.Dispose();  \\n}  \\nctx.Dispose();  \\n```\"\n  syntax:\n    content: public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }\n    return:\n      type: System.DirectoryServices.AccountManagement.PrincipalCollection\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.PrincipalCollection\"></xref> object that contains the principal objects that represent the members of the group.\n  overload: System.DirectoryServices.AccountManagement.GroupPrincipal.Members*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.DirectoryServices.AccountManagement.Principal\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: Principal\n  nameWithType: Principal\n  fullName: System.DirectoryServices.AccountManagement.Principal\n- uid: System.MultipleMatchesException\n  isExternal: true\n  name: System.MultipleMatchesException\n- uid: System.ComponenetModel.InvalidEnumerationOperatorException\n  isExternal: true\n  name: System.ComponenetModel.InvalidEnumerationOperatorException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GroupPrincipal(PrincipalContext)\n  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext)\n  fullName: GroupPrincipal.GroupPrincipal(PrincipalContext)\n- uid: System.DirectoryServices.AccountManagement.PrincipalContext\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalContext\n  nameWithType: PrincipalContext\n  fullName: System.DirectoryServices.AccountManagement.PrincipalContext\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GroupPrincipal(PrincipalContext, String)\n  nameWithType: GroupPrincipal.GroupPrincipal(PrincipalContext, String)\n  fullName: GroupPrincipal.GroupPrincipal(PrincipalContext, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: Dispose()\n  nameWithType: GroupPrincipal.Dispose()\n  fullName: GroupPrincipal.Dispose()\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: FindByIdentity(PrincipalContext, String)\n  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext, String)\n  fullName: GroupPrincipal.FindByIdentity(PrincipalContext, String)\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: GroupPrincipal\n  nameWithType: GroupPrincipal\n  fullName: System.DirectoryServices.AccountManagement.GroupPrincipal\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: FindByIdentity(PrincipalContext, IdentityType, String)\n  nameWithType: GroupPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)\n  fullName: GroupPrincipal.FindByIdentity(PrincipalContext, IdentityType, String)\n- uid: System.DirectoryServices.AccountManagement.IdentityType\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: IdentityType\n  nameWithType: IdentityType\n  fullName: System.DirectoryServices.AccountManagement.IdentityType\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GetMembers()\n  nameWithType: GroupPrincipal.GetMembers()\n  fullName: GroupPrincipal.GetMembers()\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n  name: PrincipalSearchResult<T>\n  nameWithType: PrincipalSearchResult<T>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>\n- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalSearchResult<Principal>\n  nameWithType: PrincipalSearchResult<Principal>\n  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>\n  spec.csharp:\n  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1\n    name: PrincipalSearchResult\n    nameWithType: PrincipalSearchResult\n    fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DirectoryServices.AccountManagement.Principal\n    name: Principal\n    nameWithType: Principal\n    fullName: System.DirectoryServices.AccountManagement.Principal\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GetMembers(Boolean)\n  nameWithType: GroupPrincipal.GetMembers(Boolean)\n  fullName: GroupPrincipal.GetMembers(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GroupScope\n  nameWithType: GroupPrincipal.GroupScope\n  fullName: GroupPrincipal.GroupScope\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.DirectoryServices.AccountManagement.GroupScope\n  name: GroupScope\n  nameWithType: GroupScope\n  fullName: System.DirectoryServices.AccountManagement.GroupScope\n- uid: System.Nullable{System.DirectoryServices.AccountManagement.GroupScope}\n  parent: System\n  isExternal: false\n  name: Nullable<GroupScope>\n  nameWithType: Nullable<GroupScope>\n  fullName: System.Nullable<System.DirectoryServices.AccountManagement.GroupScope>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DirectoryServices.AccountManagement.GroupScope\n    name: GroupScope\n    nameWithType: GroupScope\n    fullName: System.DirectoryServices.AccountManagement.GroupScope\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: IsSecurityGroup\n  nameWithType: GroupPrincipal.IsSecurityGroup\n  fullName: GroupPrincipal.IsSecurityGroup\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: Members\n  nameWithType: GroupPrincipal.Members\n  fullName: GroupPrincipal.Members\n- uid: System.DirectoryServices.AccountManagement.PrincipalCollection\n  parent: System.DirectoryServices.AccountManagement\n  isExternal: false\n  name: PrincipalCollection\n  nameWithType: PrincipalCollection\n  fullName: System.DirectoryServices.AccountManagement.PrincipalCollection\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GroupPrincipal\n  nameWithType: GroupPrincipal.GroupPrincipal\n  fullName: GroupPrincipal.GroupPrincipal\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: Dispose\n  nameWithType: GroupPrincipal.Dispose\n  fullName: GroupPrincipal.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: FindByIdentity\n  nameWithType: GroupPrincipal.FindByIdentity\n  fullName: GroupPrincipal.FindByIdentity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GetMembers\n  nameWithType: GroupPrincipal.GetMembers\n  fullName: GroupPrincipal.GetMembers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: GroupScope\n  nameWithType: GroupPrincipal.GroupScope\n  fullName: GroupPrincipal.GroupScope\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: IsSecurityGroup\n  nameWithType: GroupPrincipal.IsSecurityGroup\n  fullName: GroupPrincipal.IsSecurityGroup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.GroupPrincipal.Members*\n  parent: System.DirectoryServices.AccountManagement.GroupPrincipal\n  isExternal: false\n  name: Members\n  nameWithType: GroupPrincipal.Members\n  fullName: GroupPrincipal.Members\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/GroupPrincipal.xml\n- uid: System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Principal.Equals(Object)\n  fullName: Principal.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.DirectoryServices.AccountManagement.Principal.GetHashCode\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Principal.GetHashCode()\n  fullName: Principal.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.DirectoryServices.AccountManagement.Principal.ToString\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: ToString()\n  nameWithType: Principal.ToString()\n  fullName: Principal.ToString()\n- uid: System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: CheckDisposedOrDeleted()\n  nameWithType: Principal.CheckDisposedOrDeleted()\n  fullName: Principal.CheckDisposedOrDeleted()\n- uid: System.DirectoryServices.AccountManagement.Principal.Context\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Context\n  nameWithType: Principal.Context\n  fullName: Principal.Context\n- uid: System.DirectoryServices.AccountManagement.Principal.ContextRaw\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: ContextRaw\n  nameWithType: Principal.ContextRaw\n  fullName: Principal.ContextRaw\n- uid: System.DirectoryServices.AccountManagement.Principal.ContextType\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: ContextType\n  nameWithType: Principal.ContextType\n  fullName: Principal.ContextType\n- uid: System.DirectoryServices.AccountManagement.Principal.Delete\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Delete()\n  nameWithType: Principal.Delete()\n  fullName: Principal.Delete()\n- uid: System.DirectoryServices.AccountManagement.Principal.Description\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Description\n  nameWithType: Principal.Description\n  fullName: Principal.Description\n- uid: System.DirectoryServices.AccountManagement.Principal.DisplayName\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: DisplayName\n  nameWithType: Principal.DisplayName\n  fullName: Principal.DisplayName\n- uid: System.DirectoryServices.AccountManagement.Principal.DistinguishedName\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: DistinguishedName\n  nameWithType: Principal.DistinguishedName\n  fullName: Principal.DistinguishedName\n- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: ExtensionGet(String)\n  nameWithType: Principal.ExtensionGet(String)\n  fullName: Principal.ExtensionGet(String)\n- uid: System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: ExtensionSet(String, Object)\n  nameWithType: Principal.ExtensionSet(String, Object)\n  fullName: Principal.ExtensionSet(String, Object)\n- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: FindByIdentityWithType(PrincipalContext, Type, IdentityType, String)\n  nameWithType: Principal.FindByIdentityWithType(PrincipalContext, Type, IdentityType, String)\n  fullName: Principal.FindByIdentityWithType(PrincipalContext, Type, IdentityType, String)\n- uid: System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: FindByIdentityWithType(PrincipalContext, Type, String)\n  nameWithType: Principal.FindByIdentityWithType(PrincipalContext, Type, String)\n  fullName: Principal.FindByIdentityWithType(PrincipalContext, Type, String)\n- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: GetGroups()\n  nameWithType: Principal.GetGroups()\n  fullName: Principal.GetGroups()\n- uid: System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: GetGroups(PrincipalContext)\n  nameWithType: Principal.GetGroups(PrincipalContext)\n  fullName: Principal.GetGroups(PrincipalContext)\n- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: GetUnderlyingObject()\n  nameWithType: Principal.GetUnderlyingObject()\n  fullName: Principal.GetUnderlyingObject()\n- uid: System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: GetUnderlyingObjectType()\n  nameWithType: Principal.GetUnderlyingObjectType()\n  fullName: Principal.GetUnderlyingObjectType()\n- uid: System.DirectoryServices.AccountManagement.Principal.Guid\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Guid\n  nameWithType: Principal.Guid\n  fullName: Principal.Guid\n- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: IsMemberOf(PrincipalContext, IdentityType, String)\n  nameWithType: Principal.IsMemberOf(PrincipalContext, IdentityType, String)\n  fullName: Principal.IsMemberOf(PrincipalContext, IdentityType, String)\n- uid: System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: IsMemberOf(GroupPrincipal)\n  nameWithType: Principal.IsMemberOf(GroupPrincipal)\n  fullName: Principal.IsMemberOf(GroupPrincipal)\n- uid: System.DirectoryServices.AccountManagement.Principal.Name\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Name\n  nameWithType: Principal.Name\n  fullName: Principal.Name\n- uid: System.DirectoryServices.AccountManagement.Principal.SamAccountName\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: SamAccountName\n  nameWithType: Principal.SamAccountName\n  fullName: Principal.SamAccountName\n- uid: System.DirectoryServices.AccountManagement.Principal.Save\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Save()\n  nameWithType: Principal.Save()\n  fullName: Principal.Save()\n- uid: System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Save(PrincipalContext)\n  nameWithType: Principal.Save(PrincipalContext)\n  fullName: Principal.Save(PrincipalContext)\n- uid: System.DirectoryServices.AccountManagement.Principal.Sid\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: Sid\n  nameWithType: Principal.Sid\n  fullName: Principal.Sid\n- uid: System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: StructuralObjectClass\n  nameWithType: Principal.StructuralObjectClass\n  fullName: Principal.StructuralObjectClass\n- uid: System.DirectoryServices.AccountManagement.Principal.UserPrincipalName\n  parent: System.DirectoryServices.AccountManagement.Principal\n  isExternal: false\n  name: UserPrincipalName\n  nameWithType: Principal.UserPrincipalName\n  fullName: Principal.UserPrincipalName\n"}