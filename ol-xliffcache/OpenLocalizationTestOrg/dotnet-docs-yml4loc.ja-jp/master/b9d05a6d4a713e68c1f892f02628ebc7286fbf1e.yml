### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs
  commentId: T:System.Windows.Forms.DataGridViewCellParsingEventArgs
  id: DataGridViewCellParsingEventArgs
  children:
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  - System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs
  type: Class
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Provides data for the <xref href="System.Windows.Forms.DataGridView.CellParsing"></xref> event of a <xref href="System.Windows.Forms.DataGridView"></xref> control.
  remarks: "Handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event to provide custom value conversion from a user-specified value to a value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.  \n  \n When you handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event, you can convert the value yourself or you can customize the default conversion. For example, you can convert the value yourself using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with type converters of your choosing. Alternately, you can let the default type converters parse the value, but modify the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.  \n  \n When you convert the value yourself, replace the initial, formatted value of the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> property with the converted value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property. To indicate that no further parsing is necessary, set the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName> property to `true`.  \n  \n When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is parsed using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with default type converters. The default implementation of this method parses the value using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style passed in. If the value is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, the value is parsed using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the type converters passed in.  \n  \n To customize the conversion of a cell value into a formatted value for display, handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> to check the validity of date entries.  \n  \n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]\n [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]\n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]"
  syntax:
    content: 'public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.Forms.ConvertEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Forms.ConvertEventArgs.DesiredType
  - System.Windows.Forms.ConvertEventArgs.Value
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  commentId: M:System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  id: '#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)'
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: DataGridViewCellParsingEventArgs(Int32, Int32, Object, Type, DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32, Int32, Object, Type, DataGridViewCellStyle)
  fullName: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32, Int32, Object, Type, DataGridViewCellStyle)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Initializes a new instance of the <xref href="System.Windows.Forms.DataGridViewCellParsingEventArgs"></xref> class.
  syntax:
    content: public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: The row index of the cell that was changed.
    - id: columnIndex
      type: System.Int32
      description: The column index of the cell that was changed.
    - id: value
      type: System.Object
      description: The new value.
    - id: desiredType
      type: System.Type
      description: The type of the new value.
    - id: inheritedCellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: The style applied to the cell that was changed.
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  commentId: P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  id: ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: DataGridViewCellParsingEventArgs.ColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets the column index of the cell data that requires parsing.
  remarks: Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Columns%2A> property of a <xref:System.Windows.Forms.DataGridView>.
  example:
  - "The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> to discover if the changed cell is in the date column.  \n  \n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]\n [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]\n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]"
  syntax:
    content: public int ColumnIndex { get; }
    return:
      type: System.Int32
      description: The column index of the cell that was changed.
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  commentId: P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  id: InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: DataGridViewCellParsingEventArgs.InheritedCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets the style applied to the edited cell.
  remarks: You can use this property to determine the formatting in effect for the cell. Setting this property or changing the properties of the object that this property returns has no effect unless the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> is `false` when the event handler exits. In this case, the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style are used to parse the cell value.
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: A <xref href="System.Windows.Forms.DataGridViewCellStyle"></xref> that represents the current style of the cell being edited. The default value is the value of the cell <xref href="System.Windows.Forms.DataGridViewCell.InheritedStyle"></xref> property.
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  commentId: P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  id: ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: DataGridViewCellParsingEventArgs.ParsingApplied
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets a value indicating whether a cell's value has been successfully parsed.
  remarks: A <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> sets the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property to indicate whether the new cell value was successfully parsed and no further conversion is necessary.
  example:
  - "The following code example sets <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> to `true` when the cell's value is successfully parsed.  \n  \n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]\n [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]\n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]"
  syntax:
    content: public bool ParsingApplied { get; set; }
    return:
      type: System.Boolean
      description: "`true` if the cell's value has been successfully parsed; otherwise, `false`. The default is `false`."
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  commentId: P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  id: RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  langs:
  - csharp
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: DataGridViewCellParsingEventArgs.RowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets the row index of the cell that requires parsing.
  remarks: Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Rows%2A> property of a <xref:System.Windows.Forms.DataGridView>.
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=fullName> event.  \n  \n [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]\n [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]"
  syntax:
    content: public int RowIndex { get; }
    return:
      type: System.Int32
      description: The row index of the cell that was changed.
  overload: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Forms.ConvertEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: ConvertEventArgs
  nameWithType: ConvertEventArgs
  fullName: System.Windows.Forms.ConvertEventArgs
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs(Int32, Int32, Object, Type, DataGridViewCellStyle)
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32, Int32, Object, Type, DataGridViewCellStyle)
  fullName: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs(Int32, Int32, Object, Type, DataGridViewCellStyle)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: DataGridViewCellParsingEventArgs.ColumnIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: DataGridViewCellParsingEventArgs.InheritedCellStyle
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: DataGridViewCellParsingEventArgs.ParsingApplied
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: DataGridViewCellParsingEventArgs.RowIndex
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs
  fullName: DataGridViewCellParsingEventArgs.DataGridViewCellParsingEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ColumnIndex
  nameWithType: DataGridViewCellParsingEventArgs.ColumnIndex
  fullName: DataGridViewCellParsingEventArgs.ColumnIndex
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: InheritedCellStyle
  nameWithType: DataGridViewCellParsingEventArgs.InheritedCellStyle
  fullName: DataGridViewCellParsingEventArgs.InheritedCellStyle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: ParsingApplied
  nameWithType: DataGridViewCellParsingEventArgs.ParsingApplied
  fullName: DataGridViewCellParsingEventArgs.ParsingApplied
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*
  parent: System.Windows.Forms.DataGridViewCellParsingEventArgs
  isExternal: false
  name: RowIndex
  nameWithType: DataGridViewCellParsingEventArgs.RowIndex
  fullName: DataGridViewCellParsingEventArgs.RowIndex
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/DataGridViewCellParsingEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.Windows.Forms.ConvertEventArgs.DesiredType
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: DesiredType
  nameWithType: ConvertEventArgs.DesiredType
  fullName: ConvertEventArgs.DesiredType
- uid: System.Windows.Forms.ConvertEventArgs.Value
  parent: System.Windows.Forms.ConvertEventArgs
  isExternal: false
  name: Value
  nameWithType: ConvertEventArgs.Value
  fullName: ConvertEventArgs.Value
