{"nodes":[{"content":"Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.","nodes":[{"pos":[0,159],"content":"Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.","nodes":[{"content":"Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.","pos":[0,159]}]}],"pos":[645,805],"yaml":true},{"content":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute can only be applied once in a class to a field or property that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.  \n  \n The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> allows you to store the prefixes, and the associated namespaces, used in an XML document. For example, one common usage of the attribute is to store XPath data, as it is defined by the World Wide Web Consortium (www.w3.org) document named \"XML Language (XPath) Version 1.0\". In brief, an XPath is a string that contains many namespace prefixes and local names, along with some other syntax.  \n  \n The XPath language allows for the association of a prefix with a path, and using the prefix within the XML document. For example, the following XML document named \"select\" contains a prefix (\"cal\") associated with a specific URI (http://www.cohowinery.com/calendar/). The element contains an attribute named \"path\" that contains the XPath.  \n  \n```  \n<select xmlns:cal =\"http://www.cohowinery.com/calendar/\" path=\"cal:appointments/@startTime\" />  \n```  \n  \n The schema for this might be:  \n  \n```  \n<element name=\"select\">  \n   <complexType>  \n      <simpleContent>  \n         <attribute name=\"path\" />  \n      </simpleContent>  \n   </complexType>  \n</element>  \n```  \n  \n Without the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>, the association between the prefix and the namespace is lost.  \n  \n To retain the association between the prefix and the namespace URI, add a member that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and apply the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute to the member, as shown in the following C# and Visual Basic code:  \n  \n```  \n// C#  \npublic class Select {  \n  [XmlAttribute] public string path;  \n  [XmlNamespaceDeclarations] public XmlSerializerNamespaces xmlns;  \n}  \n' Visual Basic  \nPublic Class Select  \n   <XmlAttribute> Public path As String  \n   <XmlNamespaceDeclarations> Public xmlns As XmlSerializerNamespaces  \nEnd Class  \n```  \n  \n When serialized, the schema for the generated XML document contains the XML Schema definition (XSD) element named `appinfo`. The element further contains a metadata element named `keepNamespaceDeclarations`, set to the name of the member that contains the namespace declarations. The following XML fragment shows the schema:  \n  \n```  \n<xs:element name=\"select\">  \n   <xs:complexType>  \n      <xs:annotation>   \n         <xs:appinfo>  \n          <keepNamespaceDeclarations>xmlns</keepNamespaceDeclarations>  \n         </xs:appinfo>   \n      </xs:annotation>   \n      <xs:simpleContent>  \n         <xs:attribute name=\"path\" />  \n      </xs:simpleContent>  \n   </xs:complexType>  \n</xs:element>  \n```  \n  \n On deserialization, the `xmlns` field contains an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all namespace prefix definitions.  \n  \n On serialization, the user can add prefix-namespace pairs to the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object using the <xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A> method. This is shown in the following C# and Visual Basic code:  \n  \n```  \n// C#  \nusing System;  \nusing System.IO;  \nusing System.Xml.Serialization;  \n[XmlRoot(\"select\")]  \npublic class Select {  \n   [XmlAttribute]  \n   public string xpath;  \n   [XmlNamespaceDeclarations]  \n   public XmlSerializerNamespaces xmlns;  \n}  \npublic class Test {  \n   public static void Main(string[] args) {  \n      Select mySelect = new Select();  \n      mySelect.xpath = \"myNS:ref/@common:y\";  \n      mySelect.xmlns = new XmlSerializerNamespaces();  \n      mySelect.xmlns.Add(\"MyNS\", \"myNS.tempuri.org\");  \n      mySelect.xmlns.Add(\"common\", \"common.tempuri.org\");  \n      XmlSerializer ser = new XmlSerializer(typeof(Select));  \n      ser.Serialize(Console.Out, mySelect);  \n   }  \n}  \n// Output:  \n// <?xml version=\"1.0\" encoding=\"IBM437\"?>  \n// <select xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"   \n// xmlns:common=\"common.tempuri.org\" xmlns:MyNS=\"myNS.tempuri.org\" xpath=\"myNS:ref/@common:y\" />  \n' Visual Basic  \nImports System  \nImports System.IO  \nImports System.Xml.Serialization  \n<XmlRoot(\"select\")> _  \nPublic Class SelectPath  \n   <XmlAttribute> _  \n   Public xpath As String   \n   <XmlNamespaceDeclarations> _  \n   public xmlns As XmlSerializerNamespaces   \nEnd Class  \nPublic Class Test   \n   Public Shared Sub Main()   \n      Dim mySelect As SelectPath = New SelectPath()  \n      mySelect.xpath = \"myNS:ref/@common:y\"  \n      mySelect.xmlns = New XmlSerializerNamespaces()  \n      mySelect.xmlns.Add(\"MyNS\", \"myNS.tempuri.org\")  \n      mySelect.xmlns.Add(\"common\", \"common.tempuri.org\")  \n      Dim ser As XmlSerializer = New XmlSerializer(mySelect.GetType)  \n      ser.Serialize(Console.Out, mySelect)  \n   End Sub  \nEnd Class  \n'Output:  \n' <?xml version=\"1.0\" encoding=\"IBM437\"?>  \n' <select xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"   \n' xmlns:common=\"common.tempuri.org\" xmlns:MyNS=\"myNS.tempuri.org\" xpath=\"myNS:ref/@common:y\" />  \n```  \n  \n Also note that the member to which the attribute is applied contains only the prefix-namespace pairs that belong to the XML element defined by the class. For example, in the following XML document, only the prefix pair \"cal\" is captured, but not the \"x\" prefix. To get that data, add a member with the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> to the class that represents the `root` element.  \n  \n```  \n<?xml version=\"1.0\"?>  \n<x:root xmlns:x=\"http://www.cohowinery.com/x/\">  \n  <x:select xmlns:cal=\"http://www.cohowinery.com/calendar/\" path=\"cal:appointments/@cal:startTime\" />  \n</x:root>  \n```","nodes":[{"pos":[0,218],"content":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute can only be applied once in a class to a field or property that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&gt;</ph> attribute can only be applied once in a class to a field or property that returns an <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object.","pos":[0,218],"source":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute can only be applied once in a class to a field or property that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object."}]},{"pos":[225,685],"content":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> allows you to store the prefixes, and the associated namespaces, used in an XML document. For example, one common usage of the attribute is to store XPath data, as it is defined by the World Wide Web Consortium (www.w3.org) document named \"XML Language (XPath) Version 1.0\". In brief, an XPath is a string that contains many namespace prefixes and local names, along with some other syntax.","nodes":[{"content":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> allows you to store the prefixes, and the associated namespaces, used in an XML document. For example, one common usage of the attribute is to store XPath data, as it is defined by the World Wide Web Consortium (www.w3.org) document named \"XML Language (XPath) Version 1.0\". In brief, an XPath is a string that contains many namespace prefixes and local names, along with some other syntax.","pos":[0,460],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&gt;</ph> allows you to store the prefixes, and the associated namespaces, used in an XML document.","pos":[0,159],"source":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> allows you to store the prefixes, and the associated namespaces, used in an XML document."},{"content":"For example, one common usage of the attribute is to store XPath data, as it is defined by the World Wide Web Consortium (www.w3.org) document named \"XML Language (XPath) Version 1.0\".","pos":[160,344]},{"content":"In brief, an XPath is a string that contains many namespace prefixes and local names, along with some other syntax.","pos":[345,460]}]}]},{"pos":[692,1031],"content":"The XPath language allows for the association of a prefix with a path, and using the prefix within the XML document. For example, the following XML document named \"select\" contains a prefix (\"cal\") associated with a specific URI (http://www.cohowinery.com/calendar/). The element contains an attribute named \"path\" that contains the XPath.","nodes":[{"content":"The XPath language allows for the association of a prefix with a path, and using the prefix within the XML document. For example, the following XML document named \"select\" contains a prefix (\"cal\") associated with a specific URI (http://www.cohowinery.com/calendar/). The element contains an attribute named \"path\" that contains the XPath.","pos":[0,339],"nodes":[{"content":"The XPath language allows for the association of a prefix with a path, and using the prefix within the XML document.","pos":[0,116]},{"content":"For example, the following XML document named \"select\" contains a prefix (\"cal\") associated with a specific URI (http://www.cohowinery.com/calendar/).","pos":[117,267]},{"content":"The element contains an attribute named \"path\" that contains the XPath.","pos":[268,339]}]}]},{"pos":[1150,1179],"content":"The schema for this might be:","nodes":[{"content":"The schema for this might be:","pos":[0,29]}]},{"pos":[1365,1505],"content":"Without the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>, the association between the prefix and the namespace is lost.","nodes":[{"content":"Without the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&gt;</ph>, the association between the prefix and the namespace is lost.","pos":[0,140],"source":"Without the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>, the association between the prefix and the namespace is lost."}]},{"pos":[1512,1828],"content":"To retain the association between the prefix and the namespace URI, add a member that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and apply the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute to the member, as shown in the following C# and Visual Basic code:","nodes":[{"content":"To retain the association between the prefix and the namespace URI, add a member that returns an <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object and apply the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&gt;</ph> attribute to the member, as shown in the following C# and Visual Basic code:","pos":[0,316],"source":"To retain the association between the prefix and the namespace URI, add a member that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and apply the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute to the member, as shown in the following C# and Visual Basic code:"}]},{"pos":[2159,2483],"content":"When serialized, the schema for the generated XML document contains the XML Schema definition (XSD) element named `appinfo`. The element further contains a metadata element named `keepNamespaceDeclarations`, set to the name of the member that contains the namespace declarations. The following XML fragment shows the schema:","nodes":[{"content":"When serialized, the schema for the generated XML document contains the XML Schema definition (XSD) element named <ph id=\"ph1\">`appinfo`</ph>.","pos":[0,124],"source":"When serialized, the schema for the generated XML document contains the XML Schema definition (XSD) element named `appinfo`."},{"content":"The element further contains a metadata element named <ph id=\"ph1\">`keepNamespaceDeclarations`</ph>, set to the name of the member that contains the namespace declarations.","pos":[125,279],"source":" The element further contains a metadata element named `keepNamespaceDeclarations`, set to the name of the member that contains the namespace declarations."},{"content":"The following XML fragment shows the schema:","pos":[280,324]}]},{"pos":[2864,3024],"content":"On deserialization, the <ph id=\"ph1\">`xmlns`</ph> field contains an <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object that contains all namespace prefix definitions.","source":"On deserialization, the `xmlns` field contains an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all namespace prefix definitions."},{"pos":[3031,3296],"content":"On serialization, the user can add prefix-namespace pairs to the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object using the <xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A> method. This is shown in the following C# and Visual Basic code:","nodes":[{"content":"On serialization, the user can add prefix-namespace pairs to the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object using the <xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A> method. This is shown in the following C# and Visual Basic code:","pos":[0,265],"nodes":[{"content":"On serialization, the user can add prefix-namespace pairs to the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object using the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A&gt;</ph> method.","pos":[0,208],"source":"On serialization, the user can add prefix-namespace pairs to the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object using the <xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A> method."},{"content":"This is shown in the following C# and Visual Basic code:","pos":[209,265]}]}]},{"pos":[5292,5708],"content":"Also note that the member to which the attribute is applied contains only the prefix-namespace pairs that belong to the XML element defined by the class. For example, in the following XML document, only the prefix pair \"cal\" is captured, but not the \"x\" prefix. To get that data, add a member with the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> to the class that represents the `root` element.","nodes":[{"content":"Also note that the member to which the attribute is applied contains only the prefix-namespace pairs that belong to the XML element defined by the class.","pos":[0,153]},{"content":"For example, in the following XML document, only the prefix pair \"cal\" is captured, but not the \"x\" prefix.","pos":[154,261]},{"content":"To get that data, add a member with the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&gt;</ph> to the class that represents the <ph id=\"ph2\">`root`</ph> element.","pos":[262,416],"source":" To get that data, add a member with the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> to the class that represents the `root` element."}]}],"pos":[816,6938],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\"></xref> class."}],"pos":[12434,12555],"yaml":true},{"content":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> can only be applied to a target that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.","nodes":[{"pos":[0,181],"content":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> can only be applied to a target that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&gt;</ph> can only be applied to a target that returns an <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object.","pos":[0,181],"source":"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> can only be applied to a target that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object."}]}],"pos":[12566,12748],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\n  commentId: T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\n  id: XmlNamespaceDeclarationsAttribute\n  children:\n  - System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor\n  langs:\n  - csharp\n  name: XmlNamespaceDeclarationsAttribute\n  nameWithType: XmlNamespaceDeclarationsAttribute\n  fullName: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\n  type: Class\n  assemblies:\n  - System.Xml.XmlSerializer\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Serialization\n  summary: Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.\n  remarks: \"The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute can only be applied once in a class to a field or property that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.  \\n  \\n The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> allows you to store the prefixes, and the associated namespaces, used in an XML document. For example, one common usage of the attribute is to store XPath data, as it is defined by the World Wide Web Consortium (www.w3.org) document named \\\"XML Language (XPath) Version 1.0\\\". In brief, an XPath is a string that contains many namespace prefixes and local names, along with some other syntax.  \\n  \\n The XPath language allows for the association of a prefix with a path, and using the prefix within the XML document. For example, the following XML document named \\\"select\\\" contains a prefix (\\\"cal\\\") associated with a specific URI (http://www.cohowinery.com/calendar/). The element contains an attribute named \\\"path\\\" that contains the XPath.  \\n  \\n```  \\n<select xmlns:cal =\\\"http://www.cohowinery.com/calendar/\\\" path=\\\"cal:appointments/@startTime\\\" />  \\n```  \\n  \\n The schema for this might be:  \\n  \\n```  \\n<element name=\\\"select\\\">  \\n   <complexType>  \\n      <simpleContent>  \\n         <attribute name=\\\"path\\\" />  \\n      </simpleContent>  \\n   </complexType>  \\n</element>  \\n```  \\n  \\n Without the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute>, the association between the prefix and the namespace is lost.  \\n  \\n To retain the association between the prefix and the namespace URI, add a member that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and apply the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> attribute to the member, as shown in the following C# and Visual Basic code:  \\n  \\n```  \\n// C#  \\npublic class Select {  \\n  [XmlAttribute] public string path;  \\n  [XmlNamespaceDeclarations] public XmlSerializerNamespaces xmlns;  \\n}  \\n' Visual Basic  \\nPublic Class Select  \\n   <XmlAttribute> Public path As String  \\n   <XmlNamespaceDeclarations> Public xmlns As XmlSerializerNamespaces  \\nEnd Class  \\n```  \\n  \\n When serialized, the schema for the generated XML document contains the XML Schema definition (XSD) element named `appinfo`. The element further contains a metadata element named `keepNamespaceDeclarations`, set to the name of the member that contains the namespace declarations. The following XML fragment shows the schema:  \\n  \\n```  \\n<xs:element name=\\\"select\\\">  \\n   <xs:complexType>  \\n      <xs:annotation>   \\n         <xs:appinfo>  \\n          <keepNamespaceDeclarations>xmlns</keepNamespaceDeclarations>  \\n         </xs:appinfo>   \\n      </xs:annotation>   \\n      <xs:simpleContent>  \\n         <xs:attribute name=\\\"path\\\" />  \\n      </xs:simpleContent>  \\n   </xs:complexType>  \\n</xs:element>  \\n```  \\n  \\n On deserialization, the `xmlns` field contains an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all namespace prefix definitions.  \\n  \\n On serialization, the user can add prefix-namespace pairs to the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object using the <xref:System.Xml.Serialization.XmlSerializerNamespaces.Add%2A> method. This is shown in the following C# and Visual Basic code:  \\n  \\n```  \\n// C#  \\nusing System;  \\nusing System.IO;  \\nusing System.Xml.Serialization;  \\n[XmlRoot(\\\"select\\\")]  \\npublic class Select {  \\n   [XmlAttribute]  \\n   public string xpath;  \\n   [XmlNamespaceDeclarations]  \\n   public XmlSerializerNamespaces xmlns;  \\n}  \\npublic class Test {  \\n   public static void Main(string[] args) {  \\n      Select mySelect = new Select();  \\n      mySelect.xpath = \\\"myNS:ref/@common:y\\\";  \\n      mySelect.xmlns = new XmlSerializerNamespaces();  \\n      mySelect.xmlns.Add(\\\"MyNS\\\", \\\"myNS.tempuri.org\\\");  \\n      mySelect.xmlns.Add(\\\"common\\\", \\\"common.tempuri.org\\\");  \\n      XmlSerializer ser = new XmlSerializer(typeof(Select));  \\n      ser.Serialize(Console.Out, mySelect);  \\n   }  \\n}  \\n// Output:  \\n// <?xml version=\\\"1.0\\\" encoding=\\\"IBM437\\\"?>  \\n// <select xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"   \\n// xmlns:common=\\\"common.tempuri.org\\\" xmlns:MyNS=\\\"myNS.tempuri.org\\\" xpath=\\\"myNS:ref/@common:y\\\" />  \\n' Visual Basic  \\nImports System  \\nImports System.IO  \\nImports System.Xml.Serialization  \\n<XmlRoot(\\\"select\\\")> _  \\nPublic Class SelectPath  \\n   <XmlAttribute> _  \\n   Public xpath As String   \\n   <XmlNamespaceDeclarations> _  \\n   public xmlns As XmlSerializerNamespaces   \\nEnd Class  \\nPublic Class Test   \\n   Public Shared Sub Main()   \\n      Dim mySelect As SelectPath = New SelectPath()  \\n      mySelect.xpath = \\\"myNS:ref/@common:y\\\"  \\n      mySelect.xmlns = New XmlSerializerNamespaces()  \\n      mySelect.xmlns.Add(\\\"MyNS\\\", \\\"myNS.tempuri.org\\\")  \\n      mySelect.xmlns.Add(\\\"common\\\", \\\"common.tempuri.org\\\")  \\n      Dim ser As XmlSerializer = New XmlSerializer(mySelect.GetType)  \\n      ser.Serialize(Console.Out, mySelect)  \\n   End Sub  \\nEnd Class  \\n'Output:  \\n' <?xml version=\\\"1.0\\\" encoding=\\\"IBM437\\\"?>  \\n' <select xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"   \\n' xmlns:common=\\\"common.tempuri.org\\\" xmlns:MyNS=\\\"myNS.tempuri.org\\\" xpath=\\\"myNS:ref/@common:y\\\" />  \\n```  \\n  \\n Also note that the member to which the attribute is applied contains only the prefix-namespace pairs that belong to the XML element defined by the class. For example, in the following XML document, only the prefix pair \\\"cal\\\" is captured, but not the \\\"x\\\" prefix. To get that data, add a member with the <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> to the class that represents the `root` element.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\"?>  \\n<x:root xmlns:x=\\\"http://www.cohowinery.com/x/\\\">  \\n  <x:select xmlns:cal=\\\"http://www.cohowinery.com/calendar/\\\" path=\\\"cal:appointments/@cal:startTime\\\" />  \\n</x:root>  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=false)]\n\n      public class XmlNamespaceDeclarationsAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlNamespaceDeclarationsAttribute.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor\n  commentId: M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor\n  id: '#ctor'\n  parent: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\n  langs:\n  - csharp\n  name: XmlNamespaceDeclarationsAttribute()\n  nameWithType: XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute()\n  fullName: XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute()\n  type: Constructor\n  assemblies:\n  - System.Xml.XmlSerializer\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\"></xref> class.\n  remarks: The <xref:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute> can only be applied to a target that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.\n  syntax:\n    content: public XmlNamespaceDeclarationsAttribute ();\n    parameters: []\n  overload: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlNamespaceDeclarationsAttribute.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor\n  parent: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\n  isExternal: false\n  name: XmlNamespaceDeclarationsAttribute()\n  nameWithType: XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute()\n  fullName: XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute()\n- uid: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor*\n  parent: System.Xml.Serialization.XmlNamespaceDeclarationsAttribute\n  isExternal: false\n  name: XmlNamespaceDeclarationsAttribute\n  nameWithType: XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute\n  fullName: XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlNamespaceDeclarationsAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}