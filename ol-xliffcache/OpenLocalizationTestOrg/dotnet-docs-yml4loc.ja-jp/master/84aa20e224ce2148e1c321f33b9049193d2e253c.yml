### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  commentId: T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  id: AdamRoleCollection
  children:
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  langs:
  - csharp
  name: AdamRoleCollection
  nameWithType: AdamRoleCollection
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  type: Class
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: The <xref href="System.DirectoryServices.ActiveDirectory.AdamRoleCollection"></xref> class is a read-only collection that contains <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> items.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.DirectoryServices.ActiveDirectory.AdamRoleCollection> class refers to Active Directory Application Mode (ADAM) which has been renamed to Active Directory Lightweight Directory Services (AD LDS).
  syntax:
    content: 'public class AdamRoleCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  commentId: M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  id: Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: Contains(AdamRole)
  nameWithType: AdamRoleCollection.Contains(AdamRole)
  fullName: AdamRoleCollection.Contains(AdamRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Determines if the specified <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item is in this collection.
  syntax:
    content: public bool Contains (System.DirectoryServices.ActiveDirectory.AdamRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: The <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item to search for in this collection.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item is in this collection; otherwise, `false`.'
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>role</code> parameter is `null`.
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: <code>role</code> is not a valid <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  commentId: M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  id: CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: CopyTo(AdamRole[], Int32)
  nameWithType: AdamRoleCollection.CopyTo(AdamRole[], Int32)
  fullName: AdamRoleCollection.CopyTo(AdamRole[], Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Copies all <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> items in this collection to the specified array, starting at the specified index of the target array.
  syntax:
    content: public void CopyTo (System.DirectoryServices.ActiveDirectory.AdamRole[] roles, int index);
    parameters:
    - id: roles
      type: System.DirectoryServices.ActiveDirectory.AdamRole[]
      description: The array of <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> items that receives the elements of this collection.
    - id: index
      type: System.Int32
      description: The zero-based index in <code>roles</code> where this method starts copying this collection.
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The destination array is not large enough to hold the required number of elements.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>roles</code> parameter is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>index</code> parameter that is specified is out of range of the destination array.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  commentId: M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  id: IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: IndexOf(AdamRole)
  nameWithType: AdamRoleCollection.IndexOf(AdamRole)
  fullName: AdamRoleCollection.IndexOf(AdamRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Returns the first occurrence of the specified <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item in this collection.
  syntax:
    content: public int IndexOf (System.DirectoryServices.ActiveDirectory.AdamRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: The <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item to search for in this collection.
    return:
      type: System.Int32
      description: The zero-based index of the first matching item. -1 if no member of this collection is identical to the <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item.
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>role</code> parameter is `null`.
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: <code>role</code> is not a valid <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  commentId: P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: AdamRoleCollection.Item(Int32)
  fullName: AdamRoleCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets an <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> item in this collection.
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamRole this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> object to get.
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: The <xref href="System.DirectoryServices.ActiveDirectory.AdamRole"></xref> object that exists at the specified index.
  overload: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>index</code> specified is out of range of the collection.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
references:
- uid: System.Collections.ReadOnlyCollectionBase
  parent: System.Collections
  isExternal: false
  name: ReadOnlyCollectionBase
  nameWithType: ReadOnlyCollectionBase
  fullName: System.Collections.ReadOnlyCollectionBase
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Contains(AdamRole)
  nameWithType: AdamRoleCollection.Contains(AdamRole)
  fullName: AdamRoleCollection.Contains(AdamRole)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.AdamRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: CopyTo(AdamRole[], Int32)
  nameWithType: AdamRoleCollection.CopyTo(AdamRole[], Int32)
  fullName: AdamRoleCollection.CopyTo(AdamRole[], Int32)
- uid: System.DirectoryServices.ActiveDirectory.AdamRole[]
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole[]
  nameWithType: AdamRole[]
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole[]
  spec.csharp:
  - uid: System.DirectoryServices.ActiveDirectory.AdamRole
    name: AdamRole
    nameWithType: AdamRole
    fullName: System.DirectoryServices.ActiveDirectory.AdamRole
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: IndexOf(AdamRole)
  nameWithType: AdamRoleCollection.IndexOf(AdamRole)
  fullName: AdamRoleCollection.IndexOf(AdamRole)
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: AdamRoleCollection.Item(Int32)
  fullName: AdamRoleCollection.Item(Int32)
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Contains
  nameWithType: AdamRoleCollection.Contains
  fullName: AdamRoleCollection.Contains
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: CopyTo
  nameWithType: AdamRoleCollection.CopyTo
  fullName: AdamRoleCollection.CopyTo
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: IndexOf
  nameWithType: AdamRoleCollection.IndexOf
  fullName: AdamRoleCollection.IndexOf
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item*
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Item
  nameWithType: AdamRoleCollection.Item
  fullName: AdamRoleCollection.Item
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/AdamRoleCollection.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Collections.ReadOnlyCollectionBase.Count
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBase.Count
  fullName: ReadOnlyCollectionBase.Count
- uid: System.Collections.ReadOnlyCollectionBase.GetEnumerator
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBase.GetEnumerator()
  fullName: ReadOnlyCollectionBase.GetEnumerator()
- uid: System.Collections.ReadOnlyCollectionBase.InnerList
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: InnerList
  nameWithType: ReadOnlyCollectionBase.InnerList
  fullName: ReadOnlyCollectionBase.InnerList
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyCollectionBase.ICollection.CopyTo(Array, Int32)
  fullName: ReadOnlyCollectionBase.ICollection.CopyTo(Array, Int32)
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase.ICollection.IsSynchronized
  fullName: ReadOnlyCollectionBase.ICollection.IsSynchronized
- uid: System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase.ICollection.SyncRoot
  fullName: ReadOnlyCollectionBase.ICollection.SyncRoot
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
