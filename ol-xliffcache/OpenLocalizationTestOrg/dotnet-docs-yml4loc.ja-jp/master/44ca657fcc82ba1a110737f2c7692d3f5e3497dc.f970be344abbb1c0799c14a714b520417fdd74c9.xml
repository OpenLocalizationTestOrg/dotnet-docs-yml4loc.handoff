{"nodes":[{"content":"Represents an ordered list of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects.","nodes":[{"pos":[0,106],"content":"Represents an ordered list of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> objects.","source":"Represents an ordered list of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects."}],"pos":[1350,1457],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue. Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values. You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance. You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue. Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,1343],"content":"A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue. Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values. You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance. You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue. Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.","nodes":[{"content":"A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue. Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values. You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance. You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue. Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.","pos":[0,1258],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> represents the queue of <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> objects associated with a workflow instance and provides methods to manage this queue.","pos":[0,230],"source":"A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue."},{"content":"Subscriptions are ordered in the queue based on their <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> values; those with smaller <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> values are positioned before those with larger <ph id=\"ph3\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A&gt;</ph> values.","pos":[231,567],"source":" Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values."},{"content":"You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty&gt;</ph> for each workflow instance.","pos":[568,802],"source":" You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance."},{"content":"You can use <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A&gt;</ph> to add or remove subscriptions from the timer queue.","pos":[803,1015],"source":" You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue."},{"content":"Whenever the first element in the timer queue changes, the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.","pos":[1016,1258],"source":" Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event."}]}]}],"pos":[1468,2817],"yaml":true,"extradata":"MT"},{"content":"Adds a <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to the timer queue.","nodes":[{"pos":[0,94],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> to the timer queue.","source":"Adds a <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to the timer queue."}],"pos":[4980,5075],"yaml":true},{"content":"Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule the new timer event. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.","nodes":[{"pos":[0,1005],"content":"Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule the new timer event. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.","nodes":[{"content":"Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule the new timer event. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.","pos":[0,1005],"nodes":[{"content":"Adds the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> to the timer queue.","pos":[0,82],"source":"Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue."},{"content":"Subscriptions in the queue are positioned based on their <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName&gt;</ph> values; those with smaller values are positioned in front of those with larger values.","pos":[83,318],"source":" Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values."},{"content":"If the new subscription is added at the beginning of the queue, <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName&gt;</ph> is called to cancel the timer event that was previously at the beginning of the queue and <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName&gt;</ph> is called to schedule the new timer event.","pos":[319,793],"source":" If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule the new timer event."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A&gt;</ph> locks the <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> before adding the new subscription and is, therefore, thread safe.","pos":[794,1005],"source":" <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe."}]}]}],"pos":[5086,6092],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to add to the timer queue.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> to add to the timer queue.","source":"The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to add to the timer queue."}],"pos":[6295,6394],"yaml":true},{"content":"<code>item</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>item</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[6584,6651],"yaml":true},{"content":"Copies the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> elements to an existing one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified array index.","nodes":[{"pos":[0,202],"content":"Copies the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph> elements to an existing one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified array index.","source":"Copies the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> elements to an existing one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified array index."}],"pos":[7767,7970],"yaml":true},{"content":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe.","nodes":[{"pos":[0,89],"content":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A&gt;</ph> is thread safe.","pos":[0,89],"source":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe."}]}],"pos":[7981,8071],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,257],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,188],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[189,257],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[8215,8473],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[8533,8601],"yaml":true},{"content":"Gets the number of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects in the timer queue.","nodes":[{"pos":[0,114],"content":"Gets the number of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> objects in the timer queue.","source":"Gets the number of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects in the timer queue."}],"pos":[9684,9799],"yaml":true},{"content":"The number of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects in the queue.","nodes":[{"pos":[0,103],"content":"The number of <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> objects in the queue.","source":"The number of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects in the queue."}],"pos":[9904,10008],"yaml":true},{"content":"Returns an enumerator that iterates through the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.","nodes":[{"pos":[0,126],"content":"Returns an enumerator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator that iterates through the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>."}],"pos":[11142,11269],"yaml":true},{"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined. The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.","nodes":[{"pos":[0,817],"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined. The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.","nodes":[{"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined. The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.","pos":[0,817],"nodes":[{"content":"Access to the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,182],"source":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[183,255]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[256,418]},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[419,573]},{"content":"To guarantee thread safety during enumeration, you can lock the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> during the entire enumeration by using <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph>.","pos":[574,817],"source":" To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>."}]}]}],"pos":[11280,12098],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.","nodes":[{"pos":[0,141],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>."}],"pos":[12270,12412],"yaml":true},{"content":"Gets a value that indicates whether the access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,162],"content":"Gets a value that indicates whether the access to the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value that indicates whether the access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> is synchronized (thread safe)."}],"pos":[13556,13719],"yaml":true},{"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.","nodes":[{"pos":[0,709],"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.","nodes":[{"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.","pos":[0,709],"nodes":[{"content":"Access to the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,182],"source":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure."},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[183,320]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[321,502]},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph>.","pos":[503,709],"source":" <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>."}]}]}],"pos":[13730,14440],"yaml":true,"extradata":"MT"},{"content":"Always returns `true` indicating that access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,160],"content":"Always returns <ph id=\"ph1\">`true`</ph> indicating that access to the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Always returns `true` indicating that access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> is synchronized (thread safe)."}],"pos":[14557,14718],"yaml":true},{"content":"Returns the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> at the beginning of the timer queue without removing it.","nodes":[{"pos":[0,136],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> at the beginning of the timer queue without removing it.","source":"Returns the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> at the beginning of the timer queue without removing it."}],"pos":[15807,15944],"yaml":true},{"content":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe.","nodes":[{"pos":[0,87],"content":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A&gt;</ph> is thread safe.","pos":[0,87],"source":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe."}]}],"pos":[15955,16043],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> at the beginning of the timer queue or a null reference (`Nothing` in Visual Basic) if the timer queue is empty.","nodes":[{"pos":[0,184],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> at the beginning of the timer queue or a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if the timer queue is empty.","source":"The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> at the beginning of the timer queue or a null reference (`Nothing` in Visual Basic) if the timer queue is empty."}],"pos":[16238,16423],"yaml":true},{"content":"Removes the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> that has the specified subscription id from the timer queue.","nodes":[{"pos":[0,140],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> that has the specified subscription id from the timer queue.","source":"Removes the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> that has the specified subscription id from the timer queue."}],"pos":[17565,17706],"yaml":true},{"content":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.","nodes":[{"pos":[0,994],"content":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.","nodes":[{"content":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.","pos":[0,994],"nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> with the specified subscription id from the timer queue.","pos":[0,122],"source":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue."},{"content":"Subscriptions in the queue are positioned based on their <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName&gt;</ph> values; those with smaller values are positioned in front of those with larger values.","pos":[123,358],"source":" Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values."},{"content":"If the subscription removed was the subscription at the beginning of the queue, <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName&gt;</ph> is called to cancel the timer event associated with this subscription and <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName&gt;</ph> is called to schedule a timer event for the subscription that is now at the beginning of the queue.","pos":[359,890],"source":" If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29&gt;</ph> is thread safe.","pos":[891,994],"source":" <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe."}]}]}],"pos":[17717,18712],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Guid\"></xref> of the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to remove.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The <xref href=\"System.Guid\"></xref> of the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to remove."}],"pos":[18871,18994],"yaml":true},{"content":"Removes the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> from the timer queue.","nodes":[{"pos":[0,101],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> from the timer queue.","source":"Removes the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> from the timer queue."}],"pos":[20297,20399],"yaml":true},{"content":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.","nodes":[{"pos":[0,959],"content":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.","nodes":[{"content":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.","pos":[0,959],"nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription&gt;</ph> from the timer queue.","pos":[0,87],"source":"Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue."},{"content":"Subscriptions in the queue are positioned based on their <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName&gt;</ph> values; those with smaller values are positioned in front of those with larger values.","pos":[88,323],"source":" Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values."},{"content":"If the subscription removed was the subscription at the beginning of the queue, <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName&gt;</ph> is called to cancel the timer event associated with this subscription and <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName&gt;</ph> is called to schedule a timer event for the subscription that is now at the beginning of the queue.","pos":[324,855],"source":" If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29&gt;</ph> is thread safe.","pos":[856,959],"source":" <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe."}]}]}],"pos":[20410,21370],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to remove from the timer queue.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> to remove from the timer queue.","source":"The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to remove from the timer queue."}],"pos":[21576,21680],"yaml":true},{"content":"<code>item</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;item&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>item</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[21873,21940],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.","nodes":[{"pos":[0,139],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>."}],"pos":[22947,23087],"yaml":true},{"content":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.  \n  \n Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,206],"content":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph>.","pos":[0,206],"source":"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>."}]},{"pos":[213,853],"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.","pos":[0,640],"nodes":[{"content":"Access to the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.","pos":[0,182],"source":"Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure."},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[183,320]},{"content":"To guarantee thread safety during enumeration, you can either lock the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection&gt;</ph> during the entire enumeration by using <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A&gt;</ph> or catch the exceptions resulting from changes made by other threads.","pos":[321,640],"source":" To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads."}]}]}],"pos":[23098,23956],"yaml":true,"extradata":"MT"},{"content":"An object used to synchronize access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.","nodes":[{"pos":[0,122],"content":"An object used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An object used to synchronize access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>."}],"pos":[24068,24191],"yaml":true},{"content":"Timer queue associated with a workflow instance. This queue contains time ordered <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects for a workflow.","nodes":[{"pos":[0,173],"content":"Timer queue associated with a workflow instance. This queue contains time ordered <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects for a workflow.","nodes":[{"content":"Timer queue associated with a workflow instance.","pos":[0,48]},{"content":"This queue contains time ordered <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.TimerEventSubscription\"&gt;&lt;/xref&gt;</ph> objects for a workflow.","pos":[49,173],"source":" This queue contains time ordered <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects for a workflow."}]}],"pos":[25381,25555],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  commentId: T:System.Workflow.Runtime.TimerEventSubscriptionCollection\n  id: TimerEventSubscriptionCollection\n  children:\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Count\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot\n  - System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty\n  langs:\n  - csharp\n  name: TimerEventSubscriptionCollection\n  nameWithType: TimerEventSubscriptionCollection\n  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  type: Class\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Represents an ordered list of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue. Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values. You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance. You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue. Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public class TimerEventSubscriptionCollection : System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)\n  commentId: M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)\n  id: Add(System.Workflow.Runtime.TimerEventSubscription)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: Add(TimerEventSubscription)\n  nameWithType: TimerEventSubscriptionCollection.Add(TimerEventSubscription)\n  fullName: TimerEventSubscriptionCollection.Add(TimerEventSubscription)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Adds a <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to the timer queue.\n  remarks: Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule the new timer event. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.\n  syntax:\n    content: public void Add (System.Workflow.Runtime.TimerEventSubscription item);\n    parameters:\n    - id: item\n      type: System.Workflow.Runtime.TimerEventSubscription\n      description: The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to add to the timer queue.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>item</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: TimerEventSubscriptionCollection.CopyTo(Array, Int32)\n  fullName: TimerEventSubscriptionCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Copies the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> elements to an existing one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified array index.\n  remarks: <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe.\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count\n  commentId: P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count\n  id: Count\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TimerEventSubscriptionCollection.Count\n  fullName: TimerEventSubscriptionCollection.Count\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Gets the number of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects in the timer queue.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects in the queue.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator\n  commentId: M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TimerEventSubscriptionCollection.GetEnumerator()\n  fullName: TimerEventSubscriptionCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Returns an enumerator that iterates through the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.\n  remarks: Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined. The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> for the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized\n  commentId: P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: TimerEventSubscriptionCollection.IsSynchronized\n  fullName: TimerEventSubscriptionCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Gets a value that indicates whether the access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> is synchronized (thread safe).\n  remarks: Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Always returns `true` indicating that access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref> is synchronized (thread safe).\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek\n  commentId: M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek\n  id: Peek\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: Peek()\n  nameWithType: TimerEventSubscriptionCollection.Peek()\n  fullName: TimerEventSubscriptionCollection.Peek()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Returns the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> at the beginning of the timer queue without removing it.\n  remarks: <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe.\n  syntax:\n    content: public System.Workflow.Runtime.TimerEventSubscription Peek ();\n    parameters: []\n    return:\n      type: System.Workflow.Runtime.TimerEventSubscription\n      description: The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> at the beginning of the timer queue or a null reference (`Nothing` in Visual Basic) if the timer queue is empty.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)\n  commentId: M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)\n  id: Remove(System.Guid)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: Remove(Guid)\n  nameWithType: TimerEventSubscriptionCollection.Remove(Guid)\n  fullName: TimerEventSubscriptionCollection.Remove(Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Removes the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> that has the specified subscription id from the timer queue.\n  remarks: Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.\n  syntax:\n    content: public void Remove (Guid timerSubscriptionId);\n    parameters:\n    - id: timerSubscriptionId\n      type: System.Guid\n      description: The <xref href=\"System.Guid\"></xref> of the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to remove.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)\n  commentId: M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)\n  id: Remove(System.Workflow.Runtime.TimerEventSubscription)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: Remove(TimerEventSubscription)\n  nameWithType: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)\n  fullName: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Removes the <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> from the timer queue.\n  remarks: Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.\n  syntax:\n    content: public void Remove (System.Workflow.Runtime.TimerEventSubscription item);\n    parameters:\n    - id: item\n      type: System.Workflow.Runtime.TimerEventSubscription\n      description: The <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> to remove from the timer queue.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>item</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot\n  commentId: P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: TimerEventSubscriptionCollection.SyncRoot\n  fullName: TimerEventSubscriptionCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.\n  remarks: \"<xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.  \\n  \\n Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object used to synchronize access to the <xref href=\"System.Workflow.Runtime.TimerEventSubscriptionCollection\"></xref>.\n  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty\n  commentId: F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty\n  id: TimerCollectionProperty\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  langs:\n  - csharp\n  name: TimerCollectionProperty\n  nameWithType: TimerEventSubscriptionCollection.TimerCollectionProperty\n  fullName: TimerEventSubscriptionCollection.TimerCollectionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime\n  summary: Timer queue associated with a workflow instance. This queue contains time ordered <xref href=\"System.Workflow.Runtime.TimerEventSubscription\"></xref> objects for a workflow.\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Add(TimerEventSubscription)\n  nameWithType: TimerEventSubscriptionCollection.Add(TimerEventSubscription)\n  fullName: TimerEventSubscriptionCollection.Add(TimerEventSubscription)\n- uid: System.Workflow.Runtime.TimerEventSubscription\n  parent: System.Workflow.Runtime\n  isExternal: false\n  name: TimerEventSubscription\n  nameWithType: TimerEventSubscription\n  fullName: System.Workflow.Runtime.TimerEventSubscription\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: TimerEventSubscriptionCollection.CopyTo(Array, Int32)\n  fullName: TimerEventSubscriptionCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Count\n  nameWithType: TimerEventSubscriptionCollection.Count\n  fullName: TimerEventSubscriptionCollection.Count\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TimerEventSubscriptionCollection.GetEnumerator()\n  fullName: TimerEventSubscriptionCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: TimerEventSubscriptionCollection.IsSynchronized\n  fullName: TimerEventSubscriptionCollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Peek()\n  nameWithType: TimerEventSubscriptionCollection.Peek()\n  fullName: TimerEventSubscriptionCollection.Peek()\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Remove(Guid)\n  nameWithType: TimerEventSubscriptionCollection.Remove(Guid)\n  fullName: TimerEventSubscriptionCollection.Remove(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Remove(TimerEventSubscription)\n  nameWithType: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)\n  fullName: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: TimerEventSubscriptionCollection.SyncRoot\n  fullName: TimerEventSubscriptionCollection.SyncRoot\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: TimerCollectionProperty\n  nameWithType: TimerEventSubscriptionCollection.TimerCollectionProperty\n  fullName: TimerEventSubscriptionCollection.TimerCollectionProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Add\n  nameWithType: TimerEventSubscriptionCollection.Add\n  fullName: TimerEventSubscriptionCollection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: TimerEventSubscriptionCollection.CopyTo\n  fullName: TimerEventSubscriptionCollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Count\n  nameWithType: TimerEventSubscriptionCollection.Count\n  fullName: TimerEventSubscriptionCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: TimerEventSubscriptionCollection.GetEnumerator\n  fullName: TimerEventSubscriptionCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: TimerEventSubscriptionCollection.IsSynchronized\n  fullName: TimerEventSubscriptionCollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Peek\n  nameWithType: TimerEventSubscriptionCollection.Peek\n  fullName: TimerEventSubscriptionCollection.Peek\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: Remove\n  nameWithType: TimerEventSubscriptionCollection.Remove\n  fullName: TimerEventSubscriptionCollection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot*\n  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: TimerEventSubscriptionCollection.SyncRoot\n  fullName: TimerEventSubscriptionCollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime/TimerEventSubscriptionCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}