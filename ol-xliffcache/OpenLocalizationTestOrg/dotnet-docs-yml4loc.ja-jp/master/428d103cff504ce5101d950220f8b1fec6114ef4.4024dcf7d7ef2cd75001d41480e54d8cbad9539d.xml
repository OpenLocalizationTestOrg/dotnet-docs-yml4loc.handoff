{"nodes":[{"content":"Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects. This class cannot be inherited.","nodes":[{"pos":[0,218],"content":"Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects. This class cannot be inherited.","nodes":[{"content":"Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,186],"source":"Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects."},{"content":"This class cannot be inherited.","pos":[187,218]}]}],"pos":[1595,1814],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.  \n  \n If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.  \n  \n Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.  \n  \n-   The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.  \n  \n-   The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.  \n  \n-   The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.  \n  \n-   The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file.","nodes":[{"pos":[2,410],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,406],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41)</ept>.","pos":[1,169],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[170,398],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[417,567],"content":"Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.","pos":[0,150],"source":"Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files."}]},{"pos":[574,843],"content":"If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.","nodes":[{"content":"If you are performing multiple operations on the same file, it can be more efficient to use <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> instance methods instead of the corresponding static methods of the <ph id=\"ph2\">&lt;xref:System.IO.File&gt;</ph> class, because a security check will not always be necessary.","pos":[0,269],"source":"If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary."}]},{"pos":[850,1280],"content":"Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.","nodes":[{"content":"Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.","pos":[0,430],"nodes":[{"content":"Many of the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> methods return other I/O types when you create or open files.","pos":[0,99],"source":"Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files."},{"content":"You can use these other types to further manipulate a file.","pos":[100,159]},{"content":"For more information, see specific <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> members such as <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.Open%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.IO.FileInfo.OpenRead%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.IO.FileInfo.OpenText%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.IO.FileInfo.CreateText%2A&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.IO.FileInfo.Create%2A&gt;</ph>.","pos":[160,430],"source":" For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>."}]}]},{"pos":[1287,1359],"content":"By default, full read/write access to new files is granted to all users.","nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]}]},{"pos":[1366,1498],"content":"The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods.","nodes":[{"content":"The following table describes the enumerations that are used to customize the behavior of various <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> methods.","pos":[0,132],"source":"The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods."}]},{"pos":[1505,1516],"content":"Enumeration","nodes":[{"content":"Enumeration","pos":[0,11]}]},{"pos":[1517,1528],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1573,1600],"content":"<xref:System.IO.FileAccess>","nodes":[]},{"pos":[1601,1643],"content":"Specifies read and write access to a file.","nodes":[{"content":"Specifies read and write access to a file.","pos":[0,42]}]},{"pos":[1648,1674],"content":"<xref:System.IO.FileShare>","nodes":[]},{"pos":[1675,1749],"content":"Specifies the level of access permitted for a file that is already in use.","nodes":[{"content":"Specifies the level of access permitted for a file that is already in use.","pos":[0,74]}]},{"pos":[1754,1779],"content":"<xref:System.IO.FileMode>","nodes":[]},{"pos":[1780,1928],"content":"Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.","nodes":[{"content":"Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.","pos":[0,148]}]},{"pos":[1937,2467],"content":"[!NOTE]\n In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.","leadings":["","> "],"nodes":[{"content":" In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.","pos":[8,528],"nodes":[{"content":"In members that accept a path as an input string, that path must be well-formed or an exception is raised.","pos":[1,107]},{"content":"For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.","pos":[108,223]},{"content":"Therefore, the path is malformed and an exception is raised.","pos":[224,284]},{"content":"Similarly, a path or a combination of paths cannot be fully qualified twice.","pos":[285,361]},{"content":"For example, \"c:\\temp c:\\windows\" also raises an exception in most cases.","pos":[362,435]},{"content":"Ensure that your paths are well-formed when using methods that accept a path string.","pos":[436,520]}]}]},{"pos":[2474,2733],"content":"In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:","nodes":[{"content":"In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:","pos":[0,259],"nodes":[{"content":"In members that accept a path, the path can refer to a file or just a directory.","pos":[0,80]},{"content":"The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.","pos":[81,206]},{"content":"For example, all the following are acceptable paths:","pos":[207,259]}]}]},{"pos":[2743,2817],"content":"\"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.","nodes":[{"content":"\"c:<ph id=\"ph1\">\\\\</ph>\\MyDir<ph id=\"ph2\">\\\\</ph>\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.","pos":[0,74],"source":"\"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic."}]},{"pos":[2827,2877],"content":"\"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.","nodes":[{"content":"\"c:<ph id=\"ph1\">\\\\</ph>\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.","pos":[0,50],"source":"\"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic."}]},{"pos":[2887,2949],"content":"\"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.","nodes":[{"content":"\"MyDir<ph id=\"ph1\">\\\\</ph>\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.","pos":[0,62],"source":"\"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic."}]},{"pos":[2959,3035],"content":"\"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.","nodes":[{"content":"\"<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">\\\\</ph><ph id=\"ph3\">\\\\</ph>\\MyServer<ph id=\"ph4\">\\\\</ph>\\MyShare\" in C#, or \"<ph id=\"ph5\">\\\\</ph>\\MyServer\\MyShare\" in Visual Basic.","pos":[0,76],"source":"\"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic."}]},{"pos":[3042,3233],"content":"The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.","nodes":[{"content":"The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.","pos":[0,191],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> class provides the following properties that enable you to retrieve information about a file.","pos":[0,123],"source":"The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file."},{"content":"For an example of how to use each property, see the property pages.","pos":[124,191]}]}]},{"pos":[3243,3362],"content":"The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph> property retrieves an object that represents the parent directory of a file.","pos":[0,119],"source":"The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file."}]},{"pos":[3372,3486],"content":"The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph> property retrieves the full path of the parent directory of a file.","pos":[0,114],"source":"The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file."}]},{"pos":[3496,3602],"content":"The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property checks for the presence of a file before operating on it.","pos":[0,106],"source":"The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it."}]},{"pos":[3612,3737],"content":"The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property retrieves or sets a value that specifies whether a file can be modified.","pos":[0,125],"source":"The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified."}]},{"pos":[3747,3816],"content":"The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph> retrieves the size of a file.","pos":[0,69],"source":"The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file."}]},{"pos":[3826,3893],"content":"The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Name%2A&gt;</ph> retrieves the name of a file.","pos":[0,67],"source":"The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file."}]}],"pos":[1825,5815],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.FileInfo\"></xref> class, which acts as a wrapper for a file path.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> class, which acts as a wrapper for a file path.","source":"Initializes a new instance of the <xref href=\"System.IO.FileInfo\"></xref> class, which acts as a wrapper for a file path."}],"pos":[9703,9825],"yaml":true},{"content":"You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.","nodes":[{"pos":[0,123],"content":"You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.","nodes":[{"content":"You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.","pos":[0,123]}]}],"pos":[9836,9960],"yaml":true,"extradata":"MT"},{"content":"The fully qualified name of the new file, or the relative file name. Do not end the path with the directory separator character.","nodes":[{"pos":[0,128],"content":"The fully qualified name of the new file, or the relative file name. Do not end the path with the directory separator character.","nodes":[{"content":"The fully qualified name of the new file, or the relative file name. Do not end the path with the directory separator character.","pos":[0,128],"nodes":[{"content":"The fully qualified name of the new file, or the relative file name.","pos":[0,68]},{"content":"Do not end the path with the directory separator character.","pos":[69,128]}]}]}],"pos":[11011,11140],"yaml":true},{"content":"<code>fileName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>fileName</code> is `null`."}],"pos":[11294,11327],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[11439,11489],"yaml":true},{"content":"The file name is empty, contains only white spaces, or contains invalid characters.","nodes":[{"pos":[0,83],"content":"The file name is empty, contains only white spaces, or contains invalid characters.","nodes":[{"content":"The file name is empty, contains only white spaces, or contains invalid characters.","pos":[0,83]}]}],"pos":[11583,11667],"yaml":true},{"content":"Access to <code>fileName</code> is denied.","nodes":[{"pos":[0,42],"content":"Access to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is denied.","source":"Access to <code>fileName</code> is denied."}],"pos":[11781,11824],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[11930,12141],"yaml":true},{"content":"<code>fileName</code> contains a colon (:) in the middle of the string.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> contains a colon (:) in the middle of the string.","source":"<code>fileName</code> contains a colon (:) in the middle of the string."}],"pos":[12243,12315],"yaml":true},{"content":"Creates a <xref href=\"System.IO.StreamWriter\"></xref> that appends text to the file represented by this instance of the <xref href=\"System.IO.FileInfo\"></xref>.","nodes":[{"pos":[0,160],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> that appends text to the file represented by this instance of the <ph id=\"ph2\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a <xref href=\"System.IO.StreamWriter\"></xref> that appends text to the file represented by this instance of the <xref href=\"System.IO.FileInfo\"></xref>."}],"pos":[13586,13747],"yaml":true},{"content":"A new `StreamWriter`.","nodes":[{"pos":[0,21],"content":"A new <ph id=\"ph1\">`StreamWriter`</ph>.","source":"A new `StreamWriter`."}],"pos":[15042,15064],"yaml":true},{"content":"Copies an existing file to a new file, disallowing the overwriting of an existing file.","nodes":[{"pos":[0,87],"content":"Copies an existing file to a new file, disallowing the overwriting of an existing file.","nodes":[{"content":"Copies an existing file to a new file, disallowing the overwriting of an existing file.","pos":[0,87]}]}],"pos":[16417,16505],"yaml":true},{"content":"Use the <xref:System.IO.FileInfo.CopyTo%2A> method to allow overwriting of an existing file.  \n  \n> [!CAUTION]\n>  Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","nodes":[{"pos":[0,92],"content":"Use the <xref:System.IO.FileInfo.CopyTo%2A> method to allow overwriting of an existing file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph> method to allow overwriting of an existing file.","pos":[0,92],"source":"Use the <xref:System.IO.FileInfo.CopyTo%2A> method to allow overwriting of an existing file."}]},{"pos":[100,335],"content":"[!CAUTION]\n Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","leadings":["","> "],"nodes":[{"content":" Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","pos":[11,233],"nodes":[{"content":"Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.","pos":[1,89]},{"content":"If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","pos":[90,222]}]}]}],"pos":[16516,16857],"yaml":true,"extradata":"MT"},{"content":"The name of the new file to copy to.","nodes":[{"pos":[0,36],"content":"The name of the new file to copy to.","nodes":[{"content":"The name of the new file to copy to.","pos":[0,36]}]}],"pos":[17940,17977],"yaml":true},{"content":"A new file with a fully qualified path.","nodes":[{"pos":[0,39],"content":"A new file with a fully qualified path.","nodes":[{"content":"A new file with a fully qualified path.","pos":[0,39]}]}],"pos":[18039,18079],"yaml":true},{"content":"<code>destFileName</code> is empty, contains only white spaces, or contains invalid characters.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.","source":"<code>destFileName</code> is empty, contains only white spaces, or contains invalid characters."}],"pos":[18226,18322],"yaml":true},{"content":"An error occurs, or the destination file already exists.","nodes":[{"pos":[0,56],"content":"An error occurs, or the destination file already exists.","nodes":[{"content":"An error occurs, or the destination file already exists.","pos":[0,56]}]}],"pos":[18410,18467],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[18579,18629],"yaml":true},{"content":"<code>destFileName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destFileName</code> is `null`."}],"pos":[18731,18768],"yaml":true},{"content":"A directory path is passed in, or the file is being moved to a different drive.","nodes":[{"pos":[0,79],"content":"A directory path is passed in, or the file is being moved to a different drive.","nodes":[{"content":"A directory path is passed in, or the file is being moved to a different drive.","pos":[0,79]}]}],"pos":[18882,18962],"yaml":true},{"content":"The directory specified in <code>destFileName</code> does not exist.","nodes":[{"pos":[0,68],"content":"The directory specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","source":"The directory specified in <code>destFileName</code> does not exist."}],"pos":[19080,19149],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[19255,19466],"yaml":true},{"content":"<code>destFileName</code> contains a colon (:) within the string but does not specify the volume.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> contains a colon (:) within the string but does not specify the volume.","source":"<code>destFileName</code> contains a colon (:) within the string but does not specify the volume."}],"pos":[19568,19666],"yaml":true},{"content":"Copies an existing file to a new file, allowing the overwriting of an existing file.","nodes":[{"pos":[0,84],"content":"Copies an existing file to a new file, allowing the overwriting of an existing file.","nodes":[{"content":"Copies an existing file to a new file, allowing the overwriting of an existing file.","pos":[0,84]}]}],"pos":[21031,21116],"yaml":true},{"content":"Use this method to allow or prevent overwriting of an existing file. Use the <xref:System.IO.FileInfo.CopyTo%2A> method to prevent overwriting of an existing file by default.  \n  \n> [!CAUTION]\n>  Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","nodes":[{"pos":[0,174],"content":"Use this method to allow or prevent overwriting of an existing file. Use the <xref:System.IO.FileInfo.CopyTo%2A> method to prevent overwriting of an existing file by default.","nodes":[{"content":"Use this method to allow or prevent overwriting of an existing file. Use the <xref:System.IO.FileInfo.CopyTo%2A> method to prevent overwriting of an existing file by default.","pos":[0,174],"nodes":[{"content":"Use this method to allow or prevent overwriting of an existing file.","pos":[0,68]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph> method to prevent overwriting of an existing file by default.","pos":[69,174],"source":" Use the <xref:System.IO.FileInfo.CopyTo%2A> method to prevent overwriting of an existing file by default."}]}]},{"pos":[182,417],"content":"[!CAUTION]\n Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","leadings":["","> "],"nodes":[{"content":" Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","pos":[11,233],"nodes":[{"content":"Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.","pos":[1,89]},{"content":"If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior","pos":[90,222]}]}]}],"pos":[21127,21550],"yaml":true,"extradata":"MT"},{"content":"The name of the new file to copy to.","nodes":[{"pos":[0,36],"content":"The name of the new file to copy to.","nodes":[{"content":"The name of the new file to copy to.","pos":[0,36]}]}],"pos":[22638,22675],"yaml":true},{"content":"`true` to allow an existing file to be overwritten; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> to allow an existing file to be overwritten; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to allow an existing file to be overwritten; otherwise, `false`."}],"pos":[22741,22815],"yaml":true},{"content":"A new file, or an overwrite of an existing file if <code>overwrite</code> is `true`. If the file exists and <code>overwrite</code> is `false`, an <xref href=\"System.IO.IOException\"></xref> is thrown.","nodes":[{"pos":[0,199],"content":"A new file, or an overwrite of an existing file if <code>overwrite</code> is `true`. If the file exists and <code>overwrite</code> is `false`, an <xref href=\"System.IO.IOException\"></xref> is thrown.","nodes":[{"content":"A new file, or an overwrite of an existing file if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">overwrite</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`true`</ph>.","pos":[0,84],"source":"A new file, or an overwrite of an existing file if <code>overwrite</code> is `true`."},{"content":"If the file exists and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">overwrite</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>, an <ph id=\"ph3\">&lt;xref href=\"System.IO.IOException\"&gt;&lt;/xref&gt;</ph> is thrown.","pos":[85,199],"source":" If the file exists and <code>overwrite</code> is `false`, an <xref href=\"System.IO.IOException\"></xref> is thrown."}]}],"pos":[22877,23077],"yaml":true},{"content":"<code>destFileName</code> is empty, contains only white spaces, or contains invalid characters.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.","source":"<code>destFileName</code> is empty, contains only white spaces, or contains invalid characters."}],"pos":[23224,23320],"yaml":true},{"content":"An error occurs, or the destination file already exists and <code>overwrite</code> is `false`.","nodes":[{"pos":[0,94],"content":"An error occurs, or the destination file already exists and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">overwrite</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>.","source":"An error occurs, or the destination file already exists and <code>overwrite</code> is `false`."}],"pos":[23408,23503],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[23615,23665],"yaml":true},{"content":"<code>destFileName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destFileName</code> is `null`."}],"pos":[23767,23804],"yaml":true},{"content":"The directory specified in <code>destFileName</code> does not exist.","nodes":[{"pos":[0,68],"content":"The directory specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","source":"The directory specified in <code>destFileName</code> does not exist."}],"pos":[23922,23991],"yaml":true},{"content":"A directory path is passed in, or the file is being moved to a different drive.","nodes":[{"pos":[0,79],"content":"A directory path is passed in, or the file is being moved to a different drive.","nodes":[{"content":"A directory path is passed in, or the file is being moved to a different drive.","pos":[0,79]}]}],"pos":[24105,24185],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[24291,24502],"yaml":true},{"content":"<code>destFileName</code> contains a colon (:) in the middle of the string.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> contains a colon (:) in the middle of the string.","source":"<code>destFileName</code> contains a colon (:) in the middle of the string."}],"pos":[24604,24680],"yaml":true},{"content":"Creates a file.","nodes":[{"pos":[0,15],"content":"Creates a file.","nodes":[{"content":"Creates a file.","pos":[0,15]}]}],"pos":[25910,25926],"yaml":true},{"content":"By default, full read/write access to new files is granted to all users.  \n  \n This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=fullName>.","nodes":[{"pos":[0,72],"content":"By default, full read/write access to new files is granted to all users.","nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]}]},{"pos":[79,195],"content":"This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=fullName>.","nodes":[{"content":"This method is a wrapper for the functionality provided by <ph id=\"ph1\">&lt;xref:System.IO.File.Create%2A?displayProperty=fullName&gt;</ph>.","pos":[0,116],"source":"This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=fullName>."}]}],"pos":[25937,26137],"yaml":true,"extradata":"MT"},{"content":"A new file.","nodes":[{"pos":[0,11],"content":"A new file.","nodes":[{"content":"A new file.","pos":[0,11]}]}],"pos":[27190,27202],"yaml":true},{"content":"Creates a <xref href=\"System.IO.StreamWriter\"></xref> that writes a new text file.","nodes":[{"pos":[0,82],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> that writes a new text file.","source":"Creates a <xref href=\"System.IO.StreamWriter\"></xref> that writes a new text file."}],"pos":[28512,28595],"yaml":true},{"content":"By default, full read/write access to new files is granted to all users.","nodes":[{"pos":[0,72],"content":"By default, full read/write access to new files is granted to all users.","nodes":[{"content":"By default, full read/write access to new files is granted to all users.","pos":[0,72]}]}],"pos":[28606,28679],"yaml":true,"extradata":"MT"},{"content":"A new `StreamWriter`.","nodes":[{"pos":[0,21],"content":"A new <ph id=\"ph1\">`StreamWriter`</ph>.","source":"A new `StreamWriter`."}],"pos":[29278,29300],"yaml":true},{"content":"The file name is a directory.","nodes":[{"pos":[0,29],"content":"The file name is a directory.","nodes":[{"content":"The file name is a directory.","pos":[0,29]}]}],"pos":[29471,29501],"yaml":true},{"content":"The disk is read-only.","nodes":[{"pos":[0,22],"content":"The disk is read-only.","nodes":[{"content":"The disk is read-only.","pos":[0,22]}]}],"pos":[29589,29612],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[29724,29774],"yaml":true},{"content":"Decrypts a file that was encrypted by the current account using the <xref href=\"System.IO.FileInfo.Encrypt\"></xref> method.","nodes":[{"pos":[0,123],"content":"Decrypts a file that was encrypted by the current account using the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo.Encrypt\"&gt;&lt;/xref&gt;</ph> method.","source":"Decrypts a file that was encrypted by the current account using the <xref href=\"System.IO.FileInfo.Encrypt\"></xref> method."}],"pos":[31010,31134],"yaml":true},{"content":"The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.  The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.  \n  \n Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \n  \n The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.","nodes":[{"pos":[0,274],"content":"The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.  The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.","nodes":[{"content":"The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.  The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.","pos":[0,274],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method allows you to decrypt a file that was encrypted using the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method.","pos":[0,150],"source":"The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method can decrypt only files that were encrypted using the current user account.","pos":[152,274],"source":"  The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account."}]}]},{"pos":[281,520],"content":"Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","pos":[0,239],"source":"Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method."}]},{"pos":[527,648],"content":"The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.","nodes":[{"content":"The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.","pos":[0,121]}]}],"pos":[31145,31800],"yaml":true,"extradata":"MT"},{"content":"An invalid drive was specified.","nodes":[{"pos":[0,31],"content":"An invalid drive was specified.","nodes":[{"content":"An invalid drive was specified.","pos":[0,31]}]}],"pos":[32687,32719],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."}],"pos":[32827,32928],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[33016,33062],"yaml":true},{"content":"The file system is not NTFS.","nodes":[{"pos":[0,28],"content":"The file system is not NTFS.","nodes":[{"content":"The file system is not NTFS.","pos":[0,28]}]}],"pos":[33164,33193],"yaml":true},{"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"pos":[0,66],"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"content":"The current operating system is not Microsoft Windows NT or later.","pos":[0,66]}]}],"pos":[33311,33378],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,94],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object is read-only."},{"pos":[101,105],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[112,168],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,235],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[33492,33740],"yaml":true},{"content":"Permanently deletes a file.","nodes":[{"pos":[0,27],"content":"Permanently deletes a file.","nodes":[{"content":"Permanently deletes a file.","pos":[0,27]}]}],"pos":[34861,34889],"yaml":true},{"content":"If the file does not exist, this method does nothing.","nodes":[{"pos":[0,53],"content":"If the file does not exist, this method does nothing.","nodes":[{"content":"If the file does not exist, this method does nothing.","pos":[0,53]}]}],"pos":[34900,34954],"yaml":true,"extradata":"MT"},{"content":"The target file is open or memory-mapped on a computer running Microsoft Windows NT.  \n  \n -or-  \n  \n There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).","nodes":[{"pos":[0,84],"content":"The target file is open or memory-mapped on a computer running Microsoft Windows NT.","nodes":[{"content":"The target file is open or memory-mapped on a computer running Microsoft Windows NT.","pos":[0,84]}]},{"pos":[91,95],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[102,388],"content":"There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).","nodes":[{"content":"There is an open handle on the file, and the operating system is Windows XP or earlier.","pos":[0,87]},{"content":"This open handle can result from enumerating directories and files.","pos":[88,155]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Enumerate Directories and Files<ept id=\"p1\">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.","pos":[156,286],"source":" For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md)."}]}],"pos":[35993,36388],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[36500,36550],"yaml":true},{"content":"The path is a directory.","nodes":[{"pos":[0,24],"content":"The path is a directory.","nodes":[{"content":"The path is a directory.","pos":[0,24]}]}],"pos":[36664,36689],"yaml":true},{"content":"Gets an instance of the parent directory.","nodes":[{"pos":[0,41],"content":"Gets an instance of the parent directory.","nodes":[{"content":"Gets an instance of the parent directory.","pos":[0,41]}]}],"pos":[37950,37992],"yaml":true},{"content":"To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property.","nodes":[{"pos":[0,101],"content":"To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property.","nodes":[{"content":"To get the parent directory as a string, use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph> property.","pos":[0,101],"source":"To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property."}]}],"pos":[38003,38105],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.DirectoryInfo\"></xref> object representing the parent directory of this file.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.DirectoryInfo\"&gt;&lt;/xref&gt;</ph> object representing the parent directory of this file.","source":"A <xref href=\"System.IO.DirectoryInfo\"></xref> object representing the parent directory of this file."}],"pos":[38777,38879],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[39053,39120],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[39232,39282],"yaml":true},{"content":"Gets a string representing the directory's full path.","nodes":[{"pos":[0,53],"content":"Gets a string representing the directory's full path.","nodes":[{"content":"Gets a string representing the directory's full path.","pos":[0,53]}]}],"pos":[40550,40604],"yaml":true},{"content":"To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property.  \n  \n When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","nodes":[{"pos":[0,128],"content":"To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property.","nodes":[{"content":"To get the parent directory as a <ph id=\"ph1\">&lt;xref:System.IO.DirectoryInfo&gt;</ph> object, use the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph> property.","pos":[0,128],"source":"To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property."}]},{"pos":[135,388],"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","nodes":[{"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","pos":[0,253],"nodes":[{"content":"When first called, <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.","pos":[0,132],"source":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file."},{"content":"On subsequent calls, you must call <ph id=\"ph1\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.","pos":[133,253],"source":" On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information."}]}]}],"pos":[40615,41008],"yaml":true,"extradata":"MT"},{"content":"A string representing the directory's full path.","nodes":[{"pos":[0,48],"content":"A string representing the directory's full path.","nodes":[{"content":"A string representing the directory's full path.","pos":[0,48]}]}],"pos":[41718,41767],"yaml":true},{"content":"`null` was passed in for the directory name.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">`null`</ph> was passed in for the directory name.","source":"`null` was passed in for the directory name."}],"pos":[41929,41976],"yaml":true},{"content":"The fully qualified path is 260 or more characters.","nodes":[{"pos":[0,51],"content":"The fully qualified path is 260 or more characters.","nodes":[{"content":"The fully qualified path is 260 or more characters.","pos":[0,51]}]}],"pos":[42082,42134],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[42246,42296],"yaml":true},{"content":"Encrypts a file so that only the account used to encrypt the file can decrypt it.","nodes":[{"pos":[0,81],"content":"Encrypts a file so that only the account used to encrypt the file can decrypt it.","nodes":[{"content":"Encrypts a file so that only the account used to encrypt the file can decrypt it.","pos":[0,81]}]}],"pos":[43600,43682],"yaml":true},{"content":"The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.  Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.  \n  \n Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \n  \n The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.","nodes":[{"pos":[0,275],"content":"The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.  Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.","nodes":[{"content":"The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.  Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.","pos":[0,275],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method allows you to encrypt a file so that only the account used to call this method can decrypt it.","pos":[0,142],"source":"The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method to decrypt a file encrypted by the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method.","pos":[144,275],"source":"  Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method."}]}]},{"pos":[282,521],"content":"Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.","pos":[0,239],"source":"Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method."}]},{"pos":[528,649],"content":"The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.","nodes":[{"content":"The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.","pos":[0,121]}]}],"pos":[43693,44349],"yaml":true,"extradata":"MT"},{"content":"An invalid drive was specified.","nodes":[{"pos":[0,31],"content":"An invalid drive was specified.","nodes":[{"content":"An invalid drive was specified.","pos":[0,31]}]}],"pos":[45239,45271],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."}],"pos":[45379,45480],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[45568,45614],"yaml":true},{"content":"The file system is not NTFS.","nodes":[{"pos":[0,28],"content":"The file system is not NTFS.","nodes":[{"content":"The file system is not NTFS.","pos":[0,28]}]}],"pos":[45716,45745],"yaml":true},{"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"pos":[0,66],"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"content":"The current operating system is not Microsoft Windows NT or later.","pos":[0,66]}]}],"pos":[45863,45930],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object is read-only.  \n  \n -or-  \n  \n This operation is not supported on the current platform.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,94],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object is read-only.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object is read-only."},{"pos":[101,105],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[112,168],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,235],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[46044,46292],"yaml":true},{"content":"Gets a value indicating whether a file exists.","nodes":[{"pos":[0,46],"content":"Gets a value indicating whether a file exists.","nodes":[{"content":"Gets a value indicating whether a file exists.","pos":[0,46]}]}],"pos":[47409,47456],"yaml":true},{"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \n  \n The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists. This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.","nodes":[{"pos":[0,253],"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","nodes":[{"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","pos":[0,253],"nodes":[{"content":"When first called, <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.","pos":[0,132],"source":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file."},{"content":"On subsequent calls, you must call <ph id=\"ph1\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.","pos":[133,253],"source":" On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information."}]}]},{"pos":[260,614],"content":"The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists. This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property returns <ph id=\"ph2\">`false`</ph> if any error occurs while trying to determine if the specified file exists.","pos":[0,140],"source":"The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists."},{"content":"This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.","pos":[141,354]}]}],"pos":[47467,48086],"yaml":true,"extradata":"MT"},{"content":"`true` if the file exists; `false` if the file does not exist or if the file is a directory.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the file exists; <ph id=\"ph2\">`false`</ph> if the file does not exist or if the file is a directory.","source":"`true` if the file exists; `false` if the file does not exist or if the file is a directory."}],"pos":[48837,48932],"yaml":true},{"content":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object.","nodes":[{"pos":[0,237],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object."}],"pos":[50527,50765],"yaml":true},{"content":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.  \n  \n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"pos":[0,132],"content":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.","pos":[0,132],"source":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file."}]},{"pos":[139,404],"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[115,265],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]}],"pos":[50776,51185],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> values that specifies which group of access control entries to retrieve.","nodes":[{"pos":[0,156],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;&lt;/xref&gt;</ph> values that specifies which group of access control entries to retrieve.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> values that specifies which group of access control entries to retrieve."}],"pos":[51471,51628],"yaml":true},{"content":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the current file.","nodes":[{"pos":[0,137],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control rules for the current file.","source":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the current file."}],"pos":[51714,51852],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[52003,52049],"yaml":true},{"content":"The current operating system is not Microsoft Windows 2000 or later.","nodes":[{"pos":[0,68],"content":"The current operating system is not Microsoft Windows 2000 or later.","nodes":[{"content":"The current operating system is not Microsoft Windows 2000 or later.","pos":[0,68]}]}],"pos":[52167,52236],"yaml":true},{"content":"The current system account does not have administrative privileges.","nodes":[{"pos":[0,67],"content":"The current system account does not have administrative privileges.","nodes":[{"content":"The current system account does not have administrative privileges.","pos":[0,67]}]}],"pos":[52392,52460],"yaml":true},{"content":"The file could not be found.","nodes":[{"pos":[0,28],"content":"The file could not be found.","nodes":[{"content":"The file could not be found.","pos":[0,28]}]}],"pos":[52550,52579],"yaml":true},{"content":"This operation is not supported on the current platform.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,56],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,123],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[52693,52823],"yaml":true},{"content":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object.","nodes":[{"pos":[0,219],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control list (ACL) entries for the file described by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object."}],"pos":[53816,54036],"yaml":true},{"content":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.  \n  \n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"pos":[0,132],"content":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.","pos":[0,132],"source":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file."}]},{"pos":[139,404],"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[115,265],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]}],"pos":[54047,54456],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the current file.","nodes":[{"pos":[0,137],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control rules for the current file.","source":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the current file."}],"pos":[55474,55612],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[55763,55809],"yaml":true},{"content":"The current operating system is not Microsoft Windows 2000 or later.","nodes":[{"pos":[0,68],"content":"The current operating system is not Microsoft Windows 2000 or later.","nodes":[{"content":"The current operating system is not Microsoft Windows 2000 or later.","pos":[0,68]}]}],"pos":[55927,55996],"yaml":true},{"content":"The current system account does not have administrative privileges.","nodes":[{"pos":[0,67],"content":"The current system account does not have administrative privileges.","nodes":[{"content":"The current system account does not have administrative privileges.","pos":[0,67]}]}],"pos":[56152,56220],"yaml":true},{"content":"The file could not be found.","nodes":[{"pos":[0,28],"content":"The file could not be found.","nodes":[{"content":"The file could not be found.","pos":[0,28]}]}],"pos":[56310,56339],"yaml":true},{"content":"This operation is not supported on the current platform.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,56],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,123],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[56453,56583],"yaml":true},{"content":"Gets or sets a value that determines if the current file is read only.","nodes":[{"pos":[0,70],"content":"Gets or sets a value that determines if the current file is read only.","nodes":[{"content":"Gets or sets a value that determines if the current file is read only.","pos":[0,70]}]}],"pos":[57577,57648],"yaml":true},{"content":"Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only.  \n  \n When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","nodes":[{"pos":[0,126],"content":"Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to quickly determine or change whether the current file is read only.","pos":[0,126],"source":"Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only."}]},{"pos":[133,386],"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","nodes":[{"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","pos":[0,253],"nodes":[{"content":"When first called, <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.","pos":[0,132],"source":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file."},{"content":"On subsequent calls, you must call <ph id=\"ph1\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.","pos":[133,253],"source":" On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information."}]}]}],"pos":[57659,58050],"yaml":true,"extradata":"MT"},{"content":"`true` if the current file is read only; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the current file is read only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current file is read only; otherwise, `false`."}],"pos":[58700,58763],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."}],"pos":[58928,59029],"yaml":true},{"content":"An I/O error occurred while opening the file.","nodes":[{"pos":[0,45],"content":"An I/O error occurred while opening the file.","nodes":[{"content":"An I/O error occurred while opening the file.","pos":[0,45]}]}],"pos":[59117,59163],"yaml":true},{"content":"This operation is not supported on the current platform.  \n  \n -or-  \n  \n The caller does not have the required permission.","nodes":[{"pos":[0,56],"content":"This operation is not supported on the current platform.","nodes":[{"content":"This operation is not supported on the current platform.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,123],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[59277,59407],"yaml":true},{"content":"The user does not have write permission, but attempted to set this property to `false`.","nodes":[{"pos":[0,87],"content":"The user does not have write permission, but attempted to set this property to <ph id=\"ph1\">`false`</ph>.","source":"The user does not have write permission, but attempted to set this property to `false`."}],"pos":[59501,59589],"yaml":true},{"content":"Gets the size, in bytes, of the current file.","nodes":[{"pos":[0,45],"content":"Gets the size, in bytes, of the current file.","nodes":[{"content":"Gets the size, in bytes, of the current file.","pos":[0,45]}]}],"pos":[60815,60861],"yaml":true},{"content":"The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo>methods:  \n  \n-   <xref:System.IO.DirectoryInfo.GetDirectories%2A>  \n  \n-   <xref:System.IO.DirectoryInfo.GetFiles%2A>  \n  \n-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>  \n  \n-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>  \n  \n-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>  \n  \n-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>  \n  \n To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.","nodes":[{"pos":[0,217],"content":"The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo>methods:","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph> property is pre-cached if the current instance of the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo&gt;</ph> object was returned from any of the following <ph id=\"ph3\">&lt;xref:System.IO.DirectoryInfo&gt;</ph>methods:","pos":[0,217],"source":"The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo>methods:"}]},{"pos":[227,275],"content":"<xref:System.IO.DirectoryInfo.GetDirectories%2A>","nodes":[]},{"pos":[285,327],"content":"<xref:System.IO.DirectoryInfo.GetFiles%2A>","nodes":[]},{"pos":[337,389],"content":"<xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>","nodes":[]},{"pos":[399,453],"content":"<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>","nodes":[]},{"pos":[463,511],"content":"<xref:System.IO.DirectoryInfo.EnumerateFiles%2A>","nodes":[]},{"pos":[521,579],"content":"<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>","nodes":[]},{"pos":[586,670],"content":"To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.","nodes":[{"content":"To get the latest value, call the <ph id=\"ph1\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> method.","pos":[0,84],"source":"To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method."}]}],"pos":[60872,61559],"yaml":true,"extradata":"MT"},{"content":"The size of the current file in bytes.","nodes":[{"pos":[0,38],"content":"The size of the current file in bytes.","nodes":[{"content":"The size of the current file in bytes.","pos":[0,38]}]}],"pos":[62122,62161],"yaml":true},{"content":"<xref href=\"System.IO.FileSystemInfo.Refresh\"></xref> cannot update the state of the file or directory.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.FileSystemInfo.Refresh\"&gt;&lt;/xref&gt;</ph> cannot update the state of the file or directory.","source":"<xref href=\"System.IO.FileSystemInfo.Refresh\"></xref> cannot update the state of the file or directory."}],"pos":[62302,62406],"yaml":true},{"content":"The file does not exist.  \n  \n -or-  \n  \n The `Length` property is called for a directory.","nodes":[{"pos":[0,24],"content":"The file does not exist.","nodes":[{"content":"The file does not exist.","pos":[0,24]}]},{"pos":[31,35],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[42,90],"content":"The <ph id=\"ph1\">`Length`</ph> property is called for a directory.","source":"The `Length` property is called for a directory."}],"pos":[62514,62611],"yaml":true},{"content":"Moves a specified file to a new location, providing the option to specify a new file name.","nodes":[{"pos":[0,90],"content":"Moves a specified file to a new location, providing the option to specify a new file name.","nodes":[{"content":"Moves a specified file to a new location, providing the option to specify a new file name.","pos":[0,90]}]}],"pos":[63972,64063],"yaml":true},{"content":"This method works across disk volumes. For example, the file c:\\MyFile.txt can be moved to d:\\public and renamed NewFile.txt.","nodes":[{"pos":[0,125],"content":"This method works across disk volumes. For example, the file c:\\MyFile.txt can be moved to d:\\public and renamed NewFile.txt.","nodes":[{"content":"This method works across disk volumes. For example, the file c:\\MyFile.txt can be moved to d:\\public and renamed NewFile.txt.","pos":[0,125],"nodes":[{"content":"This method works across disk volumes.","pos":[0,38]},{"content":"For example, the file c:\\MyFile.txt can be moved to d:\\public and renamed NewFile.txt.","pos":[39,125]}]}]}],"pos":[64074,64200],"yaml":true,"extradata":"MT"},{"content":"The path to move the file to, which can specify a different file name.","nodes":[{"pos":[0,70],"content":"The path to move the file to, which can specify a different file name.","nodes":[{"content":"The path to move the file to, which can specify a different file name.","pos":[0,70]}]}],"pos":[64705,64776],"yaml":true},{"content":"An I/O error occurs, such as the destination file already exists or the destination device is not ready.","nodes":[{"pos":[0,104],"content":"An I/O error occurs, such as the destination file already exists or the destination device is not ready.","nodes":[{"content":"An I/O error occurs, such as the destination file already exists or the destination device is not ready.","pos":[0,104]}]}],"pos":[64917,65022],"yaml":true},{"content":"<code>destFileName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destFileName</code> is `null`."}],"pos":[65124,65161],"yaml":true},{"content":"<code>destFileName</code> is empty, contains only white spaces, or contains invalid characters.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.","source":"<code>destFileName</code> is empty, contains only white spaces, or contains invalid characters."}],"pos":[65255,65351],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[65463,65513],"yaml":true},{"content":"<code>destFileName</code> is read-only or is a directory.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> is read-only or is a directory.","source":"<code>destFileName</code> is read-only or is a directory."}],"pos":[65627,65685],"yaml":true},{"content":"The file is not found.","nodes":[{"pos":[0,22],"content":"The file is not found.","nodes":[{"content":"The file is not found.","pos":[0,22]}]}],"pos":[65793,65816],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[65934,66001],"yaml":true},{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"pos":[0,210],"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[0,210],"nodes":[{"content":"The specified path, file name, or both exceed the system-defined maximum length.","pos":[0,80]},{"content":"For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.","pos":[81,210]}]}]}],"pos":[66107,66318],"yaml":true},{"content":"<code>destFileName</code> contains a colon (:) in the middle of the string.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">&lt;code&gt;destFileName&lt;/code&gt;</ph> contains a colon (:) in the middle of the string.","source":"<code>destFileName</code> contains a colon (:) in the middle of the string."}],"pos":[66420,66496],"yaml":true},{"content":"Gets the name of the file.","nodes":[{"pos":[0,26],"content":"Gets the name of the file.","nodes":[{"content":"Gets the name of the file.","pos":[0,26]}]}],"pos":[67727,67754],"yaml":true},{"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \n  \n The name of the file includes the file extension.","nodes":[{"pos":[0,253],"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","nodes":[{"content":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.","pos":[0,253],"nodes":[{"content":"When first called, <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.","pos":[0,132],"source":"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file."},{"content":"On subsequent calls, you must call <ph id=\"ph1\">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.","pos":[133,253],"source":" On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information."}]}]},{"pos":[260,309],"content":"The name of the file includes the file extension.","nodes":[{"content":"The name of the file includes the file extension.","pos":[0,49]}]}],"pos":[67765,68079],"yaml":true,"extradata":"MT"},{"content":"The name of the file.","nodes":[{"pos":[0,21],"content":"The name of the file.","nodes":[{"content":"The name of the file.","pos":[0,21]}]}],"pos":[68649,68671],"yaml":true},{"content":"Opens a file in the specified mode.","nodes":[{"pos":[0,35],"content":"Opens a file in the specified mode.","nodes":[{"content":"Opens a file in the specified mode.","pos":[0,35]}]}],"pos":[70027,70063],"yaml":true},{"content":"A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> constant specifying the mode (for example, <ph id=\"ph2\">`Open`</ph> or <ph id=\"ph3\">`Append`</ph>) in which to open the file.","source":"A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file."}],"pos":[70673,70805],"yaml":true},{"content":"A file opened in the specified mode, with read/write access and unshared.","nodes":[{"pos":[0,73],"content":"A file opened in the specified mode, with read/write access and unshared.","nodes":[{"content":"A file opened in the specified mode, with read/write access and unshared.","pos":[0,73]}]}],"pos":[70869,70943],"yaml":true},{"content":"The file is not found.","nodes":[{"pos":[0,22],"content":"The file is not found.","nodes":[{"content":"The file is not found.","pos":[0,22]}]}],"pos":[71102,71125],"yaml":true},{"content":"The file is read-only or is a directory.","nodes":[{"pos":[0,40],"content":"The file is read-only or is a directory.","nodes":[{"content":"The file is read-only or is a directory.","pos":[0,40]}]}],"pos":[71239,71280],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[71398,71465],"yaml":true},{"content":"The file is already open.","nodes":[{"pos":[0,25],"content":"The file is already open.","nodes":[{"content":"The file is already open.","pos":[0,25]}]}],"pos":[71553,71579],"yaml":true},{"content":"Opens a file in the specified mode with read, write, or read/write access.","nodes":[{"pos":[0,74],"content":"Opens a file in the specified mode with read, write, or read/write access.","nodes":[{"content":"Opens a file in the specified mode with read, write, or read/write access.","pos":[0,74]}]}],"pos":[72980,73055],"yaml":true},{"content":"A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> constant specifying the mode (for example, <ph id=\"ph2\">`Open`</ph> or <ph id=\"ph3\">`Append`</ph>) in which to open the file.","source":"A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file."}],"pos":[73676,73808],"yaml":true},{"content":"A <xref href=\"System.IO.FileAccess\"></xref> constant specifying whether to open the file with `Read`, `Write`, or `ReadWrite` file access.","nodes":[{"pos":[0,138],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> constant specifying whether to open the file with <ph id=\"ph2\">`Read`</ph>, <ph id=\"ph3\">`Write`</ph>, or <ph id=\"ph4\">`ReadWrite`</ph> file access.","source":"A <xref href=\"System.IO.FileAccess\"></xref> constant specifying whether to open the file with `Read`, `Write`, or `ReadWrite` file access."}],"pos":[73877,74016],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> object opened in the specified mode and access, and unshared.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object opened in the specified mode and access, and unshared.","source":"A <xref href=\"System.IO.FileStream\"></xref> object opened in the specified mode and access, and unshared."}],"pos":[74080,74186],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[74349,74399],"yaml":true},{"content":"The file is not found.","nodes":[{"pos":[0,22],"content":"The file is not found.","nodes":[{"content":"The file is not found.","pos":[0,22]}]}],"pos":[74507,74530],"yaml":true},{"content":"<code>path</code> is read-only or is a directory.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.","source":"<code>path</code> is read-only or is a directory."}],"pos":[74644,74694],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[74812,74879],"yaml":true},{"content":"The file is already open.","nodes":[{"pos":[0,25],"content":"The file is already open.","nodes":[{"content":"The file is already open.","pos":[0,25]}]}],"pos":[74967,74993],"yaml":true},{"content":"Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.","nodes":[{"pos":[0,107],"content":"Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.","nodes":[{"content":"Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.","pos":[0,107]}]}],"pos":[76487,76595],"yaml":true},{"content":"A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> constant specifying the mode (for example, <ph id=\"ph2\">`Open`</ph> or <ph id=\"ph3\">`Append`</ph>) in which to open the file.","source":"A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file."}],"pos":[77306,77438],"yaml":true},{"content":"A <xref href=\"System.IO.FileAccess\"></xref> constant specifying whether to open the file with `Read`, `Write`, or `ReadWrite` file access.","nodes":[{"pos":[0,138],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> constant specifying whether to open the file with <ph id=\"ph2\">`Read`</ph>, <ph id=\"ph3\">`Write`</ph>, or <ph id=\"ph4\">`ReadWrite`</ph> file access.","source":"A <xref href=\"System.IO.FileAccess\"></xref> constant specifying whether to open the file with `Read`, `Write`, or `ReadWrite` file access."}],"pos":[77507,77646],"yaml":true},{"content":"A <xref href=\"System.IO.FileShare\"></xref> constant specifying the type of access other `FileStream` objects have to this file.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileShare\"&gt;&lt;/xref&gt;</ph> constant specifying the type of access other <ph id=\"ph2\">`FileStream`</ph> objects have to this file.","source":"A <xref href=\"System.IO.FileShare\"></xref> constant specifying the type of access other `FileStream` objects have to this file."}],"pos":[77713,77841],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> object opened with the specified mode, access, and sharing options.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object opened with the specified mode, access, and sharing options.","source":"A <xref href=\"System.IO.FileStream\"></xref> object opened with the specified mode, access, and sharing options."}],"pos":[77905,78017],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[78180,78230],"yaml":true},{"content":"The file is not found.","nodes":[{"pos":[0,22],"content":"The file is not found.","nodes":[{"content":"The file is not found.","pos":[0,22]}]}],"pos":[78338,78361],"yaml":true},{"content":"<code>path</code> is read-only or is a directory.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.","source":"<code>path</code> is read-only or is a directory."}],"pos":[78475,78525],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[78643,78710],"yaml":true},{"content":"The file is already open.","nodes":[{"pos":[0,25],"content":"The file is already open.","nodes":[{"content":"The file is already open.","pos":[0,25]}]}],"pos":[78798,78824],"yaml":true},{"content":"Creates a read-only <xref href=\"System.IO.FileStream\"></xref>.","nodes":[{"pos":[0,62],"content":"Creates a read-only <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a read-only <xref href=\"System.IO.FileStream\"></xref>."}],"pos":[80066,80129],"yaml":true},{"content":"This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>.","nodes":[{"pos":[0,147],"content":"This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>.","nodes":[{"content":"This method returns a read-only <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph> object with the <ph id=\"ph2\">&lt;xref:System.IO.FileShare&gt;</ph> mode set to <ph id=\"ph3\">&lt;xref:System.IO.FileShare.Read&gt;</ph>.","pos":[0,147],"source":"This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>."}]}],"pos":[80140,80288],"yaml":true,"extradata":"MT"},{"content":"A new read-only <xref href=\"System.IO.FileStream\"></xref> object.","nodes":[{"pos":[0,65],"content":"A new read-only <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object.","source":"A new read-only <xref href=\"System.IO.FileStream\"></xref> object."}],"pos":[80870,80936],"yaml":true},{"content":"<code>path</code> is read-only or is a directory.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.","source":"<code>path</code> is read-only or is a directory."}],"pos":[81105,81155],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[81273,81340],"yaml":true},{"content":"The file is already open.","nodes":[{"pos":[0,25],"content":"The file is already open.","nodes":[{"content":"The file is already open.","pos":[0,25]}]}],"pos":[81428,81454],"yaml":true},{"content":"Creates a <xref href=\"System.IO.StreamReader\"></xref> with UTF8 encoding that reads from an existing text file.","nodes":[{"pos":[0,111],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.IO.StreamReader\"&gt;&lt;/xref&gt;</ph> with UTF8 encoding that reads from an existing text file.","source":"Creates a <xref href=\"System.IO.StreamReader\"></xref> with UTF8 encoding that reads from an existing text file."}],"pos":[82696,82808],"yaml":true},{"content":"A new `StreamReader` with UTF8 encoding.","nodes":[{"pos":[0,40],"content":"A new <ph id=\"ph1\">`StreamReader`</ph> with UTF8 encoding.","source":"A new `StreamReader` with UTF8 encoding."}],"pos":[83384,83425],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[83592,83642],"yaml":true},{"content":"The file is not found.","nodes":[{"pos":[0,22],"content":"The file is not found.","nodes":[{"content":"The file is not found.","pos":[0,22]}]}],"pos":[83750,83773],"yaml":true},{"content":"<code>path</code> is read-only or is a directory.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.","source":"<code>path</code> is read-only or is a directory."}],"pos":[83887,83937],"yaml":true},{"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,66],"content":"The specified path is invalid, such as being on an unmapped drive.","nodes":[{"content":"The specified path is invalid, such as being on an unmapped drive.","pos":[0,66]}]}],"pos":[84055,84122],"yaml":true},{"content":"Creates a write-only <xref href=\"System.IO.FileStream\"></xref>.","nodes":[{"pos":[0,63],"content":"Creates a write-only <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a write-only <xref href=\"System.IO.FileStream\"></xref>."}],"pos":[85387,85451],"yaml":true},{"content":"The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (like \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","nodes":[{"pos":[0,510],"content":"The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (like \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","nodes":[{"content":"The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (like \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","pos":[0,510],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.OpenWrite%2A&gt;</ph> method opens a file if one already exists for the file path, or creates a new file if one does not exist.","pos":[0,148],"source":"The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist."},{"content":"For an existing file, it does not append the new text to the existing text.","pos":[149,224]},{"content":"Instead, it overwrites the existing characters with the new characters.","pos":[225,296]},{"content":"If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (like \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").","pos":[297,510]}]}]}],"pos":[85462,85973],"yaml":true,"extradata":"MT"},{"content":"A write-only unshared <xref href=\"System.IO.FileStream\"></xref> object for a new or existing file.","nodes":[{"pos":[0,98],"content":"A write-only unshared <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object for a new or existing file.","source":"A write-only unshared <xref href=\"System.IO.FileStream\"></xref> object for a new or existing file."}],"pos":[86572,86671],"yaml":true},{"content":"The path specified when creating an instance of the <xref href=\"System.IO.FileInfo\"></xref> object is read-only or is a directory.","nodes":[{"pos":[0,130],"content":"The path specified when creating an instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object is read-only or is a directory.","source":"The path specified when creating an instance of the <xref href=\"System.IO.FileInfo\"></xref> object is read-only or is a directory."}],"pos":[86841,86972],"yaml":true},{"content":"The path specified when creating an instance of the <xref href=\"System.IO.FileInfo\"></xref> object is invalid, such as being on an unmapped drive.","nodes":[{"pos":[0,146],"content":"The path specified when creating an instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object is invalid, such as being on an unmapped drive.","source":"The path specified when creating an instance of the <xref href=\"System.IO.FileInfo\"></xref> object is invalid, such as being on an unmapped drive."}],"pos":[87090,87237],"yaml":true},{"content":"Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file.","nodes":[{"pos":[0,200],"content":"Replaces the contents of a specified file with the file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.","source":"Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file."}],"pos":[88602,88803],"yaml":true},{"content":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.  \n  \n> [!CAUTION]\n>  This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.  \n  \n Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.","nodes":[{"pos":[0,332],"content":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.","nodes":[{"content":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.","pos":[0,332],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of the file described by the current <ph id=\"ph2\">&lt;xref:System.IO.FileInfo&gt;</ph> object.","pos":[0,178],"source":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object."},{"content":"It also creates a backup of the file that was replaced.","pos":[180,235]},{"content":"Finally, it returns a new <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> object that describes the overwritten file.","pos":[237,332],"source":"  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file."}]}]},{"pos":[340,611],"content":"[!CAUTION]\n This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.","leadings":["","> "],"nodes":[{"content":" This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.","pos":[11,269],"nodes":[{"content":"This method will succeed in Windows 2000 environments if the <ph id=\"ph1\">`destFileName`</ph> is read-only and will not raise an exception.","pos":[1,122],"source":" This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to check if the destination file is read-only before attempting to replace it.","pos":[123,258],"source":" Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it."}]}]},{"pos":[618,733],"content":"Pass <ph id=\"ph1\">`null`</ph> to the <ph id=\"ph2\">`destBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.","source":"Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced."}],"pos":[88814,89555],"yaml":true,"extradata":"MT"},{"content":"The name of a file to replace with the current file.","nodes":[{"pos":[0,52],"content":"The name of a file to replace with the current file.","nodes":[{"content":"The name of a file to replace with the current file.","pos":[0,52]}]}],"pos":[90357,90410],"yaml":true},{"content":"The name of a file with which to create a backup of the file described by the <code>destFileName</code> parameter.","nodes":[{"pos":[0,114],"content":"The name of a file with which to create a backup of the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The name of a file with which to create a backup of the file described by the <code>destFileName</code> parameter."}],"pos":[90491,90606],"yaml":true},{"content":"A <xref href=\"System.IO.FileInfo\"></xref> object that encapsulates information about the file described by the <code>destFileName</code> parameter.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object that encapsulates information about the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.IO.FileInfo\"></xref> object that encapsulates information about the file described by the <code>destFileName</code> parameter."}],"pos":[90668,90816],"yaml":true},{"content":"The path described by the <code>destFileName</code> parameter was not of a legal form.  \n  \n -or-  \n  \n The path described by the <code>destBackupFileName</code> parameter was not of a legal form.","nodes":[{"pos":[0,86],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destFileName</code> parameter was not of a legal form."},{"pos":[93,97],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[104,196],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destBackupFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destBackupFileName</code> parameter was not of a legal form."}],"pos":[90964,91167],"yaml":true},{"content":"The <code>destFileName</code> parameter is `null`.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destFileName</code> parameter is `null`."}],"pos":[91269,91320],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.  \n  \n -or-  \n  \n The file described by the <code>destinationFileName</code> parameter could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,206],"content":"The file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be found.","source":"The file described by the <code>destinationFileName</code> parameter could not be found."}],"pos":[91428,91643],"yaml":true},{"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"pos":[0,66],"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"content":"The current operating system is not Microsoft Windows NT or later.","pos":[0,66]}]}],"pos":[91761,91828],"yaml":true},{"content":"Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file.  Also specifies whether to ignore merge errors.","nodes":[{"pos":[0,248],"content":"Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file.  Also specifies whether to ignore merge errors.","nodes":[{"content":"Replaces the contents of a specified file with the file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.","pos":[0,200],"source":"Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file."},{"content":"Also specifies whether to ignore merge errors.","pos":[202,248]}]}],"pos":[93156,93405],"yaml":true},{"content":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.  \n  \n> [!CAUTION]\n>  This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.  \n  \n Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.","nodes":[{"pos":[0,332],"content":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.","nodes":[{"content":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.","pos":[0,332],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of the file described by the current <ph id=\"ph2\">&lt;xref:System.IO.FileInfo&gt;</ph> object.","pos":[0,178],"source":"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object."},{"content":"It also creates a backup of the file that was replaced.","pos":[180,235]},{"content":"Finally, it returns a new <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> object that describes the overwritten file.","pos":[237,332],"source":"  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file."}]}]},{"pos":[340,611],"content":"[!CAUTION]\n This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.","leadings":["","> "],"nodes":[{"content":" This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.","pos":[11,269],"nodes":[{"content":"This method will succeed in Windows 2000 environments if the <ph id=\"ph1\">`destFileName`</ph> is read-only and will not raise an exception.","pos":[1,122],"source":" This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to check if the destination file is read-only before attempting to replace it.","pos":[123,258],"source":" Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it."}]}]},{"pos":[618,733],"content":"Pass <ph id=\"ph1\">`null`</ph> to the <ph id=\"ph2\">`destBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.","source":"Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced."}],"pos":[93416,94157],"yaml":true,"extradata":"MT"},{"content":"The name of a file to replace with the current file.","nodes":[{"pos":[0,52],"content":"The name of a file to replace with the current file.","nodes":[{"content":"The name of a file to replace with the current file.","pos":[0,52]}]}],"pos":[94986,95039],"yaml":true},{"content":"The name of a file with which to create a backup of the file described by the <code>destFileName</code> parameter.","nodes":[{"pos":[0,114],"content":"The name of a file with which to create a backup of the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The name of a file with which to create a backup of the file described by the <code>destFileName</code> parameter."}],"pos":[95120,95235],"yaml":true},{"content":"`true` to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise `false`.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">`true`</ph> to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise `false`."}],"pos":[95312,95441],"yaml":true},{"content":"A <xref href=\"System.IO.FileInfo\"></xref> object that encapsulates information about the file described by the <code>destFileName</code> parameter.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object that encapsulates information about the file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.IO.FileInfo\"></xref> object that encapsulates information about the file described by the <code>destFileName</code> parameter."}],"pos":[95503,95651],"yaml":true},{"content":"The path described by the <code>destFileName</code> parameter was not of a legal form.  \n  \n -or-  \n  \n The path described by the <code>destBackupFileName</code> parameter was not of a legal form.","nodes":[{"pos":[0,86],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destFileName</code> parameter was not of a legal form."},{"pos":[93,97],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[104,196],"content":"The path described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destBackupFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was not of a legal form.","source":"The path described by the <code>destBackupFileName</code> parameter was not of a legal form."}],"pos":[95799,96002],"yaml":true},{"content":"The <code>destFileName</code> parameter is `null`.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>destFileName</code> parameter is `null`."}],"pos":[96104,96155],"yaml":true},{"content":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.  \n  \n -or-  \n  \n The file described by the <code>destinationFileName</code> parameter could not be found.","nodes":[{"pos":[0,100],"content":"The file described by the current <ph id=\"ph1\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object could not be found.","source":"The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,206],"content":"The file described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">destinationFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter could not be found.","source":"The file described by the <code>destinationFileName</code> parameter could not be found."}],"pos":[96263,96478],"yaml":true},{"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"pos":[0,66],"content":"The current operating system is not Microsoft Windows NT or later.","nodes":[{"content":"The current operating system is not Microsoft Windows NT or later.","pos":[0,66]}]}],"pos":[96596,96663],"yaml":true},{"content":"Applies access control list (ACL) entries described by a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object to the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object.","nodes":[{"pos":[0,212],"content":"Applies access control list (ACL) entries described by a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object to the file described by the current <ph id=\"ph2\">&lt;xref href=\"System.IO.FileInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies access control list (ACL) entries described by a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object to the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object."}],"pos":[97971,98184],"yaml":true},{"content":"The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.  \n  \n Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file.  \n  \n> [!CAUTION]\n>  The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.  \n  \n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \n  \n The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.  \n  \n To copy ACL information from one file to another:  \n  \n1.  Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.  \n  \n2.  Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.  \n  \n3.  Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.  \n  \n4.  Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.  \n  \n5.  Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"pos":[0,161],"content":"The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.","pos":[0,161],"source":"The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list."}]},{"pos":[168,288],"content":"Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method whenever you need to add or remove ACL entries from a file.","pos":[0,120],"source":"Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file."}]},{"pos":[296,625],"content":"[!CAUTION]\n The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.","leadings":["","> "],"nodes":[{"content":" The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.","pos":[11,327],"nodes":[{"content":"The ACL specified for the <ph id=\"ph1\">`fileSecurity`</ph> parameter replaces the existing ACL for the file.","pos":[1,91],"source":" The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file."},{"content":"To add permissions for a new user, use the <ph id=\"ph1\">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, modify it, and then use <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> to apply it back to the file.","pos":[92,316],"source":" To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file."}]}]},{"pos":[632,897],"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).","nodes":[{"content":"An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Add or Remove Access Control List Entries<ept id=\"p1\">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.","pos":[115,265],"source":" For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)."}]},{"pos":[904,1362],"content":"The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.","nodes":[{"content":"The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.","pos":[0,458],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method persists only <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> objects that have been modified after object creation.","pos":[0,175],"source":"The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object has not been modified, it will not be persisted to a file.","pos":[177,297],"source":"  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file."},{"content":"Therefore, it is not possible to retrieve a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from one file and reapply the same object to another file.","pos":[299,458],"source":"  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file."}]}]},{"pos":[1369,1418],"content":"To copy ACL information from one file to another:","nodes":[{"content":"To copy ACL information from one file to another:","pos":[0,49]}]},{"pos":[1428,1583],"content":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from the source file.","pos":[0,155],"source":"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file."}]},{"pos":[1593,1688],"content":"Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.","nodes":[{"content":"Create a new <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object for the destination file.","pos":[0,95],"source":"Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file."}]},{"pos":[1698,1991],"content":"Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to retrieve the ACL information.","pos":[0,293],"source":"Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information."}]},{"pos":[2001,2311],"content":"Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object.","pos":[0,310],"source":"Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object."}]},{"pos":[2321,2485],"content":"Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method.","nodes":[{"content":"Set the destination <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to the destination file using the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.","pos":[0,164],"source":"Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method."}]}],"pos":[98195,100704],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes an access control list (ACL) entry to apply to the current file.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> object that describes an access control list (ACL) entry to apply to the current file.","source":"A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes an access control list (ACL) entry to apply to the current file."}],"pos":[101725,101878],"yaml":true},{"content":"The <code>fileSecurity</code> parameter is `null`.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileSecurity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileSecurity</code> parameter is `null`."}],"pos":[102043,102094],"yaml":true},{"content":"The file could not be found or modified.","nodes":[{"pos":[0,40],"content":"The file could not be found or modified.","nodes":[{"content":"The file could not be found or modified.","pos":[0,40]}]}],"pos":[102184,102225],"yaml":true},{"content":"The current process does not have access to open the file.","nodes":[{"pos":[0,58],"content":"The current process does not have access to open the file.","nodes":[{"content":"The current process does not have access to open the file.","pos":[0,58]}]}],"pos":[102339,102398],"yaml":true},{"content":"The current operating system is not Microsoft Windows 2000 or later.","nodes":[{"pos":[0,68],"content":"The current operating system is not Microsoft Windows 2000 or later.","nodes":[{"content":"The current operating system is not Microsoft Windows 2000 or later.","pos":[0,68]}]}],"pos":[102516,102585],"yaml":true},{"content":"Returns the path as a string.","nodes":[{"pos":[0,29],"content":"Returns the path as a string.","nodes":[{"content":"Returns the path as a string.","pos":[0,29]}]}],"pos":[103571,103601],"yaml":true},{"content":"The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor.  When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path.  However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.  For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.","nodes":[{"pos":[0,651],"content":"The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor.  When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path.  However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.  For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.","nodes":[{"content":"The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor.  When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path.  However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.  For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.","pos":[0,651],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method represents path that was passed to the constructor.","pos":[0,123],"source":"The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor."},{"content":"When you create a <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> object using the constructors, the <ph id=\"ph2\">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method returns the fully qualified path.","pos":[125,282],"source":"  When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path."},{"content":"However, there are cases where the string returned by the <ph id=\"ph1\">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method does not represent the fully qualified path.","pos":[284,431],"source":"  However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path."},{"content":"For example, when you create a <ph id=\"ph1\">&lt;xref:System.IO.FileInfo&gt;</ph> object using the <ph id=\"ph2\">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> method, the <ph id=\"ph3\">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method does not represent the fully qualified path.","pos":[433,651],"source":"  For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path."}]}]}],"pos":[103612,104264],"yaml":true,"extradata":"MT"},{"content":"A string representing the path.","nodes":[{"pos":[0,31],"content":"A string representing the path.","nodes":[{"content":"A string representing the path.","pos":[0,31]}]}],"pos":[104399,104431],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.FileInfo\n  commentId: T:System.IO.FileInfo\n  id: FileInfo\n  children:\n  - System.IO.FileInfo.#ctor(System.String)\n  - System.IO.FileInfo.AppendText\n  - System.IO.FileInfo.CopyTo(System.String)\n  - System.IO.FileInfo.CopyTo(System.String,System.Boolean)\n  - System.IO.FileInfo.Create\n  - System.IO.FileInfo.CreateText\n  - System.IO.FileInfo.Decrypt\n  - System.IO.FileInfo.Delete\n  - System.IO.FileInfo.Directory\n  - System.IO.FileInfo.DirectoryName\n  - System.IO.FileInfo.Encrypt\n  - System.IO.FileInfo.Exists\n  - System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)\n  - System.IO.FileInfo.GetAccessControl\n  - System.IO.FileInfo.IsReadOnly\n  - System.IO.FileInfo.Length\n  - System.IO.FileInfo.MoveTo(System.String)\n  - System.IO.FileInfo.Name\n  - System.IO.FileInfo.Open(System.IO.FileMode)\n  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.FileInfo.OpenRead\n  - System.IO.FileInfo.OpenText\n  - System.IO.FileInfo.OpenWrite\n  - System.IO.FileInfo.Replace(System.String,System.String)\n  - System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)\n  - System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)\n  - System.IO.FileInfo.ToString\n  langs:\n  - csharp\n  name: FileInfo\n  nameWithType: FileInfo\n  fullName: System.IO.FileInfo\n  type: Class\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <xref href=\"System.IO.FileStream\"></xref> objects. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n Use the <xref:System.IO.FileInfo> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.  \\n  \\n If you are performing multiple operations on the same file, it can be more efficient to use <xref:System.IO.FileInfo> instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.  \\n  \\n Many of the <xref:System.IO.FileInfo> methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific <xref:System.IO.FileInfo> members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.  \\n  \\n By default, full read/write access to new files is granted to all users.  \\n  \\n The following table describes the enumerations that are used to customize the behavior of various <xref:System.IO.FileInfo> methods.  \\n  \\n|Enumeration|Description|  \\n|-----------------|-----------------|  \\n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \\n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \\n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \\n  \\n> [!NOTE]\\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \\\"c:\\\\temp c:\\\\windows\\\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \\n  \\n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \\n  \\n-   \\\"c:\\\\\\\\\\\\MyDir\\\\\\\\\\\\MyFile.txt\\\" in C#, or \\\"c:\\\\MyDir\\\\MyFile.txt\\\" in Visual Basic.  \\n  \\n-   \\\"c:\\\\\\\\\\\\MyDir\\\" in C#, or \\\"c:\\\\MyDir\\\" in Visual Basic.  \\n  \\n-   \\\"MyDir\\\\\\\\\\\\MySubdir\\\" in C#, or \\\"MyDir\\\\MySubDir\\\" in Visual Basic.  \\n  \\n-   \\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\MyServer\\\\\\\\\\\\MyShare\\\" in C#, or \\\"\\\\\\\\\\\\MyServer\\\\MyShare\\\" in Visual Basic.  \\n  \\n The <xref:System.IO.FileInfo> class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.  \\n  \\n-   The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.  \\n  \\n-   The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.  \\n  \\n-   The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.  \\n  \\n-   The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.  \\n  \\n-   The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.  \\n  \\n-   The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file.\"\n  example:\n  - \"The following example demonstrates some of the main members of the `FileInfo` class.  \\n  \\n When the properties are first retrieved, <xref:System.IO.FileInfo> calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \\n  \\n [!code-cpp[FInfo Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Class/CPP/finfo class.cpp#1)]\\n [!code-csharp[FInfo Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Class/CS/finfo class.cs#1)]\\n [!code-vb[FInfo Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Class/VB/finfo class.vb#1)]  \\n  \\n This example produces output similar to the following.  \\n  \\n```  \\nHello  \\nAnd  \\nWelcome  \\nC:\\\\Users\\\\userName\\\\AppData\\\\Local\\\\Temp\\\\tmp70AB.tmp was copied to C:\\\\Users\\\\userName\\\\AppData\\\\Local\\\\Temp\\\\tmp70CB.tmp.  \\nC:\\\\Users\\\\userName\\\\AppData\\\\Local\\\\Temp\\\\tmp70CB.tmp was successfully deleted.  \\n```\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class FileInfo : System.IO.FileSystemInfo\n  inheritance:\n  - System.Object\n  - System.IO.FileSystemInfo\n  implements: []\n  inheritedMembers:\n  - System.IO.FileSystemInfo.Attributes\n  - System.IO.FileSystemInfo.CreationTime\n  - System.IO.FileSystemInfo.CreationTimeUtc\n  - System.IO.FileSystemInfo.Extension\n  - System.IO.FileSystemInfo.FullName\n  - System.IO.FileSystemInfo.FullPath\n  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.IO.FileSystemInfo.LastAccessTime\n  - System.IO.FileSystemInfo.LastAccessTimeUtc\n  - System.IO.FileSystemInfo.LastWriteTime\n  - System.IO.FileSystemInfo.LastWriteTimeUtc\n  - System.IO.FileSystemInfo.OriginalPath\n  - System.IO.FileSystemInfo.Refresh\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  extensionMethods:\n  - System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo)\n  - System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo,System.Security.AccessControl.AccessControlSections)\n  - System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.FileInfo,System.Security.AccessControl.FileSecurity)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.#ctor(System.String)\n  commentId: M:System.IO.FileInfo.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: FileInfo(String)\n  nameWithType: FileInfo.FileInfo(String)\n  fullName: FileInfo.FileInfo(String)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.FileInfo\"></xref> class, which acts as a wrapper for a file path.\n  remarks: You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.\n  example:\n  - \"The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.  \\n  \\n [!code-cpp[finfo ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Ctor/CPP/finfo ctor.cpp#1)]\\n [!code-csharp[finfo ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Ctor/CS/finfo ctor.cs#1)]\\n [!code-vb[finfo ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Ctor/VB/finfo ctor.vb#1)]  \\n  \\n The following example opens an existing file or creates a file, appends text to the file, and displays the results.  \\n  \\n [!code-cpp[fileinfomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfomain/CPP/fileinfomain.cpp#1)]\\n [!code-csharp[fileinfomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfomain/CS/fileinfomain.cs#1)]\\n [!code-vb[fileinfomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfomain/VB/fileinfomain.vb#1)]\"\n  syntax:\n    content: public FileInfo (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The fully qualified name of the new file, or the relative file name. Do not end the path with the directory separator character.\n  overload: System.IO.FileInfo.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileName</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The file name is empty, contains only white spaces, or contains invalid characters.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to <code>fileName</code> is denied.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>fileName</code> contains a colon (:) in the middle of the string.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.AppendText\n  commentId: M:System.IO.FileInfo.AppendText\n  id: AppendText\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: AppendText()\n  nameWithType: FileInfo.AppendText()\n  fullName: FileInfo.AppendText()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a <xref href=\"System.IO.StreamWriter\"></xref> that appends text to the file represented by this instance of the <xref href=\"System.IO.FileInfo\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example appends text to a file and reads from the file.  \\n  \\n [!code-cpp[finfo appendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo AppendText/CPP/finfo appendtext.cpp#1)]\\n [!code-csharp[finfo appendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo AppendText/CS/finfo appendtext.cs#1)]\\n [!code-vb[finfo appendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo AppendText/VB/finfo appendtext.vb#1)]  \\n  \\n The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console. The first time this routine is called, the file is created if it does not exist. After that, the specified text is appended to the file.  \\n  \\n [!code-cpp[fileinfoappendtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoappendtext/CPP/fileinfoappendtext.cpp#1)]\\n [!code-csharp[fileinfoappendtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoappendtext/CS/fileinfoappendtext.cs#1)]\\n [!code-vb[fileinfoappendtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoappendtext/VB/fileinfoappendtext.vb#1)]\"\n  syntax:\n    content: public System.IO.StreamWriter AppendText ();\n    parameters: []\n    return:\n      type: System.IO.StreamWriter\n      description: A new `StreamWriter`.\n  overload: System.IO.FileInfo.AppendText*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.CopyTo(System.String)\n  commentId: M:System.IO.FileInfo.CopyTo(System.String)\n  id: CopyTo(System.String)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: CopyTo(String)\n  nameWithType: FileInfo.CopyTo(String)\n  fullName: FileInfo.CopyTo(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Copies an existing file to a new file, disallowing the overwriting of an existing file.\n  remarks: \"Use the <xref:System.IO.FileInfo.CopyTo%2A> method to allow overwriting of an existing file.  \\n  \\n> [!CAUTION]\\n>  Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior\"\n  example:\n  - \"The following example demonstrates both overloads of the `CopyTo` method.  \\n  \\n [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]\\n [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]\\n [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  \\n  \\n The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.  \\n  \\n [!code-cpp[FileInfoCopyTo1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileInfoCopyTo1/CPP/fileinfocopyto1.cpp#1)]\\n [!code-csharp[FileInfoCopyTo1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileInfoCopyTo1/CS/fileinfocopyto1.cs#1)]\\n [!code-vb[FileInfoCopyTo1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileInfoCopyTo1/VB/fileinfocopyto1.vb#1)]\"\n  syntax:\n    content: public System.IO.FileInfo CopyTo (string destFileName);\n    parameters:\n    - id: destFileName\n      type: System.String\n      description: The name of the new file to copy to.\n    return:\n      type: System.IO.FileInfo\n      description: A new file with a fully qualified path.\n  overload: System.IO.FileInfo.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>destFileName</code> is empty, contains only white spaces, or contains invalid characters.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurs, or the destination file already exists.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destFileName</code> is `null`.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: A directory path is passed in, or the file is being moved to a different drive.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The directory specified in <code>destFileName</code> does not exist.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>destFileName</code> contains a colon (:) within the string but does not specify the volume.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)\n  commentId: M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)\n  id: CopyTo(System.String,System.Boolean)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: CopyTo(String, Boolean)\n  nameWithType: FileInfo.CopyTo(String, Boolean)\n  fullName: FileInfo.CopyTo(String, Boolean)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Copies an existing file to a new file, allowing the overwriting of an existing file.\n  remarks: \"Use this method to allow or prevent overwriting of an existing file. Use the <xref:System.IO.FileInfo.CopyTo%2A> method to prevent overwriting of an existing file by default.  \\n  \\n> [!CAUTION]\\n>  Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method. If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior\"\n  example:\n  - \"The following example demonstrates both overloads of the `CopyTo` method.  \\n  \\n [!code-cpp[finfo copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CopyTo2/CPP/finfo copyto2.cpp#1)]\\n [!code-csharp[finfo copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CopyTo2/CS/program.cs#1)]\\n [!code-vb[finfo copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CopyTo2/VB/program.vb#1)]  \\n  \\n The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.  \\n  \\n [!code-cpp[fileinfocopyto#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfocopyto/CPP/fileinfocopyto.cpp#1)]\\n [!code-csharp[fileinfocopyto#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfocopyto/CS/fileinfocopyto.cs#1)]\\n [!code-vb[fileinfocopyto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfocopyto/VB/fileinfocopyto.vb#1)]\"\n  syntax:\n    content: public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);\n    parameters:\n    - id: destFileName\n      type: System.String\n      description: The name of the new file to copy to.\n    - id: overwrite\n      type: System.Boolean\n      description: '`true` to allow an existing file to be overwritten; otherwise, `false`.'\n    return:\n      type: System.IO.FileInfo\n      description: A new file, or an overwrite of an existing file if <code>overwrite</code> is `true`. If the file exists and <code>overwrite</code> is `false`, an <xref href=\"System.IO.IOException\"></xref> is thrown.\n  overload: System.IO.FileInfo.CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>destFileName</code> is empty, contains only white spaces, or contains invalid characters.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurs, or the destination file already exists and <code>overwrite</code> is `false`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destFileName</code> is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The directory specified in <code>destFileName</code> does not exist.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: A directory path is passed in, or the file is being moved to a different drive.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>destFileName</code> contains a colon (:) in the middle of the string.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Create\n  commentId: M:System.IO.FileInfo.Create\n  id: Create\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: FileInfo.Create()\n  fullName: FileInfo.Create()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a file.\n  remarks: \"By default, full read/write access to new files is granted to all users.  \\n  \\n This method is a wrapper for the functionality provided by <xref:System.IO.File.Create%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.  \\n  \\n [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]\\n [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]\\n [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]  \\n  \\n The following example creates a file, adds some text to it, and reads from the file.  \\n  \\n [!code-cpp[finfo create#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Create/CPP/finfo create.cpp#1)]\\n [!code-csharp[finfo create#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Create/CS/finfo create.cs#1)]\\n [!code-vb[finfo create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Create/VB/finfo create.vb#1)]\"\n  syntax:\n    content: public System.IO.FileStream Create ();\n    parameters: []\n    return:\n      type: System.IO.FileStream\n      description: A new file.\n  overload: System.IO.FileInfo.Create*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.CreateText\n  commentId: M:System.IO.FileInfo.CreateText\n  id: CreateText\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: CreateText()\n  nameWithType: FileInfo.CreateText()\n  fullName: FileInfo.CreateText()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a <xref href=\"System.IO.StreamWriter\"></xref> that writes a new text file.\n  remarks: By default, full read/write access to new files is granted to all users.\n  example:\n  - \"The following example demonstrates the `CreateText` method.  \\n  \\n [!code-cpp[finfo createtext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo CreateText/CPP/finfo createtext.cpp#1)]\\n [!code-csharp[finfo createtext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo CreateText/CS/finfo createtext.cs#1)]\\n [!code-vb[finfo createtext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo CreateText/VB/finfo createtext.vb#1)]\"\n  syntax:\n    content: public System.IO.StreamWriter CreateText ();\n    parameters: []\n    return:\n      type: System.IO.StreamWriter\n      description: A new `StreamWriter`.\n  overload: System.IO.FileInfo.CreateText*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The file name is a directory.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The disk is read-only.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Decrypt\n  commentId: M:System.IO.FileInfo.Decrypt\n  id: Decrypt\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Decrypt()\n  nameWithType: FileInfo.Decrypt()\n  fullName: FileInfo.Decrypt()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Decrypts a file that was encrypted by the current account using the <xref href=\"System.IO.FileInfo.Encrypt\"></xref> method.\n  remarks: \"The <xref:System.IO.FileInfo.Decrypt%2A> method allows you to decrypt a file that was encrypted using the <xref:System.IO.FileInfo.Encrypt%2A> method.  The <xref:System.IO.FileInfo.Decrypt%2A> method can decrypt only files that were encrypted using the current user account.  \\n  \\n Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \\n  \\n The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt and then decrypt a file.  \\n  \\n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public void Decrypt ();\n    parameters: []\n  overload: System.IO.FileInfo.Decrypt*\n  exceptions:\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: An invalid drive was specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The file system is not NTFS.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows NT or later.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The file described by the current <xref href=\\\"System.IO.FileInfo\\\"></xref> object is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Delete\n  commentId: M:System.IO.FileInfo.Delete\n  id: Delete\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Delete()\n  nameWithType: FileInfo.Delete()\n  fullName: FileInfo.Delete()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Permanently deletes a file.\n  remarks: If the file does not exist, this method does nothing.\n  example:\n  - \"The following example demonstrates the `Delete` method.  \\n  \\n [!code-cpp[finfo delete#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Delete/CPP/finfo delete.cpp#1)]\\n [!code-csharp[finfo delete#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Delete/CS/finfo delete.cs#1)]\\n [!code-vb[finfo delete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Delete/VB/finfo delete.vb#1)]  \\n  \\n The following example creates, closes, and deletes a file.  \\n  \\n [!code-cpp[fileinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodelete/CPP/fileinfodelete.cpp#1)]\\n [!code-csharp[fileinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodelete/CS/fileinfodelete.cs#1)]\\n [!code-vb[fileinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodelete/VB/fileinfodelete.vb#1)]\"\n  syntax:\n    content: public override void Delete ();\n    parameters: []\n  overload: System.IO.FileInfo.Delete*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The target file is open or memory-mapped on a computer running Microsoft Windows NT.  \\n  \\n -or-  \\n  \\n There is an open handle on the file, and the operating system is Windows XP or earlier. This open handle can result from enumerating directories and files. For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The path is a directory.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Directory\n  commentId: P:System.IO.FileInfo.Directory\n  id: Directory\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Directory\n  nameWithType: FileInfo.Directory\n  fullName: FileInfo.Directory\n  type: Property\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets an instance of the parent directory.\n  remarks: To get the parent directory as a string, use the <xref:System.IO.FileInfo.DirectoryName%2A> property.\n  example:\n  - \"The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.  \\n  \\n [!code-cpp[fileinfodirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfodirectory/CPP/fileinfodirectory.cpp#1)]\\n [!code-csharp[fileinfodirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfodirectory/CS/fileinfodirectory.cs#1)]\\n [!code-vb[fileinfodirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfodirectory/VB/fileinfodirectory.vb#1)]\"\n  syntax:\n    content: public System.IO.DirectoryInfo Directory { get; }\n    return:\n      type: System.IO.DirectoryInfo\n      description: A <xref href=\"System.IO.DirectoryInfo\"></xref> object representing the parent directory of this file.\n  overload: System.IO.FileInfo.Directory*\n  exceptions:\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.DirectoryName\n  commentId: P:System.IO.FileInfo.DirectoryName\n  id: DirectoryName\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: DirectoryName\n  nameWithType: FileInfo.DirectoryName\n  fullName: FileInfo.DirectoryName\n  type: Property\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets a string representing the directory's full path.\n  remarks: \"To get the parent directory as a <xref:System.IO.DirectoryInfo> object, use the <xref:System.IO.FileInfo.Directory%2A> property.  \\n  \\n When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.\"\n  example:\n  - \"The following example retrieves the full path of the specified file.  \\n  \\n [!code-cpp[System.IO.FileInfo members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.FileInfo members/CPP/fileinfomembers.cpp#3)]\\n [!code-csharp[System.IO.FileInfo members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileInfo members/CS/fileinfomembers.cs#3)]\\n [!code-vb[System.IO.FileInfo members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileInfo members/VB/fileinfomembers.vb#3)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public string DirectoryName { get; }\n    return:\n      type: System.String\n      description: A string representing the directory's full path.\n  overload: System.IO.FileInfo.DirectoryName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: '`null` was passed in for the directory name.'\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The fully qualified path is 260 or more characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Encrypt\n  commentId: M:System.IO.FileInfo.Encrypt\n  id: Encrypt\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Encrypt()\n  nameWithType: FileInfo.Encrypt()\n  fullName: FileInfo.Encrypt()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Encrypts a file so that only the account used to encrypt the file can decrypt it.\n  remarks: \"The <xref:System.IO.FileInfo.Encrypt%2A> method allows you to encrypt a file so that only the account used to call this method can decrypt it.  Use the <xref:System.IO.FileInfo.Decrypt%2A> method to decrypt a file encrypted by the <xref:System.IO.FileInfo.Encrypt%2A> method.  \\n  \\n Both the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.  \\n  \\n The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.  \\n  \\n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Encrypt-Decrypt/VB/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public void Encrypt ();\n    parameters: []\n  overload: System.IO.FileInfo.Encrypt*\n  exceptions:\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: An invalid drive was specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The file system is not NTFS.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows NT or later.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The file described by the current <xref href=\\\"System.IO.FileInfo\\\"></xref> object is read-only.  \\n  \\n -or-  \\n  \\n This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Exists\n  commentId: P:System.IO.FileInfo.Exists\n  id: Exists\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Exists\n  nameWithType: FileInfo.Exists\n  fullName: FileInfo.Exists\n  type: Property\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets a value indicating whether a file exists.\n  remarks: \"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \\n  \\n The <xref:System.IO.FileInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists. This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.FileInfo.Exists%2A> property ensure a file exists before opening it.  You can use this technique to throw a custom exception when the file is not found.  \\n  \\n [!code-cpp[IO.FileInfo.Exists#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Exists/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Exists/cs/sample.cs#1)]\\n [!code-vb[IO.FileInfo.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Exists/vb/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public override bool Exists { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the file exists; `false` if the file does not exist or if the file is a directory.'\n  overload: System.IO.FileInfo.Exists*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)\n  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: GetAccessControl(AccessControlSections)\n  nameWithType: FileInfo.GetAccessControl(AccessControlSections)\n  fullName: FileInfo.GetAccessControl(AccessControlSections)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object.\n  remarks: \"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.  \\n  \\n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).\"\n  syntax:\n    content: public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> values that specifies which group of access control entries to retrieve.\n    return:\n      type: System.Security.AccessControl.FileSecurity\n      description: A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the current file.\n  overload: System.IO.FileInfo.GetAccessControl*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows 2000 or later.\n  - type: System.Security.AccessControl.PrivilegeNotHeldException\n    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException\n    description: The current system account does not have administrative privileges.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: The file could not be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.GetAccessControl\n  commentId: M:System.IO.FileInfo.GetAccessControl\n  id: GetAccessControl\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: GetAccessControl()\n  nameWithType: FileInfo.GetAccessControl()\n  fullName: FileInfo.GetAccessControl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control list (ACL) entries for the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object.\n  remarks: \"Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.  \\n  \\n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).\"\n  example:\n  - \"The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public System.Security.AccessControl.FileSecurity GetAccessControl ();\n    parameters: []\n    return:\n      type: System.Security.AccessControl.FileSecurity\n      description: A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that encapsulates the access control rules for the current file.\n  overload: System.IO.FileInfo.GetAccessControl*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows 2000 or later.\n  - type: System.Security.AccessControl.PrivilegeNotHeldException\n    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException\n    description: The current system account does not have administrative privileges.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: The file could not be found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.IsReadOnly\n  commentId: P:System.IO.FileInfo.IsReadOnly\n  id: IsReadOnly\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: FileInfo.IsReadOnly\n  fullName: FileInfo.IsReadOnly\n  type: Property\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets or sets a value that determines if the current file is read only.\n  remarks: \"Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to quickly determine or change whether the current file is read only.  \\n  \\n When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.\"\n  example:\n  - \"The following example uses the <xref:System.IO.FileInfo.IsReadOnly%2A> property to mark a file as read only and then mark it as read-write.  \\n  \\n [!code-cpp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.isReadOnly/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.isReadOnly/VB/sample.vb#1)]\"\n  syntax:\n    content: public bool IsReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current file is read only; otherwise, `false`.'\n  overload: System.IO.FileInfo.IsReadOnly*\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file described by the current <xref href=\"System.IO.FileInfo\"></xref> object could not be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred while opening the file.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"This operation is not supported on the current platform.  \\n  \\n -or-  \\n  \\n The caller does not have the required permission.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The user does not have write permission, but attempted to set this property to `false`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Length\n  commentId: P:System.IO.FileInfo.Length\n  id: Length\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Length\n  nameWithType: FileInfo.Length\n  fullName: FileInfo.Length\n  type: Property\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets the size, in bytes, of the current file.\n  remarks: \"The value of the <xref:System.IO.FileInfo.Length%2A> property is pre-cached if the current instance of the <xref:System.IO.FileInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo>methods:  \\n  \\n-   <xref:System.IO.DirectoryInfo.GetDirectories%2A>  \\n  \\n-   <xref:System.IO.DirectoryInfo.GetFiles%2A>  \\n  \\n-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>  \\n  \\n-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>  \\n  \\n-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>  \\n  \\n-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>  \\n  \\n To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.\"\n  example:\n  - \"The following example displays the size of the specified files.  \\n  \\n [!code-cpp[FileLength#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileLength/CPP/filelength.cpp#1)]\\n [!code-csharp[FileLength#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileLength/CS/filelength.cs#1)]\\n [!code-vb[FileLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileLength/VB/filelength.vb#1)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public long Length { get; }\n    return:\n      type: System.Int64\n      description: The size of the current file in bytes.\n  overload: System.IO.FileInfo.Length*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: <xref href=\"System.IO.FileSystemInfo.Refresh\"></xref> cannot update the state of the file or directory.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"The file does not exist.  \\n  \\n -or-  \\n  \\n The `Length` property is called for a directory.\"\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.MoveTo(System.String)\n  commentId: M:System.IO.FileInfo.MoveTo(System.String)\n  id: MoveTo(System.String)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: MoveTo(String)\n  nameWithType: FileInfo.MoveTo(String)\n  fullName: FileInfo.MoveTo(String)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Moves a specified file to a new location, providing the option to specify a new file name.\n  remarks: This method works across disk volumes. For example, the file c:\\MyFile.txt can be moved to d:\\public and renamed NewFile.txt.\n  example:\n  - \"The following example demonstrates moving a file to a different location and renaming the file.  \\n  \\n [!code-csharp[IO.FileInfo.MoveTo#1](~/samples/snippets/csharp/VS_Snippets_Misc/IO.FileInfo.MoveTo/CS/Program.cs#1)]\\n [!code-vb[IO.FileInfo.MoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/IO.FileInfo.MoveTo/VB/Program.vb#1)]\"\n  syntax:\n    content: public void MoveTo (string destFileName);\n    parameters:\n    - id: destFileName\n      type: System.String\n      description: The path to move the file to, which can specify a different file name.\n  overload: System.IO.FileInfo.MoveTo*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs, such as the destination file already exists or the destination device is not ready.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destFileName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>destFileName</code> is empty, contains only white spaces, or contains invalid characters.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>destFileName</code> is read-only or is a directory.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file is not found.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>destFileName</code> contains a colon (:) in the middle of the string.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Name\n  commentId: P:System.IO.FileInfo.Name\n  id: Name\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: FileInfo.Name\n  fullName: FileInfo.Name\n  type: Property\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Gets the name of the file.\n  remarks: \"When first called, <xref:System.IO.FileInfo> calls <xref:System.IO.FileSystemInfo.Refresh%2A> and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \\n  \\n The name of the file includes the file extension.\"\n  example:\n  - \"The following example uses the `Name` property to display the names of files in the current directory.  \\n  \\n [!code-cpp[fileinfoname#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoname/CPP/fileinfoname.cpp#1)]\\n [!code-csharp[fileinfoname#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoname/CS/fileinfoname.cs#1)]\\n [!code-vb[fileinfoname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoname/VB/fileinfoname.vb#1)]\"\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: The name of the file.\n  overload: System.IO.FileInfo.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Open(System.IO.FileMode)\n  commentId: M:System.IO.FileInfo.Open(System.IO.FileMode)\n  id: Open(System.IO.FileMode)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Open(FileMode)\n  nameWithType: FileInfo.Open(FileMode)\n  fullName: FileInfo.Open(FileMode)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a file in the specified mode.\n  remarks: ''\n  example:\n  - \"The following example opens a file, adds some information to the file, and reads the file.  \\n  \\n [!code-cpp[finfo open1#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open1/CPP/finfo open1.cpp#1)]\\n [!code-csharp[finfo open1#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open1/CS/finfo open1.cs#1)]\\n [!code-vb[finfo open1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open1/VB/finfo open1.vb#1)]\"\n  syntax:\n    content: public System.IO.FileStream Open (System.IO.FileMode mode);\n    parameters:\n    - id: mode\n      type: System.IO.FileMode\n      description: A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file.\n    return:\n      type: System.IO.FileStream\n      description: A file opened in the specified mode, with read/write access and unshared.\n  overload: System.IO.FileInfo.Open*\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file is not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The file is read-only or is a directory.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The file is already open.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)\n  id: Open(System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Open(FileMode, FileAccess)\n  nameWithType: FileInfo.Open(FileMode, FileAccess)\n  fullName: FileInfo.Open(FileMode, FileAccess)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a file in the specified mode with read, write, or read/write access.\n  remarks: ''\n  example:\n  - \"The following example opens a file as read-only and reads from the file.  \\n  \\n [!code-cpp[finfo open2#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo Open2/CPP/finfo open2.cpp#1)]\\n [!code-csharp[finfo open2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo Open2/CS/finfo open2.cs#1)]\\n [!code-vb[finfo open2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo Open2/VB/finfo open2.vb#1)]\"\n  syntax:\n    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);\n    parameters:\n    - id: mode\n      type: System.IO.FileMode\n      description: A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file.\n    - id: access\n      type: System.IO.FileAccess\n      description: A <xref href=\"System.IO.FileAccess\"></xref> constant specifying whether to open the file with `Read`, `Write`, or `ReadWrite` file access.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> object opened in the specified mode and access, and unshared.\n  overload: System.IO.FileInfo.Open*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file is not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>path</code> is read-only or is a directory.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The file is already open.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  commentId: M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Open(FileMode, FileAccess, FileShare)\n  nameWithType: FileInfo.Open(FileMode, FileAccess, FileShare)\n  fullName: FileInfo.Open(FileMode, FileAccess, FileShare)\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.\n  remarks: ''\n  example:\n  - \"The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.  \\n  \\n [!code-cpp[fileinfoopen#1](~/samples/snippets/cpp/VS_Snippets_CLR/fileinfoopen/CPP/fileinfoopen.cpp#1)]\\n [!code-csharp[fileinfoopen#1](~/samples/snippets/csharp/VS_Snippets_CLR/fileinfoopen/CS/fileinfoopen.cs#1)]\\n [!code-vb[fileinfoopen#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/fileinfoopen/VB/fileinfoopen.vb#1)]\"\n  syntax:\n    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);\n    parameters:\n    - id: mode\n      type: System.IO.FileMode\n      description: A <xref href=\"System.IO.FileMode\"></xref> constant specifying the mode (for example, `Open` or `Append`) in which to open the file.\n    - id: access\n      type: System.IO.FileAccess\n      description: A <xref href=\"System.IO.FileAccess\"></xref> constant specifying whether to open the file with `Read`, `Write`, or `ReadWrite` file access.\n    - id: share\n      type: System.IO.FileShare\n      description: A <xref href=\"System.IO.FileShare\"></xref> constant specifying the type of access other `FileStream` objects have to this file.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> object opened with the specified mode, access, and sharing options.\n  overload: System.IO.FileInfo.Open*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file is not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>path</code> is read-only or is a directory.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The file is already open.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.OpenRead\n  commentId: M:System.IO.FileInfo.OpenRead\n  id: OpenRead\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: OpenRead()\n  nameWithType: FileInfo.OpenRead()\n  fullName: FileInfo.OpenRead()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a read-only <xref href=\"System.IO.FileStream\"></xref>.\n  remarks: This method returns a read-only <xref:System.IO.FileStream> object with the <xref:System.IO.FileShare> mode set to <xref:System.IO.FileShare.Read>.\n  example:\n  - \"The following example opens a file as read-only and reads from it.  \\n  \\n [!code-cpp[finfo openread#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenRead/CPP/finfo openread.cpp#1)]\\n [!code-csharp[finfo openread#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenRead/CS/finfo openread.cs#1)]\\n [!code-vb[finfo openread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenRead/VB/finfo openread.vb#1)]\"\n  syntax:\n    content: public System.IO.FileStream OpenRead ();\n    parameters: []\n    return:\n      type: System.IO.FileStream\n      description: A new read-only <xref href=\"System.IO.FileStream\"></xref> object.\n  overload: System.IO.FileInfo.OpenRead*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>path</code> is read-only or is a directory.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The file is already open.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.OpenText\n  commentId: M:System.IO.FileInfo.OpenText\n  id: OpenText\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: OpenText()\n  nameWithType: FileInfo.OpenText()\n  fullName: FileInfo.OpenText()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a <xref href=\"System.IO.StreamReader\"></xref> with UTF8 encoding that reads from an existing text file.\n  remarks: ''\n  example:\n  - \"The following example reads text from a file.  \\n  \\n [!code-cpp[finfo opentext#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenText/CPP/file opentext.cpp#1)]\\n [!code-csharp[finfo opentext#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenText/CS/file opentext.cs#1)]\\n [!code-vb[finfo opentext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenText/VB/file opentext.vb#1)]\"\n  syntax:\n    content: public System.IO.StreamReader OpenText ();\n    parameters: []\n    return:\n      type: System.IO.StreamReader\n      description: A new `StreamReader` with UTF8 encoding.\n  overload: System.IO.FileInfo.OpenText*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file is not found.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: <code>path</code> is read-only or is a directory.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The specified path is invalid, such as being on an unmapped drive.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.OpenWrite\n  commentId: M:System.IO.FileInfo.OpenWrite\n  id: OpenWrite\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: OpenWrite()\n  nameWithType: FileInfo.OpenWrite()\n  fullName: FileInfo.OpenWrite()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Creates a write-only <xref href=\"System.IO.FileStream\"></xref>.\n  remarks: The <xref:System.IO.FileInfo.OpenWrite%2A> method opens a file if one already exists for the file path, or creates a new file if one does not exist. For an existing file, it does not append the new text to the existing text. Instead, it overwrites the existing characters with the new characters. If you overwrite a longer string (such as \"This is a test of the OpenWrite method\") with a shorter string (like \"Second run\"), the file will contain a mix of the strings (\"Second runtest of the OpenWrite method\").\n  example:\n  - \"The following example opens a file for writing and then reads from the file.  \\n  \\n [!code-cpp[finfo openwrite#1](~/samples/snippets/cpp/VS_Snippets_CLR/FInfo OpenWrite/CPP/file openwrite.cpp#1)]\\n [!code-csharp[finfo openwrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/FInfo OpenWrite/CS/file openwrite.cs#1)]\\n [!code-vb[finfo openwrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FInfo OpenWrite/VB/file openwrite.vb#1)]\"\n  syntax:\n    content: public System.IO.FileStream OpenWrite ();\n    parameters: []\n    return:\n      type: System.IO.FileStream\n      description: A write-only unshared <xref href=\"System.IO.FileStream\"></xref> object for a new or existing file.\n  overload: System.IO.FileInfo.OpenWrite*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The path specified when creating an instance of the <xref href=\"System.IO.FileInfo\"></xref> object is read-only or is a directory.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The path specified when creating an instance of the <xref href=\"System.IO.FileInfo\"></xref> object is invalid, such as being on an unmapped drive.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Replace(System.String,System.String)\n  commentId: M:System.IO.FileInfo.Replace(System.String,System.String)\n  id: Replace(System.String,System.String)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Replace(String, String)\n  nameWithType: FileInfo.Replace(String, String)\n  fullName: FileInfo.Replace(String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file.\n  remarks: \"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.  \\n  \\n> [!CAUTION]\\n>  This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.  \\n  \\n Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.\"\n  example:\n  - \"The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \\n  \\n [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);\n    parameters:\n    - id: destinationFileName\n      type: System.String\n      description: The name of a file to replace with the current file.\n    - id: destinationBackupFileName\n      type: System.String\n      description: The name of a file with which to create a backup of the file described by the <code>destFileName</code> parameter.\n    return:\n      type: System.IO.FileInfo\n      description: A <xref href=\"System.IO.FileInfo\"></xref> object that encapsulates information about the file described by the <code>destFileName</code> parameter.\n  overload: System.IO.FileInfo.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The path described by the <code>destFileName</code> parameter was not of a legal form.  \\n  \\n -or-  \\n  \\n The path described by the <code>destBackupFileName</code> parameter was not of a legal form.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>destFileName</code> parameter is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"The file described by the current <xref href=\\\"System.IO.FileInfo\\\"></xref> object could not be found.  \\n  \\n -or-  \\n  \\n The file described by the <code>destinationFileName</code> parameter could not be found.\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows NT or later.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)\n  commentId: M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)\n  id: Replace(System.String,System.String,System.Boolean)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: Replace(String, String, Boolean)\n  nameWithType: FileInfo.Replace(String, String, Boolean)\n  fullName: FileInfo.Replace(String, String, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem\n  namespace: System.IO\n  summary: Replaces the contents of a specified file with the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object, deleting the original file, and creating a backup of the replaced file.  Also specifies whether to ignore merge errors.\n  remarks: \"The <xref:System.IO.FileInfo.Replace%2A> method replaces the contents of a specified file with the contents of the file described by the current <xref:System.IO.FileInfo> object.  It also creates a backup of the file that was replaced.  Finally, it returns a new <xref:System.IO.FileInfo> object that describes the overwritten file.  \\n  \\n> [!CAUTION]\\n>  This method will succeed in Windows 2000 environments if the `destFileName` is read-only and will not raise an exception. Use the <xref:System.IO.FileInfo.IsReadOnly%2A> property to check if the destination file is read-only before attempting to replace it.  \\n  \\n Pass `null` to the `destBackupFileName` parameter if you do not want to create a backup of the file being replaced.\"\n  example:\n  - \"The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \\n  \\n [!code-cpp[IO.FileInfo.Replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.Replace/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.Replace/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.Replace/VB/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);\n    parameters:\n    - id: destinationFileName\n      type: System.String\n      description: The name of a file to replace with the current file.\n    - id: destinationBackupFileName\n      type: System.String\n      description: The name of a file with which to create a backup of the file described by the <code>destFileName</code> parameter.\n    - id: ignoreMetadataErrors\n      type: System.Boolean\n      description: '`true` to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise `false`.'\n    return:\n      type: System.IO.FileInfo\n      description: A <xref href=\"System.IO.FileInfo\"></xref> object that encapsulates information about the file described by the <code>destFileName</code> parameter.\n  overload: System.IO.FileInfo.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The path described by the <code>destFileName</code> parameter was not of a legal form.  \\n  \\n -or-  \\n  \\n The path described by the <code>destBackupFileName</code> parameter was not of a legal form.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>destFileName</code> parameter is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"The file described by the current <xref href=\\\"System.IO.FileInfo\\\"></xref> object could not be found.  \\n  \\n -or-  \\n  \\n The file described by the <code>destinationFileName</code> parameter could not be found.\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows NT or later.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)\n  commentId: M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)\n  id: SetAccessControl(System.Security.AccessControl.FileSecurity)\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: SetAccessControl(FileSecurity)\n  nameWithType: FileInfo.SetAccessControl(FileSecurity)\n  fullName: FileInfo.SetAccessControl(FileSecurity)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Applies access control list (ACL) entries described by a <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object to the file described by the current <xref href=\"System.IO.FileInfo\"></xref> object.\n  remarks: \"The <xref:System.IO.FileInfo.SetAccessControl%2A> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.  \\n  \\n Use the <xref:System.IO.FileInfo.SetAccessControl%2A> method whenever you need to add or remove ACL entries from a file.  \\n  \\n> [!CAUTION]\\n>  The ACL specified for the `fileSecurity` parameter replaces the existing ACL for the file. To add permissions for a new user, use the <xref:System.IO.Directory.GetAccessControl%2A> method to obtain the existing ACL, modify it, and then use <xref:System.IO.FileInfo.SetAccessControl%2A> to apply it back to the file.  \\n  \\n An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file. For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).  \\n  \\n The <xref:System.IO.FileInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.FileSecurity> objects that have been modified after object creation.  If a <xref:System.Security.AccessControl.FileSecurity> object has not been modified, it will not be persisted to a file.  Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.FileSecurity> object from one file and reapply the same object to another file.  \\n  \\n To copy ACL information from one file to another:  \\n  \\n1.  Use the <xref:System.IO.FileInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.FileSecurity> object from the source file.  \\n  \\n2.  Create a new <xref:System.Security.AccessControl.FileSecurity> object for the destination file.  \\n  \\n3.  Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.FileSecurity> object to retrieve the ACL information.  \\n  \\n4.  Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.FileSecurity> object.  \\n  \\n5.  Set the destination <xref:System.Security.AccessControl.FileSecurity> object to the destination file using the <xref:System.IO.FileInfo.SetAccessControl%2A> method.\"\n  example:\n  - \"The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an ACL entry from a file.  You must supply a valid user or group account to run this example.  \\n  \\n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]\\n [!code-csharp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]\\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]\"\n  syntax:\n    content: public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);\n    parameters:\n    - id: fileSecurity\n      type: System.Security.AccessControl.FileSecurity\n      description: A <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> object that describes an access control list (ACL) entry to apply to the current file.\n  overload: System.IO.FileInfo.SetAccessControl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>fileSecurity</code> parameter is `null`.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: The file could not be found or modified.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The current process does not have access to open the file.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The current operating system is not Microsoft Windows 2000 or later.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileInfo.ToString\n  commentId: M:System.IO.FileInfo.ToString\n  id: ToString\n  parent: System.IO.FileInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FileInfo.ToString()\n  fullName: FileInfo.ToString()\n  type: Method\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Returns the path as a string.\n  remarks: The string returned by the <xref:System.IO.FileInfo.ToString%2A> method represents path that was passed to the constructor.  When you create a <xref:System.IO.FileInfo> object using the constructors, the <xref:System.IO.FileInfo.ToString%2A> method returns the fully qualified path.  However, there are cases where the string returned by the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.  For example, when you create a <xref:System.IO.FileInfo> object using the <xref:System.IO.DirectoryInfo.GetFiles%2A> method, the <xref:System.IO.FileInfo.ToString%2A> method does not represent the fully qualified path.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path.\n  overload: System.IO.FileInfo.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.FileSystemInfo\n  parent: System.IO\n  isExternal: false\n  name: FileSystemInfo\n  nameWithType: FileSystemInfo\n  fullName: System.IO.FileSystemInfo\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.IO.PathTooLongException\n  parent: System.IO\n  isExternal: false\n  name: PathTooLongException\n  nameWithType: PathTooLongException\n  fullName: System.IO.PathTooLongException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.IO.DirectoryNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n- uid: System.IO.DriveNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DriveNotFoundException\n  nameWithType: DriveNotFoundException\n  fullName: System.IO.DriveNotFoundException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Security.AccessControl.PrivilegeNotHeldException\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PrivilegeNotHeldException\n  nameWithType: PrivilegeNotHeldException\n  fullName: System.Security.AccessControl.PrivilegeNotHeldException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.IO.FileInfo.#ctor(System.String)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: FileInfo(String)\n  nameWithType: FileInfo.FileInfo(String)\n  fullName: FileInfo.FileInfo(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.FileInfo.AppendText\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: AppendText()\n  nameWithType: FileInfo.AppendText()\n  fullName: FileInfo.AppendText()\n- uid: System.IO.StreamWriter\n  parent: System.IO\n  isExternal: false\n  name: StreamWriter\n  nameWithType: StreamWriter\n  fullName: System.IO.StreamWriter\n- uid: System.IO.FileInfo.CopyTo(System.String)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: CopyTo(String)\n  nameWithType: FileInfo.CopyTo(String)\n  fullName: FileInfo.CopyTo(String)\n- uid: System.IO.FileInfo\n  parent: System.IO\n  isExternal: false\n  name: FileInfo\n  nameWithType: FileInfo\n  fullName: System.IO.FileInfo\n- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: CopyTo(String, Boolean)\n  nameWithType: FileInfo.CopyTo(String, Boolean)\n  fullName: FileInfo.CopyTo(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.FileInfo.Create\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Create()\n  nameWithType: FileInfo.Create()\n  fullName: FileInfo.Create()\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream\n- uid: System.IO.FileInfo.CreateText\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: CreateText()\n  nameWithType: FileInfo.CreateText()\n  fullName: FileInfo.CreateText()\n- uid: System.IO.FileInfo.Decrypt\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Decrypt()\n  nameWithType: FileInfo.Decrypt()\n  fullName: FileInfo.Decrypt()\n- uid: System.IO.FileInfo.Delete\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Delete()\n  nameWithType: FileInfo.Delete()\n  fullName: FileInfo.Delete()\n- uid: System.IO.FileInfo.Directory\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Directory\n  nameWithType: FileInfo.Directory\n  fullName: FileInfo.Directory\n- uid: System.IO.DirectoryInfo\n  parent: System.IO\n  isExternal: false\n  name: DirectoryInfo\n  nameWithType: DirectoryInfo\n  fullName: System.IO.DirectoryInfo\n- uid: System.IO.FileInfo.DirectoryName\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: DirectoryName\n  nameWithType: FileInfo.DirectoryName\n  fullName: FileInfo.DirectoryName\n- uid: System.IO.FileInfo.Encrypt\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Encrypt()\n  nameWithType: FileInfo.Encrypt()\n  fullName: FileInfo.Encrypt()\n- uid: System.IO.FileInfo.Exists\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Exists\n  nameWithType: FileInfo.Exists\n  fullName: FileInfo.Exists\n- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: GetAccessControl(AccessControlSections)\n  nameWithType: FileInfo.GetAccessControl(AccessControlSections)\n  fullName: FileInfo.GetAccessControl(AccessControlSections)\n- uid: System.Security.AccessControl.FileSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSecurity\n  nameWithType: FileSecurity\n  fullName: System.Security.AccessControl.FileSecurity\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  nameWithType: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n- uid: System.IO.FileInfo.GetAccessControl\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: GetAccessControl()\n  nameWithType: FileInfo.GetAccessControl()\n  fullName: FileInfo.GetAccessControl()\n- uid: System.IO.FileInfo.IsReadOnly\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: FileInfo.IsReadOnly\n  fullName: FileInfo.IsReadOnly\n- uid: System.IO.FileInfo.Length\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Length\n  nameWithType: FileInfo.Length\n  fullName: FileInfo.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.FileInfo.MoveTo(System.String)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: MoveTo(String)\n  nameWithType: FileInfo.MoveTo(String)\n  fullName: FileInfo.MoveTo(String)\n- uid: System.IO.FileInfo.Name\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Name\n  nameWithType: FileInfo.Name\n  fullName: FileInfo.Name\n- uid: System.IO.FileInfo.Open(System.IO.FileMode)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Open(FileMode)\n  nameWithType: FileInfo.Open(FileMode)\n  fullName: FileInfo.Open(FileMode)\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Open(FileMode, FileAccess)\n  nameWithType: FileInfo.Open(FileMode, FileAccess)\n  fullName: FileInfo.Open(FileMode, FileAccess)\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Open(FileMode, FileAccess, FileShare)\n  nameWithType: FileInfo.Open(FileMode, FileAccess, FileShare)\n  fullName: FileInfo.Open(FileMode, FileAccess, FileShare)\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  nameWithType: FileShare\n  fullName: System.IO.FileShare\n- uid: System.IO.FileInfo.OpenRead\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: OpenRead()\n  nameWithType: FileInfo.OpenRead()\n  fullName: FileInfo.OpenRead()\n- uid: System.IO.FileInfo.OpenText\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: OpenText()\n  nameWithType: FileInfo.OpenText()\n  fullName: FileInfo.OpenText()\n- uid: System.IO.StreamReader\n  parent: System.IO\n  isExternal: false\n  name: StreamReader\n  nameWithType: StreamReader\n  fullName: System.IO.StreamReader\n- uid: System.IO.FileInfo.OpenWrite\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: OpenWrite()\n  nameWithType: FileInfo.OpenWrite()\n  fullName: FileInfo.OpenWrite()\n- uid: System.IO.FileInfo.Replace(System.String,System.String)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Replace(String, String)\n  nameWithType: FileInfo.Replace(String, String)\n  fullName: FileInfo.Replace(String, String)\n- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Replace(String, String, Boolean)\n  nameWithType: FileInfo.Replace(String, String, Boolean)\n  fullName: FileInfo.Replace(String, String, Boolean)\n- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: SetAccessControl(FileSecurity)\n  nameWithType: FileInfo.SetAccessControl(FileSecurity)\n  fullName: FileInfo.SetAccessControl(FileSecurity)\n- uid: System.IO.FileInfo.ToString\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: FileInfo.ToString()\n  fullName: FileInfo.ToString()\n- uid: System.IO.FileInfo.GetAccessControl*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: GetAccessControl\n  nameWithType: FileInfo.GetAccessControl\n  fullName: FileInfo.GetAccessControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Replace*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Replace\n  nameWithType: FileInfo.Replace\n  fullName: FileInfo.Replace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.#ctor*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: FileInfo\n  nameWithType: FileInfo.FileInfo\n  fullName: FileInfo.FileInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.AppendText*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: AppendText\n  nameWithType: FileInfo.AppendText\n  fullName: FileInfo.AppendText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.CopyTo*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: CopyTo\n  nameWithType: FileInfo.CopyTo\n  fullName: FileInfo.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Create*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Create\n  nameWithType: FileInfo.Create\n  fullName: FileInfo.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.CreateText*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: CreateText\n  nameWithType: FileInfo.CreateText\n  fullName: FileInfo.CreateText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Decrypt*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Decrypt\n  nameWithType: FileInfo.Decrypt\n  fullName: FileInfo.Decrypt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Delete*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Delete\n  nameWithType: FileInfo.Delete\n  fullName: FileInfo.Delete\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Directory*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Directory\n  nameWithType: FileInfo.Directory\n  fullName: FileInfo.Directory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.DirectoryName*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: DirectoryName\n  nameWithType: FileInfo.DirectoryName\n  fullName: FileInfo.DirectoryName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Encrypt*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Encrypt\n  nameWithType: FileInfo.Encrypt\n  fullName: FileInfo.Encrypt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Exists*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Exists\n  nameWithType: FileInfo.Exists\n  fullName: FileInfo.Exists\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.IsReadOnly*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: FileInfo.IsReadOnly\n  fullName: FileInfo.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Length*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Length\n  nameWithType: FileInfo.Length\n  fullName: FileInfo.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.MoveTo*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: MoveTo\n  nameWithType: FileInfo.MoveTo\n  fullName: FileInfo.MoveTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Name*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Name\n  nameWithType: FileInfo.Name\n  fullName: FileInfo.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.Open*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: Open\n  nameWithType: FileInfo.Open\n  fullName: FileInfo.Open\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.OpenRead*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: OpenRead\n  nameWithType: FileInfo.OpenRead\n  fullName: FileInfo.OpenRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.OpenText*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: OpenText\n  nameWithType: FileInfo.OpenText\n  fullName: FileInfo.OpenText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.OpenWrite*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: OpenWrite\n  nameWithType: FileInfo.OpenWrite\n  fullName: FileInfo.OpenWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.SetAccessControl*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: SetAccessControl\n  nameWithType: FileInfo.SetAccessControl\n  fullName: FileInfo.SetAccessControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.IO.FileInfo.ToString*\n  parent: System.IO.FileInfo\n  isExternal: false\n  name: ToString\n  nameWithType: FileInfo.ToString\n  fullName: FileInfo.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IO.FileSystemInfo.Attributes\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: FileSystemInfo.Attributes\n  fullName: FileSystemInfo.Attributes\n- uid: System.IO.FileSystemInfo.CreationTime\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: CreationTime\n  nameWithType: FileSystemInfo.CreationTime\n  fullName: FileSystemInfo.CreationTime\n- uid: System.IO.FileSystemInfo.CreationTimeUtc\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: CreationTimeUtc\n  nameWithType: FileSystemInfo.CreationTimeUtc\n  fullName: FileSystemInfo.CreationTimeUtc\n- uid: System.IO.FileSystemInfo.Extension\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: Extension\n  nameWithType: FileSystemInfo.Extension\n  fullName: FileSystemInfo.Extension\n- uid: System.IO.FileSystemInfo.FullName\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: FullName\n  nameWithType: FileSystemInfo.FullName\n  fullName: FileSystemInfo.FullName\n- uid: System.IO.FileSystemInfo.FullPath\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: FullPath\n  nameWithType: FileSystemInfo.FullPath\n  fullName: FileSystemInfo.FullPath\n- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: FileSystemInfo.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.IO.FileSystemInfo.LastAccessTime\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: LastAccessTime\n  nameWithType: FileSystemInfo.LastAccessTime\n  fullName: FileSystemInfo.LastAccessTime\n- uid: System.IO.FileSystemInfo.LastAccessTimeUtc\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: LastAccessTimeUtc\n  nameWithType: FileSystemInfo.LastAccessTimeUtc\n  fullName: FileSystemInfo.LastAccessTimeUtc\n- uid: System.IO.FileSystemInfo.LastWriteTime\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: LastWriteTime\n  nameWithType: FileSystemInfo.LastWriteTime\n  fullName: FileSystemInfo.LastWriteTime\n- uid: System.IO.FileSystemInfo.LastWriteTimeUtc\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: LastWriteTimeUtc\n  nameWithType: FileSystemInfo.LastWriteTimeUtc\n  fullName: FileSystemInfo.LastWriteTimeUtc\n- uid: System.IO.FileSystemInfo.OriginalPath\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: OriginalPath\n  nameWithType: FileSystemInfo.OriginalPath\n  fullName: FileSystemInfo.OriginalPath\n- uid: System.IO.FileSystemInfo.Refresh\n  parent: System.IO.FileSystemInfo\n  isExternal: false\n  name: Refresh()\n  nameWithType: FileSystemInfo.Refresh()\n  fullName: FileSystemInfo.Refresh()\n- uid: System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo)\n  parent: System.IO.FileSystemAclExtensions\n  isExternal: false\n  name: GetAccessControl(FileInfo)\n  nameWithType: FileSystemAclExtensions.GetAccessControl(FileInfo)\n  fullName: FileSystemAclExtensions.GetAccessControl(FileInfo)\n- uid: System.IO.FileSystemAclExtensions.GetAccessControl(System.IO.FileInfo,System.Security.AccessControl.AccessControlSections)\n  parent: System.IO.FileSystemAclExtensions\n  isExternal: false\n  name: GetAccessControl(FileInfo, AccessControlSections)\n  nameWithType: FileSystemAclExtensions.GetAccessControl(FileInfo, AccessControlSections)\n  fullName: FileSystemAclExtensions.GetAccessControl(FileInfo, AccessControlSections)\n- uid: System.IO.FileSystemAclExtensions.SetAccessControl(System.IO.FileInfo,System.Security.AccessControl.FileSecurity)\n  parent: System.IO.FileSystemAclExtensions\n  isExternal: false\n  name: SetAccessControl(FileInfo, FileSecurity)\n  nameWithType: FileSystemAclExtensions.SetAccessControl(FileInfo, FileSecurity)\n  fullName: FileSystemAclExtensions.SetAccessControl(FileInfo, FileSecurity)\n"}