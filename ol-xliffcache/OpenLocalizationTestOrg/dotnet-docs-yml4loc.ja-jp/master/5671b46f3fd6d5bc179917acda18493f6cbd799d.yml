### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  commentId: T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  id: IFileChangeNotificationSystem
  children:
  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  langs:
  - csharp
  name: IFileChangeNotificationSystem
  nameWithType: IFileChangeNotificationSystem
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  type: Interface
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: Defines a way to expose a custom <xref href="System.Runtime.Caching.FileChangeMonitor"></xref> object to a cache implementation.
  remarks: "In ASP.NET, the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface provides access to internal file-change notification management.  \n  \n The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface is used internally by the <xref:System.Runtime.Caching.HostFileChangeMonitor> class.  \n  \n When a cache implementation runs in an ASP.NET application domain, ASP.NET implements an <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property. The <xref:System.Runtime.Caching.HostFileChangeMonitor> class detects this property and uses the ASP.NET file-change notification system to evict cache entries based on file-change notification.  \n  \n In non-ASP.NET applications, there is no host environment that implements a custom <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface. As a result, the <xref:System.Runtime.Caching.HostFileChangeMonitor> class uses the <xref:System.IO.FileSystemWatcher> class of the CLR."
  syntax:
    content: public interface IFileChangeNotificationSystem
  implements: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: ghogen
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  commentId: M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  id: StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  langs:
  - csharp
  name: StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)
  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)
  fullName: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: Registers a file path to monitor with the host environment.
  remarks: This method is used by custom cache objects and custom change monitors that implement the host environment's <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register file paths for monitoring with the host environment. The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> method is called by implementers of the <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> interface in order to register a file or directory for change monitoring.
  syntax:
    content: public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);
    parameters:
    - id: filePath
      type: System.String
      description: The fully qualified physical path of a directory or file to monitor for changes.
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: A reference to a method that implements the <xref href="System.Runtime.Caching.OnChangedCallback"></xref> delegate. When the monitored file or directory changes, the host environment's implementation of the <xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem"></xref> interface raises an event by calling the <xref href="System.Runtime.Caching.OnChangedCallback"></xref> class.
    - id: state
      type: System.Object
      description: The state that is supplied by the host environment. Cache implementations and custom change monitors should treat the state value as opaque. However, the state must be stored so that it can be sent to the host environment when the cache implementation calls the <xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)"></xref> method.
    - id: lastWriteTime
      type: System.DateTimeOffset
      description: When this method returns, contains the last date and time that a write operation occurred on <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.
    - id: fileSize
      type: System.Int64
      description: When this method returns, contains the total size of the monitored <code>filePath</code>. This parameter is passed uninitialized. This parameter is returned from the host environment.
  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: ghogen
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  commentId: M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  id: StopMonitoring(System.String,System.Object)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  langs:
  - csharp
  name: StopMonitoring(String, Object)
  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String, Object)
  fullName: IFileChangeNotificationSystem.StopMonitoring(String, Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: Ends change monitoring.
  remarks: The <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> method must be called by custom caches and custom change monitors that are being disposed by the host environment in order to stop monitoring file paths and directories.
  syntax:
    content: public void StopMonitoring (string filePath, object state);
    parameters:
    - id: filePath
      type: System.String
      description: The path of the file or folder to stop monitoring. This should match a file path value that was passed in an earlier call to the <xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)"></xref> method.
    - id: state
      type: System.Object
      description: The state information that was originally supplied by the host environment during an earlier call to the <xref href="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)"></xref> method.
  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: ghogen
references:
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)
  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)
  fullName: IFileChangeNotificationSystem.StartMonitoring(String, OnChangedCallback, Object, DateTimeOffset, Int64)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StopMonitoring(String, Object)
  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String, Object)
  fullName: IFileChangeNotificationSystem.StopMonitoring(String, Object)
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StartMonitoring
  nameWithType: IFileChangeNotificationSystem.StartMonitoring
  fullName: IFileChangeNotificationSystem.StartMonitoring
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StopMonitoring
  nameWithType: IFileChangeNotificationSystem.StopMonitoring
  fullName: IFileChangeNotificationSystem.StopMonitoring
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Hosting/IFileChangeNotificationSystem.xml
