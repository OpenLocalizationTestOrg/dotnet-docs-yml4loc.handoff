### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ReflectionPermissionFlag
  commentId: T:System.Security.Permissions.ReflectionPermissionFlag
  id: ReflectionPermissionFlag
  children:
  - System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  - System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  - System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  - System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  langs:
  - csharp
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
  type: Enum
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Specifies the permitted use of the <xref href="System.Reflection"></xref> and <xref href="System.Reflection.Emit"></xref> namespaces.
  remarks: "This enumeration is used by the <xref:System.Security.Permissions.ReflectionPermission> and <xref:System.Security.Permissions.ReflectionPermissionAttribute> classes. If no <xref:System.Security.Permissions.ReflectionPermission> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members. For more information, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).  \n  \n> [!CAUTION]\n>  Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to private class members, we recommend that you grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.  \n  \n The RestrictedMemberAccess flag is introduced in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]. To use this flag, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.  \n  \n> [!IMPORTANT]\n>  AllFlags does not include the RestrictedMemberAccess flag. To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.  \n  \n Starting with the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)], the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted. To use this feature, your application should target the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] or later.  \n  \n Starting with the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete."
  example:
  - "The following example shows how to use the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> class that represents the right to perform restricted member access. This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags> class.  \n  \n For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md).  \n  \n [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]\n [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ReflectionPermissionFlag
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.FlagsAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  commentId: F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  id: AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: ReflectionPermissionFlag.AllFlags
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: '`TypeInformation` , `MemberAccess`, and `ReflectionEmit` are set. <xref href="System.Security.Permissions.ReflectionPermissionFlag.AllFlags"></xref> does not include <xref href="System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess"></xref>.'
  syntax:
    content: >-
      [System.Obsolete]

      AllFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  commentId: F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  id: MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: ReflectionPermissionFlag.MemberAccess
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Invocation operations on all members are allowed, regardless of grant set. If this flag is not set, invocation operations are allowed only on visible members.
  syntax:
    content: MemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  commentId: F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  id: NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: ReflectionPermissionFlag.NoFlags
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Enumeration of types and members is allowed. Invocation operations are allowed on visible types and members.
  syntax:
    content: NoFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  commentId: F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  id: ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: ReflectionPermissionFlag.ReflectionEmit
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Emitting debug symbols is allowed. Beginning with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this flag is no longer required to emit code.
  syntax:
    content: >-
      [System.Obsolete]

      ReflectionEmit
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  commentId: F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  id: RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: ReflectionPermissionFlag.RestrictedMemberAccess
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Restricted member access is provided for partially trusted code. Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed. This flag is new in the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)].
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      RestrictedMemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: ''
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  commentId: F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  id: TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: ReflectionPermissionFlag.TypeInformation
  type: Field
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: This flag is obsolete. No flags are necessary to enumerate types and members and to examine their metadata. Use <xref href="System.Security.Permissions.ReflectionPermissionFlag.NoFlags"></xref> instead.
  syntax:
    content: >-
      [System.Obsolete("not used anymore")]

      TypeInformation
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/ReflectionPermissionFlag.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: ReflectionPermissionFlag.AllFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: ReflectionPermissionFlag.MemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: ReflectionPermissionFlag.NoFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: ReflectionPermissionFlag.ReflectionEmit
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: ReflectionPermissionFlag.RestrictedMemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: ReflectionPermissionFlag.TypeInformation
