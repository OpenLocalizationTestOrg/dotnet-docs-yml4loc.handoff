{"nodes":[{"content":"Represents an XML attribute.","nodes":[{"pos":[0,28],"content":"Represents an XML attribute.","nodes":[{"content":"Represents an XML attribute.","pos":[0,28]}]}],"pos":[3377,3406],"yaml":true},{"content":"An XML attribute is a name/value pair associated with an XML element.  \n  \n Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element. Attributes must have a qualified name that is unique to the element. Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree. Instead, they are simply name/value pairs associated with an element.  \n  \n Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.  \n  \n Technically, in XML, namespace declarations are not attributes proper. However, this distinction is not normally made by many XML programmers. Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes. To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes. Such namespace attributes impact serialization of an XML tree. When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes. You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.  \n  \n The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>. You can add annotations to attributes, and observe events for them.  \n  \n Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML. For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).","nodes":[{"pos":[0,69],"content":"An XML attribute is a name/value pair associated with an XML element.","nodes":[{"content":"An XML attribute is a name/value pair associated with an XML element.","pos":[0,69]}]},{"pos":[76,401],"content":"Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element. Attributes must have a qualified name that is unique to the element. Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree. Instead, they are simply name/value pairs associated with an element.","nodes":[{"content":"Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element. Attributes must have a qualified name that is unique to the element. Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree. Instead, they are simply name/value pairs associated with an element.","pos":[0,325],"nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> contains a list of the attributes for that element.","pos":[0,88],"source":"Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element."},{"content":"Attributes must have a qualified name that is unique to the element.","pos":[89,157]},{"content":"Attributes are not derived from <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNode&gt;</ph>; they are not nodes in the XML tree.","pos":[158,255],"source":" Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree."},{"content":"Instead, they are simply name/value pairs associated with an element.","pos":[256,325]}]}]},{"pos":[408,681],"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.","nodes":[{"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.","pos":[0,273],"nodes":[{"content":"Attributes are maintained in the XML tree in the order that they were added to the element.","pos":[0,91]},{"content":"When a collection of attributes is returned by <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added to the element, and are not sorted.","pos":[92,273],"source":" When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted."}]}]},{"pos":[688,1483],"content":"Technically, in XML, namespace declarations are not attributes proper. However, this distinction is not normally made by many XML programmers. Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes. To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes. Such namespace attributes impact serialization of an XML tree. When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes. You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.","nodes":[{"content":"Technically, in XML, namespace declarations are not attributes proper.","pos":[0,70]},{"content":"However, this distinction is not normally made by many XML programmers.","pos":[71,142]},{"content":"Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.","pos":[143,286]},{"content":"To simplify the <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming interface, namespaces are represented in the XML tree as attributes.","pos":[287,437],"source":" To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes."},{"content":"Such namespace attributes impact serialization of an XML tree.","pos":[438,500]},{"content":"When serializing, <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> attempts to serialize with the namespace prefix specified in namespace attributes.","pos":[501,655],"source":" When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A&gt;</ph> to determine if an attribute is really a namespace declaration.","pos":[656,795],"source":" You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration."}]},{"pos":[1490,1646],"content":"The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>. You can add annotations to attributes, and observe events for them.","nodes":[{"content":"The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>. You can add annotations to attributes, and observe events for them.","pos":[0,156],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> class derives from <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","pos":[0,88],"source":"The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>."},{"content":"You can add annotations to attributes, and observe events for them.","pos":[89,156]}]}]},{"pos":[1653,1854],"content":"Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML. For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).","nodes":[{"content":"Some <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> methods can be used from XAML.","pos":[0,69],"source":"Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>LINQ to XML Dynamic Properties<ept id=\"p1\">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.","pos":[70,201],"source":" For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)."}]}],"pos":[3417,5284],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XAttribute\"></xref> class from another <xref href=\"System.Xml.Linq.XAttribute\"></xref> object.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> class from another <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XAttribute\"></xref> class from another <xref href=\"System.Xml.Linq.XAttribute\"></xref> object."}],"pos":[8440,8597],"yaml":true},{"content":"This constructor is primarily used internally when making a deep copy of an XML tree.","nodes":[{"pos":[0,85],"content":"This constructor is primarily used internally when making a deep copy of an XML tree.","nodes":[{"content":"This constructor is primarily used internally when making a deep copy of an XML tree.","pos":[0,85]}]}],"pos":[8608,8694],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Linq.XAttribute\"></xref> object to copy from.","nodes":[{"pos":[0,71],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> object to copy from.","source":"An <xref href=\"System.Xml.Linq.XAttribute\"></xref> object to copy from."}],"pos":[9925,9997],"yaml":true},{"content":"The <code>other</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>other</code> parameter is `null`."}],"pos":[10159,10203],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XAttribute\"></xref> class from the specified name and value.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> class from the specified name and value.","source":"Initializes a new instance of the <xref href=\"System.Xml.Linq.XAttribute\"></xref> class from the specified name and value."}],"pos":[11768,11891],"yaml":true},{"content":"There is an implicit conversion from string to <xref:System.Xml.Linq.XName>. Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:  \n  \n```csharp  \n  \n            XElement root = new XElement(\"Root\",  \n    new XAttribute(\"AnAttributeName\", \"Content\")  \n);  \n```  \n  \n You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:  \n  \n```csharp  \n  \n            XNamespace aw = \"http://www.adventure-works.com\";  \nXElement root = new XElement(aw + \"Root\",  \n    new XAttribute(aw + \"AnAttributeName\", \"Content\")  \n);  \n```  \n  \n For more information, see [Working with XML Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).  \n  \n These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.  \n  \n The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>. If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.","nodes":[{"pos":[0,222],"content":"There is an implicit conversion from string to <xref:System.Xml.Linq.XName>. Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:","nodes":[{"content":"There is an implicit conversion from string to <xref:System.Xml.Linq.XName>. Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:","pos":[0,222],"nodes":[{"content":"There is an implicit conversion from string to <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XName&gt;</ph>.","pos":[0,76],"source":"There is an implicit conversion from string to <xref:System.Xml.Linq.XName>."},{"content":"Typical use of this constructor is to specify a string as the first parameter instead of creating a new <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XName&gt;</ph>, as follows:","pos":[77,222],"source":" Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:"}]}]},{"pos":[360,517],"content":"You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:","nodes":[{"content":"You can also use the addition operator overload with an <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XName&gt;</ph>, as follows:","pos":[0,157],"source":"You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:"}]},{"pos":[717,845],"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with XML Namespaces<ept id=\"p1\">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.","source":"For more information, see [Working with XML Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)."},{"pos":[852,972],"content":"These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.","nodes":[{"content":"These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.","pos":[0,120]}]},{"pos":[979,1266],"content":"The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>. If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.","nodes":[{"content":"The <ph id=\"ph1\">`value`</ph> parameter can be a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>, <ph id=\"ph3\">`double`</ph>, <ph id=\"ph4\">`float`</ph>, <ph id=\"ph5\">`decimal`</ph>, <ph id=\"ph6\">`bool`</ph>, <ph id=\"ph7\">&lt;xref:System.DateTime&gt;</ph>, or <ph id=\"ph8\">&lt;xref:System.TimeSpan&gt;</ph>.","pos":[0,141],"source":"The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>."},{"content":"If the value is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph>, the value of the attribute is formatted correctly per the W3C specifications.","pos":[142,287],"source":" If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications."}]}],"pos":[11902,13208],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.Linq.XName\"></xref> of the attribute.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XName\"&gt;&lt;/xref&gt;</ph> of the attribute.","source":"The <xref href=\"System.Xml.Linq.XName\"></xref> of the attribute."}],"pos":[15007,15072],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> containing the value of the attribute.","nodes":[{"pos":[0,76],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> containing the value of the attribute.","source":"An <xref href=\"System.Object\"></xref> containing the value of the attribute."}],"pos":[15133,15210],"yaml":true},{"content":"The <code>name</code> or <code>value</code> parameter is `null`.","nodes":[{"pos":[0,64],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>name</code> or <code>value</code> parameter is `null`."}],"pos":[15372,15437],"yaml":true},{"content":"Gets an empty collection of attributes.","nodes":[{"pos":[0,39],"content":"Gets an empty collection of attributes.","nodes":[{"content":"Gets an empty collection of attributes.","pos":[0,39]}]}],"pos":[16874,16914],"yaml":true},{"content":"This property is typically used by class implementers when writing a method that returns a collection of attributes. If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.","nodes":[{"pos":[0,281],"content":"This property is typically used by class implementers when writing a method that returns a collection of attributes. If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.","nodes":[{"content":"This property is typically used by class implementers when writing a method that returns a collection of attributes. If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.","pos":[0,281],"nodes":[{"content":"This property is typically used by class implementers when writing a method that returns a collection of attributes.","pos":[0,116]},{"content":"If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.","pos":[117,281],"source":" If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects."}]}]}],"pos":[16925,17207],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> of <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing an empty collection.","nodes":[{"pos":[0,147],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> containing an empty collection.","source":"An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> of <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing an empty collection."}],"pos":[17444,17592],"yaml":true},{"content":"Determines if this attribute is a namespace declaration.","nodes":[{"pos":[0,56],"content":"Determines if this attribute is a namespace declaration.","nodes":[{"content":"Determines if this attribute is a namespace declaration.","pos":[0,56]}]}],"pos":[19154,19211],"yaml":true},{"content":"Technically, in XML, namespace declarations are not attributes proper. However, this distinction is not normally made by most XML programmers. Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes. To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes. You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.","nodes":[{"pos":[0,587],"content":"Technically, in XML, namespace declarations are not attributes proper. However, this distinction is not normally made by most XML programmers. Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes. To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes. You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.","nodes":[{"content":"Technically, in XML, namespace declarations are not attributes proper.","pos":[0,70]},{"content":"However, this distinction is not normally made by most XML programmers.","pos":[71,142]},{"content":"Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.","pos":[143,282]},{"content":"To simplify the <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming interface, namespaces are represented in the XML tree as attributes.","pos":[283,433],"source":" To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes."},{"content":"You can use this property to determine if a particular <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> attribute is really a namespace declaration.","pos":[434,587],"source":" You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration."}]}],"pos":[19222,19810],"yaml":true,"extradata":"MT"},{"content":"`true` if this attribute is a namespace declaration; otherwise `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if this attribute is a namespace declaration; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this attribute is a namespace declaration; otherwise `false`."}],"pos":[21384,21458],"yaml":true},{"content":"Gets the expanded name of this attribute.","nodes":[{"pos":[0,41],"content":"Gets the expanded name of this attribute.","nodes":[{"content":"Gets the expanded name of this attribute.","pos":[0,41]}]}],"pos":[22921,22963],"yaml":true},{"content":"The expanded name returned by this property is in the form of `{namespace}localname`.","nodes":[{"pos":[0,85],"content":"The expanded name returned by this property is in the form of <ph id=\"ph1\">`{namespace}localname`</ph>.","source":"The expanded name returned by this property is in the form of `{namespace}localname`."}],"pos":[22974,23060],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Linq.XName\"></xref> containing the name of this attribute.","nodes":[{"pos":[0,84],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XName\"&gt;&lt;/xref&gt;</ph> containing the name of this attribute.","source":"An <xref href=\"System.Xml.Linq.XName\"></xref> containing the name of this attribute."}],"pos":[25108,25193],"yaml":true},{"content":"Gets the next attribute of the parent element.","nodes":[{"pos":[0,46],"content":"Gets the next attribute of the parent element.","nodes":[{"content":"Gets the next attribute of the parent element.","pos":[0,46]}]}],"pos":[26692,26739],"yaml":true},{"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the next attribute through this property, this property returns the attribute that was added after this attribute.  \n  \n If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`.","nodes":[{"pos":[0,390],"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the next attribute through this property, this property returns the attribute that was added after this attribute.","nodes":[{"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the next attribute through this property, this property returns the attribute that was added after this attribute.","pos":[0,390],"nodes":[{"content":"Attributes are maintained in the XML tree in the order that they were added to the element.","pos":[0,91]},{"content":"When a collection of attributes is returned by <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added, and are not sorted.","pos":[92,258],"source":" When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted."},{"content":"When you request the next attribute through this property, this property returns the attribute that was added after this attribute.","pos":[259,390]}]}]},{"pos":[397,507],"content":"If this attribute does not have a parent, or if there is no next attribute, then this property returns <ph id=\"ph1\">`null`</ph>.","source":"If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`."}],"pos":[26750,27262],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing the next attribute of the parent element.","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> containing the next attribute of the parent element.","source":"An <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing the next attribute of the parent element."}],"pos":[28343,28447],"yaml":true},{"content":"Gets the node type for this node.","nodes":[{"pos":[0,33],"content":"Gets the node type for this node.","nodes":[{"content":"Gets the node type for this node.","pos":[0,33]}]}],"pos":[29925,29959],"yaml":true},{"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","nodes":[{"pos":[0,308],"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","nodes":[{"content":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.","pos":[0,308],"nodes":[{"content":"Because all classes that derive from <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.","pos":[0,234],"source":"Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>."},{"content":"Your code can then test for the node type of each node in the collection.","pos":[235,308]}]}]}],"pos":[29970,30279],"yaml":true,"extradata":"MT"},{"content":"The node type. For <xref href=\"System.Xml.Linq.XAttribute\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Attribute\"></xref>.","nodes":[{"pos":[0,144],"content":"The node type. For <xref href=\"System.Xml.Linq.XAttribute\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Attribute\"></xref>.","nodes":[{"content":"The node type.","pos":[0,14]},{"content":"For <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> objects, this value is <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlNodeType.Attribute\"&gt;&lt;/xref&gt;</ph>.","pos":[15,144],"source":" For <xref href=\"System.Xml.Linq.XAttribute\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Attribute\"></xref>."}]}],"pos":[31024,31169],"yaml":true},{"content":"Gets the previous attribute of the parent element.","nodes":[{"pos":[0,50],"content":"Gets the previous attribute of the parent element.","nodes":[{"content":"Gets the previous attribute of the parent element.","pos":[0,50]}]}],"pos":[82582,82633],"yaml":true},{"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.  \n  \n If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`.  \n  \n The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects. This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element. Therefore, using this property might affect your performance.","nodes":[{"pos":[0,395],"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.","nodes":[{"content":"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.","pos":[0,395],"nodes":[{"content":"Attributes are maintained in the XML tree in the order that they were added to the element.","pos":[0,91]},{"content":"When a collection of attributes is returned by <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added, and are not sorted.","pos":[92,258],"source":" When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted."},{"content":"When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.","pos":[259,395]}]}]},{"pos":[402,523],"content":"If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns <ph id=\"ph1\">`null`</ph>.","source":"If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`."},{"pos":[530,874],"content":"The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects. This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element. Therefore, using this property might affect your performance.","nodes":[{"content":"The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects. This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element. Therefore, using this property might affect your performance.","pos":[0,344],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class stores its attributes as a singly-linked list of <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.","pos":[0,133],"source":"The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects."},{"content":"This means that the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A&gt;</ph> property must traverse the list of attributes that belong to the element.","pos":[134,282],"source":" This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element."},{"content":"Therefore, using this property might affect your performance.","pos":[283,344]}]}]}],"pos":[82644,83525],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing the previous attribute of the parent element.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> containing the previous attribute of the parent element.","source":"An <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing the previous attribute of the parent element."}],"pos":[84612,84720],"yaml":true},{"content":"Removes this attribute from its parent element.","nodes":[{"pos":[0,47],"content":"Removes this attribute from its parent element.","nodes":[{"content":"Removes this attribute from its parent element.","pos":[0,47]}]}],"pos":[86194,86242],"yaml":true},{"content":"You can use this method to modify an XML tree. This method will cause events to occur.  \n  \n There are many scenarios in which you might want to remove a set of attributes. In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set. In practical terms, this means that you should not iterate over a set of attributes and remove them. Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method. Then you can iterate over the list, removing the attributes. For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).  \n  \n Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=fullName> method. This method copies the attributes to a list, then iterates over the list, removing the attributes.","nodes":[{"pos":[0,86],"content":"You can use this method to modify an XML tree. This method will cause events to occur.","nodes":[{"content":"You can use this method to modify an XML tree. This method will cause events to occur.","pos":[0,86],"nodes":[{"content":"You can use this method to modify an XML tree.","pos":[0,46]},{"content":"This method will cause events to occur.","pos":[47,86]}]}]},{"pos":[93,815],"content":"There are many scenarios in which you might want to remove a set of attributes. In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set. In practical terms, this means that you should not iterate over a set of attributes and remove them. Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method. Then you can iterate over the list, removing the attributes. For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).","nodes":[{"content":"There are many scenarios in which you might want to remove a set of attributes.","pos":[0,79]},{"content":"In <ph id=\"ph1\">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.","pos":[80,246],"source":" In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set."},{"content":"In practical terms, this means that you should not iterate over a set of attributes and remove them.","pos":[247,347]},{"content":"Instead, you should materialize them into a <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph> extension method.","pos":[348,502],"source":" Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method."},{"content":"Then you can iterate over the list, removing the attributes.","pos":[503,563]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)<ept id=\"p1\">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>.","pos":[564,722],"source":" For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)."}]},{"pos":[822,1090],"content":"Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=fullName> method. This method copies the attributes to a list, then iterates over the list, removing the attributes.","nodes":[{"content":"Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=fullName> method. This method copies the attributes to a list, then iterates over the list, removing the attributes.","pos":[0,268],"nodes":[{"content":"Alternatively, if you want to remove a set of attributes, it is recommended that you use the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,169],"source":"Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=fullName> method."},{"content":"This method copies the attributes to a list, then iterates over the list, removing the attributes.","pos":[170,268]}]}]}],"pos":[86253,87350],"yaml":true,"extradata":"MT"},{"content":"The parent element is `null`.","nodes":[{"pos":[0,29],"content":"The parent element is <ph id=\"ph1\">`null`</ph>.","source":"The parent element is `null`."}],"pos":[88374,88404],"yaml":true},{"content":"Sets the value of this attribute.","nodes":[{"pos":[0,33],"content":"Sets the value of this attribute.","nodes":[{"content":"Sets the value of this attribute.","pos":[0,33]}]}],"pos":[89878,89912],"yaml":true},{"content":"The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.  \n  \n It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.  \n  \n This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.","nodes":[{"pos":[0,124],"content":"The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.","nodes":[{"content":"The value is converted to its string representation and assigned to the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;</ph> property.","pos":[0,124],"source":"The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property."}]},{"pos":[131,303],"content":"It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.","nodes":[{"content":"It is invalid to pass an instance of a class that derives from <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, such as <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.","pos":[0,172],"source":"It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>."}]},{"pos":[310,431],"content":"This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.","nodes":[{"content":"This method will raise the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.","pos":[0,121],"source":"This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events."}]}],"pos":[89923,90361],"yaml":true,"extradata":"MT"},{"content":"The value to assign to this attribute.","nodes":[{"pos":[0,38],"content":"The value to assign to this attribute.","nodes":[{"content":"The value to assign to this attribute.","pos":[0,38]}]}],"pos":[91359,91398],"yaml":true},{"content":"The <code>value</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>value</code> parameter is `null`."}],"pos":[91563,91607],"yaml":true},{"content":"The <code>value</code> is an <xref href=\"System.Xml.Linq.XObject\"></xref>.","nodes":[{"pos":[0,74],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an <ph id=\"ph2\">&lt;xref href=\"System.Xml.Linq.XObject\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>value</code> is an <xref href=\"System.Xml.Linq.XObject\"></xref>."}],"pos":[91701,91776],"yaml":true},{"content":"Converts the current <xref href=\"System.Xml.Linq.XAttribute\"></xref> object to a string representation.","nodes":[{"pos":[0,103],"content":"Converts the current <ph id=\"ph1\">&lt;xref href=\"System.Xml.Linq.XAttribute\"&gt;&lt;/xref&gt;</ph> object to a string representation.","source":"Converts the current <xref href=\"System.Xml.Linq.XAttribute\"></xref> object to a string representation."}],"pos":[93187,93291],"yaml":true},{"content":"This method returns a string in the form of `AttributeName=\"content\"`.  \n  \n> [!WARNING]\n>  When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.","nodes":[{"pos":[0,70],"content":"This method returns a string in the form of <ph id=\"ph1\">`AttributeName=\"content\"`</ph>.","source":"This method returns a string in the form of `AttributeName=\"content\"`."},{"pos":[78,277],"content":"[!WARNING]\n When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.","leadings":["","> "],"nodes":[{"content":"When this method is called and <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.","pos":[12,197],"source":" When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character."}]}],"pos":[93302,93587],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the XML text representation of an attribute and its value.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the XML text representation of an attribute and its value.","source":"A <xref href=\"System.String\"></xref> containing the XML text representation of an attribute and its value."}],"pos":[94515,94622],"yaml":true},{"content":"Gets or sets the value of this attribute.","nodes":[{"pos":[0,41],"content":"Gets or sets the value of this attribute.","nodes":[{"content":"Gets or sets the value of this attribute.","pos":[0,41]}]}],"pos":[96077,96119],"yaml":true},{"content":"You can use this property to get or set the value of an attribute.  \n  \n Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.  \n  \n If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>. If the attribute does not exist, then the nullable type is set to `null`. Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.","nodes":[{"pos":[0,66],"content":"You can use this property to get or set the value of an attribute.","nodes":[{"content":"You can use this property to get or set the value of an attribute.","pos":[0,66]}]},{"pos":[73,204],"content":"Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.","nodes":[{"content":"Setting this property will raise the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.","pos":[0,131],"source":"Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events."}]},{"pos":[211,659],"content":"If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>. If the attribute does not exist, then the nullable type is set to `null`. Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.","nodes":[{"content":"If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as <ph id=\"ph1\">`string`</ph> or <ph id=\"ph2\">&lt;xref:System.Nullable%601&gt;</ph> of <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph>.","pos":[0,242],"source":"If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>."},{"content":"If the attribute does not exist, then the nullable type is set to <ph id=\"ph1\">`null`</ph>.","pos":[243,316],"source":" If the attribute does not exist, then the nullable type is set to `null`."},{"content":"Before using this property, you must make sure that the <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph> method does not return <ph id=\"ph2\">`null`</ph>.","pos":[317,448],"source":" Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`."}]}],"pos":[96130,96796],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the value of this attribute.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the value of this attribute.","source":"A <xref href=\"System.String\"></xref> containing the value of this attribute."}],"pos":[102218,102295],"yaml":true},{"content":"When setting, the <code>value</code> is `null`.","nodes":[{"pos":[0,47],"content":"When setting, the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"When setting, the <code>value</code> is `null`."}],"pos":[102457,102505],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Linq.XAttribute\n  commentId: T:System.Xml.Linq.XAttribute\n  id: XAttribute\n  children:\n  - System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)\n  - System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)\n  - System.Xml.Linq.XAttribute.EmptySequence\n  - System.Xml.Linq.XAttribute.IsNamespaceDeclaration\n  - System.Xml.Linq.XAttribute.Name\n  - System.Xml.Linq.XAttribute.NextAttribute\n  - System.Xml.Linq.XAttribute.NodeType\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int64})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Single})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.TimeSpan})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt32})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt64})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.TimeSpan)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.String)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int32})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.UInt32)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.UInt64)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Single)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Guid})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Decimal})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Decimal)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTimeOffset})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTime})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Boolean})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Int64)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Int32)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Guid)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Double)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Double})\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.DateTimeOffset)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.DateTime)\n  - System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Boolean)\n  - System.Xml.Linq.XAttribute.PreviousAttribute\n  - System.Xml.Linq.XAttribute.Remove\n  - System.Xml.Linq.XAttribute.SetValue(System.Object)\n  - System.Xml.Linq.XAttribute.ToString\n  - System.Xml.Linq.XAttribute.Value\n  langs:\n  - csharp\n  name: XAttribute\n  nameWithType: XAttribute\n  fullName: System.Xml.Linq.XAttribute\n  type: Class\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Represents an XML attribute.\n  remarks: \"An XML attribute is a name/value pair associated with an XML element.  \\n  \\n Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element. Attributes must have a qualified name that is unique to the element. Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree. Instead, they are simply name/value pairs associated with an element.  \\n  \\n Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.  \\n  \\n Technically, in XML, namespace declarations are not attributes proper. However, this distinction is not normally made by many XML programmers. Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes. To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes. Such namespace attributes impact serialization of an XML tree. When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes. You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.  \\n  \\n The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>. You can add annotations to attributes, and observe events for them.  \\n  \\n Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML. For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).\"\n  syntax:\n    content: 'public class XAttribute : System.Xml.Linq.XObject'\n  inheritance:\n  - System.Object\n  - System.Xml.Linq.XObject\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  - System.Xml.Linq.XObject.Annotation(System.Type)\n  - System.Xml.Linq.XObject.Annotation``1\n  - System.Xml.Linq.XObject.Annotations(System.Type)\n  - System.Xml.Linq.XObject.Annotations``1\n  - System.Xml.Linq.XObject.BaseUri\n  - System.Xml.Linq.XObject.Changed\n  - System.Xml.Linq.XObject.Changing\n  - System.Xml.Linq.XObject.Document\n  - System.Xml.Linq.XObject.Parent\n  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  - System.Xml.Linq.XObject.RemoveAnnotations``1\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber\n  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition\n  extensionMethods:\n  - System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)\n  - System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)\n  - System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)\n  commentId: M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)\n  id: '#ctor(System.Xml.Linq.XAttribute)'\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: XAttribute(XAttribute)\n  nameWithType: XAttribute.XAttribute(XAttribute)\n  fullName: XAttribute.XAttribute(XAttribute)\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Linq.XAttribute\"></xref> class from another <xref href=\"System.Xml.Linq.XAttribute\"></xref> object.\n  remarks: This constructor is primarily used internally when making a deep copy of an XML tree.\n  example:\n  - \"This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.  \\n  \\n```csharp  \\n  \\n                XElement root1 = XElement.Parse(\\\"<Root Att1='abc' />\\\");  \\n// Make a deep copy.  \\nXElement root2 = new XElement(root1);  \\nif (root1.Attribute(\\\"Att1\\\") == root2.Attribute(\\\"Att1\\\"))  \\n    Console.WriteLine(\\\"This will not be printed\\\");  \\nelse  \\n    Console.WriteLine(\\\"Creating a deep copy created a new attribute from the original.\\\");  \\n```  \\n  \\n```vb  \\n  \\n                Dim root1 As XElement = <Root Att1='abc'/>  \\n' Make a deep copy.  \\nDim root2 As XElement = New XElement(root1)  \\nIf root1.Attribute(\\\"Att1\\\") Is root2.Attribute(\\\"Att1\\\") Then  \\n    Console.WriteLine(\\\"This will not be printed\\\")  \\nElse  \\n    Console.WriteLine(\\\"Creating a deep copy created a new attribute from the original.\\\")  \\nEnd If  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\nCreating a deep copy created a new attribute from the original.  \\n```\"\n  syntax:\n    content: public XAttribute (System.Xml.Linq.XAttribute other);\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XAttribute\n      description: An <xref href=\"System.Xml.Linq.XAttribute\"></xref> object to copy from.\n  overload: System.Xml.Linq.XAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>other</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)\n  commentId: M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)\n  id: '#ctor(System.Xml.Linq.XName,System.Object)'\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: XAttribute(XName, Object)\n  nameWithType: XAttribute.XAttribute(XName, Object)\n  fullName: XAttribute.XAttribute(XName, Object)\n  type: Constructor\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Linq.XAttribute\"></xref> class from the specified name and value.\n  remarks: \"There is an implicit conversion from string to <xref:System.Xml.Linq.XName>. Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:  \\n  \\n```csharp  \\n  \\n            XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"AnAttributeName\\\", \\\"Content\\\")  \\n);  \\n```  \\n  \\n You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:  \\n  \\n```csharp  \\n  \\n            XNamespace aw = \\\"http://www.adventure-works.com\\\";  \\nXElement root = new XElement(aw + \\\"Root\\\",  \\n    new XAttribute(aw + \\\"AnAttributeName\\\", \\\"Content\\\")  \\n);  \\n```  \\n  \\n For more information, see [Working with XML Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).  \\n  \\n These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.  \\n  \\n The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>. If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.\"\n  example:\n  - \"The following example uses this constructor to create attributes. It passes strings as the first argument to the <xref:System.Xml.Linq.XAttribute> constructor, which are then implicitly converted to <xref:System.Xml.Linq.XName> objects. The attributes are added to an element.  \\n  \\n```csharp  \\n  \\n                XElement root;  \\n  \\ndouble dbl = 12.345;  \\nXAttribute[] attArray = {  \\n    new XAttribute(\\\"Att4\\\", 1),  \\n    new XAttribute(\\\"Att5\\\", 2),  \\n    new XAttribute(\\\"Att6\\\", 3)  \\n};  \\nDateTime dt = new DateTime(2006, 10, 6, 12, 30, 00);  \\n  \\n// string content  \\nroot = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", \\\"Some text\\\"),  \\n  \\n    // double content  \\n    new XAttribute(\\\"Att2\\\", dbl),  \\n  \\n    // DateTime content  \\n    new XAttribute(\\\"Att3\\\", dt),  \\n  \\n    // XAttribute array content  \\n    attArray  \\n);  \\n  \\nConsole.WriteLine(root);  \\n```  \\n  \\n```vb  \\n  \\n                Dim dbl As Double = 12.345  \\nDim attArray As XAttribute() = { _  \\n    New XAttribute(\\\"Att4\\\", 1), _  \\n    New XAttribute(\\\"Att5\\\", 2), _  \\n    New XAttribute(\\\"Att6\\\", 3) _  \\n}  \\nDim dt As DateTime = New DateTime(2006, 10, 6, 12, 30, 0)  \\nDim root As XElement = <Root Att1=\\\"Some text\\\"  \\n                           Att2=<%= dbl %>  \\n                           Att3=<%= dt %>  \\n                           <%= attArray %>  \\n                       />  \\nConsole.WriteLine(root)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n<Root Att1=\\\"Some text\\\" Att2=\\\"12.345\\\" Att3=\\\"2006-10-06T12:30:00\\\" Att4=\\\"1\\\" Att5=\\\"2\\\" Att6=\\\"3\\\" />  \\n```\"\n  syntax:\n    content: public XAttribute (System.Xml.Linq.XName name, object value);\n    parameters:\n    - id: name\n      type: System.Xml.Linq.XName\n      description: The <xref href=\"System.Xml.Linq.XName\"></xref> of the attribute.\n    - id: value\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> containing the value of the attribute.\n  overload: System.Xml.Linq.XAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> or <code>value</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.EmptySequence\n  commentId: P:System.Xml.Linq.XAttribute.EmptySequence\n  id: EmptySequence\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: EmptySequence\n  nameWithType: XAttribute.EmptySequence\n  fullName: XAttribute.EmptySequence\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets an empty collection of attributes.\n  remarks: This property is typically used by class implementers when writing a method that returns a collection of attributes. If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute> EmptySequence { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}\n      description: An <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> of <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing an empty collection.\n  overload: System.Xml.Linq.XAttribute.EmptySequence*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.IsNamespaceDeclaration\n  commentId: P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration\n  id: IsNamespaceDeclaration\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: IsNamespaceDeclaration\n  nameWithType: XAttribute.IsNamespaceDeclaration\n  fullName: XAttribute.IsNamespaceDeclaration\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Determines if this attribute is a namespace declaration.\n  remarks: Technically, in XML, namespace declarations are not attributes proper. However, this distinction is not normally made by most XML programmers. Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes. To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes. You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.\n  example:\n  - \"The following example creates an attribute that is a namespace declaration and an attribute that is not. It then uses this property to display whether each attribute is a namespace declaration or not.  \\n  \\n```csharp  \\n  \\n                XNamespace aw = \\\"http://www.adventure-works.com\\\";  \\nXElement root = new XElement(aw + \\\"Root\\\",  \\n    new XAttribute(XNamespace.Xmlns + \\\"aw\\\", \\\"http://www.adventure-works.com\\\"),  \\n    new XAttribute(aw + \\\"Att\\\", \\\"content\\\")  \\n);  \\n  \\nforeach (XAttribute att in root.Attributes()) {  \\n    if (att.IsNamespaceDeclaration)  \\n        Console.WriteLine(\\\"{0} is a namespace declaration\\\", att.Name);  \\n    else  \\n        Console.WriteLine(\\\"{0} is not a namespace declaration\\\", att.Name);  \\n}  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <aw:Root xmlns:aw='http://www.adventure-works.com'  \\n                           aw:Att='content'/>  \\n  \\nFor Each att As XAttribute In root.Attributes()  \\n    If (att.IsNamespaceDeclaration) Then  \\n        Console.WriteLine(\\\"{0} is a namespace declaration\\\", att.Name)  \\n    Else  \\n        Console.WriteLine(\\\"{0} is not a namespace declaration\\\", att.Name)  \\n    End If  \\nNext  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                {http://www.w3.org/2000/xmlns/}aw is a namespace declaration  \\n{http://www.adventure-works.com}Att is not a namespace declaration  \\n```\"\n  syntax:\n    content: public bool IsNamespaceDeclaration { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this attribute is a namespace declaration; otherwise `false`.'\n  overload: System.Xml.Linq.XAttribute.IsNamespaceDeclaration*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.Name\n  commentId: P:System.Xml.Linq.XAttribute.Name\n  id: Name\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XAttribute.Name\n  fullName: XAttribute.Name\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets the expanded name of this attribute.\n  remarks: The expanded name returned by this property is in the form of `{namespace}localname`.\n  example:\n  - \"The following example creates an element with three attributes. It then uses this property to print out the name of each attribute. The example also shows creation of a new attribute using the name of an existing attribute.  \\n  \\n```csharp  \\n  \\n                XNamespace aw = \\\"http://www.adventure-works.com\\\";  \\nXElement root = new XElement(aw + \\\"Root\\\",  \\n    new XAttribute(XNamespace.Xmlns + \\\"aw\\\", \\\"http://www.adventure-works.com\\\"),  \\n    new XAttribute(aw + \\\"Att\\\", \\\"content\\\"),  \\n    new XAttribute(\\\"Att2\\\", \\\"different content\\\")  \\n);  \\n  \\nforeach (XAttribute att in root.Attributes())  \\n    Console.WriteLine(\\\"{0}={1}\\\", att.Name, att.Value);  \\nConsole.WriteLine(\\\"\\\");  \\n  \\nXElement newRoot = new XElement(aw + \\\"Root\\\",  \\n    from att in root.Attributes(\\\"Att2\\\")  \\n    select new XAttribute(att.Name, \\\"new content\\\"));  \\n  \\nforeach (XAttribute att in newRoot.Attributes())  \\n    Console.WriteLine(\\\"{0}={1}\\\", att.Name, att.Value);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = _   \\n    <aw:Root xmlns:aw='http://www.adventure-works.com'  \\n        aw:Att='content'  \\n        Att2='different content'/>  \\n  \\nFor Each att As XAttribute In root.Attributes()  \\n    Console.WriteLine(\\\"{0}={1}\\\", att.Name, att.Value)  \\nNext  \\nConsole.WriteLine(\\\"\\\")  \\n  \\nDim NewRoot As XElement = _  \\n<Root  \\n    <%= _  \\n        From att In root.Attributes(\\\"Att2\\\") _  \\n        Select New XAttribute(att.Name, \\\"new content\\\") _  \\n    %>>_  \\n</Root>  \\n  \\nFor Each att As XAttribute In NewRoot.Attributes()  \\n    Console.WriteLine(\\\"{0}={1}\\\", att.Name, att.Value)  \\nNext  \\n  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                {http://www.w3.org/2000/xmlns/}aw=http://www.adventure-works.com  \\n{http://www.adventure-works.com}Att=content  \\nAtt2=different content  \\n  \\nAtt2=new content  \\n```\"\n  syntax:\n    content: public System.Xml.Linq.XName Name { get; }\n    return:\n      type: System.Xml.Linq.XName\n      description: An <xref href=\"System.Xml.Linq.XName\"></xref> containing the name of this attribute.\n  overload: System.Xml.Linq.XAttribute.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.NextAttribute\n  commentId: P:System.Xml.Linq.XAttribute.NextAttribute\n  id: NextAttribute\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: NextAttribute\n  nameWithType: XAttribute.NextAttribute\n  fullName: XAttribute.NextAttribute\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets the next attribute of the parent element.\n  remarks: \"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the next attribute through this property, this property returns the attribute that was added after this attribute.  \\n  \\n If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`.\"\n  example:\n  - \"The following example shows how to iterate through the attributes of an element using this property.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XAttribute(\\\"Att3\\\", 3),  \\n    new XAttribute(\\\"Att4\\\", 4)  \\n);  \\n  \\nXAttribute att = root.FirstAttribute;  \\ndo {  \\n    Console.WriteLine(att);  \\n}  \\nwhile((att = att.NextAttribute) != null);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att1=\\\"1\\\" Att2=\\\"2\\\" Att3=\\\"3\\\" Att4=\\\"4\\\"/>  \\nDim att As XAttribute = root.FirstAttribute  \\nDim val As Boolean = True  \\nDo  \\n    Console.WriteLine(att)  \\n    att = att.NextAttribute  \\nLoop While (Not (att Is Nothing))  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                Att1=\\\"1\\\"  \\nAtt2=\\\"2\\\"  \\nAtt3=\\\"3\\\"  \\nAtt4=\\\"4\\\"  \\n```\"\n  syntax:\n    content: public System.Xml.Linq.XAttribute NextAttribute { get; }\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: An <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing the next attribute of the parent element.\n  overload: System.Xml.Linq.XAttribute.NextAttribute*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.NodeType\n  commentId: P:System.Xml.Linq.XAttribute.NodeType\n  id: NodeType\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XAttribute.NodeType\n  fullName: XAttribute.NodeType\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets the node type for this node.\n  remarks: Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.\n  example:\n  - \"The following example creates an attribute, and then displays the node type using this property.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att\\\", \\\"content\\\")  \\n);  \\n  \\nXAttribute att = root.FirstAttribute;  \\nConsole.WriteLine(att.NodeType);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att=\\\"content\\\"/>  \\nDim att As XAttribute = root.FirstAttribute  \\nConsole.WriteLine(att.NodeType.ToString)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\nAttribute  \\n```\"\n  syntax:\n    content: public override System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: The node type. For <xref href=\"System.Xml.Linq.XAttribute\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.Attribute\"></xref>.\n  overload: System.Xml.Linq.XAttribute.NodeType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int64})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int64})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Int64>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Int64>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Int64>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<long> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Int64}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Single})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Single})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Single>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Single>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Single>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<float> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Single}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.TimeSpan})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.TimeSpan})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<TimeSpan>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<TimeSpan>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<TimeSpan>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<TimeSpan> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt32})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt32})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<UInt32>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<UInt32>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<UInt32>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<uint> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.UInt32}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt64})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt64})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<UInt64>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<UInt64>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<UInt64>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<ulong> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.UInt64}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.TimeSpan)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.TimeSpan)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to TimeSpan)\n  nameWithType: XAttribute.op_Explicit(XAttribute to TimeSpan)\n  fullName: XAttribute.op_Explicit(XAttribute to TimeSpan)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static TimeSpan op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.TimeSpan\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.String)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.String)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to String)\n  nameWithType: XAttribute.op_Explicit(XAttribute to String)\n  fullName: XAttribute.op_Explicit(XAttribute to String)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static string op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int32})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int32})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Int32>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Int32>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Int32>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<int> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Int32}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.UInt32)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.UInt32)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to UInt32)\n  nameWithType: XAttribute.op_Explicit(XAttribute to UInt32)\n  fullName: XAttribute.op_Explicit(XAttribute to UInt32)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static uint op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.UInt32\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.UInt64)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.UInt64)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to UInt64)\n  nameWithType: XAttribute.op_Explicit(XAttribute to UInt64)\n  fullName: XAttribute.op_Explicit(XAttribute to UInt64)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ulong op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.UInt64\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Single)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Single)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Single)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Single)\n  fullName: XAttribute.op_Explicit(XAttribute to Single)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static float op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Single\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Guid})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Guid})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Guid>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Guid>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Guid>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<Guid> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Guid}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Decimal})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Decimal})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Decimal>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Decimal>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Decimal>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<decimal> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Decimal}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Decimal)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Decimal)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Decimal)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Decimal)\n  fullName: XAttribute.op_Explicit(XAttribute to Decimal)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static decimal op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTimeOffset})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTimeOffset})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<DateTimeOffset>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<DateTimeOffset>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<DateTimeOffset>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<DateTimeOffset> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.DateTimeOffset}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTime})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTime})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<DateTime>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<DateTime>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<DateTime>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<DateTime> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.DateTime}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Boolean})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Boolean})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Boolean>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Boolean>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Boolean>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<bool> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Boolean}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Int64)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Int64)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Int64)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Int64)\n  fullName: XAttribute.op_Explicit(XAttribute to Int64)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static long op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Int64\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Int32)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Int32)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Int32)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Int32)\n  fullName: XAttribute.op_Explicit(XAttribute to Int32)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static int op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Guid)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Guid)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Guid)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Guid)\n  fullName: XAttribute.op_Explicit(XAttribute to Guid)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Guid op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Guid\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Double)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Double)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Double)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Double)\n  fullName: XAttribute.op_Explicit(XAttribute to Double)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static double op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Double\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Double})\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Double})\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Nullable<Double>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Double>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Double>)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static Nullable<double> op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Nullable{System.Double}\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.DateTimeOffset)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.DateTimeOffset)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to DateTimeOffset)\n  nameWithType: XAttribute.op_Explicit(XAttribute to DateTimeOffset)\n  fullName: XAttribute.op_Explicit(XAttribute to DateTimeOffset)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static DateTimeOffset op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.DateTimeOffset\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.DateTime)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.DateTime)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to DateTime)\n  nameWithType: XAttribute.op_Explicit(XAttribute to DateTime)\n  fullName: XAttribute.op_Explicit(XAttribute to DateTime)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static DateTime op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.DateTime\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Boolean)\n  commentId: M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean\n  id: op_Explicit(System.Xml.Linq.XAttribute to System.Boolean)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: op_Explicit(XAttribute to Boolean)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Boolean)\n  fullName: XAttribute.op_Explicit(XAttribute to Boolean)\n  type: Operator\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static bool op_Explicit (System.Xml.Linq.XAttribute attribute);\n    parameters:\n    - id: attribute\n      type: System.Xml.Linq.XAttribute\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Xml.Linq.XAttribute.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.PreviousAttribute\n  commentId: P:System.Xml.Linq.XAttribute.PreviousAttribute\n  id: PreviousAttribute\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: PreviousAttribute\n  nameWithType: XAttribute.PreviousAttribute\n  fullName: XAttribute.PreviousAttribute\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets the previous attribute of the parent element.\n  remarks: \"Attributes are maintained in the XML tree in the order that they were added to the element. When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted. When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.  \\n  \\n If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`.  \\n  \\n The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects. This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element. Therefore, using this property might affect your performance.\"\n  example:\n  - \"The following example shows how to iterate through the attributes of an element using this property.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", 1),  \\n    new XAttribute(\\\"Att2\\\", 2),  \\n    new XAttribute(\\\"Att3\\\", 3),  \\n    new XAttribute(\\\"Att4\\\", 4)  \\n);  \\nXAttribute att = root.LastAttribute;  \\ndo {  \\n    Console.WriteLine(att);  \\n}  \\nwhile((att = att.PreviousAttribute) != null);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att1=\\\"1\\\" Att2=\\\"2\\\" Att3=\\\"3\\\" Att4=\\\"4\\\"/>  \\nDim att As XAttribute = root.LastAttribute  \\nDim val As Boolean = True  \\nDo  \\n    Console.WriteLine(att)  \\n    att = att.PreviousAttribute  \\nLoop While (Not (att Is Nothing))  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                Att4=\\\"4\\\"  \\nAtt3=\\\"3\\\"  \\nAtt2=\\\"2\\\"  \\nAtt1=\\\"1\\\"  \\n```\"\n  syntax:\n    content: public System.Xml.Linq.XAttribute PreviousAttribute { get; }\n    return:\n      type: System.Xml.Linq.XAttribute\n      description: An <xref href=\"System.Xml.Linq.XAttribute\"></xref> containing the previous attribute of the parent element.\n  overload: System.Xml.Linq.XAttribute.PreviousAttribute*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.Remove\n  commentId: M:System.Xml.Linq.XAttribute.Remove\n  id: Remove\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: Remove()\n  nameWithType: XAttribute.Remove()\n  fullName: XAttribute.Remove()\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Removes this attribute from its parent element.\n  remarks: \"You can use this method to modify an XML tree. This method will cause events to occur.  \\n  \\n There are many scenarios in which you might want to remove a set of attributes. In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set. In practical terms, this means that you should not iterate over a set of attributes and remove them. Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method. Then you can iterate over the list, removing the attributes. For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).  \\n  \\n Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=fullName> method. This method copies the attributes to a list, then iterates over the list, removing the attributes.\"\n  example:\n  - \"The following example creates an element with three attributes. It then removes one of the attributes.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", \\\"content1\\\"),  \\n    new XAttribute(\\\"Att2\\\", \\\"content2\\\"),  \\n    new XAttribute(\\\"Att3\\\", \\\"content3\\\")  \\n);  \\nXAttribute att = root.Attribute(\\\"Att2\\\");  \\natt.Remove();  \\nConsole.WriteLine(root);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att1=\\\"content1\\\" Att2=\\\"content2\\\" Att3=\\\"content3\\\"/>  \\nDim att As XAttribute = root.Attribute(\\\"Att2\\\")  \\natt.Remove()  \\nConsole.WriteLine(root)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n<Root Att1=\\\"content1\\\" Att3=\\\"content3\\\" />  \\n```\"\n  syntax:\n    content: public void Remove ();\n    parameters: []\n  overload: System.Xml.Linq.XAttribute.Remove*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The parent element is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.SetValue(System.Object)\n  commentId: M:System.Xml.Linq.XAttribute.SetValue(System.Object)\n  id: SetValue(System.Object)\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: SetValue(Object)\n  nameWithType: XAttribute.SetValue(Object)\n  fullName: XAttribute.SetValue(Object)\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Sets the value of this attribute.\n  remarks: \"The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.  \\n  \\n It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.  \\n  \\n This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.\"\n  example:\n  - \"The following example creates an element with several attributes. It then changes the contents of one of the attributes.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", \\\"content1\\\"),  \\n    new XAttribute(\\\"Att2\\\", \\\"content2\\\"),  \\n    new XAttribute(\\\"Att3\\\", \\\"content3\\\")  \\n);  \\nXAttribute att = root.Attribute(\\\"Att2\\\");  \\natt.SetValue(\\\"new content\\\");  \\nConsole.WriteLine(root);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att1=\\\"content1\\\" Att2=\\\"content2\\\" Att3=\\\"content3\\\"/>  \\nDim att As XAttribute = root.Attribute(\\\"Att2\\\")  \\natt.SetValue(\\\"new content\\\")  \\nConsole.WriteLine(root)  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n<Root Att1=\\\"content1\\\" Att2=\\\"new content\\\" Att3=\\\"content3\\\" />  \\n```\"\n  syntax:\n    content: public void SetValue (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to assign to this attribute.\n  overload: System.Xml.Linq.XAttribute.SetValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>value</code> is an <xref href=\"System.Xml.Linq.XObject\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.ToString\n  commentId: M:System.Xml.Linq.XAttribute.ToString\n  id: ToString\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: XAttribute.ToString()\n  fullName: XAttribute.ToString()\n  type: Method\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Converts the current <xref href=\"System.Xml.Linq.XAttribute\"></xref> object to a string representation.\n  remarks: \"This method returns a string in the form of `AttributeName=\\\"content\\\"`.  \\n  \\n> [!WARNING]\\n>  When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.\"\n  example:\n  - \"The following example creates an element with several attributes. It then gets an attribute and displays it and its content by calling this method.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", \\\"content1\\\"),  \\n    new XAttribute(\\\"Att2\\\", \\\"content2\\\"),  \\n    new XAttribute(\\\"Att3\\\", \\\"content3\\\")  \\n);  \\nXAttribute att = root.Attribute(\\\"Att2\\\");  \\nConsole.WriteLine(att.ToString());  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att1=\\\"content1\\\" Att2=\\\"content2\\\" Att3=\\\"content3\\\"/>  \\nDim att As XAttribute = root.Attribute(\\\"Att2\\\")  \\nConsole.WriteLine(att.ToString())  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\nAtt2=\\\"content2\\\"  \\n```\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the XML text representation of an attribute and its value.\n  overload: System.Xml.Linq.XAttribute.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Linq.XAttribute.Value\n  commentId: P:System.Xml.Linq.XAttribute.Value\n  id: Value\n  parent: System.Xml.Linq.XAttribute\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XAttribute.Value\n  fullName: XAttribute.Value\n  type: Property\n  assemblies:\n  - System.Xml.XDocument\n  - System.Xml.Linq\n  - netstandard\n  namespace: System.Xml.Linq\n  summary: Gets or sets the value of this attribute.\n  remarks: \"You can use this property to get or set the value of an attribute.  \\n  \\n Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.  \\n  \\n If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>. If the attribute does not exist, then the nullable type is set to `null`. Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.\"\n  example:\n  - \"The following example creates an element with an attribute. It then retrieves the value of the attribute, and then sets it.  \\n  \\n Note that the Visual Basic example uses the XML attribute property.  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att\\\", \\\"content\\\")  \\n);  \\nXAttribute att = root.FirstAttribute;  \\nConsole.WriteLine(att.Value);  \\natt.Value = \\\"new text\\\";  \\nConsole.WriteLine(att.Value);  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att=\\\"content\\\"/>  \\nConsole.WriteLine(root.@Att)  \\nroot.@Att = \\\"new text\\\"  \\nConsole.WriteLine(root.@Att)  \\n  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                content  \\nnew text  \\n```  \\n  \\n The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:  \\n  \\n```csharp  \\n  \\n                XElement root = new XElement(\\\"Root\\\",  \\n    new XAttribute(\\\"Att1\\\", \\\"attribute 1 content\\\"),  \\n    new XAttribute(\\\"Att2\\\", \\\"2\\\")  \\n);  \\n  \\n// The following assignments demonstrate why it is easier to use  \\n// casting when the attribute might or might not exist.  \\n  \\nstring c1 = (string)root.Attribute(\\\"Att1\\\");  \\nConsole.WriteLine(\\\"c1:{0}\\\", c1 == null ? \\\"attribute does not exist\\\" : c1);  \\n  \\nint? c2 = (int?)root.Attribute(\\\"Att2\\\");  \\nConsole.WriteLine(\\\"c2:{0}\\\", c2 == null ? \\\"attribute does not exist\\\" : c2.ToString());  \\n  \\nstring c3 = (string)root.Attribute(\\\"Att3\\\");  \\nConsole.WriteLine(\\\"c3:{0}\\\", c3 == null ? \\\"attribute does not exist\\\" : c3);  \\n  \\nint? c4 = (int?)root.Attribute(\\\"Att4\\\");  \\nConsole.WriteLine(\\\"c4:{0}\\\", c4 == null ? \\\"attribute does not exist\\\" : c4.ToString());  \\n  \\nConsole.WriteLine();  \\n  \\n// The following assignments show the necessary code when using  \\n// the value property when the attribute might or might not exist.  \\n  \\nXAttribute att1 = root.Attribute(\\\"Att1\\\");  \\nstring v1;  \\nif (att1 == null)  \\n    v1 = null;  \\nelse  \\n    v1 = att1.Value;  \\nConsole.WriteLine(\\\"v1:{0}\\\", v1 == null ? \\\"attribute does not exist\\\" : v1);  \\n  \\nXAttribute att2 = root.Attribute(\\\"Att2\\\");  \\nint? v2;  \\nif (att2 == null)  \\n    v2 = null;  \\nelse  \\n    v2 = Int32.Parse(att2.Value);  \\nConsole.WriteLine(\\\"v2:{0}\\\", v2 == null ? \\\"attribute does not exist\\\" : v2.ToString());  \\n  \\nXAttribute att3 = root.Attribute(\\\"Att3\\\");  \\nstring v3;  \\nif (att3 == null)  \\n    v3 = null;  \\nelse  \\n    v3 = att3.Value;  \\nConsole.WriteLine(\\\"v3:{0}\\\", v3 == null ? \\\"attribute does not exist\\\" : v3);  \\n  \\nXAttribute att4 = root.Attribute(\\\"Att4\\\");  \\nint? v4;  \\nif (att4 == null)  \\n    v4 = null;  \\nelse  \\n    v4 = Int32.Parse(att4.Value);  \\nConsole.WriteLine(\\\"v4:{0}\\\", v4 == null ? \\\"attribute does not exist\\\" : v4.ToString());  \\n```  \\n  \\n```vb  \\n  \\n                Dim root As XElement = <Root Att1=\\\"attribute 1 content\\\" Att2=\\\"2\\\"/>  \\n  \\n' The following assignments demonstrate why it is easier to use  \\n' casting when the attribute might or might not exist.  \\n  \\nDim c1 As String = CStr(root.Attribute(\\\"Att1\\\"))  \\nConsole.WriteLine(\\\"c1:{0}\\\", IIf(c1 Is Nothing, \\\"attribute does not exist\\\", c1))  \\n  \\nDim c2 As Nullable(Of Integer) = CType(root.Attribute(\\\"Att2\\\"), Nullable(Of Integer))  \\nConsole.WriteLine(\\\"c2:{0}\\\", IIf(c2.HasValue, c2, \\\"attribute does not exist\\\"))  \\n  \\nDim c3 As String = CStr(root.Attribute(\\\"Att3\\\"))  \\nConsole.WriteLine(\\\"c3:{0}\\\", IIf(c3 Is Nothing, \\\"attribute does not exist\\\", c3))  \\n  \\nDim c4 As Nullable(Of Integer) = CType(root.Attribute(\\\"Att4\\\"), Nullable(Of Integer))  \\nConsole.WriteLine(\\\"c4:{0}\\\", IIf(c4.HasValue, c4, \\\"attribute does not exist\\\"))  \\n  \\nConsole.WriteLine()  \\n  \\n' The following assignments show the necessary code when using  \\n' the value property when the attribute might or might not exist.  \\n  \\nDim att1 As XAttribute = root.Attribute(\\\"Att1\\\")  \\nDim v1 As String  \\nIf att1 Is Nothing Then  \\n    v1 = Nothing  \\nElse  \\n    v1 = att1.Value  \\nEnd If  \\n  \\nConsole.WriteLine(\\\"v1:{0}\\\", IIf(v1 Is Nothing, \\\"attribute does not exist\\\", v1))  \\n  \\nDim att2 As XAttribute = root.Attribute(\\\"Att2\\\")  \\nDim v2 As Nullable(Of Integer)  \\nIf att2 Is Nothing Then  \\n    v2 = Nothing  \\nElse  \\n    v2 = Int32.Parse(att2.Value)  \\nEnd If  \\n  \\nConsole.WriteLine(\\\"v2:{0}\\\", IIf(v2.HasValue, v2, \\\"attribute does not exist\\\"))  \\n  \\nDim att3 As XAttribute = root.Attribute(\\\"Att3\\\")  \\nDim v3 As String  \\nIf att3 Is Nothing Then  \\n    v3 = Nothing  \\nElse  \\n    v3 = att3.Value  \\nEnd If  \\n  \\nConsole.WriteLine(\\\"v3:{0}\\\", IIf(v3 Is Nothing, \\\"attribute does not exist\\\", v3))  \\n  \\nDim att4 As XAttribute = root.Attribute(\\\"Att4\\\")  \\nDim v4 As Nullable(Of Integer)  \\nIf att4 Is Nothing Then  \\n    v4 = Nothing  \\nElse  \\n    v4 = Int32.Parse(att4.Value)  \\nEnd If  \\n  \\nConsole.WriteLine(\\\"v4:{0}\\\", IIf(v4.HasValue, v4, \\\"attribute does not exist\\\"))  \\n```  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\n                c1:attribute 1 content  \\nc2:2  \\nc3:attribute does not exist  \\nc4:attribute does not exist  \\n  \\nv1:attribute 1 content  \\nv2:2  \\nv3:attribute does not exist  \\nv4:attribute does not exist  \\n```\"\n  syntax:\n    content: public string Value { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the value of this attribute.\n  overload: System.Xml.Linq.XAttribute.Value*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: When setting, the <code>value</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.Linq.XObject\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XObject\n  nameWithType: XObject\n  fullName: System.Xml.Linq.XObject\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: XAttribute(XAttribute)\n  nameWithType: XAttribute.XAttribute(XAttribute)\n  fullName: XAttribute.XAttribute(XAttribute)\n- uid: System.Xml.Linq.XAttribute\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XAttribute\n  nameWithType: XAttribute\n  fullName: System.Xml.Linq.XAttribute\n- uid: System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: XAttribute(XName, Object)\n  nameWithType: XAttribute.XAttribute(XName, Object)\n  fullName: XAttribute.XAttribute(XName, Object)\n- uid: System.Xml.Linq.XName\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XName\n  nameWithType: XName\n  fullName: System.Xml.Linq.XName\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xml.Linq.XAttribute.EmptySequence\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: EmptySequence\n  nameWithType: XAttribute.EmptySequence\n  fullName: XAttribute.EmptySequence\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<XAttribute>\n  nameWithType: IEnumerable<XAttribute>\n  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XAttribute\n    name: XAttribute\n    nameWithType: XAttribute\n    fullName: System.Xml.Linq.XAttribute\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.IsNamespaceDeclaration\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: IsNamespaceDeclaration\n  nameWithType: XAttribute.IsNamespaceDeclaration\n  fullName: XAttribute.IsNamespaceDeclaration\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Linq.XAttribute.Name\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: Name\n  nameWithType: XAttribute.Name\n  fullName: XAttribute.Name\n- uid: System.Xml.Linq.XAttribute.NextAttribute\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: NextAttribute\n  nameWithType: XAttribute.NextAttribute\n  fullName: XAttribute.NextAttribute\n- uid: System.Xml.Linq.XAttribute.NodeType\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: NodeType\n  nameWithType: XAttribute.NodeType\n  fullName: XAttribute.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int64})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Int64>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Int64>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Int64>)\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.Int64\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Nullable{System.Int64}\n  parent: System\n  isExternal: false\n  name: Nullable<Int64>\n  nameWithType: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    nameWithType: Int64\n    fullName: System.Int64\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Single})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Single>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Single>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Single>)\n- uid: System.Single\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Nullable{System.Single}\n  parent: System\n  isExternal: false\n  name: Nullable<Single>\n  nameWithType: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    nameWithType: Single\n    fullName: System.Single\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.TimeSpan})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<TimeSpan>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<TimeSpan>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<TimeSpan>)\n- uid: System.TimeSpan\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  isExternal: false\n  name: Nullable<TimeSpan>\n  nameWithType: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt32})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<UInt32>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<UInt32>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<UInt32>)\n- uid: System.UInt32\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Nullable{System.UInt32}\n  parent: System\n  isExternal: false\n  name: Nullable<UInt32>\n  nameWithType: Nullable<UInt32>\n  fullName: System.Nullable<System.UInt32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.UInt32\n    name: UInt32\n    nameWithType: UInt32\n    fullName: System.UInt32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.UInt64})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<UInt64>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<UInt64>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<UInt64>)\n- uid: System.UInt64\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Nullable{System.UInt64}\n  parent: System\n  isExternal: false\n  name: Nullable<UInt64>\n  nameWithType: Nullable<UInt64>\n  fullName: System.Nullable<System.UInt64>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.UInt64\n    name: UInt64\n    nameWithType: UInt64\n    fullName: System.UInt64\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.TimeSpan)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to TimeSpan)\n  nameWithType: XAttribute.op_Explicit(XAttribute to TimeSpan)\n  fullName: XAttribute.op_Explicit(XAttribute to TimeSpan)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.String)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to String)\n  nameWithType: XAttribute.op_Explicit(XAttribute to String)\n  fullName: XAttribute.op_Explicit(XAttribute to String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Int32})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Int32>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Int32>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Int32>)\n- uid: System.Int32\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.UInt32)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to UInt32)\n  nameWithType: XAttribute.op_Explicit(XAttribute to UInt32)\n  fullName: XAttribute.op_Explicit(XAttribute to UInt32)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.UInt64)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to UInt64)\n  nameWithType: XAttribute.op_Explicit(XAttribute to UInt64)\n  fullName: XAttribute.op_Explicit(XAttribute to UInt64)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Single)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Single)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Single)\n  fullName: XAttribute.op_Explicit(XAttribute to Single)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Guid})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Guid>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Guid>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Guid>)\n- uid: System.Guid\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Nullable{System.Guid}\n  parent: System\n  isExternal: false\n  name: Nullable<Guid>\n  nameWithType: Nullable<Guid>\n  fullName: System.Nullable<System.Guid>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: System.Guid\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Decimal})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Decimal>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Decimal>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Decimal>)\n- uid: System.Decimal\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: Nullable<Decimal>\n  nameWithType: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    nameWithType: Decimal\n    fullName: System.Decimal\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Decimal)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Decimal)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Decimal)\n  fullName: XAttribute.op_Explicit(XAttribute to Decimal)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTimeOffset})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<DateTimeOffset>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<DateTimeOffset>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<DateTimeOffset>)\n- uid: System.DateTimeOffset\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Nullable{System.DateTimeOffset}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTimeOffset>\n  nameWithType: Nullable<DateTimeOffset>\n  fullName: System.Nullable<System.DateTimeOffset>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    nameWithType: DateTimeOffset\n    fullName: System.DateTimeOffset\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.DateTime})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<DateTime>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<DateTime>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<DateTime>)\n- uid: System.DateTime\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Nullable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: Nullable<DateTime>\n  nameWithType: Nullable<DateTime>\n  fullName: System.Nullable<System.DateTime>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTime\n    name: DateTime\n    nameWithType: DateTime\n    fullName: System.DateTime\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Boolean})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Boolean>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Boolean>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Boolean>)\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Int64)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Int64)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Int64)\n  fullName: XAttribute.op_Explicit(XAttribute to Int64)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Int32)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Int32)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Int32)\n  fullName: XAttribute.op_Explicit(XAttribute to Int32)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Guid)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Guid)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Guid)\n  fullName: XAttribute.op_Explicit(XAttribute to Guid)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Double)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Double)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Double)\n  fullName: XAttribute.op_Explicit(XAttribute to Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Nullable{System.Double})\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Nullable<Double>)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Nullable<Double>)\n  fullName: XAttribute.op_Explicit(XAttribute to Nullable<Double>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: System.Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.DateTimeOffset)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to DateTimeOffset)\n  nameWithType: XAttribute.op_Explicit(XAttribute to DateTimeOffset)\n  fullName: XAttribute.op_Explicit(XAttribute to DateTimeOffset)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.DateTime)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to DateTime)\n  nameWithType: XAttribute.op_Explicit(XAttribute to DateTime)\n  fullName: XAttribute.op_Explicit(XAttribute to DateTime)\n- uid: System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute to System.Boolean)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit(XAttribute to Boolean)\n  nameWithType: XAttribute.op_Explicit(XAttribute to Boolean)\n  fullName: XAttribute.op_Explicit(XAttribute to Boolean)\n- uid: System.Xml.Linq.XAttribute.PreviousAttribute\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: PreviousAttribute\n  nameWithType: XAttribute.PreviousAttribute\n  fullName: XAttribute.PreviousAttribute\n- uid: System.Xml.Linq.XAttribute.Remove\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: Remove()\n  nameWithType: XAttribute.Remove()\n  fullName: XAttribute.Remove()\n- uid: System.Xml.Linq.XAttribute.SetValue(System.Object)\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: SetValue(Object)\n  nameWithType: XAttribute.SetValue(Object)\n  fullName: XAttribute.SetValue(Object)\n- uid: System.Xml.Linq.XAttribute.ToString\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: ToString()\n  nameWithType: XAttribute.ToString()\n  fullName: XAttribute.ToString()\n- uid: System.Xml.Linq.XAttribute.Value\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: Value\n  nameWithType: XAttribute.Value\n  fullName: XAttribute.Value\n- uid: System.Xml.Linq.XAttribute.#ctor*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: XAttribute\n  nameWithType: XAttribute.XAttribute\n  fullName: XAttribute.XAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.EmptySequence*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: EmptySequence\n  nameWithType: XAttribute.EmptySequence\n  fullName: XAttribute.EmptySequence\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.IsNamespaceDeclaration*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: IsNamespaceDeclaration\n  nameWithType: XAttribute.IsNamespaceDeclaration\n  fullName: XAttribute.IsNamespaceDeclaration\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.Name*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: Name\n  nameWithType: XAttribute.Name\n  fullName: XAttribute.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.NextAttribute*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: NextAttribute\n  nameWithType: XAttribute.NextAttribute\n  fullName: XAttribute.NextAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.NodeType*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: NodeType\n  nameWithType: XAttribute.NodeType\n  fullName: XAttribute.NodeType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.op_Explicit*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: op_Explicit\n  nameWithType: XAttribute.op_Explicit\n  fullName: XAttribute.op_Explicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.PreviousAttribute*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: PreviousAttribute\n  nameWithType: XAttribute.PreviousAttribute\n  fullName: XAttribute.PreviousAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.Remove*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: Remove\n  nameWithType: XAttribute.Remove\n  fullName: XAttribute.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.SetValue*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: SetValue\n  nameWithType: XAttribute.SetValue\n  fullName: XAttribute.SetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.ToString*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: ToString\n  nameWithType: XAttribute.ToString\n  fullName: XAttribute.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Xml.Linq.XAttribute.Value*\n  parent: System.Xml.Linq.XAttribute\n  isExternal: false\n  name: Value\n  nameWithType: XAttribute.Value\n  fullName: XAttribute.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Linq/XAttribute.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: AddAnnotation(Object)\n  nameWithType: XObject.AddAnnotation(Object)\n  fullName: XObject.AddAnnotation(Object)\n- uid: System.Xml.Linq.XObject.Annotation(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation(Type)\n  nameWithType: XObject.Annotation(Type)\n  fullName: XObject.Annotation(Type)\n- uid: System.Xml.Linq.XObject.Annotation``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotation<T>()\n  nameWithType: XObject.Annotation<T>()\n  fullName: XObject.Annotation<T>()\n- uid: System.Xml.Linq.XObject.Annotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations(Type)\n  nameWithType: XObject.Annotations(Type)\n  fullName: XObject.Annotations(Type)\n- uid: System.Xml.Linq.XObject.Annotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Annotations<T>()\n  nameWithType: XObject.Annotations<T>()\n  fullName: XObject.Annotations<T>()\n- uid: System.Xml.Linq.XObject.BaseUri\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: BaseUri\n  nameWithType: XObject.BaseUri\n  fullName: XObject.BaseUri\n- uid: System.Xml.Linq.XObject.Changed\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changed\n  nameWithType: XObject.Changed\n  fullName: XObject.Changed\n- uid: System.Xml.Linq.XObject.Changing\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Changing\n  nameWithType: XObject.Changing\n  fullName: XObject.Changing\n- uid: System.Xml.Linq.XObject.Document\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Document\n  nameWithType: XObject.Document\n  fullName: XObject.Document\n- uid: System.Xml.Linq.XObject.Parent\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: Parent\n  nameWithType: XObject.Parent\n  fullName: XObject.Parent\n- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations(Type)\n  nameWithType: XObject.RemoveAnnotations(Type)\n  fullName: XObject.RemoveAnnotations(Type)\n- uid: System.Xml.Linq.XObject.RemoveAnnotations``1\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: RemoveAnnotations<T>()\n  nameWithType: XObject.RemoveAnnotations<T>()\n  fullName: XObject.RemoveAnnotations<T>()\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.HasLineInfo()\n  nameWithType: XObject.IXmlLineInfo.HasLineInfo()\n  fullName: XObject.IXmlLineInfo.HasLineInfo()\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.LineNumber\n  nameWithType: XObject.IXmlLineInfo.LineNumber\n  fullName: XObject.IXmlLineInfo.LineNumber\n- uid: System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition\n  parent: System.Xml.Linq.XObject\n  isExternal: false\n  name: IXmlLineInfo.LinePosition\n  nameWithType: XObject.IXmlLineInfo.LinePosition\n  fullName: XObject.IXmlLineInfo.LinePosition\n- uid: System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)\n  parent: System.Xml.Schema.Extensions\n  isExternal: false\n  name: GetSchemaInfo(XAttribute)\n  nameWithType: Extensions.GetSchemaInfo(XAttribute)\n  fullName: Extensions.GetSchemaInfo(XAttribute)\n- uid: System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)\n  parent: System.Xml.Schema.Extensions\n  isExternal: false\n  name: Validate(XAttribute, XmlSchemaObject, XmlSchemaSet, ValidationEventHandler)\n  nameWithType: Extensions.Validate(XAttribute, XmlSchemaObject, XmlSchemaSet, ValidationEventHandler)\n  fullName: Extensions.Validate(XAttribute, XmlSchemaObject, XmlSchemaSet, ValidationEventHandler)\n- uid: System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)\n  parent: System.Xml.Schema.Extensions\n  isExternal: false\n  name: Validate(XAttribute, XmlSchemaObject, XmlSchemaSet, ValidationEventHandler, Boolean)\n  nameWithType: Extensions.Validate(XAttribute, XmlSchemaObject, XmlSchemaSet, ValidationEventHandler, Boolean)\n  fullName: Extensions.Validate(XAttribute, XmlSchemaObject, XmlSchemaSet, ValidationEventHandler, Boolean)\n"}