{"nodes":[{"content":"Performs a cryptographic transformation of data using the Rijndael algorithm. This class cannot be inherited.","nodes":[{"pos":[0,109],"content":"Performs a cryptographic transformation of data using the Rijndael algorithm. This class cannot be inherited.","nodes":[{"content":"Performs a cryptographic transformation of data using the Rijndael algorithm. This class cannot be inherited.","pos":[0,109],"nodes":[{"content":"Performs a cryptographic transformation of data using the Rijndael algorithm.","pos":[0,77]},{"content":"This class cannot be inherited.","pos":[78,109]}]}]}],"pos":[1298,1408],"yaml":true},{"content":"> [!NOTE]\n>  Using this class is not recommended. A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object. The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly. For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class.  \n  \n Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object.  To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object.","nodes":[{"pos":[2,460],"content":"[!NOTE]\n Using this class is not recommended. A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object. The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly. For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class.","leadings":["","> "],"nodes":[{"content":" Using this class is not recommended. A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object. The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly. For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class.","pos":[8,456],"nodes":[{"content":"Using this class is not recommended.","pos":[1,37]},{"content":"A better practice is to use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> with a <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object.","pos":[38,181],"source":" A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object handles the padding issues that can occur when using <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> directly.","pos":[182,365],"source":" The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly."},{"content":"For an example, see the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class.","pos":[366,448],"source":" For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class."}]}]},{"pos":[467,1065],"content":"Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object.  To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object.","nodes":[{"content":"Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object.  To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object.","pos":[0,598],"nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A&gt;</ph> methods return an instance of the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> class that is initialized with the key information of the current <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> object.","pos":[0,375],"source":"Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object."},{"content":"To encrypt or decrypt data using the Rijndael algorithm, pass the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> object returned by these methods to a <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object.","pos":[377,598],"source":"  To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object."}]}]}],"pos":[1419,2490],"yaml":true,"extradata":"MT"},{"content":"Gets the block size.","nodes":[{"pos":[0,20],"content":"Gets the block size.","nodes":[{"content":"Gets the block size.","pos":[0,20]}]}],"pos":[4306,4327],"yaml":true},{"content":"The size of the data blocks in bytes.","nodes":[{"pos":[0,37],"content":"The size of the data blocks in bytes.","nodes":[{"content":"The size of the data blocks in bytes.","pos":[0,37]}]}],"pos":[4441,4479],"yaml":true},{"content":"Gets a value indicating whether the current transform can be reused.","nodes":[{"pos":[0,68],"content":"Gets a value indicating whether the current transform can be reused.","nodes":[{"content":"Gets a value indicating whether the current transform can be reused.","pos":[0,68]}]}],"pos":[5764,5833],"yaml":true},{"content":"Always `true`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`true`</ph>.","source":"Always `true`."}],"pos":[5953,5968],"yaml":true},{"content":"Gets a value indicating whether multiple blocks can be transformed.","nodes":[{"pos":[0,67],"content":"Gets a value indicating whether multiple blocks can be transformed.","nodes":[{"content":"Gets a value indicating whether multiple blocks can be transformed.","pos":[0,67]}]}],"pos":[7310,7378],"yaml":true},{"content":"`true` if multiple blocks can be transformed; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if multiple blocks can be transformed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if multiple blocks can be transformed; otherwise, `false`."}],"pos":[7507,7575],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> class.","nodes":[{"pos":[0,116],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> class."}],"pos":[8804,8921],"yaml":true},{"content":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> class.  \n  \n Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.RijndaelManagedTransform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).","nodes":[{"pos":[0,100],"content":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> class.","nodes":[{"content":"This method is a simple call to <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;</ph> class.","pos":[0,100],"source":"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> class."}]},{"pos":[107,382],"content":"Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.RijndaelManagedTransform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).","nodes":[{"content":"Calling <ph id=\"ph1\">`Dispose`</ph> allows the resources used by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> to be reallocated for other purposes.","pos":[0,149],"source":"Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.RijndaelManagedTransform> to be reallocated for other purposes."},{"content":"For more information about <ph id=\"ph1\">`Dispose`</ph>, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.","pos":[150,275],"source":" For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md)."}]}],"pos":[8932,9319],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> class.","nodes":[{"pos":[0,140],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> class."}],"pos":[10603,10744],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RijndaelManagedTransform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.RijndaelManagedTransform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RijndaelManagedTransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RijndaelManagedTransform> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method.","nodes":[{"pos":[0,481],"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RijndaelManagedTransform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.RijndaelManagedTransform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RijndaelManagedTransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RijndaelManagedTransform> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>.","pos":[0,108],"source":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RijndaelManagedTransform>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> in an unusable state.","pos":[109,223],"source":" The `Dispose` method leaves the <xref:System.Security.Cryptography.RijndaelManagedTransform> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> was occupying.","pos":[224,481],"source":" After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RijndaelManagedTransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RijndaelManagedTransform> was occupying."}]},{"pos":[488,693],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[701,1023],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method.","pos":[8,320],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>.","pos":[1,130],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[131,312],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method."}]}]}],"pos":[10755,11786],"yaml":true,"extradata":"MT"},{"content":"Gets the input block size.","nodes":[{"pos":[0,26],"content":"Gets the input block size.","nodes":[{"content":"Gets the input block size.","pos":[0,26]}]}],"pos":[13112,13139],"yaml":true},{"content":"The size of the input data blocks in bytes.","nodes":[{"pos":[0,43],"content":"The size of the input data blocks in bytes.","nodes":[{"content":"The size of the input data blocks in bytes.","pos":[0,43]}]}],"pos":[13253,13297],"yaml":true},{"content":"Gets the output block size.","nodes":[{"pos":[0,27],"content":"Gets the output block size.","nodes":[{"content":"Gets the output block size.","pos":[0,27]}]}],"pos":[14570,14598],"yaml":true},{"content":"The size of the output data blocks in bytes.","nodes":[{"pos":[0,44],"content":"The size of the output data blocks in bytes.","nodes":[{"content":"The size of the output data blocks in bytes.","pos":[0,44]}]}],"pos":[14713,14758],"yaml":true},{"content":"Resets the internal state of <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> so it can be used again to do a different encryption or decryption.","nodes":[{"pos":[0,171],"content":"Resets the internal state of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"&gt;&lt;/xref&gt;</ph> so it can be used again to do a different encryption or decryption.","source":"Resets the internal state of <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> so it can be used again to do a different encryption or decryption."}],"pos":[15976,16148],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>. The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called. You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case.","nodes":[{"pos":[0,631],"content":"The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>. The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called. You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case.","nodes":[{"content":"The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>. The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called. You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case.","pos":[0,631],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> method is called automatically when you call <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A&gt;</ph>.","pos":[0,203],"source":"The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.","pos":[204,378],"source":" The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted."},{"content":"In this case, an exception is thrown and <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> is not called.","pos":[379,504],"source":" In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called."},{"content":"You can choose to manually call the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> method in this case.","pos":[505,631],"source":" You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case."}]}]}],"pos":[16159,16791],"yaml":true,"extradata":"MT"},{"content":"Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.","nodes":[{"pos":[0,166],"content":"Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.","nodes":[{"content":"Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.","pos":[0,166]}]}],"pos":[18426,18593],"yaml":true},{"content":"The input to perform the operation on.","nodes":[{"pos":[0,38],"content":"The input to perform the operation on.","nodes":[{"content":"The input to perform the operation on.","pos":[0,38]}]}],"pos":[18819,18858],"yaml":true},{"content":"The offset into the input byte array to begin using data from.","nodes":[{"pos":[0,62],"content":"The offset into the input byte array to begin using data from.","nodes":[{"content":"The offset into the input byte array to begin using data from.","pos":[0,62]}]}],"pos":[18924,18987],"yaml":true},{"content":"The number of bytes in the input byte array to use as data.","nodes":[{"pos":[0,59],"content":"The number of bytes in the input byte array to use as data.","nodes":[{"content":"The number of bytes in the input byte array to use as data.","pos":[0,59]}]}],"pos":[19052,19112],"yaml":true},{"content":"The output to write the data to.","nodes":[{"pos":[0,32],"content":"The output to write the data to.","nodes":[{"content":"The output to write the data to.","pos":[0,32]}]}],"pos":[19180,19213],"yaml":true},{"content":"The offset into the output byte array to begin writing data from.","nodes":[{"pos":[0,65],"content":"The offset into the output byte array to begin writing data from.","nodes":[{"content":"The offset into the output byte array to begin writing data from.","pos":[0,65]}]}],"pos":[19280,19346],"yaml":true},{"content":"The number of bytes written.","nodes":[{"pos":[0,28],"content":"The number of bytes written.","nodes":[{"content":"The number of bytes written.","pos":[0,28]}]}],"pos":[19402,19431],"yaml":true},{"content":"The <code>inputBuffer</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>outputBuffer</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>inputBuffer</code> parameter is `null`."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,117],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">outputBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>outputBuffer</code> parameter is `null`."}],"pos":[19629,19753],"yaml":true},{"content":"The length of the input buffer is less than the sum of the input offset and the input count.  \n  \n -or-  \n  \n The value of the <code>inputCount</code> parameter is less than or equal to 0.  \n  \n -or-  \n  \n The value of the <code>inputCount</code> parameter is greater than the length of the <code>inputBuffer</code> parameter.  \n  \n -or-  \n  \n The length of the <code>inputCount</code> parameter is not evenly devisable by input block size.","nodes":[{"pos":[0,92],"content":"The length of the input buffer is less than the sum of the input offset and the input count.","nodes":[{"content":"The length of the input buffer is less than the sum of the input offset and the input count.","pos":[0,92]}]},{"pos":[99,103],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[110,188],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than or equal to 0.","source":"The value of the <code>inputCount</code> parameter is less than or equal to 0."},{"pos":[195,199],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[206,326],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inputBuffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"The value of the <code>inputCount</code> parameter is greater than the length of the <code>inputBuffer</code> parameter."},{"pos":[333,337],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[344,440],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not evenly devisable by input block size.","source":"The length of the <code>inputCount</code> parameter is not evenly devisable by input block size."}],"pos":[19847,20302],"yaml":true},{"content":"The value of the <code>inputOffset</code> parameter is negative.","nodes":[{"pos":[0,64],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is negative.","source":"The value of the <code>inputOffset</code> parameter is negative."}],"pos":[20416,20481],"yaml":true},{"content":"Computes the transformation for the specified region of the specified byte array.","nodes":[{"pos":[0,81],"content":"Computes the transformation for the specified region of the specified byte array.","nodes":[{"content":"Computes the transformation for the specified region of the specified byte array.","pos":[0,81]}]}],"pos":[21866,21948],"yaml":true},{"content":"The input to perform the operation on.","nodes":[{"pos":[0,38],"content":"The input to perform the operation on.","nodes":[{"content":"The input to perform the operation on.","pos":[0,38]}]}],"pos":[22143,22182],"yaml":true},{"content":"The offset into the byte array to begin using data from.","nodes":[{"pos":[0,56],"content":"The offset into the byte array to begin using data from.","nodes":[{"content":"The offset into the byte array to begin using data from.","pos":[0,56]}]}],"pos":[22248,22305],"yaml":true},{"content":"The number of bytes in the byte array to use as data.","nodes":[{"pos":[0,53],"content":"The number of bytes in the byte array to use as data.","nodes":[{"content":"The number of bytes in the byte array to use as data.","pos":[0,53]}]}],"pos":[22370,22424],"yaml":true},{"content":"The computed transformation.","nodes":[{"pos":[0,28],"content":"The computed transformation.","nodes":[{"content":"The computed transformation.","pos":[0,28]}]}],"pos":[22481,22510],"yaml":true},{"content":"The <code>inputBuffer</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputBuffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>inputBuffer</code> parameter is `null`."}],"pos":[22713,22763],"yaml":true},{"content":"The value of the <code>inputCount</code> parameter is less than 0.  \n  \n -or-  \n  \n The value of the <code>inputCount</code> parameter is grater than the length of <code>inputBuffer</code> parameter.","nodes":[{"pos":[0,66],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The value of the <code>inputCount</code> parameter is less than 0."},{"pos":[73,77],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[84,199],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is grater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inputBuffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"The value of the <code>inputCount</code> parameter is grater than the length of <code>inputBuffer</code> parameter."}],"pos":[22857,23063],"yaml":true},{"content":"The value of the <code>inputOffset</code> parameter is negative.","nodes":[{"pos":[0,64],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputOffset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is negative.","source":"The value of the <code>inputOffset</code> parameter is negative."}],"pos":[23177,23242],"yaml":true},{"content":"The length of the <code>inputCount</code> parameter is not evenly devisable by input block size.","nodes":[{"pos":[0,96],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputCount</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not evenly devisable by input block size.","source":"The length of the <code>inputCount</code> parameter is not evenly devisable by input block size."}],"pos":[23390,23487],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RijndaelManagedTransform\n  commentId: T:System.Security.Cryptography.RijndaelManagedTransform\n  id: RijndaelManagedTransform\n  children:\n  - System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue\n  - System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform\n  - System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks\n  - System.Security.Cryptography.RijndaelManagedTransform.Clear\n  - System.Security.Cryptography.RijndaelManagedTransform.Dispose\n  - System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize\n  - System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize\n  - System.Security.Cryptography.RijndaelManagedTransform.Reset\n  - System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: RijndaelManagedTransform\n  nameWithType: RijndaelManagedTransform\n  fullName: System.Security.Cryptography.RijndaelManagedTransform\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Performs a cryptographic transformation of data using the Rijndael algorithm. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  Using this class is not recommended. A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object. The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly. For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class.  \\n  \\n Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object.  To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform\n  inheritance:\n  - System.Object\n  implements:\n  - System.Security.Cryptography.ICryptoTransform\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue\n  commentId: P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue\n  id: BlockSizeValue\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: BlockSizeValue\n  nameWithType: RijndaelManagedTransform.BlockSizeValue\n  fullName: RijndaelManagedTransform.BlockSizeValue\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the block size.\n  syntax:\n    content: public int BlockSizeValue { get; }\n    return:\n      type: System.Int32\n      description: The size of the data blocks in bytes.\n  overload: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform\n  commentId: P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform\n  id: CanReuseTransform\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: CanReuseTransform\n  nameWithType: RijndaelManagedTransform.CanReuseTransform\n  fullName: RijndaelManagedTransform.CanReuseTransform\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether the current transform can be reused.\n  syntax:\n    content: public bool CanReuseTransform { get; }\n    return:\n      type: System.Boolean\n      description: Always `true`.\n  overload: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks\n  commentId: P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks\n  id: CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: CanTransformMultipleBlocks\n  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks\n  fullName: RijndaelManagedTransform.CanTransformMultipleBlocks\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets a value indicating whether multiple blocks can be transformed.\n  syntax:\n    content: public bool CanTransformMultipleBlocks { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if multiple blocks can be transformed; otherwise, `false`.'\n  overload: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear\n  commentId: M:System.Security.Cryptography.RijndaelManagedTransform.Clear\n  id: Clear\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: RijndaelManagedTransform.Clear()\n  fullName: RijndaelManagedTransform.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> class.\n  remarks: \"This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> class.  \\n  \\n Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.RijndaelManagedTransform> to be reallocated for other purposes. For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManagedTransform.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose\n  commentId: M:System.Security.Cryptography.RijndaelManagedTransform.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: RijndaelManagedTransform.Dispose()\n  fullName: RijndaelManagedTransform.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RijndaelManagedTransform>. The `Dispose` method leaves the <xref:System.Security.Cryptography.RijndaelManagedTransform> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RijndaelManagedTransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RijndaelManagedTransform> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManagedTransform.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize\n  commentId: P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize\n  id: InputBlockSize\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: InputBlockSize\n  nameWithType: RijndaelManagedTransform.InputBlockSize\n  fullName: RijndaelManagedTransform.InputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the input block size.\n  syntax:\n    content: public int InputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: The size of the input data blocks in bytes.\n  overload: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize\n  commentId: P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize\n  id: OutputBlockSize\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: OutputBlockSize\n  nameWithType: RijndaelManagedTransform.OutputBlockSize\n  fullName: RijndaelManagedTransform.OutputBlockSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Gets the output block size.\n  syntax:\n    content: public int OutputBlockSize { get; }\n    return:\n      type: System.Int32\n      description: The size of the output data blocks in bytes.\n  overload: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset\n  commentId: M:System.Security.Cryptography.RijndaelManagedTransform.Reset\n  id: Reset\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: RijndaelManagedTransform.Reset()\n  fullName: RijndaelManagedTransform.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Resets the internal state of <xref href=\"System.Security.Cryptography.RijndaelManagedTransform\"></xref> so it can be used again to do a different encryption or decryption.\n  remarks: The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>. The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted. In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called. You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManagedTransform.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  commentId: M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: RijndaelManagedTransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: RijndaelManagedTransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.\n  syntax:\n    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: The input to perform the operation on.\n    - id: inputOffset\n      type: System.Int32\n      description: The offset into the input byte array to begin using data from.\n    - id: inputCount\n      type: System.Int32\n      description: The number of bytes in the input byte array to use as data.\n    - id: outputBuffer\n      type: System.Byte[]\n      description: The output to write the data to.\n    - id: outputOffset\n      type: System.Int32\n      description: The offset into the output byte array to begin writing data from.\n    return:\n      type: System.Int32\n      description: The number of bytes written.\n  overload: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>inputBuffer</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>outputBuffer</code> parameter is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of the input buffer is less than the sum of the input offset and the input count.  \\n  \\n -or-  \\n  \\n The value of the <code>inputCount</code> parameter is less than or equal to 0.  \\n  \\n -or-  \\n  \\n The value of the <code>inputCount</code> parameter is greater than the length of the <code>inputBuffer</code> parameter.  \\n  \\n -or-  \\n  \\n The length of the <code>inputCount</code> parameter is not evenly devisable by input block size.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>inputOffset</code> parameter is negative.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  langs:\n  - csharp\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: RijndaelManagedTransform.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: RijndaelManagedTransform.TransformFinalBlock(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Computes the transformation for the specified region of the specified byte array.\n  syntax:\n    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);\n    parameters:\n    - id: inputBuffer\n      type: System.Byte[]\n      description: The input to perform the operation on.\n    - id: inputOffset\n      type: System.Int32\n      description: The offset into the byte array to begin using data from.\n    - id: inputCount\n      type: System.Int32\n      description: The number of bytes in the byte array to use as data.\n    return:\n      type: System.Byte[]\n      description: The computed transformation.\n  overload: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>inputBuffer</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The value of the <code>inputCount</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The value of the <code>inputCount</code> parameter is grater than the length of <code>inputBuffer</code> parameter.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>inputOffset</code> parameter is negative.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The length of the <code>inputCount</code> parameter is not evenly devisable by input block size.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: RijndaelManagedTransform.BlockSizeValue\n  fullName: RijndaelManagedTransform.BlockSizeValue\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: RijndaelManagedTransform.CanReuseTransform\n  fullName: RijndaelManagedTransform.CanReuseTransform\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks\n  fullName: RijndaelManagedTransform.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: Clear()\n  nameWithType: RijndaelManagedTransform.Clear()\n  fullName: RijndaelManagedTransform.Clear()\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: Dispose()\n  nameWithType: RijndaelManagedTransform.Dispose()\n  fullName: RijndaelManagedTransform.Dispose()\n- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: RijndaelManagedTransform.InputBlockSize\n  fullName: RijndaelManagedTransform.InputBlockSize\n- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: RijndaelManagedTransform.OutputBlockSize\n  fullName: RijndaelManagedTransform.OutputBlockSize\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: Reset()\n  nameWithType: RijndaelManagedTransform.Reset()\n  fullName: RijndaelManagedTransform.Reset()\n- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: RijndaelManagedTransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: RijndaelManagedTransform.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: RijndaelManagedTransform.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: RijndaelManagedTransform.TransformFinalBlock(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: RijndaelManagedTransform.BlockSizeValue\n  fullName: RijndaelManagedTransform.BlockSizeValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: RijndaelManagedTransform.CanReuseTransform\n  fullName: RijndaelManagedTransform.CanReuseTransform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks\n  fullName: RijndaelManagedTransform.CanTransformMultipleBlocks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: Clear\n  nameWithType: RijndaelManagedTransform.Clear\n  fullName: RijndaelManagedTransform.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: Dispose\n  nameWithType: RijndaelManagedTransform.Dispose\n  fullName: RijndaelManagedTransform.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: RijndaelManagedTransform.InputBlockSize\n  fullName: RijndaelManagedTransform.InputBlockSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: RijndaelManagedTransform.OutputBlockSize\n  fullName: RijndaelManagedTransform.OutputBlockSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: Reset\n  nameWithType: RijndaelManagedTransform.Reset\n  fullName: RijndaelManagedTransform.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: TransformBlock\n  nameWithType: RijndaelManagedTransform.TransformBlock\n  fullName: RijndaelManagedTransform.TransformBlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock*\n  parent: System.Security.Cryptography.RijndaelManagedTransform\n  isExternal: false\n  name: TransformFinalBlock\n  nameWithType: RijndaelManagedTransform.TransformFinalBlock\n  fullName: RijndaelManagedTransform.TransformFinalBlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManagedTransform.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n"}