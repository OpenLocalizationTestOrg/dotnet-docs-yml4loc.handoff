{"nodes":[{"content":"Represents the mapping between a field or a property of a domain object into a column of a database table.","nodes":[{"pos":[0,106],"content":"Represents the mapping between a field or a property of a domain object into a column of a database table.","nodes":[{"content":"Represents the mapping between a field or a property of a domain object into a column of a database table.","pos":[0,106]}]}],"pos":[1940,2047],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaDataMember\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> class."}],"pos":[3449,3551],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> that corresponds to this member.","nodes":[{"pos":[0,103],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation\"&gt;&lt;/xref&gt;</ph> that corresponds to this member.","source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> that corresponds to this member."}],"pos":[4694,4798],"yaml":true},{"content":"This property represents a database association like a foreign-key to primary-key relationship.","nodes":[{"pos":[0,95],"content":"This property represents a database association like a foreign-key to primary-key relationship.","nodes":[{"content":"This property represents a database association like a foreign-key to primary-key relationship.","pos":[0,95]}]}],"pos":[4809,4905],"yaml":true,"extradata":"MT"},{"content":"The corresponding <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> if one exists; otherwise, `null`.","nodes":[{"pos":[0,113],"content":"The corresponding <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaAssociation\"&gt;&lt;/xref&gt;</ph> if one exists; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"The corresponding <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> if one exists; otherwise, `null`."}],"pos":[5090,5204],"yaml":true},{"content":"Gets the read-back behavior for this member for insert and update operations.","nodes":[{"pos":[0,77],"content":"Gets the read-back behavior for this member for insert and update operations.","nodes":[{"content":"Gets the read-back behavior for this member for insert and update operations.","pos":[0,77]}]}],"pos":[6264,6342],"yaml":true},{"content":"An <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.AutoSync\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"An <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration."}],"pos":[6510,6581],"yaml":true},{"content":"Gets whether the value of this member can be assigned the `null` value.","nodes":[{"pos":[0,71],"content":"Gets whether the value of this member can be assigned the <ph id=\"ph1\">`null`</ph> value.","source":"Gets whether the value of this member can be assigned the `null` value."}],"pos":[7644,7716],"yaml":true},{"content":"This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.","nodes":[{"pos":[0,133],"content":"This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.","nodes":[{"content":"This property is dependent on the <ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A&gt;</ph> property, and is provided for convenience.","pos":[0,133],"source":"This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience."}]}],"pos":[7727,7861],"yaml":true,"extradata":"MT"},{"content":"`true` if this member can be assigned the `null` value; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if this member can be assigned the <ph id=\"ph2\">`null`</ph> value; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this member can be assigned the `null` value; otherwise, `false`."}],"pos":[7982,8060],"yaml":true},{"content":"Gets the type of the corresponding database column.","nodes":[{"pos":[0,51],"content":"Gets the type of the corresponding database column.","nodes":[{"content":"Gets the type of the corresponding database column.","pos":[0,51]}]}],"pos":[9106,9158],"yaml":true},{"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.","nodes":[{"pos":[0,176],"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.","nodes":[{"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.","pos":[0,176],"nodes":[{"content":"This will be the exact text used to define the column in a Transact-SQL table declaration command.","pos":[0,98]},{"content":"If not so defined, the database column type is inferred from the member type.","pos":[99,176]}]}]}],"pos":[9169,9346],"yaml":true,"extradata":"MT"},{"content":"The type of the database column as a string.","nodes":[{"pos":[0,44],"content":"The type of the database column as a string.","nodes":[{"content":"The type of the database column as a string.","pos":[0,44]}]}],"pos":[9465,9510],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that contains this data member.","nodes":[{"pos":[0,95],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;&lt;/xref&gt;</ph> that contains this data member.","source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that contains this data member."}],"pos":[10595,10691],"yaml":true},{"content":"The meta-type that contains the current member.","nodes":[{"pos":[0,47],"content":"The meta-type that contains the current member.","nodes":[{"content":"The meta-type that contains the current member.","pos":[0,47]}]}],"pos":[10864,10912],"yaml":true},{"content":"Gets the accessor that is used to get and set the deferred source of this member.","nodes":[{"pos":[0,81],"content":"Gets the accessor that is used to get and set the deferred source of this member.","nodes":[{"content":"Gets the accessor that is used to get and set the deferred source of this member.","pos":[0,81]}]}],"pos":[12058,12140],"yaml":true},{"content":"The accessor used to access the deferred source for this member.","nodes":[{"pos":[0,64],"content":"The accessor used to access the deferred source for this member.","nodes":[{"content":"The accessor used to access the deferred source for this member.","pos":[0,64]}]}],"pos":[12330,12395],"yaml":true},{"content":"Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).","nodes":[{"pos":[0,104],"content":"Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).","nodes":[{"content":"Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).","pos":[0,104]}]}],"pos":[13544,13649],"yaml":true},{"content":"The accessor used to access the deferred value for this member.","nodes":[{"pos":[0,63],"content":"The accessor used to access the deferred value for this member.","nodes":[{"content":"The accessor used to access the deferred value for this member.","pos":[0,63]}]}],"pos":[13838,13902],"yaml":true},{"content":"Gets the expression that defines a computed column.","nodes":[{"pos":[0,51],"content":"Gets the expression that defines a computed column.","nodes":[{"content":"Gets the expression that defines a computed column.","pos":[0,51]}]}],"pos":[14984,15036],"yaml":true},{"content":"The expression for the computed column as a string.","nodes":[{"pos":[0,51],"content":"The expression for the computed column as a string.","nodes":[{"content":"The expression for the computed column as a string.","pos":[0,51]}]}],"pos":[15159,15211],"yaml":true},{"content":"Gets whether this member defines an association relationship.","nodes":[{"pos":[0,61],"content":"Gets whether this member defines an association relationship.","nodes":[{"content":"Gets whether this member defines an association relationship.","pos":[0,61]}]}],"pos":[16300,16362],"yaml":true},{"content":"`true` if this member defines an association relationship; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if this member defines an association relationship; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member defines an association relationship; otherwise, `false`."}],"pos":[16487,16568],"yaml":true},{"content":"Gets whether this member is automatically generated by the database.","nodes":[{"pos":[0,68],"content":"Gets whether this member is automatically generated by the database.","nodes":[{"content":"Gets whether this member is automatically generated by the database.","pos":[0,68]}]}],"pos":[17660,17729],"yaml":true},{"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.","nodes":[{"pos":[0,161],"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.","nodes":[{"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.","pos":[0,161],"nodes":[{"content":"Automatically generated members are synchronized immediately after the corresponding data row is inserted.","pos":[0,106]},{"content":"Insert trigger-generated key values are not supported.","pos":[107,161]}]}]}],"pos":[17740,17902],"yaml":true,"extradata":"MT"},{"content":"`true` if this member is automatically generated by the database; otherwise `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if this member is automatically generated by the database; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member is automatically generated by the database; otherwise `false`."}],"pos":[18027,18114],"yaml":true},{"content":"Specifies whether this member is declared by the specified type.","nodes":[{"pos":[0,64],"content":"Specifies whether this member is declared by the specified type.","nodes":[{"content":"Specifies whether this member is declared by the specified type.","pos":[0,64]}]}],"pos":[19333,19398],"yaml":true},{"content":"The type to check.","nodes":[{"pos":[0,18],"content":"The type to check.","nodes":[{"content":"The type to check.","pos":[0,18]}]}],"pos":[19593,19612],"yaml":true},{"content":"`true` if this member is declared by the specified type; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if this member is declared by the specified type; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member is declared by the specified type; otherwise, `false`."}],"pos":[19670,19749],"yaml":true},{"content":"Gets whether the default behavior is to load this member on a deferred basis.","nodes":[{"pos":[0,77],"content":"Gets whether the default behavior is to load this member on a deferred basis.","nodes":[{"content":"Gets whether the default behavior is to load this member on a deferred basis.","pos":[0,77]}]}],"pos":[20822,20900],"yaml":true},{"content":"`true` if this member loaded on a deferred basis by default; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if this member loaded on a deferred basis by default; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member loaded on a deferred basis by default; otherwise, `false`."}],"pos":[21022,21105],"yaml":true},{"content":"Gets whether this member represents the inheritance discriminator.","nodes":[{"pos":[0,66],"content":"Gets whether this member represents the inheritance discriminator.","nodes":[{"content":"Gets whether this member represents the inheritance discriminator.","pos":[0,66]}]}],"pos":[22206,22273],"yaml":true},{"content":"This property can be `true` for at most one member of the topmost mapped class in a hierarchy.","nodes":[{"pos":[0,94],"content":"This property can be <ph id=\"ph1\">`true`</ph> for at most one member of the topmost mapped class in a hierarchy.","source":"This property can be `true` for at most one member of the topmost mapped class in a hierarchy."}],"pos":[22284,22379],"yaml":true,"extradata":"MT"},{"content":"`true` if this member represents the inheritance discriminator; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if this member represents the inheritance discriminator; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member represents the inheritance discriminator; otherwise, `false`."}],"pos":[22506,22592],"yaml":true},{"content":"Gets whether this member is mapped to a column (or constraint).","nodes":[{"pos":[0,63],"content":"Gets whether this member is mapped to a column (or constraint).","nodes":[{"content":"Gets whether this member is mapped to a column (or constraint).","pos":[0,63]}]}],"pos":[23680,23744],"yaml":true},{"content":"A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.","nodes":[{"pos":[0,204],"content":"A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.","nodes":[{"content":"A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.","pos":[0,204],"nodes":[{"content":"A class may have a combination of persistent and non-persistent members.","pos":[0,72]},{"content":"Persistent members are mapped while non-persistent members are not mapped.","pos":[73,147]},{"content":"A mapped class must have at least one persistent member.","pos":[148,204]}]}]}],"pos":[23755,23960],"yaml":true,"extradata":"MT"},{"content":"`true` if this member is mapped to a column (or constraint); otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if this member is mapped to a column (or constraint); otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member is mapped to a column (or constraint); otherwise, `false`."}],"pos":[24084,24167],"yaml":true},{"content":"Gets whether this member is part of the type's identity.","nodes":[{"pos":[0,56],"content":"Gets whether this member is part of the type's identity.","nodes":[{"content":"Gets whether this member is part of the type's identity.","pos":[0,56]}]}],"pos":[25252,25309],"yaml":true},{"content":"If this property is `true`, the class member represents a column that is part of the table’s unique key. More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns. For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view. Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.  \n  \n The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key. They simply denote a set that uniquely identifies the entity. Common alternatives include clustering index columns or other unique key columns.","nodes":[{"pos":[0,514],"content":"If this property is `true`, the class member represents a column that is part of the table’s unique key. More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns. For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view. Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.","nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, the class member represents a column that is part of the table’s unique key.","pos":[0,104],"source":"If this property is `true`, the class member represents a column that is part of the table’s unique key."},{"content":"More than one member of the class can have this property set to <ph id=\"ph1\">`true`</ph> for a key that is a composite of the associated columns.","pos":[105,232],"source":" More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns."},{"content":"For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.","pos":[233,390]},{"content":"Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.","pos":[391,514]}]},{"pos":[521,802],"content":"The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key. They simply denote a set that uniquely identifies the entity. Common alternatives include clustering index columns or other unique key columns.","nodes":[{"content":"The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key. They simply denote a set that uniquely identifies the entity. Common alternatives include clustering index columns or other unique key columns.","pos":[0,281],"nodes":[{"content":"The set of columns identified with <ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A&gt;</ph> are not required to be the primary key.","pos":[0,137],"source":"The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key."},{"content":"They simply denote a set that uniquely identifies the entity.","pos":[138,199]},{"content":"Common alternatives include clustering index columns or other unique key columns.","pos":[200,281]}]}]}],"pos":[25320,26127],"yaml":true,"extradata":"MT"},{"content":"`true` if this member is part of the type's identity; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if this member is part of the type's identity; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member is part of the type's identity; otherwise, `false`."}],"pos":[26251,26327],"yaml":true},{"content":"Gets whether this member represents the row version or timestamp.","nodes":[{"pos":[0,65],"content":"Gets whether this member represents the row version or timestamp.","nodes":[{"content":"Gets whether this member represents the row version or timestamp.","pos":[0,65]}]}],"pos":[27394,27460],"yaml":true},{"content":"Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.","nodes":[{"pos":[0,105],"content":"Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.","nodes":[{"content":"Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.","pos":[0,105]}]}],"pos":[27471,27577],"yaml":true,"extradata":"MT"},{"content":"`true` if this member represents the row version or timestamp; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if this member represents the row version or timestamp; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this member represents the row version or timestamp; otherwise, `false`."}],"pos":[27698,27783],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform load operations.","nodes":[{"pos":[0,106],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> method that is used to perform load operations.","source":"Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform load operations."}],"pos":[28853,28960],"yaml":true},{"content":"The load method as <xref href=\"System.Reflection.MethodInfo\"></xref>.","nodes":[{"pos":[0,69],"content":"The load method as <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph>.","source":"The load method as <xref href=\"System.Reflection.MethodInfo\"></xref>."}],"pos":[29120,29190],"yaml":true},{"content":"Gets the name of the column (or constraint) in the database.","nodes":[{"pos":[0,60],"content":"Gets the name of the column (or constraint) in the database.","nodes":[{"content":"Gets the name of the column (or constraint) in the database.","pos":[0,60]}]}],"pos":[30261,30322],"yaml":true},{"content":"The name of the column (or constraint) as a string.","nodes":[{"pos":[0,51],"content":"The name of the column (or constraint) as a string.","nodes":[{"content":"The name of the column (or constraint) as a string.","pos":[0,51]}]}],"pos":[30445,30497],"yaml":true},{"content":"Gets the underlying <xref href=\"System.Reflection.MemberInfo\"></xref>.","nodes":[{"pos":[0,70],"content":"Gets the underlying <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the underlying <xref href=\"System.Reflection.MemberInfo\"></xref>."}],"pos":[31544,31615],"yaml":true},{"content":"Member attribute and metadata information.","nodes":[{"pos":[0,42],"content":"Member attribute and metadata information.","nodes":[{"content":"Member attribute and metadata information.","pos":[0,42]}]}],"pos":[31771,31814],"yaml":true},{"content":"Gets the accessor that is used to get or set the value of this member.","nodes":[{"pos":[0,70],"content":"Gets the accessor that is used to get or set the value of this member.","nodes":[{"content":"Gets the accessor that is used to get or set the value of this member.","pos":[0,70]}]}],"pos":[32905,32976],"yaml":true},{"content":"The accessor.","nodes":[{"pos":[0,13],"content":"The accessor.","nodes":[{"content":"The accessor.","pos":[0,13]}]}],"pos":[33158,33172],"yaml":true},{"content":"Gets the name of the member, same as the <xref href=\"System.Reflection.MemberInfo\"></xref> name.","nodes":[{"pos":[0,96],"content":"Gets the name of the member, same as the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> name.","source":"Gets the name of the member, same as the <xref href=\"System.Reflection.MemberInfo\"></xref> name."}],"pos":[34211,34308],"yaml":true},{"content":"The name, same as the <xref href=\"System.Reflection.MemberInfo\"></xref> name.","nodes":[{"pos":[0,77],"content":"The name, same as the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> name.","source":"The name, same as the <xref href=\"System.Reflection.MemberInfo\"></xref> name."}],"pos":[34425,34503],"yaml":true},{"content":"Gets the ordinal position of this member in the default layout of query results.","nodes":[{"pos":[0,80],"content":"Gets the ordinal position of this member in the default layout of query results.","nodes":[{"content":"Gets the ordinal position of this member in the default layout of query results.","pos":[0,80]}]}],"pos":[35550,35631],"yaml":true},{"content":"The ordinal position.","nodes":[{"pos":[0,21],"content":"The ordinal position.","nodes":[{"content":"The ordinal position.","pos":[0,21]}]}],"pos":[35747,35769],"yaml":true},{"content":"Gets the accessor that is used to get or set the storage value of this member.","nodes":[{"pos":[0,78],"content":"Gets the accessor that is used to get or set the storage value of this member.","nodes":[{"content":"Gets the accessor that is used to get or set the storage value of this member.","pos":[0,78]}]}],"pos":[36867,36946],"yaml":true},{"content":"The accessor for the storage value of this member.","nodes":[{"pos":[0,50],"content":"The accessor for the storage value of this member.","nodes":[{"content":"The accessor for the storage value of this member.","pos":[0,50]}]}],"pos":[37129,37180],"yaml":true},{"content":"Gets the member that stores the data for this member.","nodes":[{"pos":[0,53],"content":"Gets the member that stores the data for this member.","nodes":[{"content":"Gets the member that stores the data for this member.","pos":[0,53]}]}],"pos":[38274,38328],"yaml":true},{"content":"The storage member.","nodes":[{"pos":[0,19],"content":"The storage member.","nodes":[{"content":"The storage member.","pos":[0,19]}]}],"pos":[38491,38511],"yaml":true},{"content":"Gets the type of this member.","nodes":[{"pos":[0,29],"content":"Gets the type of this member.","nodes":[{"content":"Gets the type of this member.","pos":[0,29]}]}],"pos":[39549,39579],"yaml":true},{"content":"The type of the current member.","nodes":[{"pos":[0,31],"content":"The type of the current member.","nodes":[{"content":"The type of the current member.","pos":[0,31]}]}],"pos":[39692,39724],"yaml":true},{"content":"Gets the optimistic concurrency check policy for this member.","nodes":[{"pos":[0,61],"content":"Gets the optimistic concurrency check policy for this member.","nodes":[{"content":"Gets the optimistic concurrency check policy for this member.","pos":[0,61]}]}],"pos":[40795,40857],"yaml":true},{"content":"If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.  \n  \n The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency. Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.","nodes":[{"pos":[0,207],"content":"If the class does not have a version member (<ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A&gt;</ph> set to <ph id=\"ph2\">`true`</ph>), detection is done by comparing original member values with the current database state.","source":"If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state."},{"pos":[214,572],"content":"The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency. Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.","nodes":[{"content":"The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency. Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.","pos":[0,358],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A&gt;</ph> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.","pos":[0,161],"source":"The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency."},{"content":"Only those members with this property set to <ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.UpdateCheck.Always&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged&gt;</ph> are considered during conflict detection.","pos":[162,358],"source":" Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection."}]}]}],"pos":[40868,41445],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> enum.","nodes":[{"pos":[0,66],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;&lt;/xref&gt;</ph> enum.","source":"An <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> enum."}],"pos":[41622,41689],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaDataMember\n  commentId: T:System.Data.Linq.Mapping.MetaDataMember\n  id: MetaDataMember\n  children:\n  - System.Data.Linq.Mapping.MetaDataMember.#ctor\n  - System.Data.Linq.Mapping.MetaDataMember.Association\n  - System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  - System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  - System.Data.Linq.Mapping.MetaDataMember.DbType\n  - System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  - System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.Expression\n  - System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  - System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  - System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  - System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  - System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  - System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  - System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  - System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  - System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  - System.Data.Linq.Mapping.MetaDataMember.MappedName\n  - System.Data.Linq.Mapping.MetaDataMember.Member\n  - System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.Name\n  - System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  - System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  - System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  - System.Data.Linq.Mapping.MetaDataMember.Type\n  - System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  langs:\n  - csharp\n  name: MetaDataMember\n  nameWithType: MetaDataMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Represents the mapping between a field or a property of a domain object into a column of a database table.\n  syntax:\n    content: public abstract class MetaDataMember\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor\n  commentId: M:System.Data.Linq.Mapping.MetaDataMember.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: MetaDataMember()\n  nameWithType: MetaDataMember.MetaDataMember()\n  fullName: MetaDataMember.MetaDataMember()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> class.\n  syntax:\n    content: protected MetaDataMember ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaDataMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.Association\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.Association\n  id: Association\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Association\n  nameWithType: MetaDataMember.Association\n  fullName: MetaDataMember.Association\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> that corresponds to this member.\n  remarks: This property represents a database association like a foreign-key to primary-key relationship.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAssociation\n      description: The corresponding <xref href=\"System.Data.Linq.Mapping.MetaAssociation\"></xref> if one exists; otherwise, `null`.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Association*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  id: AutoSync\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: AutoSync\n  nameWithType: MetaDataMember.AutoSync\n  fullName: MetaDataMember.AutoSync\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the read-back behavior for this member for insert and update operations.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }\n    return:\n      type: System.Data.Linq.Mapping.AutoSync\n      description: An <xref href=\"System.Data.Linq.Mapping.AutoSync\"></xref> enumeration.\n  overload: System.Data.Linq.Mapping.MetaDataMember.AutoSync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  id: CanBeNull\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: CanBeNull\n  nameWithType: MetaDataMember.CanBeNull\n  fullName: MetaDataMember.CanBeNull\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the value of this member can be assigned the `null` value.\n  remarks: This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.\n  syntax:\n    content: public abstract bool CanBeNull { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member can be assigned the `null` value; otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.DbType\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.DbType\n  id: DbType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: MetaDataMember.DbType\n  fullName: MetaDataMember.DbType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type of the corresponding database column.\n  remarks: This will be the exact text used to define the column in a Transact-SQL table declaration command. If not so defined, the database column type is inferred from the member type.\n  syntax:\n    content: public abstract string DbType { get; }\n    return:\n      type: System.String\n      description: The type of the database column as a string.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DbType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  id: DeclaringType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: MetaDataMember.DeclaringType\n  fullName: MetaDataMember.DeclaringType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> that contains this data member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The meta-type that contains the current member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  id: DeferredSourceAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DeferredSourceAccessor\n  nameWithType: MetaDataMember.DeferredSourceAccessor\n  fullName: MetaDataMember.DeferredSourceAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get and set the deferred source of this member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor used to access the deferred source for this member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  id: DeferredValueAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: DeferredValueAccessor\n  nameWithType: MetaDataMember.DeferredValueAccessor\n  fullName: MetaDataMember.DeferredValueAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor used to access the deferred value for this member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.Expression\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.Expression\n  id: Expression\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: MetaDataMember.Expression\n  fullName: MetaDataMember.Expression\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the expression that defines a computed column.\n  syntax:\n    content: public abstract string Expression { get; }\n    return:\n      type: System.String\n      description: The expression for the computed column as a string.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Expression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  id: IsAssociation\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsAssociation\n  nameWithType: MetaDataMember.IsAssociation\n  fullName: MetaDataMember.IsAssociation\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member defines an association relationship.\n  syntax:\n    content: public abstract bool IsAssociation { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member defines an association relationship; otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  id: IsDbGenerated\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDbGenerated\n  nameWithType: MetaDataMember.IsDbGenerated\n  fullName: MetaDataMember.IsDbGenerated\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member is automatically generated by the database.\n  remarks: Automatically generated members are synchronized immediately after the corresponding data row is inserted. Insert trigger-generated key values are not supported.\n  syntax:\n    content: public abstract bool IsDbGenerated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member is automatically generated by the database; otherwise `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  commentId: M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  id: IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDeclaredBy(MetaType)\n  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)\n  fullName: MetaDataMember.IsDeclaredBy(MetaType)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Specifies whether this member is declared by the specified type.\n  syntax:\n    content: public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);\n    parameters:\n    - id: type\n      type: System.Data.Linq.Mapping.MetaType\n      description: The type to check.\n    return:\n      type: System.Boolean\n      description: '`true` if this member is declared by the specified type; otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  id: IsDeferred\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDeferred\n  nameWithType: MetaDataMember.IsDeferred\n  fullName: MetaDataMember.IsDeferred\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the default behavior is to load this member on a deferred basis.\n  syntax:\n    content: public abstract bool IsDeferred { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member loaded on a deferred basis by default; otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  id: IsDiscriminator\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsDiscriminator\n  nameWithType: MetaDataMember.IsDiscriminator\n  fullName: MetaDataMember.IsDiscriminator\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member represents the inheritance discriminator.\n  remarks: This property can be `true` for at most one member of the topmost mapped class in a hierarchy.\n  syntax:\n    content: public abstract bool IsDiscriminator { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member represents the inheritance discriminator; otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  id: IsPersistent\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsPersistent\n  nameWithType: MetaDataMember.IsPersistent\n  fullName: MetaDataMember.IsPersistent\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member is mapped to a column (or constraint).\n  remarks: A class may have a combination of persistent and non-persistent members. Persistent members are mapped while non-persistent members are not mapped. A mapped class must have at least one persistent member.\n  syntax:\n    content: public abstract bool IsPersistent { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member is mapped to a column (or constraint); otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  id: IsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsPrimaryKey\n  nameWithType: MetaDataMember.IsPrimaryKey\n  fullName: MetaDataMember.IsPrimaryKey\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member is part of the type's identity.\n  remarks: \"If this property is `true`, the class member represents a column that is part of the table’s unique key. More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns. For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view. Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.  \\n  \\n The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key. They simply denote a set that uniquely identifies the entity. Common alternatives include clustering index columns or other unique key columns.\"\n  syntax:\n    content: public abstract bool IsPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: \"`true` if this member is part of the type's identity; otherwise, `false`.\"\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  id: IsVersion\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: IsVersion\n  nameWithType: MetaDataMember.IsVersion\n  fullName: MetaDataMember.IsVersion\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether this member represents the row version or timestamp.\n  remarks: Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.\n  syntax:\n    content: public abstract bool IsVersion { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this member represents the row version or timestamp; otherwise, `false`.'\n  overload: System.Data.Linq.Mapping.MetaDataMember.IsVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  id: LoadMethod\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: LoadMethod\n  nameWithType: MetaDataMember.LoadMethod\n  fullName: MetaDataMember.LoadMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.DataContext\"></xref> method that is used to perform load operations.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo LoadMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: The load method as <xref href=\"System.Reflection.MethodInfo\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.MappedName\n  id: MappedName\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: MappedName\n  nameWithType: MetaDataMember.MappedName\n  fullName: MetaDataMember.MappedName\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the column (or constraint) in the database.\n  syntax:\n    content: public abstract string MappedName { get; }\n    return:\n      type: System.String\n      description: The name of the column (or constraint) as a string.\n  overload: System.Data.Linq.Mapping.MetaDataMember.MappedName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.Member\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.Member\n  id: Member\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Member\n  nameWithType: MetaDataMember.Member\n  fullName: MetaDataMember.Member\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the underlying <xref href=\"System.Reflection.MemberInfo\"></xref>.\n  syntax:\n    content: public abstract System.Reflection.MemberInfo Member { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: Member attribute and metadata information.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Member*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  id: MemberAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: MemberAccessor\n  nameWithType: MetaDataMember.MemberAccessor\n  fullName: MetaDataMember.MemberAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get or set the value of this member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor.\n  overload: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.Name\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.Name\n  id: Name\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaDataMember.Name\n  fullName: MetaDataMember.Name\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the member, same as the <xref href=\"System.Reflection.MemberInfo\"></xref> name.\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: The name, same as the <xref href=\"System.Reflection.MemberInfo\"></xref> name.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  id: Ordinal\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Ordinal\n  nameWithType: MetaDataMember.Ordinal\n  fullName: MetaDataMember.Ordinal\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the ordinal position of this member in the default layout of query results.\n  syntax:\n    content: public abstract int Ordinal { get; }\n    return:\n      type: System.Int32\n      description: The ordinal position.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Ordinal*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  id: StorageAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: StorageAccessor\n  nameWithType: MetaDataMember.StorageAccessor\n  fullName: MetaDataMember.StorageAccessor\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the accessor that is used to get or set the storage value of this member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaAccessor\n      description: The accessor for the storage value of this member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  id: StorageMember\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: StorageMember\n  nameWithType: MetaDataMember.StorageMember\n  fullName: MetaDataMember.StorageMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member that stores the data for this member.\n  syntax:\n    content: public abstract System.Reflection.MemberInfo StorageMember { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: The storage member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.StorageMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.Type\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.Type\n  id: Type\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: Type\n  nameWithType: MetaDataMember.Type\n  fullName: MetaDataMember.Type\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type of this member.\n  syntax:\n    content: public abstract Type Type { get; }\n    return:\n      type: System.Type\n      description: The type of the current member.\n  overload: System.Data.Linq.Mapping.MetaDataMember.Type*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  commentId: P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  id: UpdateCheck\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  langs:\n  - csharp\n  name: UpdateCheck\n  nameWithType: MetaDataMember.UpdateCheck\n  fullName: MetaDataMember.UpdateCheck\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the optimistic concurrency check policy for this member.\n  remarks: \"If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.  \\n  \\n The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency. Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.\"\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }\n    return:\n      type: System.Data.Linq.Mapping.UpdateCheck\n      description: An <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> enum.\n  overload: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MetaDataMember()\n  nameWithType: MetaDataMember.MetaDataMember()\n  fullName: MetaDataMember.MetaDataMember()\n- uid: System.Data.Linq.Mapping.MetaDataMember.Association\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Association\n  nameWithType: MetaDataMember.Association\n  fullName: MetaDataMember.Association\n- uid: System.Data.Linq.Mapping.MetaAssociation\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaAssociation\n  nameWithType: MetaAssociation\n  fullName: System.Data.Linq.Mapping.MetaAssociation\n- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: AutoSync\n  nameWithType: MetaDataMember.AutoSync\n  fullName: MetaDataMember.AutoSync\n- uid: System.Data.Linq.Mapping.AutoSync\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: AutoSync\n  nameWithType: AutoSync\n  fullName: System.Data.Linq.Mapping.AutoSync\n- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: CanBeNull\n  nameWithType: MetaDataMember.CanBeNull\n  fullName: MetaDataMember.CanBeNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.MetaDataMember.DbType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DbType\n  nameWithType: MetaDataMember.DbType\n  fullName: MetaDataMember.DbType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: MetaDataMember.DeclaringType\n  fullName: MetaDataMember.DeclaringType\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredSourceAccessor\n  nameWithType: MetaDataMember.DeferredSourceAccessor\n  fullName: MetaDataMember.DeferredSourceAccessor\n- uid: System.Data.Linq.Mapping.MetaAccessor\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaAccessor\n  nameWithType: MetaAccessor\n  fullName: System.Data.Linq.Mapping.MetaAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredValueAccessor\n  nameWithType: MetaDataMember.DeferredValueAccessor\n  fullName: MetaDataMember.DeferredValueAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.Expression\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Expression\n  nameWithType: MetaDataMember.Expression\n  fullName: MetaDataMember.Expression\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsAssociation\n  nameWithType: MetaDataMember.IsAssociation\n  fullName: MetaDataMember.IsAssociation\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDbGenerated\n  nameWithType: MetaDataMember.IsDbGenerated\n  fullName: MetaDataMember.IsDbGenerated\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeclaredBy(MetaType)\n  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)\n  fullName: MetaDataMember.IsDeclaredBy(MetaType)\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeferred\n  nameWithType: MetaDataMember.IsDeferred\n  fullName: MetaDataMember.IsDeferred\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDiscriminator\n  nameWithType: MetaDataMember.IsDiscriminator\n  fullName: MetaDataMember.IsDiscriminator\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPersistent\n  nameWithType: MetaDataMember.IsPersistent\n  fullName: MetaDataMember.IsPersistent\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: MetaDataMember.IsPrimaryKey\n  fullName: MetaDataMember.IsPrimaryKey\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsVersion\n  nameWithType: MetaDataMember.IsVersion\n  fullName: MetaDataMember.IsVersion\n- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: LoadMethod\n  nameWithType: MetaDataMember.LoadMethod\n  fullName: MetaDataMember.LoadMethod\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaDataMember.MappedName\n  fullName: MetaDataMember.MappedName\n- uid: System.Data.Linq.Mapping.MetaDataMember.Member\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Member\n  nameWithType: MetaDataMember.Member\n  fullName: MetaDataMember.Member\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MemberAccessor\n  nameWithType: MetaDataMember.MemberAccessor\n  fullName: MetaDataMember.MemberAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.Name\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Name\n  nameWithType: MetaDataMember.Name\n  fullName: MetaDataMember.Name\n- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Ordinal\n  nameWithType: MetaDataMember.Ordinal\n  fullName: MetaDataMember.Ordinal\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageAccessor\n  nameWithType: MetaDataMember.StorageAccessor\n  fullName: MetaDataMember.StorageAccessor\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageMember\n  nameWithType: MetaDataMember.StorageMember\n  fullName: MetaDataMember.StorageMember\n- uid: System.Data.Linq.Mapping.MetaDataMember.Type\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Type\n  nameWithType: MetaDataMember.Type\n  fullName: MetaDataMember.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: MetaDataMember.UpdateCheck\n  fullName: MetaDataMember.UpdateCheck\n- uid: System.Data.Linq.Mapping.UpdateCheck\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: UpdateCheck\n  fullName: System.Data.Linq.Mapping.UpdateCheck\n- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MetaDataMember\n  nameWithType: MetaDataMember.MetaDataMember\n  fullName: MetaDataMember.MetaDataMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.Association*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Association\n  nameWithType: MetaDataMember.Association\n  fullName: MetaDataMember.Association\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: AutoSync\n  nameWithType: MetaDataMember.AutoSync\n  fullName: MetaDataMember.AutoSync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: CanBeNull\n  nameWithType: MetaDataMember.CanBeNull\n  fullName: MetaDataMember.CanBeNull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.DbType*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DbType\n  nameWithType: MetaDataMember.DbType\n  fullName: MetaDataMember.DbType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: MetaDataMember.DeclaringType\n  fullName: MetaDataMember.DeclaringType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredSourceAccessor\n  nameWithType: MetaDataMember.DeferredSourceAccessor\n  fullName: MetaDataMember.DeferredSourceAccessor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: DeferredValueAccessor\n  nameWithType: MetaDataMember.DeferredValueAccessor\n  fullName: MetaDataMember.DeferredValueAccessor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.Expression*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Expression\n  nameWithType: MetaDataMember.Expression\n  fullName: MetaDataMember.Expression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsAssociation\n  nameWithType: MetaDataMember.IsAssociation\n  fullName: MetaDataMember.IsAssociation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDbGenerated\n  nameWithType: MetaDataMember.IsDbGenerated\n  fullName: MetaDataMember.IsDbGenerated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeclaredBy\n  nameWithType: MetaDataMember.IsDeclaredBy\n  fullName: MetaDataMember.IsDeclaredBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDeferred\n  nameWithType: MetaDataMember.IsDeferred\n  fullName: MetaDataMember.IsDeferred\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsDiscriminator\n  nameWithType: MetaDataMember.IsDiscriminator\n  fullName: MetaDataMember.IsDiscriminator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPersistent\n  nameWithType: MetaDataMember.IsPersistent\n  fullName: MetaDataMember.IsPersistent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsPrimaryKey\n  nameWithType: MetaDataMember.IsPrimaryKey\n  fullName: MetaDataMember.IsPrimaryKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: IsVersion\n  nameWithType: MetaDataMember.IsVersion\n  fullName: MetaDataMember.IsVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: LoadMethod\n  nameWithType: MetaDataMember.LoadMethod\n  fullName: MetaDataMember.LoadMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaDataMember.MappedName\n  fullName: MetaDataMember.MappedName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.Member*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Member\n  nameWithType: MetaDataMember.Member\n  fullName: MetaDataMember.Member\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: MemberAccessor\n  nameWithType: MetaDataMember.MemberAccessor\n  fullName: MetaDataMember.MemberAccessor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.Name*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Name\n  nameWithType: MetaDataMember.Name\n  fullName: MetaDataMember.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Ordinal\n  nameWithType: MetaDataMember.Ordinal\n  fullName: MetaDataMember.Ordinal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageAccessor\n  nameWithType: MetaDataMember.StorageAccessor\n  fullName: MetaDataMember.StorageAccessor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: StorageMember\n  nameWithType: MetaDataMember.StorageMember\n  fullName: MetaDataMember.StorageMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.Type*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: Type\n  nameWithType: MetaDataMember.Type\n  fullName: MetaDataMember.Type\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*\n  parent: System.Data.Linq.Mapping.MetaDataMember\n  isExternal: false\n  name: UpdateCheck\n  nameWithType: MetaDataMember.UpdateCheck\n  fullName: MetaDataMember.UpdateCheck\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaDataMember.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}