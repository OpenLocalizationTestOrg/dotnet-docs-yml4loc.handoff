{"nodes":[{"content":"Provides data for the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event.","nodes":[{"pos":[0,118],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides data for the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event."}],"pos":[709,828],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Device.Location.ResolveAddressCompletedEventArgs\"></xref>.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.ResolveAddressCompletedEventArgs\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Device.Location.ResolveAddressCompletedEventArgs\"></xref>."}],"pos":[3609,3717],"yaml":true},{"content":"This constructor is public so that classes implementing the <xref:System.Device.Location.ICivicAddressResolver> interface can create this object to fire events.","nodes":[{"pos":[0,160],"content":"This constructor is public so that classes implementing the <xref:System.Device.Location.ICivicAddressResolver> interface can create this object to fire events.","nodes":[{"content":"This constructor is public so that classes implementing the <ph id=\"ph1\">&lt;xref:System.Device.Location.ICivicAddressResolver&gt;</ph> interface can create this object to fire events.","pos":[0,160],"source":"This constructor is public so that classes implementing the <xref:System.Device.Location.ICivicAddressResolver> interface can create this object to fire events."}]}],"pos":[3728,3889],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains the address resolved from the latitude/longitude location, if successful.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> that contains the address resolved from the latitude/longitude location, if successful.","source":"The <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains the address resolved from the latitude/longitude location, if successful."}],"pos":[4151,4300],"yaml":true},{"content":"The exception object for any exception that may have occurred during the attempt to resolve the address.","nodes":[{"pos":[0,104],"content":"The exception object for any exception that may have occurred during the attempt to resolve the address.","nodes":[{"content":"The exception object for any exception that may have occurred during the attempt to resolve the address.","pos":[0,104]}]}],"pos":[4364,4469],"yaml":true},{"content":"`true` if the operation was cancelled; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the operation was cancelled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the operation was cancelled; otherwise, `false`."}],"pos":[4535,4596],"yaml":true},{"content":"A token for tracking the request to resolve the address. May be `null` if not used.","nodes":[{"pos":[0,83],"content":"A token for tracking the request to resolve the address. May be `null` if not used.","nodes":[{"content":"A token for tracking the request to resolve the address.","pos":[0,56]},{"content":"May be <ph id=\"ph1\">`null`</ph> if not used.","pos":[57,83],"source":" May be `null` if not used."}]}],"pos":[4661,4745],"yaml":true},{"content":"Gets the <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event.","nodes":[{"pos":[0,182],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"&gt;&lt;/xref&gt;</ph> event.","source":"Gets the <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event."}],"pos":[5825,6008],"yaml":true},{"content":"The <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event. If the address could not be resolved, this property returns <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>.","nodes":[{"pos":[0,303],"content":"The <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event. If the address could not be resolved, this property returns <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"&gt;&lt;/xref&gt;</ph> event.","pos":[0,177],"source":"The <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event."},{"content":"If the address could not be resolved, this property returns <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress.Unknown\"&gt;&lt;/xref&gt;</ph>.","pos":[178,303],"source":" If the address could not be resolved, this property returns <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>."}]}],"pos":[6170,6474],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs\n  commentId: T:System.Device.Location.ResolveAddressCompletedEventArgs\n  id: ResolveAddressCompletedEventArgs\n  children:\n  - System.Device.Location.ResolveAddressCompletedEventArgs.#ctor(System.Device.Location.CivicAddress,System.Exception,System.Boolean,System.Object)\n  - System.Device.Location.ResolveAddressCompletedEventArgs.Address\n  langs:\n  - csharp\n  name: ResolveAddressCompletedEventArgs\n  nameWithType: ResolveAddressCompletedEventArgs\n  fullName: System.Device.Location.ResolveAddressCompletedEventArgs\n  type: Class\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Provides data for the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Device.Location.ResolveAddressCompletedEventArgs>.  \\n  \\n [!code-csharp[System.Device.Location.ResolveCivicAddressAsync#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/cs/resolvecivicaddressasync.cs#2)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/vb/resolvecivicaddressasync.vb#2)]\"\n  syntax:\n    content: 'public class ResolveAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.AsyncCompletedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  - System.ComponentModel.AsyncCompletedEventArgs.Error\n  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  - System.ComponentModel.AsyncCompletedEventArgs.UserState\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/ResolveAddressCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs.#ctor(System.Device.Location.CivicAddress,System.Exception,System.Boolean,System.Object)\n  commentId: M:System.Device.Location.ResolveAddressCompletedEventArgs.#ctor(System.Device.Location.CivicAddress,System.Exception,System.Boolean,System.Object)\n  id: '#ctor(System.Device.Location.CivicAddress,System.Exception,System.Boolean,System.Object)'\n  parent: System.Device.Location.ResolveAddressCompletedEventArgs\n  langs:\n  - csharp\n  name: ResolveAddressCompletedEventArgs(CivicAddress, Exception, Boolean, Object)\n  nameWithType: ResolveAddressCompletedEventArgs.ResolveAddressCompletedEventArgs(CivicAddress, Exception, Boolean, Object)\n  fullName: ResolveAddressCompletedEventArgs.ResolveAddressCompletedEventArgs(CivicAddress, Exception, Boolean, Object)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of <xref href=\"System.Device.Location.ResolveAddressCompletedEventArgs\"></xref>.\n  remarks: This constructor is public so that classes implementing the <xref:System.Device.Location.ICivicAddressResolver> interface can create this object to fire events.\n  syntax:\n    content: public ResolveAddressCompletedEventArgs (System.Device.Location.CivicAddress address, Exception error, bool cancelled, object userState);\n    parameters:\n    - id: address\n      type: System.Device.Location.CivicAddress\n      description: The <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains the address resolved from the latitude/longitude location, if successful.\n    - id: error\n      type: System.Exception\n      description: The exception object for any exception that may have occurred during the attempt to resolve the address.\n    - id: cancelled\n      type: System.Boolean\n      description: '`true` if the operation was cancelled; otherwise, `false`.'\n    - id: userState\n      type: System.Object\n      description: A token for tracking the request to resolve the address. May be `null` if not used.\n  overload: System.Device.Location.ResolveAddressCompletedEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/ResolveAddressCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs.Address\n  commentId: P:System.Device.Location.ResolveAddressCompletedEventArgs.Address\n  id: Address\n  parent: System.Device.Location.ResolveAddressCompletedEventArgs\n  langs:\n  - csharp\n  name: Address\n  nameWithType: ResolveAddressCompletedEventArgs.Address\n  fullName: ResolveAddressCompletedEventArgs.Address\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets the <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event.\n  syntax:\n    content: public System.Device.Location.CivicAddress Address { get; }\n    return:\n      type: System.Device.Location.CivicAddress\n      description: The <xref href=\"System.Device.Location.CivicAddress\"></xref> associated with the <xref href=\"System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted\"></xref> event. If the address could not be resolved, this property returns <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>.\n  overload: System.Device.Location.ResolveAddressCompletedEventArgs.Address*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/ResolveAddressCompletedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\nreferences:\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncCompletedEventArgs\n  nameWithType: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs.#ctor(System.Device.Location.CivicAddress,System.Exception,System.Boolean,System.Object)\n  parent: System.Device.Location.ResolveAddressCompletedEventArgs\n  isExternal: false\n  name: ResolveAddressCompletedEventArgs(CivicAddress, Exception, Boolean, Object)\n  nameWithType: ResolveAddressCompletedEventArgs.ResolveAddressCompletedEventArgs(CivicAddress, Exception, Boolean, Object)\n  fullName: ResolveAddressCompletedEventArgs.ResolveAddressCompletedEventArgs(CivicAddress, Exception, Boolean, Object)\n- uid: System.Device.Location.CivicAddress\n  parent: System.Device.Location\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs.Address\n  parent: System.Device.Location.ResolveAddressCompletedEventArgs\n  isExternal: false\n  name: Address\n  nameWithType: ResolveAddressCompletedEventArgs.Address\n  fullName: ResolveAddressCompletedEventArgs.Address\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs.#ctor*\n  parent: System.Device.Location.ResolveAddressCompletedEventArgs\n  isExternal: false\n  name: ResolveAddressCompletedEventArgs\n  nameWithType: ResolveAddressCompletedEventArgs.ResolveAddressCompletedEventArgs\n  fullName: ResolveAddressCompletedEventArgs.ResolveAddressCompletedEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/ResolveAddressCompletedEventArgs.xml\n- uid: System.Device.Location.ResolveAddressCompletedEventArgs.Address*\n  parent: System.Device.Location.ResolveAddressCompletedEventArgs\n  isExternal: false\n  name: Address\n  nameWithType: ResolveAddressCompletedEventArgs.Address\n  fullName: ResolveAddressCompletedEventArgs.Address\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/ResolveAddressCompletedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: Cancelled\n  nameWithType: AsyncCompletedEventArgs.Cancelled\n  fullName: AsyncCompletedEventArgs.Cancelled\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Error\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: Error\n  nameWithType: AsyncCompletedEventArgs.Error\n  fullName: AsyncCompletedEventArgs.Error\n- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: RaiseExceptionIfNecessary()\n  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n  fullName: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: UserState\n  nameWithType: AsyncCompletedEventArgs.UserState\n  fullName: AsyncCompletedEventArgs.UserState\n"}