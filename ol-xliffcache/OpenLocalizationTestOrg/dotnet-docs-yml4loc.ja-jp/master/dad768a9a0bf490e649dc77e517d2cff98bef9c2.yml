### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.RegistryKey
  commentId: T:Microsoft.Win32.RegistryKey
  id: RegistryKey
  children:
  - Microsoft.Win32.RegistryKey.Close
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.Dispose
  - Microsoft.Win32.RegistryKey.Flush
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.GetAccessControl
  - Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - Microsoft.Win32.RegistryKey.GetSubKeyNames
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  - Microsoft.Win32.RegistryKey.GetValue(System.String)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  - Microsoft.Win32.RegistryKey.GetValueNames
  - Microsoft.Win32.RegistryKey.Handle
  - Microsoft.Win32.RegistryKey.Name
  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.RegistryKey.SubKeyCount
  - Microsoft.Win32.RegistryKey.ToString
  - Microsoft.Win32.RegistryKey.ValueCount
  - Microsoft.Win32.RegistryKey.View
  langs:
  - csharp
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
  type: Class
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Represents a key-level node in the Windows registry. This class is a registry encapsulation.
  remarks: "To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.  \n  \n The registry acts as a central repository of information for the operating system and the applications on a computer. The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <xref:Microsoft.Win32.Registry> for the base-level items in this hierarchy). When storing information in the registry, select the appropriate location based on the type of information being stored. Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer. A particular key can have subkeys, just as a folder can have subfolders. Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys. Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information â€” for example, information about an application installed on the computer. Each value holds one particular piece of information, which can be retrieved or updated when required. For instance, you can create a <xref:Microsoft.Win32.RegistryKey> for your company, under the key HKEY_LOCAL_MACHINE\\Software, and then a subkey for each application that your company creates. Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.  \n  \n Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n Starting in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the length of a registry key is no longer limited to 255 characters."
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryKey : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey)
  - Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.AccessControlSections)
  - Microsoft.Win32.RegistryAclExtensions.SetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.RegistrySecurity)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.Close
  commentId: M:Microsoft.Win32.RegistryKey.Close
  id: Close
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: RegistryKey.Close()
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Closes the key and flushes it to disk if its contents have been modified.
  remarks: "Calling this method on system keys will have no effect, because system keys are never closed.  \n  \n This method does nothing if you call it on an instance of `RegistryKey` that is already closed."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Close*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  id: CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: RegistryKey.CreateSubKey(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey for write access.
  remarks: "In order to perform this action, the user must have permission at this level and below in the registry hierarchy.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values."
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed. If a zero-length string is specified for <code>subkey</code>, the current <xref href="Microsoft.Win32.RegistryKey"></xref> object is returned.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> on which this method is being invoked is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String, RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey for write access, using the specified permission check option.
  remarks: "In order to perform this action, the user must have permission at this level and below in the registry hierarchy.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: One of the enumeration values that specifies whether the key is opened for read or read/write access.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed. If a zero-length string is specified for <code>subkey</code>, the current <xref href="Microsoft.Win32.RegistryKey"></xref> object is returned.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>permissionCheck</code> contains an invalid value.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> on which this method is being invoked is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  id: CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String, Boolean)
  nameWithType: RegistryKey.CreateSubKey(String, Boolean)
  fullName: RegistryKey.CreateSubKey(String, Boolean)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Creates a new subkey or opens an existing subkey with the specified access.  \n  \n Available starting in [!INCLUDE[net_v46](~/includes/net-v46-md.md)]"
  remarks: "In order to perform this action, the user must have permission at this level and below in the registry hierarchy.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: writable
      type: System.Boolean
      description: '`true` to indicate the new subkey is writable; otherwise, `false`.'
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed. If a zero-length string is specified for <code>subkey</code>, the current <xref href="Microsoft.Win32.RegistryKey"></xref> object is returned.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a subkey or opens a subkey for write access, using the specified permission check and registry options.
  remarks: To obtain the current <xref:Microsoft.Win32.RegistryKey> object, specify an empty string ("") for `subkey`.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: One of the enumeration values that specifies whether the key is opened for read or read/write access.
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: The registry option to use; for example, that creates a volatile key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> object is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security.
  remarks: "The <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method creates a registry key that has the access control specified by the `registrySecurity` parameter. The <xref:Microsoft.Win32.RegistryKey> object that is returned represents the registry key, but that object is not restricted by the access control specified in the `registrySecurity` parameter.  \n  \n If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, the key is opened for read/write access. If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, the key is opened for read access.  \n  \n For backward compatibility, the key is opened for reading and writing if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> and the parent key also has <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>. If the parent key has any other setting, read/write status is controlled by the parent key's setting.  \n  \n In order to perform this action, the user must have permissions at this level and below in the registry hierarchy.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: One of the enumeration values that specifies whether the key is opened for read or read/write access.
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: The access control security for the new key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed. If a zero-length string is specified for <code>subkey</code>, the current <xref href="Microsoft.Win32.RegistryKey"></xref> object is returned.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>permissionCheck</code> contains an invalid value.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> on which this method is being invoked is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String, Boolean, RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String, Boolean, RegistryOptions)
  fullName: RegistryKey.CreateSubKey(String, Boolean, RegistryOptions)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Creates a new subkey or opens an existing subkey with the specified access.  \n  \n Available starting in [!INCLUDE[net_v46](~/includes/net-v46-md.md)]"
  remarks: "In order to perform this action, the user must have permission at this level and below in the registry hierarchy.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open. This string is not case-sensitive.
    - id: writable
      type: System.Boolean
      description: '`true` to indicate the new subkey is writable; otherwise, `false`.'
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: The registry option to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed. If a zero-length string is specified for <code>subkey</code>, the current <xref href="Microsoft.Win32.RegistryKey"></xref> object is returned.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>options</code> does not specify a valid Option
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Creates a subkey or opens a subkey for write access, using the specified permission check option, registry option, and registry security.
  remarks: To obtain the current <xref:Microsoft.Win32.RegistryKey> object, specify an empty string ("") for `subkey`.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: One of the enumeration values that specifies whether the key is opened for read or read/write access.
    - id: registryOptions
      type: Microsoft.Win32.RegistryOptions
      description: The registry option to use.
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: The access control security for the new subkey.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The newly created subkey, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> object is closed. Closed keys cannot be accessed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The nesting level exceeds 510.  \n  \n -or-  \n  \n A system error occurred, such as deletion of the key or an attempt to create a key in the <xref href=\"Microsoft.Win32.Registry.LocalMachine\"></xref> root."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or open the registry key.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  id: DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: RegistryKey.DeleteSubKey(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Deletes the specified subkey.
  remarks: "To delete child subkeys, use <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.  \n  \n Use caution when deleting registry keys."
  example:
  - "The following example demonstrates how to use <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source2.cpp#5)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source2.cs#5)]\n [!code-vb[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source2.vb#5)]"
  syntax:
    content: public void DeleteSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <code>subkey</code> has child subkeys
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>subkey</code> parameter does not specify a valid registry key
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  id: DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String, Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String, Boolean)
  fullName: RegistryKey.DeleteSubKey(String, Boolean)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found.
  remarks: "To delete child subkeys, use <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.  \n  \n Use caution when deleting registry keys."
  syntax:
    content: public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is `true` and the specified subkey does not exist, an exception is raised. If this argument is `false` and the specified subkey does not exist, no action is taken.
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>subkey</code> has child subkeys.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>subkey</code> does not specify a valid registry key, and <code>throwOnMissingSubKey</code> is `true`.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  id: DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String, Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String, Boolean)
  fullName: RegistryKey.DeleteSubKeyTree(String, Boolean)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found.
  syntax:
    content: public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: The name of the subkey to delete. This string is not case-sensitive.
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is `true` and the specified subkey does not exist, an exception is raised. If this argument is `false` and the specified subkey does not exist, no action is taken.
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An attempt was made to delete the root hive of the tree.  \n  \n -or-  \n  \n <code>subkey</code> does not specify a valid registry subkey, and <code>throwOnMissingSubKey</code> is `true`."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  id: DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: RegistryKey.DeleteSubKeyTree(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Deletes a subkey and any child subkeys recursively.
  remarks: "You must have appropriate permissions to delete the subkey and its tree.  \n  \n> [!CAUTION]\n>  Deleting a particular key will remove all entries below the key in the tree. No warning will be provided. If you want to delete a subkey only when it has no child subkeys, use the <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A> method."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]"
  syntax:
    content: public void DeleteSubKeyTree (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: The subkey to delete. This string is not case-sensitive.
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>subkey</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Deletion of a root hive is attempted.  \n  \n -or-  \n  \n <code>subkey</code> does not specify a valid registry subkey."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error has occurred.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  id: DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: RegistryKey.DeleteValue(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Deletes the specified value from this key.
  remarks: On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the `name` parameter does not delete the default value.
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#3)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#3)]\n [!code-vb[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#3)]"
  syntax:
    content: public void DeleteValue (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to delete.
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>name</code> is not a valid reference to a value.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the value.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  id: DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String, Boolean)
  nameWithType: RegistryKey.DeleteValue(String, Boolean)
  fullName: RegistryKey.DeleteValue(String, Boolean)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.
  remarks: "If `throwOnMissingValue` is `false`, there is no way to tell if the deletion was successful, without subsequently trying to access the value just deleted. Therefore, use caution when deleting values from the registry in this manner.  \n  \n On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the `name` parameter does not delete the default value."
  syntax:
    content: public void DeleteValue (string name, bool throwOnMissingValue);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to delete.
    - id: throwOnMissingValue
      type: System.Boolean
      description: Indicates whether an exception should be raised if the specified value cannot be found. If this argument is `true` and the specified value does not exist, an exception is raised. If this argument is `false` and the specified value does not exist, no action is taken.
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> is not a valid reference to a value and <code>throwOnMissingValue</code> is `true`.  \n  \n -or-  \n  \n <code>name</code> is `null`."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to delete the value.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.Dispose
  commentId: M:Microsoft.Win32.RegistryKey.Dispose
  id: Dispose
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: RegistryKey.Dispose()
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Releases all resources used by the current instance of the <xref href="Microsoft.Win32.RegistryKey"></xref> class.
  remarks: "Call `Dispose` when you are finished using the <xref:Microsoft.Win32.RegistryKey>. The `Dispose` method leaves the <xref:Microsoft.Win32.RegistryKey> in an unusable state. After calling `Dispose`, you must release all references to the <xref:Microsoft.Win32.RegistryKey> so the garbage collector can reclaim the memory that the <xref:Microsoft.Win32.RegistryKey> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:Microsoft.Win32.RegistryKey>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:Microsoft.Win32.RegistryKey> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.Flush
  commentId: M:Microsoft.Win32.RegistryKey.Flush
  id: Flush
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: RegistryKey.Flush()
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Writes all the attributes of the specified open registry key into the registry.
  remarks: "It is not necessary to call `Flush` to write out changes to a key. Registry changes are flushed to disk when the registry uses its lazy flusher. Lazy flushing occurs automatically and regularly after a system-specified time interval. Registry changes are also flushed to disk at system shutdown.  \n  \n Unlike <xref:Microsoft.Win32.RegistryKey.Close%2A>, the `Flush` function returns only when all the data has been written to the registry.  \n  \n The `Flush` function might also write out parts of or all of the other keys. Calling this function excessively can have a negative effect on an application's performance.  \n  \n An application should only call `Flush` if it must be absolute certain that registry changes are recorded to disk. In general, `Flush` rarely, if ever, need be used."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Flush*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  commentId: M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: RegistryKey.FromHandle(SafeRegistryHandle)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Creates a registry key from a specified handle.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: A registry key.
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>handle</code> is `null`.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  commentId: M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle, RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle, RegistryView)
  fullName: RegistryKey.FromHandle(SafeRegistryHandle, RegistryView)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Creates a registry key from a specified handle and registry view setting.
  remarks: "The `view` parameter for this method is used in subsequent operations, such as opening subkeys.  \n  \n If `view` is <xref:Microsoft.Win32.RegistryView.Registry64> but the machine is running a 32-bit operating system, the returned key will use the <xref:Microsoft.Win32.RegistryView.Registry32> view."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: A registry key.
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>view</code> is invalid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>handle</code> is `null`.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  commentId: M:Microsoft.Win32.RegistryKey.GetAccessControl
  id: GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: RegistryKey.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Returns the access control security for the current registry key.
  remarks: "This method overload is equivalent to calling the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> method overload with the bitwise combination of the following flags: <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>, <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>, and <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>. You can use that overload to search for other permissions.  \n  \n The user must have <xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName> rights to call this method."
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: An object that describes the access control permissions on the registry key represented by the current <xref href="Microsoft.Win32.RegistryKey"></xref>.
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the necessary permissions.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current key has been deleted.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  commentId: M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: RegistryKey.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Returns the specified sections of the access control security for the current registry key.
  remarks: "To request the access permissions currently granted to users, specify the bitwise combination of the following flags: <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>, <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>, and <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>. Alternatively, you can use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl> method overload, which specifies exactly that combination of values.  \n  \n The user must have <xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName> rights to call this method."
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: A bitwise combination of enumeration values that specifies the type of security information to get.
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: An object that describes the access control permissions on the registry key represented by the current <xref href="Microsoft.Win32.RegistryKey"></xref>.
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the necessary permissions.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current key has been deleted.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames
  id: GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: RegistryKey.GetSubKeyNames()
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves an array of strings that contains all the subkey names.
  remarks: This method does not recursively find names. It returns the names on the base level from which it was called.
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]"
  syntax:
    content: public string[] GetSubKeyNames ();
    parameters: []
    return:
      type: System.String[]
      description: An array of strings that contains the names of the subkeys for the current key.
  overload: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read from the key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String, Object, RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String, Object, RegistryValueOptions)
  fullName: RegistryKey.GetValue(String, Object, RegistryValueOptions)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.
  remarks: "Use this overload to specify special processing of the retrieved value. For example, you can specify <xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName> when retrieving a registry value of type <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> to retrieve the string without expanding embedded environment variables.  \n  \n Use the `defaultValue` parameter to specify the value to return if `name` does not exist.  \n  \n> [!NOTE]\n>  A registry key can have one value that is not associated with any name. When this unnamed value is displayed in the registry editor, the string \"(Default)\" appears instead of a name. To retrieve this unnamed value, specify either `null` or the empty string (\"\") for `name`.  \n>   \n>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.  In both cases, the default value (`null`) is returned instead of the actual value."
  example:
  - "The following code sample creates a test key, adds a value with an embedded environment variable, and retrieves the value in both expanded and unexpanded forms.  \n  \n [!code-cpp[RegistryValueOptions#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryValueOptions/CPP/RegistryValueOptions.cpp#1)]\n [!code-csharp[RegistryValueOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryValueOptions/CS/source.cs#1)]\n [!code-vb[RegistryValueOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryValueOptions/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    - id: defaultValue
      type: System.Object
      description: The value to return if <code>name</code> does not exist.
    - id: options
      type: Microsoft.Win32.RegistryValueOptions
      description: One of the enumeration values that specifies optional processing of the retrieved value.
    return:
      type: System.Object
      description: The value associated with <code>name</code>, processed according to the specified <code>options</code>, or <code>defaultValue</code> if <code>name</code> is not found.
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value has been marked for deletion.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>options</code> is not a valid <xref href="Microsoft.Win32.RegistryValueOptions"></xref> value; for example, an invalid value is cast to <xref href="Microsoft.Win32.RegistryValueOptions"></xref>.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)
  id: GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: RegistryKey.GetValue(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name. Returns `null` if the name/value pair does not exist in the registry.
  remarks: "> [!NOTE]\n>  A registry key can have one value that is not associated with any name. When this unnamed value is displayed in the registry editor, the string \"(Default)\" appears instead of a name. To retrieve this unnamed value, specify either `null` or the empty string (\"\") for `name`.  \n  \n When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), it expands environment strings using data from the local environment. To retrieve expandable string values from the registry on a remote computer, use the <xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29> method overload to specify that you do not want environment strings expanded.  \n  \n> [!NOTE]\n>  If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it. You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A> method.  \n  \n> [!NOTE]\n>  The recommended way to retrieve data from the <xref:Microsoft.Win32.Registry.PerformanceData> key is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName> method.  \n>   \n>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.  In both cases, the default value (`null`) is returned instead of the actual value."
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]"
  syntax:
    content: public object GetValue (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    return:
      type: System.Object
      description: The value associated with <code>name</code>, or `null` if <code>name</code> is not found.
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value has been marked for deletion.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  id: GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String, Object)
  nameWithType: RegistryKey.GetValue(String, Object)
  fullName: RegistryKey.GetValue(String, Object)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.
  remarks: "Use this overload of <xref:Microsoft.Win32.RegistryKey.GetValue%2A> to handle the case where a name does not exist yet â€” for example, the first time your application is run. Whenever you call this overload, use the `defaultValue` parameter to specify the value to return if `name` does not exist.  \n  \n> [!NOTE]\n>  A registry key can have one value that is not associated with any name. When this unnamed value is displayed in the registry editor, the string \"(Default)\" appears instead of a name. To retrieve this unnamed value, specify either `null` or the empty string (\"\") for `name`.  \n  \n When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), it expands environment strings using data from the local environment. To retrieve expandable string values from the registry on a remote computer, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> overload to specify that you do not want environment strings expanded.  \n  \n> [!NOTE]\n>  If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method does not expand it. You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A> method.  \n  \n> [!NOTE]\n>  The recommended way to retrieve data from the <xref:Microsoft.Win32.Registry.PerformanceData> key is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName> method.  \n>   \n>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.  In both cases, the default value (`null`) is returned instead of the actual value."
  example:
  - "The following code example creates a test key with a value and retrieves that value. The example then attempts to retrieve a nonexistent value from the key; in this case the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method returns the specified default value.  \n  \n [!code-cpp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CPP/source.cpp#1)]\n [!code-csharp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CS/source.cs#1)]\n [!code-vb[Classic RegistryKey.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/VB/source.vb#1)]"
  syntax:
    content: public object GetValue (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to retrieve. This string is not case-sensitive.
    - id: defaultValue
      type: System.Object
      description: The value to return if <code>name</code> does not exist.
    return:
      type: System.Object
      description: The value associated with <code>name</code>, with any embedded environment variables left unexpanded, or <code>defaultValue</code> if <code>name</code> is not found.
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value has been marked for deletion.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  id: GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: RegistryKey.GetValueKind(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the registry data type of the value associated with the specified name.
  remarks: "> [!NOTE]\n>  A registry key can have one value that is not associated with any name. When this unnamed value is displayed in the registry editor, the string \"(Default)\" appears instead of a name. To retrieve the registry data type of this unnamed value, specify either `null` or the empty string (\"\") for `name`.  \n  \n For a description of supported registry data types, please see the <xref:Microsoft.Win32.RegistryValueKind> enumeration."
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryValueKind GetValueKind (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the value whose registry data type is to be retrieved. This string is not case-sensitive.
    return:
      type: Microsoft.Win32.RegistryValueKind
      description: The registry data type of the value associated with <code>name</code>.
  overload: Microsoft.Win32.RegistryKey.GetValueKind*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The subkey that contains the specified value does not exist.  \n  \n -or-  \n  \n The name/value pair specified by <code>name</code> does not exist.  \n  \n This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  commentId: M:Microsoft.Win32.RegistryKey.GetValueNames
  id: GetValueNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: RegistryKey.GetValueNames()
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves an array of strings that contains all the value names associated with this key.
  remarks: "If no value names for the key are found, an empty array is returned.  \n  \n A registry key can have a default value â€” that is, a name/value pair in which the name is the empty string (\"\"). If a default value has been set for a registry key, the array returned by the <xref:Microsoft.Win32.RegistryKey.GetValueNames%2A> method includes the empty string."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]"
  syntax:
    content: public string[] GetValueNames ();
    parameters: []
    return:
      type: System.String[]
      description: An array of strings that contains the value names for the current key.
  overload: Microsoft.Win32.RegistryKey.GetValueNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read from the registry key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred; for example, the current key has been deleted.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.Handle
  commentId: P:Microsoft.Win32.RegistryKey.Handle
  id: Handle
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: RegistryKey.Handle
  type: Property
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Gets a <xref href="Microsoft.Win32.SafeHandles.SafeRegistryHandle"></xref> object that represents the registry key that the current <xref href="Microsoft.Win32.RegistryKey"></xref> object encapsulates.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: The handle to the registry key.
  overload: Microsoft.Win32.RegistryKey.Handle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The registry key is closed. Closed keys cannot be accessed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, such as deletion of the current key.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read the key.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.Name
  commentId: P:Microsoft.Win32.RegistryKey.Name
  id: Name
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Name
  nameWithType: RegistryKey.Name
  fullName: RegistryKey.Name
  type: Property
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the name of the key.
  remarks: The name of the key includes the absolute path of this key in the registry, always starting at a base key, for example, HKEY_LOCAL_MACHINE.
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: The absolute (qualified) name of the key.
  overload: Microsoft.Win32.RegistryKey.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  commentId: M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenBaseKey(RegistryHive, RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive, RegistryView)
  fullName: RegistryKey.OpenBaseKey(RegistryHive, RegistryView)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Opens a new <xref href="Microsoft.Win32.RegistryKey"></xref> that represents the requested key on the local machine with the specified view.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: The HKEY to open.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The requested registry key.
  overload: Microsoft.Win32.RegistryKey.OpenBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hKey</code> or <code>view</code> is invalid.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to perform this action.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  commentId: M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive, String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive, String)
  fullName: RegistryKey.OpenRemoteBaseKey(RegistryHive, String)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Opens a new <xref href="Microsoft.Win32.RegistryKey"></xref> that represents the requested key on a remote machine.
  remarks: "The local machine registry is opened if `machineName` is <xref:System.String?displayProperty=fullName>. The requested key must be a root key on the remote machine, and is identified by the appropriate <xref:Microsoft.Win32.RegistryHive> value.  \n  \n In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled."
  example:
  - "The following code example shows how to open a registry key on a remote computer and enumerate the values of the key. The remote computer must be running the remote registry service. Specify the name of the remote computer as a command-line argument when invoking the program.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/VB/source.vb#1)]"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: The HKEY to open, from the <xref href="Microsoft.Win32.RegistryHive"></xref> enumeration.
    - id: machineName
      type: System.String
      description: The remote machine.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The requested registry key.
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hKey</code> is invalid.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>machineName</code> is not found.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>machineName</code> is `null`.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the proper permissions to perform this operation.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  commentId: M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive, String, RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive, String, RegistryView)
  fullName: RegistryKey.OpenRemoteBaseKey(RegistryHive, String, RegistryView)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Opens a new registry key that represents the requested key on a remote machine with the specified view.
  remarks: "The local machine registry is opened if `machineName` is <xref:System.String?displayProperty=fullName>. The requested key must be a root key on the remote machine, and is identified by the appropriate <xref:Microsoft.Win32.RegistryHive> value.  \n  \n In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.  \n  \n On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications. There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications. If `view` is <xref:Microsoft.Win32.RegistryView.Registry64> but the remote machine is running a 32-bit operating system, the returned key will use the <xref:Microsoft.Win32.RegistryView.Registry32> view."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: The HKEY to open from the <xref href="Microsoft.Win32.RegistryHive"></xref> enumeration..
    - id: machineName
      type: System.String
      description: The remote machine.
    - id: view
      type: Microsoft.Win32.RegistryView
      description: The registry view to use.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The requested registry key.
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>hKey</code> or <code>view</code> is invalid.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>machineName</code> is not found.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>machineName</code> is `null`.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the required permissions to perform this operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String, RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck)
  fullName: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the specified subkey for read or read/write access.
  remarks: "Rather than throwing an exception, this method returns `null` if the requested key does not exist.  \n  \n If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, the key is opened for reading and writing; if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> or <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, the key is opened for reading unless the parent key was opened with <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  example:
  - "The following code example creates a subkey containing 100 key/value pairs and closes it. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default>, records the time it takes to read all the values, and closes the subkey. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree> and records the time it takes to read all the values. Finally, the example computes and displays the percentage improvement.  \n  \n [!code-csharp[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/cs/source.cs#1)]\n [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/vb/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: One of the enumeration values that specifies whether the key is opened for read or read/write access.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>permissionCheck</code> contains an invalid value.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read the registry key.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights)
  fullName: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Retrieves the specified subkey for read or read/write access, requesting the specified access rights.
  remarks: "Rather than throwing an exception, this method returns `null` if the requested key does not exist.  \n  \n If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, the key is opened for reading and writing; if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> or <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, the key is opened for reading unless the parent key was opened with <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.  \n  \n The access specified for `permissionCheck` takes precedence over the access specified for `rights`. For example, if you specify <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> for `permissionCheck` and <xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName> for `rights`, an attempt to write to the subkey throws an exception.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: One of the enumeration values that specifies whether the key is opened for read or read/write access.
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: A bitwise combination of enumeration values that specifies the desired security access.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>permissionCheck</code> contains an invalid value.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>rights</code> includes invalid registry rights values.  \n  \n -or-  \n  \n The user does not have the requested permissions."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String, RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String, RegistryRights)
  fullName: RegistryKey.OpenSubKey(String, RegistryRights)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Retrieves a subkey with the specified name and .  \n  \n Available starting in [!INCLUDE[net_2015](~/includes/net-2015-md.md)]"
  remarks: You must open a key before it can be manipulated with other methods and properties. To modify a key, you must open it with an overload of the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method that allows you to specify write access.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to create or open.
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: The rights for the registry key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to access the registry key in the specified mode.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  id: OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: RegistryKey.OpenSubKey(String)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves a subkey as read-only.
  remarks: "You must open a key before it can be manipulated with other methods and properties. To modify a key, you must open it with an overload of the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method that allows you to specify write access, such as the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> overload or the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> overload.  \n  \n If the specified subkey cannot be found, then `null` is returned.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of <xref:Microsoft.Win32.RegistryKey>. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use the one of the static members of the <xref:Microsoft.Win32.Registry> class."
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]\n [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name);
    parameters:
    - id: name
      type: System.String
      description: The name or path of the subkey to open as read-only.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to read the registry key.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  id: OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String, Boolean)
  nameWithType: RegistryKey.OpenSubKey(String, Boolean)
  fullName: RegistryKey.OpenSubKey(String, Boolean)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves a specified subkey, and specifies whether write access is to be applied to the key.
  remarks: "If the requested key does not exist, this method returns `null` instead of throwing an exception.  \n  \n If `writable` is `true`, the key will be opened for reading and writing, otherwise, the key will be opened as read-only.  \n  \n In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> method. To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class."
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]\n [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);
    parameters:
    - id: name
      type: System.String
      description: Name or path of the subkey to open.
    - id: writable
      type: System.Boolean
      description: Set to `true` if you need write access to the key.
    return:
      type: Microsoft.Win32.RegistryKey
      description: The subkey requested, or `null` if the operation failed.
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> is closed (closed keys cannot be accessed).
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to access the registry key in the specified mode.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  commentId: M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  id: SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: RegistryKey.SetAccessControl(RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Applies Windows access control security to an existing registry key.
  remarks: "To modify permissions for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> method to obtain a <xref:System.Security.AccessControl.RegistrySecurity> object representing the existing Windows access control security, modify that <xref:System.Security.AccessControl.RegistrySecurity> object, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A> method to update security for the key.  \n  \n> [!CAUTION]\n>  The <xref:System.Security.AccessControl.RegistrySecurity> object specified for `registrySecurity` replaces the existing security for the registry key. To add permissions for a new user, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> method to obtain the existing access control security, and then modify it."
  example:
  - "The following code example creates a test key. The current user is allowed <xref:System.Security.AccessControl.RegistryRights.ReadKey> and <xref:System.Security.AccessControl.RegistryRights.Delete> rights but denied <xref:System.Security.AccessControl.RegistryRights.ChangePermissions> and <xref:System.Security.AccessControl.RegistryRights.WriteKey> rights. Subsequent attempts to manipulate the key succeed or fail depending on these permissions.  \n  \n Before the key is deleted, the code pauses. You can switch to the registry editor and verify that the same access rights apply when the key is accessed using the registry editor. (This works best if you use **RunAs** from the command line to run the registry editor and the sample code as a local user without administrator rights. The registry editor always allows an administrator to change permissions, even if the particular administrator has been denied those rights. If you have defined a local user named TestUser, the command `runas /user:TestUser cmd` opens a command window from which you can run the registry editor and then the sample code.)  \n  \n [!code-cpp[RegistrySecurity101#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistrySecurity101/cpp/source.cpp#1)]\n [!code-csharp[RegistrySecurity101#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistrySecurity101/CS/source.cs#1)]\n [!code-vb[RegistrySecurity101#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistrySecurity101/VB/source.vb#1)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: The access control security to apply to the current subkey.
  overload: Microsoft.Win32.RegistryKey.SetAccessControl*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The current <xref href="Microsoft.Win32.RegistryKey"></xref> object represents a key with access control security, and the caller does not have <xref href="System.Security.AccessControl.RegistryRights.ChangePermissions"></xref> rights.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>registrySecurity</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  id: SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String, Object)
  nameWithType: RegistryKey.SetValue(String, Object)
  fullName: RegistryKey.SetValue(String, Object)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Sets the specified name/value pair.
  remarks: "Because many values can be stored in each key in the registry, you must use the `name` parameter to specify the particular value you want to set.  \n  \n> [!NOTE]\n>  A registry key can have one value that is not associated with any name. When this unnamed value is displayed in the registry editor, the string \"(Default)\" appears instead of a name. To set this unnamed value, specify either `null` or the empty string (\"\") for `name`.  \n  \n In order to set values in a key, you must open the key with write access. After you have opened a key with write access, you can change any of the name/value pairs in that key.  \n  \n If the specified `name` does not exist in the key, it is created and the associated value is set to `value`.  \n  \n This overload of <xref:Microsoft.Win32.RegistryKey.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>). To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> values, use the <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload that specifies <xref:Microsoft.Win32.RegistryValueKind>.  \n  \n This overload of <xref:Microsoft.Win32.RegistryKey.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>, even if they contain expandable references to environment variables. To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), use the <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload that specifies <xref:Microsoft.Win32.RegistryValueKind>.  \n  \n Numeric types other than 32-bit integers are stored as strings by this method overload. Enumeration elements are stored as strings containing the element names.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n> [!NOTE]\n>  On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages. A Unicode character that is invalid for the current code page is replaced by the best available match. No exception is thrown."
  example:
  - "The following code example shows how the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method determines the registry data type when it sets values. The example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/VB/source.vb#1)]"
  syntax:
    content: public void SetValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to store.
    - id: value
      type: System.Object
      description: The data to be stored.
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>value</code> is an unsupported data type.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "The <xref href=\"Microsoft.Win32.RegistryKey\"></xref> is read-only, and cannot be written to; for example, the key has not been opened with write access.  \n  \n -or-  \n  \n The <xref href=\"Microsoft.Win32.RegistryKey\"></xref> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or modify registry keys.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String, Object, RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String, Object, RegistryValueKind)
  fullName: RegistryKey.SetValue(String, Object, RegistryValueKind)
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Sets the value of a name/value pair in the registry key, using the specified registry data type.
  remarks: "Because many values can be stored in each key in the registry, you must use the `name` parameter to specify the particular value you want to set.  \n  \n> [!NOTE]\n>  A registry key can have one value that is not associated with any name. When this unnamed value is displayed in the registry editor, the string \"(Default)\" appears instead of a name. To set this unnamed value, specify either `null` or the empty string (\"\") for `name`.  \n  \n In order to set values in a key, you must open the key with write access. After you have opened a key with write access, you can change any of the name/value pairs in that key.  \n  \n If the specified `name` does not exist in the key, it is created, and the associated value is set to `value`.  \n  \n> [!NOTE]\n>  Specifying the registry data type <xref:Microsoft.Win32.RegistryValueKind.Unknown> is the same as using the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> overload.  \n  \n If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown. For example, you can store a <xref:System.Int64?displayProperty=fullName> as a <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=fullName>. You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>.  \n  \n> [!NOTE]\n>  If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> or <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>, the conversion is done using the invariant culture.  \n  \n> [!CAUTION]\n>  Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n> [!NOTE]\n>  On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages. A Unicode character that is invalid for the current code page is replaced by the best available match. No exception is thrown."
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method to store several values, specifying the registry data type for each value. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]\n [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: name
      type: System.String
      description: The name of the value to be stored.
    - id: value
      type: System.Object
      description: The data to be stored.
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: The registry data type to use when storing the data.
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The type of <code>value</code> did not match the registry data type specified by <code>valueKind</code>, therefore the data could not be converted properly.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> that contains the specified value is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "The <xref href=\"Microsoft.Win32.RegistryKey\"></xref> is read-only, and cannot be written to; for example, the key has not been opened with write access.  \n  \n -or-  \n  \n The <xref href=\"Microsoft.Win32.RegistryKey\"></xref> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have the permissions required to create or modify registry keys.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount
  id: SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: RegistryKey.SubKeyCount
  type: Property
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the count of subkeys of the current key.
  remarks: This property does not recursively count names. It only returns the count of names on the base level from which it was called.
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]"
  syntax:
    content: public int SubKeyCount { get; }
    return:
      type: System.Int32
      description: The number of subkeys of the current key.
  overload: Microsoft.Win32.RegistryKey.SubKeyCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have read permission for the key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.ToString
  commentId: M:Microsoft.Win32.RegistryKey.ToString
  id: ToString
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: RegistryKey.ToString()
  type: Method
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves a string representation of this key.
  remarks: The return value includes the registry path of the specified key and the hexadecimal value for the key. The registry path includes the absolute root of the specified key, always starts at one of the base keys for the registry, for example, HKEY_LOCAL_MACHINE.
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representing the key. If the specified key is invalid (cannot be found) then `null` is returned.
  overload: Microsoft.Win32.RegistryKey.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being accessed is closed (closed keys cannot be accessed).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.ValueCount
  commentId: P:Microsoft.Win32.RegistryKey.ValueCount
  id: ValueCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: RegistryKey.ValueCount
  type: Property
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Retrieves the count of values in the key.
  remarks: Each registry key has a default value that is not associated with any name. This unnamed value can be set by using the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method and specifying either `null` or the empty string ("") for `name`. If the default value has never been set, it does not contribute to the total count returned by the <xref:Microsoft.Win32.RegistryKey.ValueCount%2A> property; once it has been set, however, it is always counted.
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]\n [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]"
  syntax:
    content: public int ValueCount { get; }
    return:
      type: System.Int32
      description: The number of name/value pairs in the key.
  overload: Microsoft.Win32.RegistryKey.ValueCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The user does not have read permission for the key.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="Microsoft.Win32.RegistryKey"></xref> being manipulated is closed (closed keys cannot be accessed).
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The user does not have the necessary registry rights.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: A system error occurred, for example the current key has been deleted.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: Microsoft.Win32.RegistryKey.View
  commentId: P:Microsoft.Win32.RegistryKey.View
  id: View
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: View
  nameWithType: RegistryKey.View
  fullName: RegistryKey.View
  type: Property
  assemblies:
  - Microsoft.Win32.Registry
  - mscorlib
  namespace: Microsoft.Win32
  summary: Gets the view that was used to create the registry key.
  remarks: "On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications. There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.  \n  \n Do not assume that the view always corresponds to the actual view of the <xref:Microsoft.Win32.RegistryKey>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public Microsoft.Win32.RegistryView View { get; }
    return:
      type: Microsoft.Win32.RegistryView
      description: "The view that was used to create the registry key.  \n  \n -or-  \n  \n <xref href=\"Microsoft.Win32.RegistryView.Default\"></xref>, if no view was used."
  overload: Microsoft.Win32.RegistryKey.View*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Microsoft.Win32.RegistryKey.Close
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: RegistryKey.Close()
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: RegistryKey.CreateSubKey(String)
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String, RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKeyPermissionCheck
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKeyPermissionCheck
  nameWithType: RegistryKeyPermissionCheck
  fullName: Microsoft.Win32.RegistryKeyPermissionCheck
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String, Boolean)
  nameWithType: RegistryKey.CreateSubKey(String, Boolean)
  fullName: RegistryKey.CreateSubKey(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions)
- uid: Microsoft.Win32.RegistryOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryOptions
  nameWithType: RegistryOptions
  fullName: Microsoft.Win32.RegistryOptions
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity)
- uid: System.Security.AccessControl.RegistrySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistrySecurity
  nameWithType: RegistrySecurity
  fullName: System.Security.AccessControl.RegistrySecurity
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String, Boolean, RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String, Boolean, RegistryOptions)
  fullName: RegistryKey.CreateSubKey(String, Boolean, RegistryOptions)
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity)
  fullName: RegistryKey.CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: RegistryKey.DeleteSubKey(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String, Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String, Boolean)
  fullName: RegistryKey.DeleteSubKey(String, Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String, Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String, Boolean)
  fullName: RegistryKey.DeleteSubKeyTree(String, Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: RegistryKey.DeleteSubKeyTree(String)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: RegistryKey.DeleteValue(String)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String, Boolean)
  nameWithType: RegistryKey.DeleteValue(String, Boolean)
  fullName: RegistryKey.DeleteValue(String, Boolean)
- uid: Microsoft.Win32.RegistryKey.Dispose
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: RegistryKey.Dispose()
- uid: Microsoft.Win32.RegistryKey.Flush
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: RegistryKey.Flush()
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: RegistryKey.FromHandle(SafeRegistryHandle)
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeRegistryHandle
  nameWithType: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle, RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle, RegistryView)
  fullName: RegistryKey.FromHandle(SafeRegistryHandle, RegistryView)
- uid: Microsoft.Win32.RegistryView
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryView
  nameWithType: RegistryView
  fullName: Microsoft.Win32.RegistryView
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: RegistryKey.GetAccessControl()
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: RegistryKey.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: RegistryKey.GetSubKeyNames()
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String, Object, RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String, Object, RegistryValueOptions)
  fullName: RegistryKey.GetValue(String, Object, RegistryValueOptions)
- uid: Microsoft.Win32.RegistryValueOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueOptions
  nameWithType: RegistryValueOptions
  fullName: Microsoft.Win32.RegistryValueOptions
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: RegistryKey.GetValue(String)
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String, Object)
  nameWithType: RegistryKey.GetValue(String, Object)
  fullName: RegistryKey.GetValue(String, Object)
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: RegistryKey.GetValueKind(String)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: RegistryKey.GetValueNames()
- uid: Microsoft.Win32.RegistryKey.Handle
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
  fullName: RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey(RegistryHive, RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive, RegistryView)
  fullName: RegistryKey.OpenBaseKey(RegistryHive, RegistryView)
- uid: Microsoft.Win32.RegistryHive
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryHive
  nameWithType: RegistryHive
  fullName: Microsoft.Win32.RegistryHive
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive, String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive, String)
  fullName: RegistryKey.OpenRemoteBaseKey(RegistryHive, String)
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive, String, RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive, String, RegistryView)
  fullName: RegistryKey.OpenRemoteBaseKey(RegistryHive, String, RegistryView)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String, RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck)
  fullName: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights)
  fullName: RegistryKey.OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights)
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String, RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String, RegistryRights)
  fullName: RegistryKey.OpenSubKey(String, RegistryRights)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: RegistryKey.OpenSubKey(String)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String, Boolean)
  nameWithType: RegistryKey.OpenSubKey(String, Boolean)
  fullName: RegistryKey.OpenSubKey(String, Boolean)
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: RegistryKey.SetAccessControl(RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String, Object)
  nameWithType: RegistryKey.SetValue(String, Object)
  fullName: RegistryKey.SetValue(String, Object)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String, Object, RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String, Object, RegistryValueKind)
  fullName: RegistryKey.SetValue(String, Object, RegistryValueKind)
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: RegistryKey.SubKeyCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.RegistryKey.ToString
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: RegistryKey.ToString()
- uid: Microsoft.Win32.RegistryKey.ValueCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
  fullName: RegistryKey.View
- uid: Microsoft.Win32.RegistryKey.Close*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close
  nameWithType: RegistryKey.Close
  fullName: RegistryKey.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.CreateSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey
  nameWithType: RegistryKey.CreateSubKey
  fullName: RegistryKey.CreateSubKey
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey
  nameWithType: RegistryKey.DeleteSubKey
  fullName: RegistryKey.DeleteSubKey
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree
  nameWithType: RegistryKey.DeleteSubKeyTree
  fullName: RegistryKey.DeleteSubKeyTree
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.DeleteValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue
  nameWithType: RegistryKey.DeleteValue
  fullName: RegistryKey.DeleteValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.Dispose*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose
  nameWithType: RegistryKey.Dispose
  fullName: RegistryKey.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.Flush*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush
  nameWithType: RegistryKey.Flush
  fullName: RegistryKey.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.FromHandle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle
  nameWithType: RegistryKey.FromHandle
  fullName: RegistryKey.FromHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.GetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl
  nameWithType: RegistryKey.GetAccessControl
  fullName: RegistryKey.GetAccessControl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames
  nameWithType: RegistryKey.GetSubKeyNames
  fullName: RegistryKey.GetSubKeyNames
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.GetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue
  nameWithType: RegistryKey.GetValue
  fullName: RegistryKey.GetValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.GetValueKind*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind
  nameWithType: RegistryKey.GetValueKind
  fullName: RegistryKey.GetValueKind
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.GetValueNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames
  nameWithType: RegistryKey.GetValueNames
  fullName: RegistryKey.GetValueNames
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.Handle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: RegistryKey.Handle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.Name*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
  fullName: RegistryKey.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey
  nameWithType: RegistryKey.OpenBaseKey
  fullName: RegistryKey.OpenBaseKey
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey
  nameWithType: RegistryKey.OpenRemoteBaseKey
  fullName: RegistryKey.OpenRemoteBaseKey
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.OpenSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey
  nameWithType: RegistryKey.OpenSubKey
  fullName: RegistryKey.OpenSubKey
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  - netcore-1.0
  - netcore-1.1
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.SetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl
  nameWithType: RegistryKey.SetAccessControl
  fullName: RegistryKey.SetAccessControl
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.SetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue
  nameWithType: RegistryKey.SetValue
  fullName: RegistryKey.SetValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.SubKeyCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: RegistryKey.SubKeyCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.ToString*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString
  nameWithType: RegistryKey.ToString
  fullName: RegistryKey.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.ValueCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: RegistryKey.ValueCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: Microsoft.Win32.RegistryKey.View*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
  fullName: RegistryKey.View
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32/RegistryKey.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey)
  parent: Microsoft.Win32.RegistryAclExtensions
  isExternal: false
  name: GetAccessControl(RegistryKey)
  nameWithType: RegistryAclExtensions.GetAccessControl(RegistryKey)
  fullName: RegistryAclExtensions.GetAccessControl(RegistryKey)
- uid: Microsoft.Win32.RegistryAclExtensions.GetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryAclExtensions
  isExternal: false
  name: GetAccessControl(RegistryKey, AccessControlSections)
  nameWithType: RegistryAclExtensions.GetAccessControl(RegistryKey, AccessControlSections)
  fullName: RegistryAclExtensions.GetAccessControl(RegistryKey, AccessControlSections)
- uid: Microsoft.Win32.RegistryAclExtensions.SetAccessControl(Microsoft.Win32.RegistryKey,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryAclExtensions
  isExternal: false
  name: SetAccessControl(RegistryKey, RegistrySecurity)
  nameWithType: RegistryAclExtensions.SetAccessControl(RegistryKey, RegistrySecurity)
  fullName: RegistryAclExtensions.SetAccessControl(RegistryKey, RegistrySecurity)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
