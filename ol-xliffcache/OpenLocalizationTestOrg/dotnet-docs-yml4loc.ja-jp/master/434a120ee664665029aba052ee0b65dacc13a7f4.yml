### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpAnySourceMulticastClient
  commentId: T:System.Net.Sockets.UdpAnySourceMulticastClient
  id: UdpAnySourceMulticastClient
  children:
  - System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  - System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  - System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  langs:
  - csharp
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient
  type: Class
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpAnySourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UdpAnySourceMulticastClient(IPAddress, Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)
  fullName: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Creates a new <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> UDP client that can subscribe to a group address and receive datagrams from any source.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.  \n  \n The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.  \n  \n The `localPort` parameter must not specify a port less than 1,024."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: groupAddress
      type: System.Net.IPAddress
      description: The multicast group address for this receiver to subscribe to.
    - id: localPort
      type: System.Int32
      description: The local port for this receiver to bind to.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>groupAddress</code> is `null`. reference
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>localPort</code> is less than 0 -or- <code>localPort</code> is greater than 65,535.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.  \n  \n The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.  \n  \n If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: A callback method to invoke when the operation completes.
    - id: state
      type: System.Object
      description: Optional state information to pass to the <code>callback</code> method for this operation.
    return:
      type: System.IAsyncResult
      description: "Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has already been joined or a join operation is currently in progress.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender. The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to store the received data.
    - id: offset
      type: System.Int32
      description: The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to receive and store in the <code>buffer</code>.
    - id: callback
      type: System.AsyncCallback
      description: The callback method to invoke when the operation completes.
    - id: state
      type: System.Object
      description: Optional state information to pass to the <code>callback</code> method for this operation.
    return:
      type: System.IAsyncResult
      description: "Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  id: BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Begins the operation of sending a unicast packet to the specified destination.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group.  \n  \n The client must have completed a join to the multicast group. The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver. Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n If the destination port specified in the `remoteEndPoint` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException>is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer that contains the data to send.
    - id: offset
      type: System.Int32
      description: The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.
    - id: count
      type: System.Int32
      description: The number of bytes to send from the <code>buffer</code>.
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: The remote endpoint to which the packet is to be sent.
    - id: callback
      type: System.AsyncCallback
      description: The callback method to invoke when the operation completes.
    - id: state
      type: System.Object
      description: Optional state information to pass to the <code>callback</code> method for this operation.
    return:
      type: System.IAsyncResult
      description: "Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group.  \n  \n The client must have completed a join to the multicast group.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer that contains the data to send.
    - id: offset
      type: System.Int32
      description: The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.
    - id: count
      type: System.Int32
      description: The number of bytes to send from the <code>buffer</code>.
    - id: callback
      type: System.AsyncCallback
      description: The callback method to invoke when the operation completes.
    - id: state
      type: System.Object
      description: Optional state information to pass to the <code>callback</code> method for this operation.
    return:
      type: System.IAsyncResult
      description: "Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  id: BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Blocks a source so that multicast packets originating from it are no longer received.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received. The client must have completed a join to the multicast group.  \n  \n The `sourceAddress` parameter may be either an IPv6 or IPv4 address, but the `sourceAddress` parameter must match the address family of the multicast group that the client joined.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public void BlockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: The address of the source to block.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: UdpAnySourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Leaves the multicast group and releases all resources used by the current instance of the <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> class and the underlying the <xref href="System.Net.Sockets.Socket"></xref>.
  remarks: "Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>was occupying.  \n  \n Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Completes the asynchronous join group operation to a multicast group.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.  \n  \n If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the asynchronous join operation.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>result</code> is a null reference (Nothing in Visual Basic).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  id: EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromGroup(IAsyncResult, IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)
  fullName: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the asynchronous receive operation.
    - id: source
      type: System.Net.IPEndPoint
      description: The source endpoint where the packet was received from.
    return:
      type: System.Int32
      description: The length, in bytes, of the message stored in the buffer parameter passed to the <xref href="System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></xref> method.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>result</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  id: EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Completes the operation of sending a unicast packet to the specified destination.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public void EndSendTo (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the asynchronous send operation.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>result</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  id: EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Completes the operation of sending a packet to a multicast group.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public void EndSendToGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result of the asynchronous send operation.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>result</code> is a null reference (Nothing in Visual Basic).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  commentId: P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: UdpAnySourceMulticastClient.MulticastLoopback
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.
  remarks: Multicast traffic is a scalable method for many-to-many communication on the Internet. A process subscribes to a multicast group address. Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public bool MulticastLoopback { get; set; }
    return:
      type: System.Boolean
      description: "Returns <xref href=\"System.Boolean\"></xref>.  \n  \n A value that indicates if outgoing packets to a multicast group are delivered to the sending application."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  commentId: P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: UdpAnySourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Gets or sets the size, in bytes, of the receive buffer of the <xref href="System.Net.Sockets.Socket"></xref> used for multicast receive operations on this <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> instance.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance. Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.  \n  \n The default size of the receive buffer on Windows is 8,192 bytes."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Returns <xref href=\"System.Int32\"></xref>.  \n  \n The size, in bytes, of the receive buffer."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The buffer size specified is less than 0.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  commentId: P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: UdpAnySourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Gets or sets the size, in bytes, of the send buffer of the <xref href="System.Net.Sockets.Socket"></xref> used for multicast send operations on this <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> instance.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.  \n  \n calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.  \n  \n The default size of the send buffer on Windows is 8,192 bytes."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Returns <xref href=\"System.Int32\"></xref>.  \n  \n The size, in bytes, of the send buffer."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The buffer size specified is less than 0.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  commentId: M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  id: UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: Unblocks a source that was previously blocked by a call to the <xref href="System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)"></xref> method so that multicast packets originating from it can be received.
  remarks: "The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received. The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.  \n  \n The client must have completed a join to the multicast group.  \n  \n The `sourceAddress` parameter may be either an IPv6 or IPv4 multicast address.  \n  \n If the specified source address in the `sourceAddress` parameter was not previously blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  \n  \n If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public void UnblockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: The address of the source to unblock.
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The multicast group has not yet been joined.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.Net.Sockets.UdpAnySourceMulticastClient"></xref> has been disposed.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.Net.Sockets.SocketException
  parent: System.Net.Sockets
  isExternal: false
  name: SocketException
  nameWithType: SocketException
  fullName: System.Net.Sockets.SocketException
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient(IPAddress, Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)
  fullName: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress, Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginSendTo(Byte[], Int32, Int32, IPEndPoint, AsyncCallback, Object)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: false
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: UdpAnySourceMulticastClient.BlockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: UdpAnySourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup(IAsyncResult, IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)
  fullName: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult, IPEndPoint)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient
  fullName: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup
  fullName: UdpAnySourceMulticastClient.BeginJoinGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup
  fullName: UdpAnySourceMulticastClient.BeginReceiveFromGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo
  fullName: UdpAnySourceMulticastClient.BeginSendTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup
  fullName: UdpAnySourceMulticastClient.BeginSendToGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource
  nameWithType: UdpAnySourceMulticastClient.BlockSource
  fullName: UdpAnySourceMulticastClient.BlockSource
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpAnySourceMulticastClient.Dispose
  fullName: UdpAnySourceMulticastClient.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup
  fullName: UdpAnySourceMulticastClient.EndJoinGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup
  fullName: UdpAnySourceMulticastClient.EndReceiveFromGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo
  nameWithType: UdpAnySourceMulticastClient.EndSendTo
  fullName: UdpAnySourceMulticastClient.EndSendTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup
  fullName: UdpAnySourceMulticastClient.EndSendToGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: UdpAnySourceMulticastClient.MulticastLoopback
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: UdpAnySourceMulticastClient.ReceiveBufferSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: UdpAnySourceMulticastClient.SendBufferSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource
  nameWithType: UdpAnySourceMulticastClient.UnblockSource
  fullName: UdpAnySourceMulticastClient.UnblockSource
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpAnySourceMulticastClient.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
