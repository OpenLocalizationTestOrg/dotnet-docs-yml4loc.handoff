{"nodes":[{"content":"Provides methods to satisfy imports on an existing part instance.","nodes":[{"pos":[0,65],"content":"Provides methods to satisfy imports on an existing part instance.","nodes":[{"content":"Provides methods to satisfy imports on an existing part instance.","pos":[0,65]}]}],"pos":[722,788],"yaml":true},{"content":"> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[2,528],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[799,1340],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> class.","nodes":[{"pos":[0,149],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> class."}],"pos":[3431,3581],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.","nodes":[{"pos":[0,517],"content":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.","pos":[0,117],"source":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> in an unusable state.","pos":[118,241],"source":" The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> was occupying.","pos":[242,517],"source":" After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying."}]},{"pos":[524,729],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[737,1077],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.","pos":[8,338],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.","pos":[1,139],"source":" Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[140,330],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method."}]}]}],"pos":[3592,4677],"yaml":true,"extradata":"MT"},{"content":"Composes the specified part, with recomposition and validation disabled.","nodes":[{"pos":[0,72],"content":"Composes the specified part, with recomposition and validation disabled.","nodes":[{"content":"Composes the specified part, with recomposition and validation disabled.","pos":[0,72]}]}],"pos":[6320,6393],"yaml":true},{"content":"The part to compose.","nodes":[{"pos":[0,20],"content":"The part to compose.","nodes":[{"content":"The part to compose.","pos":[0,20]}]}],"pos":[6637,6658],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.CompositionService\n  commentId: T:System.ComponentModel.Composition.Hosting.CompositionService\n  id: CompositionService\n  children:\n  - System.ComponentModel.Composition.Hosting.CompositionService.Dispose\n  - System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)\n  langs:\n  - csharp\n  name: CompositionService\n  nameWithType: CompositionService\n  fullName: System.ComponentModel.Composition.Hosting.CompositionService\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Provides methods to satisfy imports on an existing part instance.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.\n  syntax:\n    content: 'public class CompositionService : IDisposable, System.ComponentModel.Composition.ICompositionService'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.Composition.ICompositionService\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  - System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CompositionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.CompositionService.Dispose\n  commentId: M:System.ComponentModel.Composition.Hosting.CompositionService.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Composition.Hosting.CompositionService\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CompositionService.Dispose()\n  fullName: CompositionService.Dispose()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.CompositionContainer\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Hosting.CompositionService.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CompositionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)\n  commentId: M:System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)\n  id: SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)\n  parent: System.ComponentModel.Composition.Hosting.CompositionService\n  langs:\n  - csharp\n  name: SatisfyImportsOnce(ComposablePart)\n  nameWithType: CompositionService.SatisfyImportsOnce(ComposablePart)\n  fullName: CompositionService.SatisfyImportsOnce(ComposablePart)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Composes the specified part, with recomposition and validation disabled.\n  syntax:\n    content: public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);\n    parameters:\n    - id: part\n      type: System.ComponentModel.Composition.Primitives.ComposablePart\n      description: The part to compose.\n  overload: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CompositionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Composition.Hosting.CompositionService.Dispose\n  parent: System.ComponentModel.Composition.Hosting.CompositionService\n  isExternal: false\n  name: Dispose()\n  nameWithType: CompositionService.Dispose()\n  fullName: CompositionService.Dispose()\n- uid: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)\n  parent: System.ComponentModel.Composition.Hosting.CompositionService\n  isExternal: false\n  name: SatisfyImportsOnce(ComposablePart)\n  nameWithType: CompositionService.SatisfyImportsOnce(ComposablePart)\n  fullName: CompositionService.SatisfyImportsOnce(ComposablePart)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePart\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePart\n  nameWithType: ComposablePart\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePart\n- uid: System.ComponentModel.Composition.Hosting.CompositionService.Dispose*\n  parent: System.ComponentModel.Composition.Hosting.CompositionService\n  isExternal: false\n  name: Dispose\n  nameWithType: CompositionService.Dispose\n  fullName: CompositionService.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CompositionService.xml\n- uid: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce*\n  parent: System.ComponentModel.Composition.Hosting.CompositionService\n  isExternal: false\n  name: SatisfyImportsOnce\n  nameWithType: CompositionService.SatisfyImportsOnce\n  fullName: CompositionService.SatisfyImportsOnce\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CompositionService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce(ICompositionService, Object)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object)\n  fullName: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object)\n- uid: System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)\n  parent: System.ComponentModel.Composition.AttributedModelServices\n  isExternal: false\n  name: SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  nameWithType: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n  fullName: AttributedModelServices.SatisfyImportsOnce(ICompositionService, Object, ReflectionContext)\n- uid: System.ComponentModel.Composition.ICompositionService\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ICompositionService\n  nameWithType: ICompositionService\n  fullName: System.ComponentModel.Composition.ICompositionService\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}