{"nodes":[{"content":"The <xref href=\"System.AddIn.Contract.Automation\"></xref> namespace contains interfaces that components use to access type information and invoke type members.","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Automation\"&gt;&lt;/xref&gt;</ph> namespace contains interfaces that components use to access type information and invoke type members.","source":"The <xref href=\"System.AddIn.Contract.Automation\"></xref> namespace contains interfaces that components use to access type information and invoke type members."}],"pos":[1066,1226],"yaml":true},{"content":"Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object. The <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=fullName>, <xref:System.AddIn.Contract.Automation?displayProperty=fullName>, and <xref:System.AddIn.Contract.Collections?displayProperty=fullName> namespaces to communicate. The interfaces in these namespaces are also called contracts. All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.  \n  \n When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components. Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace provide access to type information for delegates, properties, methods, events, and fields.  \n  \n Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.","nodes":[{"pos":[0,778],"content":"Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object. The <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=fullName>, <xref:System.AddIn.Contract.Automation?displayProperty=fullName>, and <xref:System.AddIn.Contract.Collections?displayProperty=fullName> namespaces to communicate. The interfaces in these namespaces are also called contracts. All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.","nodes":[{"content":"Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object. The <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=fullName>, <xref:System.AddIn.Contract.Automation?displayProperty=fullName>, and <xref:System.AddIn.Contract.Collections?displayProperty=fullName> namespaces to communicate. The interfaces in these namespaces are also called contracts. All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.","pos":[0,778],"nodes":[{"content":"Use the interfaces in the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation?displayProperty=fullName&gt;</ph> namespace to enable components to access type information for a remote object without having direct access to the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> of the remote object.","pos":[0,245],"source":"Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation?displayProperty=fullName&gt;</ph> namespace defines reflection functionality for components that use the interfaces and structures in the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.AddIn.Contract.Automation?displayProperty=fullName&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.AddIn.Contract.Collections?displayProperty=fullName&gt;</ph> namespaces to communicate.","pos":[246,636],"source":" The <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=fullName>, <xref:System.AddIn.Contract.Automation?displayProperty=fullName>, and <xref:System.AddIn.Contract.Collections?displayProperty=fullName> namespaces to communicate."},{"content":"The interfaces in these namespaces are also called contracts.","pos":[637,698]},{"content":"All contracts derive from the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> interface.","pos":[699,778],"source":" All contracts derive from the <xref:System.AddIn.Contract.IContract> interface."}]}]},{"pos":[785,1459],"content":"When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components. Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace provide access to type information for delegates, properties, methods, events, and fields.","nodes":[{"content":"When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components. Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace provide access to type information for delegates, properties, methods, events, and fields.","pos":[0,674],"nodes":[{"content":"When using contracts to manage the communication between components, you must implement the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> interface in a type to expose the type information to other components.","pos":[0,225],"source":"When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components."},{"content":"Components can then access the members of the type by calling the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method of the interface to get an <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>.","pos":[226,465],"source":" Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>."},{"content":"The other interfaces and structures in the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation?displayProperty=fullName&gt;</ph> namespace provide access to type information for delegates, properties, methods, events, and fields.","pos":[466,674],"source":" The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace provide access to type information for delegates, properties, methods, events, and fields."}]}]},{"pos":[1466,1721],"content":"Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.","nodes":[{"content":"Components can use the contracts in the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Automation?displayProperty=fullName&gt;</ph> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.","pos":[0,255],"source":"Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain."}]}],"pos":[1237,2965],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Automation\n  id: System.AddIn.Contract.Automation\n  children:\n  - System.AddIn.Contract.Automation.IRemoteDelegateContract\n  - System.AddIn.Contract.Automation.IRemoteEventInfoContract\n  - System.AddIn.Contract.Automation.IRemoteFieldInfoContract\n  - System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  - System.AddIn.Contract.Automation.IRemoteObjectContract\n  - System.AddIn.Contract.Automation.IRemotePropertyInfoContract\n  - System.AddIn.Contract.Automation.IRemoteTypeContract\n  - System.AddIn.Contract.Automation.RemoteFieldData\n  - System.AddIn.Contract.Automation.RemoteMemberData\n  - System.AddIn.Contract.Automation.RemoteMethodData\n  - System.AddIn.Contract.Automation.RemoteParameterData\n  - System.AddIn.Contract.Automation.RemotePropertyData\n  - System.AddIn.Contract.Automation.RemoteTypeData\n  langs:\n  - csharp\n  name: System.AddIn.Contract.Automation\n  nameWithType: System.AddIn.Contract.Automation\n  fullName: System.AddIn.Contract.Automation\n  type: Namespace\n  summary: The <xref href=\"System.AddIn.Contract.Automation\"></xref> namespace contains interfaces that components use to access type information and invoke type members.\n  remarks: \"Use the interfaces in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to enable components to access type information for a remote object without having direct access to the <xref:System.Type> of the remote object. The <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace defines reflection functionality for components that use the interfaces and structures in the <xref:System.AddIn.Contract?displayProperty=fullName>, <xref:System.AddIn.Contract.Automation?displayProperty=fullName>, and <xref:System.AddIn.Contract.Collections?displayProperty=fullName> namespaces to communicate. The interfaces in these namespaces are also called contracts. All contracts derive from the <xref:System.AddIn.Contract.IContract> interface.  \\n  \\n When using contracts to manage the communication between components, you must implement the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface in a type to expose the type information to other components. Components can then access the members of the type by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of the interface to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. The other interfaces and structures in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace provide access to type information for delegates, properties, methods, events, and fields.  \\n  \\n Components can use the contracts in the <xref:System.AddIn.Contract.Automation?displayProperty=fullName> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.AddIn.Contract.Automation.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.AddIn.Contract.Automation.IRemoteDelegateContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteDelegateContract\n  nameWithType: IRemoteDelegateContract\n  fullName: System.AddIn.Contract.Automation.IRemoteDelegateContract\n- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteEventInfoContract\n  nameWithType: IRemoteEventInfoContract\n  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract\n- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteFieldInfoContract\n  nameWithType: IRemoteFieldInfoContract\n  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract\n- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteMethodInfoContract\n  nameWithType: IRemoteMethodInfoContract\n  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n- uid: System.AddIn.Contract.Automation.IRemoteObjectContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteObjectContract\n  nameWithType: IRemoteObjectContract\n  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract\n- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemotePropertyInfoContract\n  nameWithType: IRemotePropertyInfoContract\n  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract\n- uid: System.AddIn.Contract.Automation.IRemoteTypeContract\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: IRemoteTypeContract\n  nameWithType: IRemoteTypeContract\n  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract\n- uid: System.AddIn.Contract.Automation.RemoteFieldData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemoteFieldData\n  nameWithType: RemoteFieldData\n  fullName: System.AddIn.Contract.Automation.RemoteFieldData\n- uid: System.AddIn.Contract.Automation.RemoteMemberData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemoteMemberData\n  nameWithType: RemoteMemberData\n  fullName: System.AddIn.Contract.Automation.RemoteMemberData\n- uid: System.AddIn.Contract.Automation.RemoteMethodData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemoteMethodData\n  nameWithType: RemoteMethodData\n  fullName: System.AddIn.Contract.Automation.RemoteMethodData\n- uid: System.AddIn.Contract.Automation.RemoteParameterData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemoteParameterData\n  nameWithType: RemoteParameterData\n  fullName: System.AddIn.Contract.Automation.RemoteParameterData\n- uid: System.AddIn.Contract.Automation.RemotePropertyData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemotePropertyData\n  nameWithType: RemotePropertyData\n  fullName: System.AddIn.Contract.Automation.RemotePropertyData\n- uid: System.AddIn.Contract.Automation.RemoteTypeData\n  parent: System.AddIn.Contract.Automation\n  isExternal: false\n  name: RemoteTypeData\n  nameWithType: RemoteTypeData\n  fullName: System.AddIn.Contract.Automation.RemoteTypeData\n"}