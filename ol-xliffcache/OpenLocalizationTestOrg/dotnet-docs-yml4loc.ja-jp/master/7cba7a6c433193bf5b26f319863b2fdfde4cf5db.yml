### YamlMime:ManagedReference
items:
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  id: BinaryWriter
  children:
  - System.IO.BinaryWriter.#ctor
  - System.IO.BinaryWriter.#ctor(System.IO.Stream)
  - System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  - System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  - System.IO.BinaryWriter.BaseStream
  - System.IO.BinaryWriter.Close
  - System.IO.BinaryWriter.Dispose
  - System.IO.BinaryWriter.Dispose(System.Boolean)
  - System.IO.BinaryWriter.Flush
  - System.IO.BinaryWriter.Null
  - System.IO.BinaryWriter.OutStream
  - System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  - System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.BinaryWriter.Write(System.UInt64)
  - System.IO.BinaryWriter.Write(System.UInt32)
  - System.IO.BinaryWriter.Write(System.UInt16)
  - System.IO.BinaryWriter.Write(System.String)
  - System.IO.BinaryWriter.Write(System.Single)
  - System.IO.BinaryWriter.Write(System.SByte)
  - System.IO.BinaryWriter.Write(System.Int64)
  - System.IO.BinaryWriter.Write(System.Char)
  - System.IO.BinaryWriter.Write(System.Int16)
  - System.IO.BinaryWriter.Write(System.Double)
  - System.IO.BinaryWriter.Write(System.Decimal)
  - System.IO.BinaryWriter.Write(System.Char[])
  - System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.BinaryWriter.Write(System.Byte[])
  - System.IO.BinaryWriter.Write(System.Byte)
  - System.IO.BinaryWriter.Write(System.Boolean)
  - System.IO.BinaryWriter.Write(System.Int32)
  - System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  langs:
  - csharp
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
  type: Class
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes primitive types in binary to a stream and supports writing strings in a specific encoding.
  remarks: "The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream. For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value. The class includes write methods that support different data types.  \n  \n When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object. If you do not specify an encoding type, UTF-8 is used.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n A derived class can override the methods of this class to give unique character encodings."
  example:
  - "The following code example demonstrates how to store and retrieve application settings in a file.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class BinaryWriter : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.#ctor
  commentId: M:System.IO.BinaryWriter.#ctor
  id: '#ctor'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: BinaryWriter()
  nameWithType: BinaryWriter.BinaryWriter()
  fullName: BinaryWriter.BinaryWriter()
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryWriter"></xref> class that writes to a stream.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: protected BinaryWriter ();
    parameters: []
  overload: System.IO.BinaryWriter.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream)
  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: BinaryWriter(Stream)
  nameWithType: BinaryWriter.BinaryWriter(Stream)
  fullName: BinaryWriter.BinaryWriter(Stream)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryWriter"></xref> class based on the specified stream and using UTF-8 encoding.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example demonstrates how to store and retrieve application settings in a file.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]"
  syntax:
    content: public BinaryWriter (System.IO.Stream output);
    parameters:
    - id: output
      type: System.IO.Stream
      description: The output stream.
  overload: System.IO.BinaryWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support writing or is already closed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>output</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: BinaryWriter(Stream, Encoding)
  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding)
  fullName: BinaryWriter.BinaryWriter(Stream, Encoding)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryWriter"></xref> class based on the specified stream and character encoding.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding);
    parameters:
    - id: output
      type: System.IO.Stream
      description: The output stream.
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
  overload: System.IO.BinaryWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support writing or is already closed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>output</code> or <code>encoding</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  commentId: M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: BinaryWriter(Stream, Encoding, Boolean)
  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)
  fullName: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryWriter"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.
  syntax:
    content: public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding, bool leaveOpen);
    parameters:
    - id: output
      type: System.IO.Stream
      description: The output stream.
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
    - id: leaveOpen
      type: System.Boolean
      description: '`true` to leave the stream open after the <xref href="System.IO.BinaryWriter"></xref> object is disposed; otherwise, `false`.'
  overload: System.IO.BinaryWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support writing or is already closed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>output</code> or <code>encoding</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.BaseStream
  commentId: P:System.IO.BinaryWriter.BaseStream
  id: BaseStream
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: BaseStream
  nameWithType: BinaryWriter.BaseStream
  fullName: BinaryWriter.BaseStream
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets the underlying stream of the <xref href="System.IO.BinaryWriter"></xref>.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class. `MemoryStream` only reads and writes `Byte` data.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]"
  syntax:
    content: public virtual System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: The underlying stream associated with the `BinaryWriter`.
  overload: System.IO.BinaryWriter.BaseStream*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Close
  commentId: M:System.IO.BinaryWriter.Close
  id: Close
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Close()
  nameWithType: BinaryWriter.Close()
  fullName: BinaryWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Closes the current <xref href="System.IO.BinaryWriter"></xref> and the underlying stream.
  remarks: "This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.IO.BinaryWriter.Close*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Dispose
  commentId: M:System.IO.BinaryWriter.Dispose
  id: Dispose
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: BinaryWriter.Dispose()
  fullName: BinaryWriter.Dispose()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases all resources used by the current instance of the <xref href="System.IO.BinaryWriter"></xref> class.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.BinaryWriter.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Dispose(System.Boolean)
  commentId: M:System.IO.BinaryWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: BinaryWriter.Dispose(Boolean)
  fullName: BinaryWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases the unmanaged resources used by the <xref href="System.IO.BinaryWriter"></xref> and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.BinaryWriter.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Flush
  commentId: M:System.IO.BinaryWriter.Flush
  id: Flush
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: BinaryWriter.Flush()
  fullName: BinaryWriter.Flush()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
  remarks: "All derived classes should override `Flush` to ensure that all buffered data is sent to the stream.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.IO.BinaryWriter.Flush*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Null
  commentId: F:System.IO.BinaryWriter.Null
  id: "Null"
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: "Null"
  nameWithType: BinaryWriter.Null
  fullName: BinaryWriter.Null
  type: Field
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Specifies a <xref href="System.IO.BinaryWriter"></xref> with no backing store.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: public static readonly System.IO.BinaryWriter Null;
    return:
      type: System.IO.BinaryWriter
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.OutStream
  commentId: F:System.IO.BinaryWriter.OutStream
  id: OutStream
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: OutStream
  nameWithType: BinaryWriter.OutStream
  fullName: BinaryWriter.OutStream
  type: Field
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Holds the underlying stream.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: protected System.IO.Stream OutStream;
    return:
      type: System.IO.Stream
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  commentId: M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  id: Seek(System.Int32,System.IO.SeekOrigin)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Seek(Int32, SeekOrigin)
  nameWithType: BinaryWriter.Seek(Int32, SeekOrigin)
  fullName: BinaryWriter.Seek(Int32, SeekOrigin)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Sets the position within the current stream.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following example writes a series of byte values to a file. The example uses <xref:System.IO.BinaryWriter.Seek%2A> to move to various locations in the file, and then writes marker bytes by using the <xref:System.IO.BinaryWriter.Write%2A> method.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CPP/source3.cpp#5)]\n [!code-csharp[System.IO.BinaryReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source3.cs#5)]\n [!code-vb[System.IO.BinaryReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source3.vb#5)]"
  syntax:
    content: public virtual long Seek (int offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int32
      description: A byte offset relative to <code>origin</code>.
    - id: origin
      type: System.IO.SeekOrigin
      description: A field of <xref href="System.IO.SeekOrigin"></xref> indicating the reference point from which the new position is to be obtained.
    return:
      type: System.Int64
      description: The position with the current stream.
  overload: System.IO.BinaryWriter.Seek*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The file pointer was moved to an invalid location.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.IO.SeekOrigin"></xref> value is invalid.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Byte[], Int32, Int32)
  nameWithType: BinaryWriter.Write(Byte[], Int32, Int32)
  fullName: BinaryWriter.Write(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a region of a byte array to the current stream.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]"
  syntax:
    content: public virtual void Write (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: A byte array containing the data to write.
    - id: index
      type: System.Int32
      description: The starting point in <code>buffer</code> at which to begin writing.
    - id: count
      type: System.Int32
      description: The number of bytes to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.UInt64)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(UInt64)
  nameWithType: BinaryWriter.Write(UInt64)
  fullName: BinaryWriter.Write(UInt64)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void Write (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: The eight-byte unsigned integer to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.UInt32)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(UInt32)
  nameWithType: BinaryWriter.Write(UInt32)
  fullName: BinaryWriter.Write(UInt32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void Write (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: The four-byte unsigned integer to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.UInt16)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt16)
  id: Write(System.UInt16)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(UInt16)
  nameWithType: BinaryWriter.Write(UInt16)
  fullName: BinaryWriter.Write(UInt16)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void Write (ushort value);
    parameters:
    - id: value
      type: System.UInt16
      description: The two-byte unsigned integer to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.String)
  commentId: M:System.IO.BinaryWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: BinaryWriter.Write(String)
  fullName: BinaryWriter.Write(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a length-prefixed string to this stream in the current encoding of the <xref href="System.IO.BinaryWriter"></xref>, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.
  remarks: "Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream. This value is written as an unsigned integer. This method then writes that many bytes to the stream.  \n  \n For example, the string \"A\" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example demonstrates how to store and retrieve application settings in a file.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]"
  syntax:
    content: public virtual void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: The value to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Single)
  commentId: M:System.IO.BinaryWriter.Write(System.Single)
  id: Write(System.Single)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Single)
  nameWithType: BinaryWriter.Write(Single)
  fullName: BinaryWriter.Write(Single)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example demonstrates how to store and retrieve application settings in a file.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]"
  syntax:
    content: public virtual void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: The four-byte floating-point value to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.SByte)
  commentId: M:System.IO.BinaryWriter.Write(System.SByte)
  id: Write(System.SByte)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(SByte)
  nameWithType: BinaryWriter.Write(SByte)
  fullName: BinaryWriter.Write(SByte)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a signed byte to the current stream and advances the stream position by one byte.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public virtual void Write (sbyte value);
    parameters:
    - id: value
      type: System.SByte
      description: The signed byte to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Int64)
  commentId: M:System.IO.BinaryWriter.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: BinaryWriter.Write(Int64)
  fullName: BinaryWriter.Write(Int64)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public virtual void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The eight-byte signed integer to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Char)
  commentId: M:System.IO.BinaryWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: BinaryWriter.Write(Char)
  fullName: BinaryWriter.Write(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream.
  remarks: "Because of data formatting conflicts, using this method with the following encodings is not recommended:  \n  \n-   UTF-7  \n  \n-   ISO-2022-JP  \n  \n-   ISCII  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).  \n  \n Unicode surrogate characters must be written out as pairs together in the same call, not individually. If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload."
  example:
  - "The following code example shows how to read and write data using memory as a backing store.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]"
  syntax:
    content: public virtual void Write (char ch);
    parameters:
    - id: ch
      type: System.Char
      description: The non-surrogate, Unicode character to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>ch</code> is a single surrogate character.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Int16)
  commentId: M:System.IO.BinaryWriter.Write(System.Int16)
  id: Write(System.Int16)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Int16)
  nameWithType: BinaryWriter.Write(Int16)
  fullName: BinaryWriter.Write(Int16)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|"
  syntax:
    content: public virtual void Write (short value);
    parameters:
    - id: value
      type: System.Int16
      description: The two-byte signed integer to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Double)
  commentId: M:System.IO.BinaryWriter.Write(System.Double)
  id: Write(System.Double)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Double)
  nameWithType: BinaryWriter.Write(Double)
  fullName: BinaryWriter.Write(Double)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class. `MemoryStream` only reads and writes `Byte` data.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]"
  syntax:
    content: public virtual void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: The eight-byte floating-point value to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Decimal)
  commentId: M:System.IO.BinaryWriter.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Decimal)
  nameWithType: BinaryWriter.Write(Decimal)
  fullName: BinaryWriter.Write(Decimal)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a decimal value to the current stream and advances the stream position by sixteen bytes.
  remarks: "The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|"
  syntax:
    content: public virtual void Write (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: The decimal value to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Char[])
  commentId: M:System.IO.BinaryWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: BinaryWriter.Write(Char[])
  fullName: BinaryWriter.Write(Char[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character array to the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific characters being written to the stream.
  remarks: "The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Write to a text file.|[How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md)|  \n|Append text to a file.|[How to: Open and Append to a Log File](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=fullName><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=fullName>|  \n|Get the size of a file.|<xref:System.IO.FileInfo.Length%2A?displayProperty=fullName>|  \n|Get the attributes of a file.|<xref:System.IO.File.GetAttributes%2A?displayProperty=fullName>|  \n|Set the attributes of a file.|<xref:System.IO.File.SetAttributes%2A?displayProperty=fullName>|  \n|Determine if a file exists.|<xref:System.IO.File.Exists%2A?displayProperty=fullName>|  \n|Read from a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  \n|Write to a binary file.|[How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|"
  example:
  - "The following code example shows how to read and write data using memory as a backing store.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]"
  syntax:
    content: public virtual void Write (char[] chars);
    parameters:
    - id: chars
      type: System.Char[]
      description: A character array containing the data to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>chars</code> is `null`.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Char[], Int32, Int32)
  nameWithType: BinaryWriter.Write(Char[], Int32, Int32)
  fullName: BinaryWriter.Write(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the `Encoding` used and perhaps the specific characters being written to the stream.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example shows how to read and write data using memory as a backing store.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]"
  syntax:
    content: public virtual void Write (char[] chars, int index, int count);
    parameters:
    - id: chars
      type: System.Char[]
      description: A character array containing the data to write.
    - id: index
      type: System.Int32
      description: The starting point in <code>chars</code> from which to begin writing.
    - id: count
      type: System.Int32
      description: The number of characters to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>chars</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Byte[])
  commentId: M:System.IO.BinaryWriter.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: BinaryWriter.Write(Byte[])
  fullName: BinaryWriter.Write(Byte[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a byte array to the underlying stream.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]"
  syntax:
    content: public virtual void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: A byte array containing the data to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Byte)
  commentId: M:System.IO.BinaryWriter.Write(System.Byte)
  id: Write(System.Byte)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Byte)
  nameWithType: BinaryWriter.Write(Byte)
  fullName: BinaryWriter.Write(Byte)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes an unsigned byte to the current stream and advances the stream position by one byte.
  remarks: "Because of data formatting conflicts, using this method with the following encodings is not recommended:  \n  \n-   UTF-7  \n  \n-   ISO-2022-JP  \n  \n-   ISCII  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \n  \n [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]\n [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]"
  syntax:
    content: public virtual void Write (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: The unsigned byte to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Boolean)
  commentId: M:System.IO.BinaryWriter.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: BinaryWriter.Write(Boolean)
  fullName: BinaryWriter.Write(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a one-byte `Boolean` value to the current stream, with 0 representing `false` and 1 representing `true`.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  example:
  - "The following code example demonstrates how to store and retrieve application settings in a file.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]"
  syntax:
    content: public virtual void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: The `Boolean` value to write (0 or 1).
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write(System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: BinaryWriter.Write(Int32)
  fullName: BinaryWriter.Write(Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.
  remarks: "`BinaryWriter` stores this data type in little endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example demonstrates how to store and retrieve application settings in a file.  \n  \n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]"
  syntax:
    content: public virtual void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: The four-byte signed integer to write.
  overload: System.IO.BinaryWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  commentId: M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  id: Write7BitEncodedInt(System.Int32)
  parent: System.IO.BinaryWriter
  langs:
  - csharp
  name: Write7BitEncodedInt(Int32)
  nameWithType: BinaryWriter.Write7BitEncodedInt(Int32)
  fullName: BinaryWriter.Write7BitEncodedInt(Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a 32-bit integer in a compressed format.
  remarks: "The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits. The high bit of a byte indicates whether there are more bytes to be written after this one.  \n  \n If `value` will fit in seven bits, it takes only one byte of space. If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written. This process is repeated until the entire integer has been written.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: protected void Write7BitEncodedInt (int value);
    parameters:
    - id: value
      type: System.Int32
      description: The 32-bit integer to be written.
  overload: System.IO.BinaryWriter.Write7BitEncodedInt*
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: The end of the stream is reached.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The stream is closed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.EndOfStreamException
  parent: System.IO
  isExternal: false
  name: EndOfStreamException
  nameWithType: EndOfStreamException
  fullName: System.IO.EndOfStreamException
- uid: System.IO.BinaryWriter.#ctor
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BinaryWriter()
  nameWithType: BinaryWriter.BinaryWriter()
  fullName: BinaryWriter.BinaryWriter()
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BinaryWriter(Stream)
  nameWithType: BinaryWriter.BinaryWriter(Stream)
  fullName: BinaryWriter.BinaryWriter(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BinaryWriter(Stream, Encoding)
  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding)
  fullName: BinaryWriter.BinaryWriter(Stream, Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BinaryWriter(Stream, Encoding, Boolean)
  nameWithType: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)
  fullName: BinaryWriter.BinaryWriter(Stream, Encoding, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.BinaryWriter.BaseStream
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BaseStream
  nameWithType: BinaryWriter.BaseStream
  fullName: BinaryWriter.BaseStream
- uid: System.IO.BinaryWriter.Close
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Close()
  nameWithType: BinaryWriter.Close()
  fullName: BinaryWriter.Close()
- uid: System.IO.BinaryWriter.Dispose
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Dispose()
  nameWithType: BinaryWriter.Dispose()
  fullName: BinaryWriter.Dispose()
- uid: System.IO.BinaryWriter.Dispose(System.Boolean)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: BinaryWriter.Dispose(Boolean)
  fullName: BinaryWriter.Dispose(Boolean)
- uid: System.IO.BinaryWriter.Flush
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Flush()
  nameWithType: BinaryWriter.Flush()
  fullName: BinaryWriter.Flush()
- uid: System.IO.BinaryWriter.Null
  parent: System.IO.BinaryWriter
  isExternal: false
  name: "Null"
  nameWithType: BinaryWriter.Null
  fullName: BinaryWriter.Null
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: false
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO.BinaryWriter.OutStream
  parent: System.IO.BinaryWriter
  isExternal: false
  name: OutStream
  nameWithType: BinaryWriter.OutStream
  fullName: BinaryWriter.OutStream
- uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Seek(Int32, SeekOrigin)
  nameWithType: BinaryWriter.Seek(Int32, SeekOrigin)
  fullName: BinaryWriter.Seek(Int32, SeekOrigin)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: BinaryWriter.Write(Byte[], Int32, Int32)
  fullName: BinaryWriter.Write(Byte[], Int32, Int32)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.BinaryWriter.Write(System.UInt64)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(UInt64)
  nameWithType: BinaryWriter.Write(UInt64)
  fullName: BinaryWriter.Write(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.IO.BinaryWriter.Write(System.UInt32)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(UInt32)
  nameWithType: BinaryWriter.Write(UInt32)
  fullName: BinaryWriter.Write(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IO.BinaryWriter.Write(System.UInt16)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(UInt16)
  nameWithType: BinaryWriter.Write(UInt16)
  fullName: BinaryWriter.Write(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.IO.BinaryWriter.Write(System.String)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(String)
  nameWithType: BinaryWriter.Write(String)
  fullName: BinaryWriter.Write(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.BinaryWriter.Write(System.Single)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Single)
  nameWithType: BinaryWriter.Write(Single)
  fullName: BinaryWriter.Write(Single)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.IO.BinaryWriter.Write(System.SByte)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(SByte)
  nameWithType: BinaryWriter.Write(SByte)
  fullName: BinaryWriter.Write(SByte)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.IO.BinaryWriter.Write(System.Int64)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: BinaryWriter.Write(Int64)
  fullName: BinaryWriter.Write(Int64)
- uid: System.IO.BinaryWriter.Write(System.Char)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Char)
  nameWithType: BinaryWriter.Write(Char)
  fullName: BinaryWriter.Write(Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.IO.BinaryWriter.Write(System.Int16)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Int16)
  nameWithType: BinaryWriter.Write(Int16)
  fullName: BinaryWriter.Write(Int16)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.IO.BinaryWriter.Write(System.Double)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Double)
  nameWithType: BinaryWriter.Write(Double)
  fullName: BinaryWriter.Write(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.IO.BinaryWriter.Write(System.Decimal)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Decimal)
  nameWithType: BinaryWriter.Write(Decimal)
  fullName: BinaryWriter.Write(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.IO.BinaryWriter.Write(System.Char[])
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: BinaryWriter.Write(Char[])
  fullName: BinaryWriter.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Char[], Int32, Int32)
  nameWithType: BinaryWriter.Write(Char[], Int32, Int32)
  fullName: BinaryWriter.Write(Char[], Int32, Int32)
- uid: System.IO.BinaryWriter.Write(System.Byte[])
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Byte[])
  nameWithType: BinaryWriter.Write(Byte[])
  fullName: BinaryWriter.Write(Byte[])
- uid: System.IO.BinaryWriter.Write(System.Byte)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Byte)
  nameWithType: BinaryWriter.Write(Byte)
  fullName: BinaryWriter.Write(Byte)
- uid: System.IO.BinaryWriter.Write(System.Boolean)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: BinaryWriter.Write(Boolean)
  fullName: BinaryWriter.Write(Boolean)
- uid: System.IO.BinaryWriter.Write(System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: BinaryWriter.Write(Int32)
  fullName: BinaryWriter.Write(Int32)
- uid: System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write7BitEncodedInt(Int32)
  nameWithType: BinaryWriter.Write7BitEncodedInt(Int32)
  fullName: BinaryWriter.Write7BitEncodedInt(Int32)
- uid: System.IO.BinaryWriter.#ctor*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BinaryWriter
  nameWithType: BinaryWriter.BinaryWriter
  fullName: BinaryWriter.BinaryWriter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.BaseStream*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: BaseStream
  nameWithType: BinaryWriter.BaseStream
  fullName: BinaryWriter.BaseStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.Close*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Close
  nameWithType: BinaryWriter.Close
  fullName: BinaryWriter.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.Dispose*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Dispose
  nameWithType: BinaryWriter.Dispose
  fullName: BinaryWriter.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.Flush*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Flush
  nameWithType: BinaryWriter.Flush
  fullName: BinaryWriter.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.Seek*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Seek
  nameWithType: BinaryWriter.Seek
  fullName: BinaryWriter.Seek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.Write*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write
  nameWithType: BinaryWriter.Write
  fullName: BinaryWriter.Write
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.IO.BinaryWriter.Write7BitEncodedInt*
  parent: System.IO.BinaryWriter
  isExternal: false
  name: Write7BitEncodedInt
  nameWithType: BinaryWriter.Write7BitEncodedInt
  fullName: BinaryWriter.Write7BitEncodedInt
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryWriter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
