{"nodes":[{"content":"Represents the results from a single regular expression match.","nodes":[{"pos":[0,62],"content":"Represents the results from a single regular expression match.","nodes":[{"content":"Represents the results from a single regular expression match.","pos":[0,62]}]}],"pos":[707,770],"yaml":true},{"content":"The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor. An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method and represents the first pattern match in a string. Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName> method. In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method.  \n  \n If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object. You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection.  \n  \n If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=fullName>. You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful. The following example provides an illustration.  \n  \n [!code-csharp[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)]  \n  \n If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string.  \n  \n Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>. The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match. You can access the captured groups in a match in the following ways:  \n  \n-   You can iterate the members of the <xref:System.Text.RegularExpressions.GroupCollection> object  by using a `foreach` (C#) or `For Each` (Visual Basic) construct.  \n  \n-   You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=fullName> property to retrieve groups by the number of the capturing group. Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=fullName> method.  \n  \n-   You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=fullName> property to retrieve groups by the name of the capturing group. Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=fullName> method.","nodes":[{"pos":[0,790],"content":"The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor. An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method and represents the first pattern match in a string. Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName> method. In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method.","nodes":[{"content":"The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor. An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method and represents the first pattern match in a string. Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName> method. In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method.","pos":[0,790],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object is immutable and has no public constructor.","pos":[0,98],"source":"The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor."},{"content":"An instance of the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> class is returned by the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName&gt;</ph> method and represents the first pattern match in a string.","pos":[99,323],"source":" An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method and represents the first pattern match in a string."},{"content":"Subsequent matches are represented by <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> objects returned by the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName&gt;</ph> method.","pos":[324,519],"source":" Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName> method."},{"content":"In addition, a <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object that consists of zero, one, or more <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> objects is returned by the <ph id=\"ph3\">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName&gt;</ph> method.","pos":[520,790],"source":" In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method."}]}]},{"pos":[797,1150],"content":"If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object. You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName&gt;</ph> method fails to match a regular expression pattern in an input string, it returns an empty <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;</ph> object.","pos":[0,239],"source":"If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object."},{"content":"You can then use a <ph id=\"ph1\">`foreach`</ph> construct in C# or a <ph id=\"ph2\">`For Each`</ph> construct in Visual Basic to iterate the collection.","pos":[240,353],"source":" You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection."}]},{"pos":[1157,1630],"content":"If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=fullName>. You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful. The following example provides an illustration.","nodes":[{"content":"If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=fullName>. You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful. The following example provides an illustration.","pos":[0,473],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName&gt;</ph> method fails to match the regular expression pattern, it returns a <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object that is equal to <ph id=\"ph3\">&lt;xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=fullName&gt;</ph>.","pos":[0,298],"source":"If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=fullName>."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph> property to determine whether the match was successful.","pos":[299,425],"source":" You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful."},{"content":"The following example provides an illustration.","pos":[426,473]}]}]},{"pos":[1637,1976],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Text.RegularExpressions.Match.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Text.RegularExpressions.Match.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)]"},{"pos":[1983,2409],"content":"If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string.","nodes":[{"content":"If a pattern match is successful, the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property contains the matched substring, the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Capture.Index%2A&gt;</ph> property indicates the zero-based starting position of the matched substring in the input string, and the <ph id=\"ph3\">&lt;xref:System.Text.RegularExpressions.Capture.Length%2A&gt;</ph> property indicates the length of matched substring in the input string.","pos":[0,426],"source":"If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string."}]},{"pos":[2416,2941],"content":"Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>. The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match. You can access the captured groups in a match in the following ways:","nodes":[{"content":"Because a single match can involve multiple capturing groups, <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A&gt;</ph> property that returns the <ph id=\"ph3\">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph>.","pos":[0,246],"source":"Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> instance itself is equivalent to the first object in the collection, at <ph id=\"ph2\">`Match.Groups[0]`</ph> (<ph id=\"ph3\">`Match.Groups(0)`</ph> in Visual Basic), which represents the entire match.","pos":[247,456],"source":" The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match."},{"content":"You can access the captured groups in a match in the following ways:","pos":[457,525]}]},{"pos":[2951,3113],"content":"You can iterate the members of the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object  by using a <ph id=\"ph2\">`foreach`</ph> (C#) or <ph id=\"ph3\">`For Each`</ph> (Visual Basic) construct.","source":"You can iterate the members of the <xref:System.Text.RegularExpressions.GroupCollection> object  by using a `foreach` (C#) or `For Each` (Visual Basic) construct."},{"pos":[3123,3512],"content":"You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=fullName> property to retrieve groups by the number of the capturing group. Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=fullName> method.","nodes":[{"content":"You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=fullName> property to retrieve groups by the number of the capturing group. Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=fullName> method.","pos":[0,389],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=fullName&gt;</ph> property to retrieve groups by the number of the capturing group.","pos":[0,183],"source":"You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=fullName> property to retrieve groups by the number of the capturing group."},{"content":"Note that you can determine which numbered groups are present in a regular expression by calling the instance <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=fullName&gt;</ph> method.","pos":[184,389],"source":" Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=fullName> method."}]}]},{"pos":[3522,3902],"content":"You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=fullName> property to retrieve groups by the name of the capturing group. Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=fullName> method.","nodes":[{"content":"You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=fullName> property to retrieve groups by the name of the capturing group. Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=fullName> method.","pos":[0,380],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=fullName&gt;</ph> property to retrieve groups by the name of the capturing group.","pos":[0,182],"source":"You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=fullName> property to retrieve groups by the name of the capturing group."},{"content":"Note that you can determine which named groups are present in a regular expression by calling the instance <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=fullName&gt;</ph> method.","pos":[183,380],"source":" Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=fullName> method."}]}]}],"pos":[781,4703],"yaml":true,"extradata":"MT"},{"content":"Gets the empty group. All failed matches return this empty match.","nodes":[{"pos":[0,65],"content":"Gets the empty group. All failed matches return this empty match.","nodes":[{"content":"Gets the empty group. All failed matches return this empty match.","pos":[0,65],"nodes":[{"content":"Gets the empty group.","pos":[0,21]},{"content":"All failed matches return this empty match.","pos":[22,65]}]}]}],"pos":[8862,8928],"yaml":true},{"content":"This property should not be used to determine if a match is successful. Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName>).","nodes":[{"pos":[0,220],"content":"This property should not be used to determine if a match is successful. Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName>).","nodes":[{"content":"This property should not be used to determine if a match is successful.","pos":[0,71]},{"content":"Instead, use the <ph id=\"ph1\">`Match.Success`</ph> property (which is inherited from <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName&gt;</ph>).","pos":[72,220],"source":" Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName>)."}]}],"pos":[8939,9160],"yaml":true,"extradata":"MT"},{"content":"An empty match.","nodes":[{"pos":[0,15],"content":"An empty match.","nodes":[{"content":"An empty match.","pos":[0,15]}]}],"pos":[9329,9345],"yaml":true},{"content":"Gets a collection of groups matched by the regular expression.","nodes":[{"pos":[0,62],"content":"Gets a collection of groups matched by the regular expression.","nodes":[{"content":"Gets a collection of groups matched by the regular expression.","pos":[0,62]}]}],"pos":[10862,10925],"yaml":true},{"content":"A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses. Every such subexpression forms a group. The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches. For example, the regular expression pattern `(\\d{3})-(\\d{3}-\\d{4})`, which matches North American telephone numbers, has two subexpressions. The first consists of the area code, which composes the first three digits of the telephone number. This group is captured by the first portion of the regular expression, `(\\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number. This group is captured by the second portion of the regular expression, `(\\d{3}-\\d{4})`. These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows.  \n  \n [!code-csharp[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)]  \n  \n The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=fullName> property is a zero-based collection object that always has at least one member. If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=fullName>. If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern. Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups. For more information, see the \"Grouping Constructs and Regular Expression Objects\" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.","nodes":[{"pos":[0,1078],"content":"A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses. Every such subexpression forms a group. The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches. For example, the regular expression pattern `(\\d{3})-(\\d{3}-\\d{4})`, which matches North American telephone numbers, has two subexpressions. The first consists of the area code, which composes the first three digits of the telephone number. This group is captured by the first portion of the regular expression, `(\\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number. This group is captured by the second portion of the regular expression, `(\\d{3}-\\d{4})`. These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows.","nodes":[{"content":"A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses.","pos":[0,147]},{"content":"Every such subexpression forms a group.","pos":[148,187]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A&gt;</ph> property provides access to information about those subexpression matches.","pos":[188,320],"source":" The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches."},{"content":"For example, the regular expression pattern <ph id=\"ph1\">`(\\d{3})-(\\d{3}-\\d{4})`</ph>, which matches North American telephone numbers, has two subexpressions.","pos":[321,461],"source":" For example, the regular expression pattern `(\\d{3})-(\\d{3}-\\d{4})`, which matches North American telephone numbers, has two subexpressions."},{"content":"The first consists of the area code, which composes the first three digits of the telephone number.","pos":[462,561]},{"content":"This group is captured by the first portion of the regular expression, <ph id=\"ph1\">`(\\d{3})`</ph>.The second consists of the individual telephone number, which composes the last seven digits of the telephone number.","pos":[562,760],"source":" This group is captured by the first portion of the regular expression, `(\\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number."},{"content":"This group is captured by the second portion of the regular expression, <ph id=\"ph1\">`(\\d{3}-\\d{4})`</ph>.","pos":[761,849],"source":" This group is captured by the second portion of the regular expression, `(\\d{3}-\\d{4})`."},{"content":"These two groups can then be retrieved from the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object that is returned by the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A&gt;</ph> property, as the following example shows.","pos":[850,1078],"source":" These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows."}]},{"pos":[1085,1430],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Text.RegularExpressions.Match.Groups#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Text.RegularExpressions.Match.Groups#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)]"},{"pos":[1437,2813],"content":"The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=fullName> property is a zero-based collection object that always has at least one member. If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=fullName>. If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern. Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups. For more information, see the \"Grouping Constructs and Regular Expression Objects\" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=fullName&gt;</ph> property is a zero-based collection object that always has at least one member.","pos":[0,239],"source":"The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=fullName> property is a zero-based collection object that always has at least one member."},{"content":"If the regular expression engine cannot find any matches in a particular input string, the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName&gt;</ph> property of the single <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object in the collection (the object at index 0) is set to <ph id=\"ph3\">`false`</ph> and the <ph id=\"ph4\">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object's <ph id=\"ph5\">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property is set to <ph id=\"ph6\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[240,732],"source":" If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=fullName>."},{"content":"If the regular expression engine can find a match, the first element of the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object (the element at index 0) returned by the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A&gt;</ph> property contains a string that matches the entire regular expression pattern.","pos":[733,1043],"source":" If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern."},{"content":"Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups.","pos":[1044,1173]},{"content":"For more information, see the \"Grouping Constructs and Regular Expression Objects\" section of the <bpt id=\"p1\">[</bpt>Grouping Constructs<ept id=\"p1\">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept> article.","pos":[1174,1376],"source":" For more information, see the \"Grouping Constructs and Regular Expression Objects\" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article."}]}],"pos":[10936,13765],"yaml":true,"extradata":"MT"},{"content":"The character groups matched by the pattern.","nodes":[{"pos":[0,44],"content":"The character groups matched by the pattern.","nodes":[{"content":"The character groups matched by the pattern.","pos":[0,44]}]}],"pos":[14720,14765],"yaml":true},{"content":"Returns a new <xref href=\"System.Text.RegularExpressions.Match\"></xref> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).","nodes":[{"pos":[0,223],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.Text.RegularExpressions.Match\"&gt;&lt;/xref&gt;</ph> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).","source":"Returns a new <xref href=\"System.Text.RegularExpressions.Match\"></xref> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character)."}],"pos":[16305,16529],"yaml":true},{"content":"This method is similar to calling <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=fullName> again and passing (`Index+Length`) as the new starting position.  \n  \n> [!NOTE]\n>  This method does not modify the current instance. Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.  \n  \n Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.","nodes":[{"pos":[0,207],"content":"This method is similar to calling <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=fullName&gt;</ph> again and passing (<ph id=\"ph2\">`Index+Length`</ph>) as the new starting position.","source":"This method is similar to calling <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=fullName> again and passing (`Index+Length`) as the new starting position."},{"pos":[215,400],"content":"[!NOTE]\n This method does not modify the current instance. Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.","leadings":["","> "],"nodes":[{"content":" This method does not modify the current instance. Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.","pos":[8,183],"nodes":[{"content":"This method does not modify the current instance.","pos":[1,50]},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object that contains information about the next match.","pos":[51,175],"source":" Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match."}]}]},{"pos":[407,649],"content":"Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.","nodes":[{"content":"Attempting to retrieve the next match may throw a <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.","pos":[0,242],"source":"Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval."}]}],"pos":[16540,17197],"yaml":true,"extradata":"MT"},{"content":"The next regular expression match.","nodes":[{"pos":[0,34],"content":"The next regular expression match.","nodes":[{"content":"The next regular expression match.","pos":[0,34]}]}],"pos":[18040,18075],"yaml":true},{"content":"A time-out occurred.","nodes":[{"pos":[0,20],"content":"A time-out occurred.","nodes":[{"content":"A time-out occurred.","pos":[0,20]}]}],"pos":[18309,18330],"yaml":true},{"content":"Returns the expansion of the specified replacement pattern.","nodes":[{"pos":[0,59],"content":"Returns the expansion of the specified replacement pattern.","nodes":[{"content":"Returns the expansion of the specified replacement pattern.","pos":[0,59]}]}],"pos":[19841,19901],"yaml":true},{"content":"Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=fullName> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern. Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.  \n  \n The `replacement` parameter is a standard regular expression replacement pattern. It can consist of literal characters and regular expression substitutions. For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).","nodes":[{"pos":[0,493],"content":"Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=fullName> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern. Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.","nodes":[{"content":"Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=fullName> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern. Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.","pos":[0,493],"nodes":[{"content":"Whereas the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=fullName&gt;</ph> method replaces all matches in an input string with a specified replacement pattern, the <ph id=\"ph2\">&lt;xref:System.Text.RegularExpressions.Match.Result%2A&gt;</ph> method replaces a single match with a specified replacement pattern.","pos":[0,303],"source":"Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=fullName> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern."},{"content":"Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Match.Result%2A&gt;</ph> method.","pos":[304,493],"source":" Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method."}]}]},{"pos":[500,767],"content":"The `replacement` parameter is a standard regular expression replacement pattern. It can consist of literal characters and regular expression substitutions. For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).","nodes":[{"content":"The <ph id=\"ph1\">`replacement`</ph> parameter is a standard regular expression replacement pattern.","pos":[0,81],"source":"The `replacement` parameter is a standard regular expression replacement pattern."},{"content":"It can consist of literal characters and regular expression substitutions.","pos":[82,156]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Substitutions<ept id=\"p1\">](~/docs/standard/base-types/substitutions-in-regular-expressions.md)</ept>.","pos":[157,267],"source":" For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md)."}]}],"pos":[19912,20684],"yaml":true,"extradata":"MT"},{"content":"The replacement pattern to use.","nodes":[{"pos":[0,31],"content":"The replacement pattern to use.","nodes":[{"content":"The replacement pattern to use.","pos":[0,31]}]}],"pos":[22004,22036],"yaml":true},{"content":"The expanded version of the <code>replacement</code> parameter.","nodes":[{"pos":[0,63],"content":"The expanded version of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">replacement</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The expanded version of the <code>replacement</code> parameter."}],"pos":[22093,22157],"yaml":true},{"content":"<code>replacement</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;replacement&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>replacement</code> is `null`."}],"pos":[22330,22366],"yaml":true},{"content":"Expansion is not allowed for this pattern.","nodes":[{"pos":[0,42],"content":"Expansion is not allowed for this pattern.","nodes":[{"content":"Expansion is not allowed for this pattern.","pos":[0,42]}]}],"pos":[22468,22511],"yaml":true},{"content":"Returns a <xref href=\"System.Text.RegularExpressions.Match\"></xref> instance equivalent to the one supplied that is suitable to share between multiple threads.","nodes":[{"pos":[0,159],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Text.RegularExpressions.Match\"&gt;&lt;/xref&gt;</ph> instance equivalent to the one supplied that is suitable to share between multiple threads.","source":"Returns a <xref href=\"System.Text.RegularExpressions.Match\"></xref> instance equivalent to the one supplied that is suitable to share between multiple threads."}],"pos":[24124,24284],"yaml":true},{"content":"A regular expression match equivalent to the one expected.","nodes":[{"pos":[0,58],"content":"A regular expression match equivalent to the one expected.","nodes":[{"content":"A regular expression match equivalent to the one expected.","pos":[0,58]}]}],"pos":[24517,24576],"yaml":true},{"content":"A regular expression match that is suitable to share between multiple threads.","nodes":[{"pos":[0,78],"content":"A regular expression match that is suitable to share between multiple threads.","nodes":[{"content":"A regular expression match that is suitable to share between multiple threads.","pos":[0,78]}]}],"pos":[24656,24735],"yaml":true},{"content":"<code>inner</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;inner&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>inner</code> is `null`."}],"pos":[24914,24944],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.RegularExpressions.Match\n  commentId: T:System.Text.RegularExpressions.Match\n  id: Match\n  children:\n  - System.Text.RegularExpressions.Match.Empty\n  - System.Text.RegularExpressions.Match.Groups\n  - System.Text.RegularExpressions.Match.NextMatch\n  - System.Text.RegularExpressions.Match.Result(System.String)\n  - System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)\n  langs:\n  - csharp\n  name: Match\n  nameWithType: Match\n  fullName: System.Text.RegularExpressions.Match\n  type: Class\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Represents the results from a single regular expression match.\n  remarks: \"The <xref:System.Text.RegularExpressions.Match> object is immutable and has no public constructor. An instance of the <xref:System.Text.RegularExpressions.Match> class is returned by the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method and represents the first pattern match in a string. Subsequent matches are represented by <xref:System.Text.RegularExpressions.Match> objects returned by the <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=fullName> method. In addition, a <xref:System.Text.RegularExpressions.MatchCollection> object that consists of zero, one, or more <xref:System.Text.RegularExpressions.Match> objects is returned by the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method.  \\n  \\n If the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=fullName> method fails to match a regular expression pattern in an input string, it returns an empty <xref:System.Text.RegularExpressions.MatchCollection> object. You can then use a `foreach` construct in C# or a `For Each` construct in Visual Basic to iterate the collection.  \\n  \\n If the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=fullName> method fails to match the regular expression pattern, it returns a <xref:System.Text.RegularExpressions.Match> object that is equal to <xref:System.Text.RegularExpressions.Match.Empty%2A?displayProperty=fullName>. You can use the <xref:System.Text.RegularExpressions.Group.Success%2A> property to determine whether the match was successful. The following example provides an illustration.  \\n  \\n [!code-csharp[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match1.cs#1)]\\n [!code-vb[System.Text.RegularExpressions.Match.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match1.vb#1)]  \\n  \\n If a pattern match is successful, the <xref:System.Text.RegularExpressions.Capture.Value%2A> property contains the matched substring, the <xref:System.Text.RegularExpressions.Capture.Index%2A> property indicates the zero-based starting position of the matched substring in the input string, and the <xref:System.Text.RegularExpressions.Capture.Length%2A> property indicates the length of matched substring in the input string.  \\n  \\n Because a single match can involve multiple capturing groups, <xref:System.Text.RegularExpressions.Match> has a <xref:System.Text.RegularExpressions.Match.Groups%2A> property that returns the <xref:System.Text.RegularExpressions.GroupCollection>. The <xref:System.Text.RegularExpressions.Match> instance itself is equivalent to the first object in the collection, at `Match.Groups[0]` (`Match.Groups(0)` in Visual Basic), which represents the entire match. You can access the captured groups in a match in the following ways:  \\n  \\n-   You can iterate the members of the <xref:System.Text.RegularExpressions.GroupCollection> object  by using a `foreach` (C#) or `For Each` (Visual Basic) construct.  \\n  \\n-   You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29?displayProperty=fullName> property to retrieve groups by the number of the capturing group. Note that you can determine which numbered groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=fullName> method.  \\n  \\n-   You can use the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29?displayProperty=fullName> property to retrieve groups by the name of the capturing group. Note that you can determine which named groups are present in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNames?displayProperty=fullName> method.\"\n  example:\n  - \"The following examples use the regular expression `Console\\\\.Write(Line)?`. The regular expression is interpreted as follows:  \\n  \\n|||  \\n|-|-|  \\n|Console\\\\\\\\.Write|Match the string \\\"Console.Write\\\". Note that the \\\".\\\" character is escaped so that it is interpreted as a literal period rather than as a wildcard that matches any character.|  \\n|(Line)?|Match zero or one occurrence of the string \\\"Line\\\".|  \\n  \\n **Example 1**  \\n  \\n The following example calls the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=fullName> method to retrieve all pattern matches in an input string. It then iterates the <xref:System.Text.RegularExpressions.Match> objects in the returned <xref:System.Text.RegularExpressions.MatchCollection> object to display information about each match.  \\n  \\n [!code-csharp[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match2.cs#2)]\\n [!code-vb[System.Text.RegularExpressions.Match.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match2.vb#2)]  \\n  \\n **Example 2**  \\n  \\n The following example calls the <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%29> and <xref:System.Text.RegularExpressions.Match.NextMatch%2A> methods to retrieve one match at a time.  \\n  \\n [!code-csharp[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/cs/Match3.cs#3)]\\n [!code-vb[System.Text.RegularExpressions.Match.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.Match.Class/vb/Match3.vb#3)]\"\n  syntax:\n    content: 'public class Match : System.Text.RegularExpressions.Group'\n  inheritance:\n  - System.Object\n  - System.Text.RegularExpressions.Capture\n  - System.Text.RegularExpressions.Group\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Text.RegularExpressions.Capture.Index\n  - System.Text.RegularExpressions.Capture.Length\n  - System.Text.RegularExpressions.Capture.ToString\n  - System.Text.RegularExpressions.Capture.Value\n  - System.Text.RegularExpressions.Group.Captures\n  - System.Text.RegularExpressions.Group.Name\n  - System.Text.RegularExpressions.Group.Success\n  - System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.Match.Empty\n  commentId: P:System.Text.RegularExpressions.Match.Empty\n  id: Empty\n  parent: System.Text.RegularExpressions.Match\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Match.Empty\n  fullName: Match.Empty\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Gets the empty group. All failed matches return this empty match.\n  remarks: This property should not be used to determine if a match is successful. Instead, use the `Match.Success` property (which is inherited from <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName>).\n  syntax:\n    content: public static System.Text.RegularExpressions.Match Empty { get; }\n    return:\n      type: System.Text.RegularExpressions.Match\n      description: An empty match.\n  overload: System.Text.RegularExpressions.Match.Empty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.Match.Groups\n  commentId: P:System.Text.RegularExpressions.Match.Groups\n  id: Groups\n  parent: System.Text.RegularExpressions.Match\n  langs:\n  - csharp\n  name: Groups\n  nameWithType: Match.Groups\n  fullName: Match.Groups\n  type: Property\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Gets a collection of groups matched by the regular expression.\n  remarks: \"A regular expression pattern can include subexpressions, which are defined by enclosing a portion of the regular expression pattern in parentheses. Every such subexpression forms a group. The <xref:System.Text.RegularExpressions.Match.Groups%2A> property provides access to information about those subexpression matches. For example, the regular expression pattern `(\\\\d{3})-(\\\\d{3}-\\\\d{4})`, which matches North American telephone numbers, has two subexpressions. The first consists of the area code, which composes the first three digits of the telephone number. This group is captured by the first portion of the regular expression, `(\\\\d{3})`.The second consists of the individual telephone number, which composes the last seven digits of the telephone number. This group is captured by the second portion of the regular expression, `(\\\\d{3}-\\\\d{4})`. These two groups can then be retrieved from the <xref:System.Text.RegularExpressions.GroupCollection> object that is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property, as the following example shows.  \\n  \\n [!code-csharp[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/cs/groups1.cs#1)]\\n [!code-vb[System.Text.RegularExpressions.Match.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.groups/vb/groups1.vb#1)]  \\n  \\n The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=fullName> property is a zero-based collection object that always has at least one member. If the regular expression engine cannot find any matches in a particular input string, the <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=fullName> property of the single <xref:System.Text.RegularExpressions.Group> object in the collection (the object at index 0) is set to `false` and the <xref:System.Text.RegularExpressions.Group> object's <xref:System.Text.RegularExpressions.Capture.Value%2A> property is set to <xref:System.String.Empty?displayProperty=fullName>. If the regular expression engine can find a match, the first element of the <xref:System.Text.RegularExpressions.GroupCollection> object (the element at index 0) returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A> property contains a string that matches the entire regular expression pattern. Each subsequent element, from index one upward, represents a captured group, if the regular expression includes capturing groups. For more information, see the \\\"Grouping Constructs and Regular Expression Objects\\\" section of the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.\"\n  example:\n  - \"The following example attempts to match a regular expression pattern against a sample string. The example uses the <xref:System.Text.RegularExpressions.Match.Groups%2A> property to store information that is retrieved by the match for display to the console.  \\n  \\n [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]\\n [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]\\n [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]\"\n  syntax:\n    content: public virtual System.Text.RegularExpressions.GroupCollection Groups { get; }\n    return:\n      type: System.Text.RegularExpressions.GroupCollection\n      description: The character groups matched by the pattern.\n  overload: System.Text.RegularExpressions.Match.Groups*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.Match.NextMatch\n  commentId: M:System.Text.RegularExpressions.Match.NextMatch\n  id: NextMatch\n  parent: System.Text.RegularExpressions.Match\n  langs:\n  - csharp\n  name: NextMatch()\n  nameWithType: Match.NextMatch()\n  fullName: Match.NextMatch()\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Returns a new <xref href=\"System.Text.RegularExpressions.Match\"></xref> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).\n  remarks: \"This method is similar to calling <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=fullName> again and passing (`Index+Length`) as the new starting position.  \\n  \\n> [!NOTE]\\n>  This method does not modify the current instance. Instead, it returns a new <xref:System.Text.RegularExpressions.Match> object that contains information about the next match.  \\n  \\n Attempting to retrieve the next match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> if a time-out value for matching operations is in effect and the attempt to find the next match exceeds that time-out interval.\"\n  example:\n  - \"The following example uses the <xref:System.Text.RegularExpressions.Match.NextMatch%2A> method to capture regular expression matches beyond the first match.  \\n  \\n [!code-cpp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/cpp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cpp/snippet8.cpp#8)]\\n [!code-csharp[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/csharp/VS_Snippets_CLR/regex match, nextmatch, groups, captures/cs/snippet8.cs#8)]\\n [!code-vb[Regex Match, NextMatch, Groups, Captures#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/regex match, nextmatch, groups, captures/vb/snippet8.vb#8)]\"\n  syntax:\n    content: public System.Text.RegularExpressions.Match NextMatch ();\n    parameters: []\n    return:\n      type: System.Text.RegularExpressions.Match\n      description: The next regular expression match.\n  overload: System.Text.RegularExpressions.Match.NextMatch*\n  exceptions:\n  - type: System.Text.RegularExpressions.RegexMatchTimeoutException\n    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException\n    description: A time-out occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.Match.Result(System.String)\n  commentId: M:System.Text.RegularExpressions.Match.Result(System.String)\n  id: Result(System.String)\n  parent: System.Text.RegularExpressions.Match\n  langs:\n  - csharp\n  name: Result(String)\n  nameWithType: Match.Result(String)\n  fullName: Match.Result(String)\n  type: Method\n  assemblies:\n  - System.Text.RegularExpressions\n  - System\n  - netstandard\n  namespace: System.Text.RegularExpressions\n  summary: Returns the expansion of the specified replacement pattern.\n  remarks: \"Whereas the <xref:System.Text.RegularExpressions.Regex.Replace%2A?displayProperty=fullName> method replaces all matches in an input string with a specified replacement pattern, the <xref:System.Text.RegularExpressions.Match.Result%2A> method replaces a single match with a specified replacement pattern. Because it operates on an individual match, it is also possible to perform processing on the matched string before you call the <xref:System.Text.RegularExpressions.Match.Result%2A> method.  \\n  \\n The `replacement` parameter is a standard regular expression replacement pattern. It can consist of literal characters and regular expression substitutions. For more information, see [Substitutions](~/docs/standard/base-types/substitutions-in-regular-expressions.md).\"\n  example:\n  - \"The following example replaces the hyphens that begin and end a parenthetical expression with parentheses.  \\n  \\n [!code-csharp[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/cs/result1.cs#1)]\\n [!code-vb[System.Text.RegularExpressions.Match.Result#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.match.result/vb/result1.vb#1)]  \\n  \\n The regular expression pattern `--(.+?)--` is interpreted as shown in the following table.  \\n  \\n|Pattern|Description|  \\n|-------------|-----------------|  \\n|`--`|Match two hyphens.|  \\n|`(.+?)`|Match any character one or more times, but as few times as possible. This is the first capturing group.|  \\n|`--`|Match two hyphens.|  \\n  \\n Note that the regular expression pattern `--(.+?)--` uses the lazy quantifier `+?`. If the greedy quantifier `+` were used instead, the regular expression engine would find only a single match in the input string.  \\n  \\n The replacement string `($1)` replaces the match with the first captured group, which is enclosed in parentheses.\"\n  syntax:\n    content: public virtual string Result (string replacement);\n    parameters:\n    - id: replacement\n      type: System.String\n      description: The replacement pattern to use.\n    return:\n      type: System.String\n      description: The expanded version of the <code>replacement</code> parameter.\n  overload: System.Text.RegularExpressions.Match.Result*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>replacement</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Expansion is not allowed for this pattern.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)\n  commentId: M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)\n  id: Synchronized(System.Text.RegularExpressions.Match)\n  parent: System.Text.RegularExpressions.Match\n  langs:\n  - csharp\n  name: Synchronized(Match)\n  nameWithType: Match.Synchronized(Match)\n  fullName: Match.Synchronized(Match)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Text.RegularExpressions\n  namespace: System.Text.RegularExpressions\n  summary: Returns a <xref href=\"System.Text.RegularExpressions.Match\"></xref> instance equivalent to the one supplied that is suitable to share between multiple threads.\n  syntax:\n    content: public static System.Text.RegularExpressions.Match Synchronized (System.Text.RegularExpressions.Match inner);\n    parameters:\n    - id: inner\n      type: System.Text.RegularExpressions.Match\n      description: A regular expression match equivalent to the one expected.\n    return:\n      type: System.Text.RegularExpressions.Match\n      description: A regular expression match that is suitable to share between multiple threads.\n  overload: System.Text.RegularExpressions.Match.Synchronized*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>inner</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Text.RegularExpressions.Group\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: Group\n  nameWithType: Group\n  fullName: System.Text.RegularExpressions.Group\n- uid: System.Text.RegularExpressions.RegexMatchTimeoutException\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: RegexMatchTimeoutException\n  nameWithType: RegexMatchTimeoutException\n  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Text.RegularExpressions.Match.Empty\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Empty\n  nameWithType: Match.Empty\n  fullName: Match.Empty\n- uid: System.Text.RegularExpressions.Match\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: Match\n  nameWithType: Match\n  fullName: System.Text.RegularExpressions.Match\n- uid: System.Text.RegularExpressions.Match.Groups\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Groups\n  nameWithType: Match.Groups\n  fullName: Match.Groups\n- uid: System.Text.RegularExpressions.GroupCollection\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: GroupCollection\n  nameWithType: GroupCollection\n  fullName: System.Text.RegularExpressions.GroupCollection\n- uid: System.Text.RegularExpressions.Match.NextMatch\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: NextMatch()\n  nameWithType: Match.NextMatch()\n  fullName: Match.NextMatch()\n- uid: System.Text.RegularExpressions.Match.Result(System.String)\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Result(String)\n  nameWithType: Match.Result(String)\n  fullName: Match.Result(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Synchronized(Match)\n  nameWithType: Match.Synchronized(Match)\n  fullName: Match.Synchronized(Match)\n- uid: System.Text.RegularExpressions.Match.Empty*\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Empty\n  nameWithType: Match.Empty\n  fullName: Match.Empty\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n- uid: System.Text.RegularExpressions.Match.Groups*\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Groups\n  nameWithType: Match.Groups\n  fullName: Match.Groups\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n- uid: System.Text.RegularExpressions.Match.NextMatch*\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: NextMatch\n  nameWithType: Match.NextMatch\n  fullName: Match.NextMatch\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n- uid: System.Text.RegularExpressions.Match.Result*\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Result\n  nameWithType: Match.Result\n  fullName: Match.Result\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n- uid: System.Text.RegularExpressions.Match.Synchronized*\n  parent: System.Text.RegularExpressions.Match\n  isExternal: false\n  name: Synchronized\n  nameWithType: Match.Synchronized\n  fullName: Match.Synchronized\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Match.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Text.RegularExpressions.Capture.ToString\n  parent: System.Text.RegularExpressions.Capture\n  isExternal: false\n  name: ToString()\n  nameWithType: Capture.ToString()\n  fullName: Capture.ToString()\n- uid: System.Text.RegularExpressions.Capture.Index\n  parent: System.Text.RegularExpressions.Capture\n  isExternal: false\n  name: Index\n  nameWithType: Capture.Index\n  fullName: Capture.Index\n- uid: System.Text.RegularExpressions.Capture.Length\n  parent: System.Text.RegularExpressions.Capture\n  isExternal: false\n  name: Length\n  nameWithType: Capture.Length\n  fullName: Capture.Length\n- uid: System.Text.RegularExpressions.Capture.Value\n  parent: System.Text.RegularExpressions.Capture\n  isExternal: false\n  name: Value\n  nameWithType: Capture.Value\n  fullName: Capture.Value\n- uid: System.Text.RegularExpressions.Group.Captures\n  parent: System.Text.RegularExpressions.Group\n  isExternal: false\n  name: Captures\n  nameWithType: Group.Captures\n  fullName: Group.Captures\n- uid: System.Text.RegularExpressions.Group.Name\n  parent: System.Text.RegularExpressions.Group\n  isExternal: false\n  name: Name\n  nameWithType: Group.Name\n  fullName: Group.Name\n- uid: System.Text.RegularExpressions.Group.Success\n  parent: System.Text.RegularExpressions.Group\n  isExternal: false\n  name: Success\n  nameWithType: Group.Success\n  fullName: Group.Success\n- uid: System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)\n  parent: System.Text.RegularExpressions.Group\n  isExternal: false\n  name: Synchronized(Group)\n  nameWithType: Group.Synchronized(Group)\n  fullName: Group.Synchronized(Group)\n"}