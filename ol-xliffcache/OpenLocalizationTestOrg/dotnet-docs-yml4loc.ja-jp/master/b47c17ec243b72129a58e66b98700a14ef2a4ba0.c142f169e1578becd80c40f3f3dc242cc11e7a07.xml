{"nodes":[{"content":"Represents a `<caches>` element in a configuration file. This class cannot be inherited.","nodes":[{"pos":[0,88],"content":"Represents a `<caches>` element in a configuration file. This class cannot be inherited.","nodes":[{"content":"Represents a <ph id=\"ph1\">`&lt;caches&gt;`</ph> element in a configuration file.","pos":[0,56],"source":"Represents a `<caches>` element in a configuration file."},{"content":"This class cannot be inherited.","pos":[57,88]}]}],"pos":[914,1003],"yaml":true},{"content":"The `<caches>` element configures the caching services for WIF. It registers the type of session security token cache and the type of token replay cache to use. It can be specified at the service level under the `<identityConfiguration>` element or on a security token handler collection under the `<securityTokenHandlerConfiguration>` element. The `Caches` property of the <xref:System.IdentityModel.Configuration.IdentityConfigurationElement> class and of the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class is an instance of <xref:System.IdentityModel.Configuration.IdentityModelCachesElement>. After the configuration file has been read, the configured caches are represented by the <xref:System.IdentityModel.Configuration.IdentityModelCaches> class.","nodes":[{"pos":[0,796],"content":"The `<caches>` element configures the caching services for WIF. It registers the type of session security token cache and the type of token replay cache to use. It can be specified at the service level under the `<identityConfiguration>` element or on a security token handler collection under the `<securityTokenHandlerConfiguration>` element. The `Caches` property of the <xref:System.IdentityModel.Configuration.IdentityConfigurationElement> class and of the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class is an instance of <xref:System.IdentityModel.Configuration.IdentityModelCachesElement>. After the configuration file has been read, the configured caches are represented by the <xref:System.IdentityModel.Configuration.IdentityModelCaches> class.","nodes":[{"content":"The <ph id=\"ph1\">`&lt;caches&gt;`</ph> element configures the caching services for WIF.","pos":[0,63],"source":"The `<caches>` element configures the caching services for WIF."},{"content":"It registers the type of session security token cache and the type of token replay cache to use.","pos":[64,160]},{"content":"It can be specified at the service level under the <ph id=\"ph1\">`&lt;identityConfiguration&gt;`</ph> element or on a security token handler collection under the <ph id=\"ph2\">`&lt;securityTokenHandlerConfiguration&gt;`</ph> element.","pos":[161,344],"source":" It can be specified at the service level under the `<identityConfiguration>` element or on a security token handler collection under the `<securityTokenHandlerConfiguration>` element."},{"content":"The <ph id=\"ph1\">`Caches`</ph> property of the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Configuration.IdentityConfigurationElement&gt;</ph> class and of the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement&gt;</ph> class is an instance of <ph id=\"ph4\">&lt;xref:System.IdentityModel.Configuration.IdentityModelCachesElement&gt;</ph>.","pos":[345,638],"source":" The `Caches` property of the <xref:System.IdentityModel.Configuration.IdentityConfigurationElement> class and of the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class is an instance of <xref:System.IdentityModel.Configuration.IdentityModelCachesElement>."},{"content":"After the configuration file has been read, the configured caches are represented by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Configuration.IdentityModelCaches&gt;</ph> class.","pos":[639,796],"source":" After the configuration file has been read, the configured caches are represented by the <xref:System.IdentityModel.Configuration.IdentityModelCaches> class."}]}],"pos":[1014,1811],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityModelCachesElement\"></xref> class.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Configuration.IdentityModelCachesElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityModelCachesElement\"></xref> class."}],"pos":[6045,6169],"yaml":true},{"content":"Gets a value that indicates whether this element has been configured.","nodes":[{"pos":[0,69],"content":"Gets a value that indicates whether this element has been configured.","nodes":[{"content":"Gets a value that indicates whether this element has been configured.","pos":[0,69]}]}],"pos":[7417,7487],"yaml":true},{"content":"`true` if the element has been configured; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the element has been configured; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element has been configured; otherwise, `false`."}],"pos":[7602,7667],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Type\"></xref> of the session token cache.","nodes":[{"pos":[0,77],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the session token cache.","source":"Gets or sets the <xref href=\"System.Type\"></xref> of the session token cache."}],"pos":[10206,10284],"yaml":true},{"content":"This property is optional. It corresponds to a `<sessionSecurityTokenCache>` element specified under the `<caches>`. It specifies the type of the cache to use to store session security tokens. All session token caches must derive from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>","nodes":[{"pos":[0,295],"content":"This property is optional. It corresponds to a `<sessionSecurityTokenCache>` element specified under the `<caches>`. It specifies the type of the cache to use to store session security tokens. All session token caches must derive from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>","nodes":[{"content":"This property is optional.","pos":[0,26]},{"content":"It corresponds to a <ph id=\"ph1\">`&lt;sessionSecurityTokenCache&gt;`</ph> element specified under the <ph id=\"ph2\">`&lt;caches&gt;`</ph>.","pos":[27,116],"source":" It corresponds to a `<sessionSecurityTokenCache>` element specified under the `<caches>`."},{"content":"It specifies the type of the cache to use to store session security tokens.","pos":[117,192]},{"content":"All session token caches must derive from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>","pos":[193,295],"source":" All session token caches must derive from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>"}]}],"pos":[10295,10591],"yaml":true,"extradata":"MT"},{"content":"The type of the session token cache. The type must derive from <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref>.","nodes":[{"pos":[0,138],"content":"The type of the session token cache. The type must derive from <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref>.","nodes":[{"content":"The type of the session token cache.","pos":[0,36]},{"content":"The type must derive from <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"&gt;&lt;/xref&gt;</ph>.","pos":[37,138],"source":" The type must derive from <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref>."}]}],"pos":[10918,11057],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Type\"></xref> of the token replay cache.","nodes":[{"pos":[0,76],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the token replay cache.","source":"Gets or sets the <xref href=\"System.Type\"></xref> of the token replay cache."}],"pos":[12345,12422],"yaml":true},{"content":"This property is optional. It corresponds to an `<tokenReplayCache>` element specified under the  `<caches>` element. It specifies the type of the cache to use to detect replayed tokens. All replay caches must derive from <xref:System.IdentityModel.Tokens.TokenReplayCache>   \n  \n Replay detection is enabled with the `<tokenReplayDetection>` element. This element is represented by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement> class.","nodes":[{"pos":[0,273],"content":"This property is optional. It corresponds to an `<tokenReplayCache>` element specified under the  `<caches>` element. It specifies the type of the cache to use to detect replayed tokens. All replay caches must derive from <xref:System.IdentityModel.Tokens.TokenReplayCache>","nodes":[{"content":"This property is optional.","pos":[0,26]},{"content":"It corresponds to an <ph id=\"ph1\">`&lt;tokenReplayCache&gt;`</ph> element specified under the  <ph id=\"ph2\">`&lt;caches&gt;`</ph> element.","pos":[27,117],"source":" It corresponds to an `<tokenReplayCache>` element specified under the  `<caches>` element."},{"content":"It specifies the type of the cache to use to detect replayed tokens.","pos":[118,186]},{"content":"All replay caches must derive from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.TokenReplayCache&gt;</ph>","pos":[187,273],"source":" All replay caches must derive from <xref:System.IdentityModel.Tokens.TokenReplayCache>"}]},{"pos":[281,463],"content":"Replay detection is enabled with the `<tokenReplayDetection>` element. This element is represented by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement> class.","nodes":[{"content":"Replay detection is enabled with the <ph id=\"ph1\">`&lt;tokenReplayDetection&gt;`</ph> element.","pos":[0,70],"source":"Replay detection is enabled with the `<tokenReplayDetection>` element."},{"content":"This element is represented by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Configuration.TokenReplayDetectionElement&gt;</ph> class.","pos":[71,182],"source":" This element is represented by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement> class."}]}],"pos":[12433,12901],"yaml":true,"extradata":"MT"},{"content":"The type of the token replay cache. The type must derive from <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>.","nodes":[{"pos":[0,128],"content":"The type of the token replay cache. The type must derive from <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>.","nodes":[{"content":"The type of the token replay cache.","pos":[0,35]},{"content":"The type must derive from <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"&gt;&lt;/xref&gt;</ph>.","pos":[36,128],"source":" The type must derive from <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>."}]}],"pos":[13210,13339],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement\n  commentId: T:System.IdentityModel.Configuration.IdentityModelCachesElement\n  id: IdentityModelCachesElement\n  children:\n  - System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor\n  - System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured\n  - System.IdentityModel.Configuration.IdentityModelCachesElement.Properties\n  - System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache\n  - System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache\n  langs:\n  - csharp\n  name: IdentityModelCachesElement\n  nameWithType: IdentityModelCachesElement\n  fullName: System.IdentityModel.Configuration.IdentityModelCachesElement\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Represents a `<caches>` element in a configuration file. This class cannot be inherited.\n  remarks: The `<caches>` element configures the caching services for WIF. It registers the type of session security token cache and the type of token replay cache to use. It can be specified at the service level under the `<identityConfiguration>` element or on a security token handler collection under the `<securityTokenHandlerConfiguration>` element. The `Caches` property of the <xref:System.IdentityModel.Configuration.IdentityConfigurationElement> class and of the <xref:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement> class is an instance of <xref:System.IdentityModel.Configuration.IdentityModelCachesElement>. After the configuration file has been read, the configured caches are represented by the <xref:System.IdentityModel.Configuration.IdentityModelCaches> class.\n  syntax:\n    content: 'public sealed class IdentityModelCachesElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor\n  commentId: M:System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  langs:\n  - csharp\n  name: IdentityModelCachesElement()\n  nameWithType: IdentityModelCachesElement.IdentityModelCachesElement()\n  fullName: IdentityModelCachesElement.IdentityModelCachesElement()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Configuration.IdentityModelCachesElement\"></xref> class.\n  syntax:\n    content: public IdentityModelCachesElement ();\n    parameters: []\n  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured\n  commentId: P:System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured\n  id: IsConfigured\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  langs:\n  - csharp\n  name: IsConfigured\n  nameWithType: IdentityModelCachesElement.IsConfigured\n  fullName: IdentityModelCachesElement.IsConfigured\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets a value that indicates whether this element has been configured.\n  syntax:\n    content: public bool IsConfigured { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the element has been configured; otherwise, `false`.'\n  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties\n  commentId: P:System.IdentityModel.Configuration.IdentityModelCachesElement.Properties\n  id: Properties\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: IdentityModelCachesElement.Properties\n  fullName: IdentityModelCachesElement.Properties\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache\n  commentId: P:System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache\n  id: SessionSecurityTokenCache\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  langs:\n  - csharp\n  name: SessionSecurityTokenCache\n  nameWithType: IdentityModelCachesElement.SessionSecurityTokenCache\n  fullName: IdentityModelCachesElement.SessionSecurityTokenCache\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the <xref href=\"System.Type\"></xref> of the session token cache.\n  remarks: This property is optional. It corresponds to a `<sessionSecurityTokenCache>` element specified under the `<caches>`. It specifies the type of the cache to use to store session security tokens. All session token caches must derive from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"sessionSecurityTokenCache\", IsRequired=false)]\n\n      public System.IdentityModel.Configuration.CustomTypeElement SessionSecurityTokenCache { get; set; }\n    return:\n      type: System.IdentityModel.Configuration.CustomTypeElement\n      description: The type of the session token cache. The type must derive from <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache\n  commentId: P:System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache\n  id: TokenReplayCache\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  langs:\n  - csharp\n  name: TokenReplayCache\n  nameWithType: IdentityModelCachesElement.TokenReplayCache\n  fullName: IdentityModelCachesElement.TokenReplayCache\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Configuration\n  summary: Gets or sets the <xref href=\"System.Type\"></xref> of the token replay cache.\n  remarks: \"This property is optional. It corresponds to an `<tokenReplayCache>` element specified under the  `<caches>` element. It specifies the type of the cache to use to detect replayed tokens. All replay caches must derive from <xref:System.IdentityModel.Tokens.TokenReplayCache>   \\n  \\n Replay detection is enabled with the `<tokenReplayDetection>` element. This element is represented by the <xref:System.IdentityModel.Configuration.TokenReplayDetectionElement> class.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"tokenReplayCache\", IsRequired=false)]\n\n      public System.IdentityModel.Configuration.CustomTypeElement TokenReplayCache { get; set; }\n    return:\n      type: System.IdentityModel.Configuration.CustomTypeElement\n      description: The type of the token replay cache. The type must derive from <xref href=\"System.IdentityModel.Tokens.TokenReplayCache\"></xref>.\n  overload: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: IdentityModelCachesElement()\n  nameWithType: IdentityModelCachesElement.IdentityModelCachesElement()\n  fullName: IdentityModelCachesElement.IdentityModelCachesElement()\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: IsConfigured\n  nameWithType: IdentityModelCachesElement.IsConfigured\n  fullName: IdentityModelCachesElement.IsConfigured\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: Properties\n  nameWithType: IdentityModelCachesElement.Properties\n  fullName: IdentityModelCachesElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: SessionSecurityTokenCache\n  nameWithType: IdentityModelCachesElement.SessionSecurityTokenCache\n  fullName: IdentityModelCachesElement.SessionSecurityTokenCache\n- uid: System.IdentityModel.Configuration.CustomTypeElement\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: CustomTypeElement\n  nameWithType: CustomTypeElement\n  fullName: System.IdentityModel.Configuration.CustomTypeElement\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: TokenReplayCache\n  nameWithType: IdentityModelCachesElement.TokenReplayCache\n  fullName: IdentityModelCachesElement.TokenReplayCache\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.#ctor*\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: IdentityModelCachesElement\n  nameWithType: IdentityModelCachesElement.IdentityModelCachesElement\n  fullName: IdentityModelCachesElement.IdentityModelCachesElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.IsConfigured*\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: IsConfigured\n  nameWithType: IdentityModelCachesElement.IsConfigured\n  fullName: IdentityModelCachesElement.IsConfigured\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.Properties*\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: Properties\n  nameWithType: IdentityModelCachesElement.Properties\n  fullName: IdentityModelCachesElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.SessionSecurityTokenCache*\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: SessionSecurityTokenCache\n  nameWithType: IdentityModelCachesElement.SessionSecurityTokenCache\n  fullName: IdentityModelCachesElement.SessionSecurityTokenCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n- uid: System.IdentityModel.Configuration.IdentityModelCachesElement.TokenReplayCache*\n  parent: System.IdentityModel.Configuration.IdentityModelCachesElement\n  isExternal: false\n  name: TokenReplayCache\n  nameWithType: IdentityModelCachesElement.TokenReplayCache\n  fullName: IdentityModelCachesElement.TokenReplayCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Configuration/IdentityModelCachesElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}