### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  id: NameValueCollection
  children:
  - System.Collections.Specialized.NameValueCollection.#ctor
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  - System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  - System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  - System.Collections.Specialized.NameValueCollection.AllKeys
  - System.Collections.Specialized.NameValueCollection.Clear
  - System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Get(System.String)
  - System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  - System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  - System.Collections.Specialized.NameValueCollection.HasKeys
  - System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  - System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  - System.Collections.Specialized.NameValueCollection.Item(System.String)
  - System.Collections.Specialized.NameValueCollection.Remove(System.String)
  - System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  langs:
  - csharp
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
  type: Class
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Represents a collection of associated <xref href="System.String"></xref> keys and <xref href="System.String"></xref> values that can be accessed either with the key or with the index.
  remarks: "This collection is based on the <xref:System.Collections.Specialized.NameObjectCollectionBase> class. However, unlike the <xref:System.Collections.Specialized.NameObjectCollectionBase>, this class stores multiple string values under a single key.  \n  \n This class can be used for headers, query strings and form data.  \n  \n Each element is a key/value pair.  \n  \n Collections of this type do not preserve the ordering of element, and no particular ordering is guaranteed when enumerating the collection.  \n  \n The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required through reallocation.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n In .NET Framework version 1.0, this class uses culture-sensitive string comparisons. However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> when comparing strings. For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).  \n  \n `null` is allowed as a key or as a value.  \n  \n> [!CAUTION]\n>  The <xref:System.Collections.Specialized.NameValueCollection.Get%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`."
  example:
  - >-
    [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CPP/nvc.cpp#1)]
     [!code-csharp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CS/nvc.cs#1)]
     [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/VB/nvc.vb#1)]
  syntax:
    content: 'public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.Specialized.NameObjectCollectionBase
  derivedClasses:
  - System.Web.HttpClientCertificate
  implements: []
  inheritedMembers:
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: NameValueCollection.NameValueCollection()
  type: Constructor
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is empty, has the default initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(1) operation."
  syntax:
    content: public NameValueCollection ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: NameValueCollection.NameValueCollection(IEqualityComparer)
  type: Constructor
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href="System.Collections.IEqualityComparer"></xref> object.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.  \n  \n This constructor is an O(1) operation."
  syntax:
    content: public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: NameValueCollection.NameValueCollection(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Copies the entries from the specified <xref href="System.Collections.Specialized.NameValueCollection"></xref> to a new <xref href="System.Collections.Specialized.NameValueCollection"></xref> with the same initial capacity as the number of entries copied and using the same hash code provider and the same comparer as the source collection.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n The elements of the new <xref:System.Collections.Specialized.NameValueCollection> are sorted in the same order as the source <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n This constructor is an O(`n`) operation, where `n` is the number of elements in `col`."
  syntax:
    content: public NameValueCollection (System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection"></xref> to copy to the new <xref href="System.Collections.Specialized.NameValueCollection"></xref> instance.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>col</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: NameValueCollection.NameValueCollection(Int32)
  type: Constructor
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is empty, has the specified initial capacity and uses the default case-insensitive hash code provider and the default case-insensitive comparer.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`."
  syntax:
    content: public NameValueCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection"></xref> can contain.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>capacity</code> is less than zero.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(IHashCodeProvider, IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)
  fullName: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is empty, has the default initial capacity and uses the specified hash code provider and the specified comparer.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(1) operation."
  syntax:
    content: >-
      [System.Obsolete("Please use NameValueCollection(IEqualityComparer) instead.")]

      public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: The <xref href="System.Collections.IHashCodeProvider"></xref> that will supply the hash codes for all keys in the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
    - id: comparer
      type: System.Collections.IComparer
      description: The <xref href="System.Collections.IComparer"></xref> to use to determine whether two keys are equal.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32, IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)
  fullName: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)
  type: Constructor
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href="System.Collections.IEqualityComparer"></xref> object.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> object is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.  The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>.  The comparer determines whether two keys are equal.  \n  \n This constructor is an O(`n`) operation, where `n` is the `capacity` parameter."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection"></xref> object can contain.
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>capacity</code> is less than zero.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32, NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32, NameValueCollection)
  fullName: NameValueCollection.NameValueCollection(Int32, NameValueCollection)
  type: Constructor
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Copies the entries from the specified <xref href="System.Collections.Specialized.NameValueCollection"></xref> to a new <xref href="System.Collections.Specialized.NameValueCollection"></xref> with the specified initial capacity or the same initial capacity as the number of entries copied, whichever is greater, and using the default case-insensitive hash code provider and the default case-insensitive comparer.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`.  If the number of elements in `col` is greater than `capacity`, this constructor becomes an O(`n` + `m`) operation, where `n` is `capacity` and `m` is the number of elements in `col`."
  syntax:
    content: public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection"></xref> can contain.
    - id: col
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection"></xref> to copy to the new <xref href="System.Collections.Specialized.NameValueCollection"></xref> instance.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>capacity</code> is less than zero.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>col</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(SerializationInfo, StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)
  fullName: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is serializable and uses the specified <xref href="System.Runtime.Serialization.SerializationInfo"></xref> and <xref href="System.Runtime.Serialization.StreamingContext"></xref>.
  remarks: This constructor is an O(1) operation.
  syntax:
    content: protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: A <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object that contains the information required to serialize the new <xref href="System.Collections.Specialized.NameValueCollection"></xref> instance.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: A <xref href="System.Runtime.Serialization.StreamingContext"></xref> object that contains the source and destination of the serialized stream associated with the new <xref href="System.Collections.Specialized.NameValueCollection"></xref> instance.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  commentId: M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  id: '#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)'
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: NameValueCollection(Int32, IHashCodeProvider, IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)
  fullName: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.
  remarks: "The capacity of a <xref:System.Collections.Specialized.NameValueCollection> is the number of elements that the <xref:System.Collections.Specialized.NameValueCollection> can hold. As elements are added to a <xref:System.Collections.Specialized.NameValueCollection>, the capacity is automatically increased as required by reallocating the internal array.  \n  \n If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameValueCollection>. The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  \n  \n The comparer determines whether two keys are equal. The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.  \n  \n This constructor is an O(`n`) operation, where `n` is `capacity`."
  syntax:
    content: >-
      [System.Obsolete("Please use NameValueCollection(Int32, IEqualityComparer) instead.")]

      public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: The initial number of entries that the <xref href="System.Collections.Specialized.NameValueCollection"></xref> can contain.
    - id: hashProvider
      type: System.Collections.IHashCodeProvider
      description: The <xref href="System.Collections.IHashCodeProvider"></xref> that will supply the hash codes for all keys in the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
    - id: comparer
      type: System.Collections.IComparer
      description: The <xref href="System.Collections.IComparer"></xref> to use to determine whether two keys are equal.
  overload: System.Collections.Specialized.NameValueCollection.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>capacity</code> is less than zero.
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  id: Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: NameValueCollection.Add(NameValueCollection)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Copies the entries in the specified <xref href="System.Collections.Specialized.NameValueCollection"></xref> to the current <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "If a key in `c` already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the associated value in `c` is added to the existing comma-separated list of values associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."
  syntax:
    content: public void Add (System.Collections.Specialized.NameValueCollection c);
    parameters:
    - id: c
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection"></xref> to copy to the current <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>c</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Add(String, String)
  nameWithType: NameValueCollection.Add(String, String)
  fullName: NameValueCollection.Add(String, String)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Adds an entry with the specified name and value to the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "If the specified key already exists in the target <xref:System.Collections.Specialized.NameValueCollection> instance, the specified value is added to the existing comma-separated list of values in the form `\"value1,value2,value3\"`. The values are associated with the same key in the target <xref:System.Collections.Specialized.NameValueCollection> instance.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameValueCollection> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.  \n  \n If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation. If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."
  syntax:
    content: public virtual void Add (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> key of the entry to add. The key can be `null`.
    - id: value
      type: System.String
      description: The <xref href="System.String"></xref> value of the entry to add. The value can be `null`.
  overload: System.Collections.Specialized.NameValueCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  commentId: P:System.Collections.Specialized.NameValueCollection.AllKeys
  id: AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: NameValueCollection.AllKeys
  type: Property
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets all the keys in the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "If the collection is empty, this method returns an empty <xref:System.String> array, not `null`.  \n  \n The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."
  syntax:
    content: public virtual string[] AllKeys { get; }
    return:
      type: System.String[]
      description: A <xref href="System.String"></xref> array that contains all the keys of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  overload: System.Collections.Specialized.NameValueCollection.AllKeys*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Clear
  commentId: M:System.Collections.Specialized.NameValueCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: NameValueCollection.Clear()
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Invalidates the cached arrays and removes all entries from the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: This method is an O(1) operation.
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: CopyTo(Array, Int32)
  nameWithType: NameValueCollection.CopyTo(Array, Int32)
  fullName: NameValueCollection.CopyTo(Array, Int32)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Copies the entire <xref href="System.Collections.Specialized.NameValueCollection"></xref> to a compatible one-dimensional <xref href="System.Array"></xref>, starting at the specified index of the target array.
  remarks: "The specified array must be of a compatible type.  \n  \n This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: The one-dimensional <xref href="System.Array"></xref> that is the destination of the elements copied from <xref href="System.Collections.Specialized.NameValueCollection"></xref>. The <xref href="System.Array"></xref> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <code>dest</code> at which copying begins.
  overload: System.Collections.Specialized.NameValueCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>dest</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than zero.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dest</code> is multidimensional.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>dest</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The type of the source <xref href="System.Collections.Specialized.NameValueCollection"></xref> cannot be cast automatically to the type of the destination <code>dest</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  id: Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: NameValueCollection.Get(Int32)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref> combined into one comma-separated list.
  remarks: This method is an O(`n`) operation, where `n` is the number of values at the specified index.
  syntax:
    content: public virtual string Get (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry that contains the values to get from the collection.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains a comma-separated list of the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>, if found; otherwise, `null`.
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is outside the valid range of indexes for the collection.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Get(System.String)
  id: Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: NameValueCollection.Get(String)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection"></xref> combined into one comma-separated list.
  remarks: "> [!CAUTION]\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \n  \n This method is an O(`n`) operation, where `n` is the number of values associated with the specified key."
  syntax:
    content: public virtual string Get (string name);
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> key of the entry that contains the values to get. The key can be `null`.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains a comma-separated list of the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection"></xref>, if found; otherwise, `null`.
  overload: System.Collections.Specialized.NameValueCollection.Get*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  id: GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: NameValueCollection.GetKey(Int32)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets the key at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: This method is an O(1) operation.
  syntax:
    content: public virtual string GetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the key to get from the collection.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the key at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>, if found; otherwise, `null`.
  overload: System.Collections.Specialized.NameValueCollection.GetKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is outside the valid range of indexes for the collection.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  id: GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: NameValueCollection.GetValues(Int32)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: This method is an O(`n`) operation, where `n` is the number of values at the specified index.
  syntax:
    content: public virtual string[] GetValues (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry that contains the values to get from the collection.
    return:
      type: System.String[]
      description: A <xref href="System.String"></xref> array that contains the values at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>, if found; otherwise, `null`.
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is outside the valid range of indexes for the collection.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: NameValueCollection.GetValues(String)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "> [!CAUTION]\n>  This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This method does not distinguish between the two cases.  \n  \n This method is an O(`n`) operation, where `n` is the number of values associated with the specified key."
  syntax:
    content: public virtual string[] GetValues (string name);
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> key of the entry that contains the values to get. The key can be `null`.
    return:
      type: System.String[]
      description: A <xref href="System.String"></xref> array that contains the values associated with the specified key from the <xref href="System.Collections.Specialized.NameValueCollection"></xref>, if found; otherwise, `null`.
  overload: System.Collections.Specialized.NameValueCollection.GetValues*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  commentId: M:System.Collections.Specialized.NameValueCollection.HasKeys
  id: HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: NameValueCollection.HasKeys()
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets a value indicating whether the <xref href="System.Collections.Specialized.NameValueCollection"></xref> contains keys that are not `null`.
  remarks: This method is an O(1) operation.
  syntax:
    content: public bool HasKeys ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.Specialized.NameValueCollection"></xref> contains keys that are not `null`; otherwise, `false`.'
  overload: System.Collections.Specialized.NameValueCollection.HasKeys*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  commentId: M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  id: InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: NameValueCollection.InvalidateCachedArrays()
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Resets the cached arrays of the collection to `null`.
  remarks: "The arrays returned by <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> are cached for better performance and are automatically refreshed when the collection changes. A derived class can invalidate the cached version by calling <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, thereby forcing the arrays to be recreated.  \n  \n This method is an O(1) operation."
  syntax:
    content: protected void InvalidateCachedArrays ();
    parameters: []
  overload: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: NameValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets the entry at the specified index of the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n This property cannot be set. To set the value at a specified index, use `Item[GetKey(index)]`.  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving the values at the specified index is an O(`n`) operation, where `n` is the number of values."
  syntax:
    content: public string this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry to locate in the collection.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the comma-separated list of values at the specified index of the collection.
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is outside the valid range of indexes for the collection.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  commentId: P:System.Collections.Specialized.NameValueCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: NameValueCollection.Item(String)
  type: Property
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Gets or sets the entry with the specified key in the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[name]`.  \n  \n If the specified key already exists in the collection, setting this property overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.  \n  \n If the specified key does not exist in the collection, setting this property creates a new entry using the specified key and the specified value.  \n  \n> [!CAUTION]\n>  This property returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`. This property does not distinguish between the two cases.  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameValueCollection.Item%2A> property. Visual Basic implements <xref:System.Collections.Specialized.NameValueCollection.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving or setting the values associated with the specified key is an O(`n`) operation, where `n` is the number of values."
  syntax:
    content: public string this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> key of the entry to locate. The key can be `null`.
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the comma-separated list of values associated with the specified key, if found; otherwise, `null`.
  overload: System.Collections.Specialized.NameValueCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only and the operation attempts to modify the collection.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: NameValueCollection.Remove(String)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Removes the entries with the specified key from the <xref href="System.Collections.Specialized.NameObjectCollectionBase"></xref> instance.
  remarks: "If the <xref:System.Collections.Specialized.NameValueCollection> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameValueCollection> remains unchanged. No exception is thrown.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>."
  syntax:
    content: public virtual void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> key of the entry to remove. The key can be `null`.
  overload: System.Collections.Specialized.NameValueCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  commentId: M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  langs:
  - csharp
  name: Set(String, String)
  nameWithType: NameValueCollection.Set(String, String)
  fullName: NameValueCollection.Set(String, String)
  type: Method
  assemblies:
  - System.Collections.Specialized
  - System
  - netstandard
  namespace: System.Collections.Specialized
  summary: Sets the value of an entry in the <xref href="System.Collections.Specialized.NameValueCollection"></xref>.
  remarks: "If the specified key already exists in the collection, this method overwrites the existing list of values with the specified value. To append the new value to the existing list of values, use the <xref:System.Collections.Specialized.NameValueCollection.Add%2A> method.  \n  \n If the specified key does not exist in the collection, this method creates a new entry using the specified key and the specified value.  \n  \n This method is an O(1) operation."
  syntax:
    content: public virtual void Set (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String"></xref> key of the entry to add the new value to. The key can be `null`.
    - id: value
      type: System.String
      description: The <xref href="System.Object"></xref> that represents the new value to add to the specified entry. The value can be `null`.
  overload: System.Collections.Specialized.NameValueCollection.Set*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase
  nameWithType: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.Collections.Specialized.NameValueCollection.#ctor
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection()
  nameWithType: NameValueCollection.NameValueCollection()
  fullName: NameValueCollection.NameValueCollection()
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(IEqualityComparer)
  fullName: NameValueCollection.NameValueCollection(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(NameValueCollection)
  fullName: NameValueCollection.NameValueCollection(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32)
  nameWithType: NameValueCollection.NameValueCollection(Int32)
  fullName: NameValueCollection.NameValueCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(IHashCodeProvider, IComparer)
  nameWithType: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)
  fullName: NameValueCollection.NameValueCollection(IHashCodeProvider, IComparer)
- uid: System.Collections.IHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: IHashCodeProvider
  nameWithType: IHashCodeProvider
  fullName: System.Collections.IHashCodeProvider
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32, IEqualityComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)
  fullName: NameValueCollection.NameValueCollection(Int32, IEqualityComparer)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32, NameValueCollection)
  nameWithType: NameValueCollection.NameValueCollection(Int32, NameValueCollection)
  fullName: NameValueCollection.NameValueCollection(Int32, NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(SerializationInfo, StreamingContext)
  nameWithType: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)
  fullName: NameValueCollection.NameValueCollection(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection(Int32, IHashCodeProvider, IComparer)
  nameWithType: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)
  fullName: NameValueCollection.NameValueCollection(Int32, IHashCodeProvider, IComparer)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(NameValueCollection)
  nameWithType: NameValueCollection.Add(NameValueCollection)
  fullName: NameValueCollection.Add(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add(String, String)
  nameWithType: NameValueCollection.Add(String, String)
  fullName: NameValueCollection.Add(String, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection.AllKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: NameValueCollection.AllKeys
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.NameValueCollection.Clear
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear()
  nameWithType: NameValueCollection.Clear()
  fullName: NameValueCollection.Clear()
- uid: System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo(Array, Int32)
  nameWithType: NameValueCollection.CopyTo(Array, Int32)
  fullName: NameValueCollection.CopyTo(Array, Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.NameValueCollection.Get(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(Int32)
  nameWithType: NameValueCollection.Get(Int32)
  fullName: NameValueCollection.Get(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Get(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get(String)
  nameWithType: NameValueCollection.Get(String)
  fullName: NameValueCollection.Get(String)
- uid: System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey(Int32)
  nameWithType: NameValueCollection.GetKey(Int32)
  fullName: NameValueCollection.GetKey(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(Int32)
  nameWithType: NameValueCollection.GetValues(Int32)
  fullName: NameValueCollection.GetValues(Int32)
- uid: System.Collections.Specialized.NameValueCollection.GetValues(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues(String)
  nameWithType: NameValueCollection.GetValues(String)
  fullName: NameValueCollection.GetValues(String)
- uid: System.Collections.Specialized.NameValueCollection.HasKeys
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys()
  nameWithType: NameValueCollection.HasKeys()
  fullName: NameValueCollection.HasKeys()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays()
  nameWithType: NameValueCollection.InvalidateCachedArrays()
  fullName: NameValueCollection.InvalidateCachedArrays()
- uid: System.Collections.Specialized.NameValueCollection.Item(System.Int32)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: NameValueCollection.Item(Int32)
  fullName: NameValueCollection.Item(Int32)
- uid: System.Collections.Specialized.NameValueCollection.Item(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item(String)
  nameWithType: NameValueCollection.Item(String)
  fullName: NameValueCollection.Item(String)
- uid: System.Collections.Specialized.NameValueCollection.Remove(System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove(String)
  nameWithType: NameValueCollection.Remove(String)
  fullName: NameValueCollection.Remove(String)
- uid: System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set(String, String)
  nameWithType: NameValueCollection.Set(String, String)
  fullName: NameValueCollection.Set(String, String)
- uid: System.Collections.Specialized.NameValueCollection.#ctor*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection.NameValueCollection
  fullName: NameValueCollection.NameValueCollection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.Add*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Add
  nameWithType: NameValueCollection.Add
  fullName: NameValueCollection.Add
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.AllKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: AllKeys
  nameWithType: NameValueCollection.AllKeys
  fullName: NameValueCollection.AllKeys
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.Clear*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Clear
  nameWithType: NameValueCollection.Clear
  fullName: NameValueCollection.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.CopyTo*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: NameValueCollection.CopyTo
  fullName: NameValueCollection.CopyTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.Get*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Get
  nameWithType: NameValueCollection.Get
  fullName: NameValueCollection.Get
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.GetKey*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetKey
  nameWithType: NameValueCollection.GetKey
  fullName: NameValueCollection.GetKey
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.GetValues*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: GetValues
  nameWithType: NameValueCollection.GetValues
  fullName: NameValueCollection.GetValues
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.HasKeys*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: HasKeys
  nameWithType: NameValueCollection.HasKeys
  fullName: NameValueCollection.HasKeys
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: InvalidateCachedArrays
  nameWithType: NameValueCollection.InvalidateCachedArrays
  fullName: NameValueCollection.InvalidateCachedArrays
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.Item*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Item
  nameWithType: NameValueCollection.Item
  fullName: NameValueCollection.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.Remove*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Remove
  nameWithType: NameValueCollection.Remove
  fullName: NameValueCollection.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Collections.Specialized.NameValueCollection.Set*
  parent: System.Collections.Specialized.NameValueCollection
  isExternal: false
  name: Set
  nameWithType: NameValueCollection.Set
  fullName: NameValueCollection.Set
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Specialized/NameValueCollection.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseAdd(String, Object)
  nameWithType: NameObjectCollectionBase.BaseAdd(String, Object)
  fullName: NameObjectCollectionBase.BaseAdd(String, Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseClear()
  nameWithType: NameObjectCollectionBase.BaseClear()
  fullName: NameObjectCollectionBase.BaseClear()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: NameObjectCollectionBase.BaseGet(Int32)
  fullName: NameObjectCollectionBase.BaseGet(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGet(String)
  nameWithType: NameObjectCollectionBase.BaseGet(String)
  fullName: NameObjectCollectionBase.BaseGet(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: NameObjectCollectionBase.BaseGetAllKeys()
  fullName: NameObjectCollectionBase.BaseGetAllKeys()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues()
  nameWithType: NameObjectCollectionBase.BaseGetAllValues()
  fullName: NameObjectCollectionBase.BaseGetAllValues()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetAllValues(Type)
  nameWithType: NameObjectCollectionBase.BaseGetAllValues(Type)
  fullName: NameObjectCollectionBase.BaseGetAllValues(Type)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: NameObjectCollectionBase.BaseGetKey(Int32)
  fullName: NameObjectCollectionBase.BaseGetKey(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseHasKeys()
  nameWithType: NameObjectCollectionBase.BaseHasKeys()
  fullName: NameObjectCollectionBase.BaseHasKeys()
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemove(String)
  nameWithType: NameObjectCollectionBase.BaseRemove(String)
  fullName: NameObjectCollectionBase.BaseRemove(String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: NameObjectCollectionBase.BaseRemoveAt(Int32)
  fullName: NameObjectCollectionBase.BaseRemoveAt(Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(Int32, Object)
  nameWithType: NameObjectCollectionBase.BaseSet(Int32, Object)
  fullName: NameObjectCollectionBase.BaseSet(Int32, Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: BaseSet(String, Object)
  nameWithType: NameObjectCollectionBase.BaseSet(String, Object)
  fullName: NameObjectCollectionBase.BaseSet(String, Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Count
  nameWithType: NameObjectCollectionBase.Count
  fullName: NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: NameObjectCollectionBase.GetEnumerator()
  fullName: NameObjectCollectionBase.GetEnumerator()
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)
  fullName: NameObjectCollectionBase.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: IsReadOnly
  nameWithType: NameObjectCollectionBase.IsReadOnly
  fullName: NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: Keys
  nameWithType: NameObjectCollectionBase.Keys
  fullName: NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: NameObjectCollectionBase.OnDeserialization(Object)
  fullName: NameObjectCollectionBase.OnDeserialization(Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)
  fullName: NameObjectCollectionBase.ICollection.CopyTo(Array, Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: NameObjectCollectionBase.ICollection.IsSynchronized
  fullName: NameObjectCollectionBase.ICollection.IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.NameObjectCollectionBase
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: NameObjectCollectionBase.ICollection.SyncRoot
  fullName: NameObjectCollectionBase.ICollection.SyncRoot
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
