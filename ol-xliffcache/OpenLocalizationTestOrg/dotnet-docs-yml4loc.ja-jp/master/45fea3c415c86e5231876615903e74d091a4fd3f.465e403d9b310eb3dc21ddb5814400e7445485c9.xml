{"nodes":[{"content":"Defines a key/value pair that can be set or retrieved.","nodes":[{"pos":[0,54],"content":"Defines a key/value pair that can be set or retrieved.","nodes":[{"content":"Defines a key/value pair that can be set or retrieved.","pos":[0,54]}]}],"pos":[747,802],"yaml":true},{"content":"The <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=fullName> property returns an instance of this type.  \n  \n The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection. Since each element of a collection based on <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>. For example:  \n  \n [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]\n [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]\n [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  \n  \n The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.","nodes":[{"pos":[0,142],"content":"The <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=fullName> property returns an instance of this type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=fullName&gt;</ph> property returns an instance of this type.","pos":[0,142],"source":"The <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=fullName> property returns an instance of this type."}]},{"pos":[149,583],"content":"The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection. Since each element of a collection based on <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>. For example:","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in C++, <ph id=\"ph3\">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.","pos":[0,155],"source":"The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection."},{"content":"Since each element of a collection based on <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.","pos":[156,340],"source":" Since each element of a collection based on <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value."},{"content":"Instead, the element type is <ph id=\"ph1\">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.","pos":[341,421],"source":" Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>."},{"content":"For example:","pos":[422,434]}]},{"pos":[590,939],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>Generic.Dictionary#11<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>Generic.Dictionary#11<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>Generic.Dictionary#11<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]\n [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]\n [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]"},{"pos":[946,1069],"content":"The <ph id=\"ph1\">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.","source":"The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection."}],"pos":[813,1893],"yaml":true,"extradata":"MT"},{"content":"The type of the key.","nodes":[{"pos":[0,20],"content":"The type of the key.","nodes":[{"content":"The type of the key.","pos":[0,20]}]}],"pos":[2656,2677],"yaml":true},{"content":"The type of the value.","nodes":[{"pos":[0,22],"content":"The type of the value.","nodes":[{"content":"The type of the value.","pos":[0,22]}]}],"pos":[2713,2736],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> structure with the specified key and value.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph> structure with the specified key and value.","source":"Initializes a new instance of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> structure with the specified key and value."}],"pos":[4452,4593],"yaml":true},{"content":"The object defined in each key/value pair.","nodes":[{"pos":[0,42],"content":"The object defined in each key/value pair.","nodes":[{"content":"The object defined in each key/value pair.","pos":[0,42]}]}],"pos":[4728,4771],"yaml":true},{"content":"The definition associated with <code>key</code>.","nodes":[{"pos":[0,48],"content":"The definition associated with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The definition associated with <code>key</code>."}],"pos":[4825,4874],"yaml":true},{"content":"Gets the key in the key/value pair.","nodes":[{"pos":[0,35],"content":"Gets the key in the key/value pair.","nodes":[{"content":"Gets the key in the key/value pair.","pos":[0,35]}]}],"pos":[7433,7469],"yaml":true},{"content":"This property is read/only.","nodes":[{"pos":[0,27],"content":"This property is read/only.","nodes":[{"content":"This property is read/only.","pos":[0,27]}]}],"pos":[7480,7508],"yaml":true,"extradata":"MT"},{"content":"A <code>TKey</code> that is the key of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>.","nodes":[{"pos":[0,106],"content":"A <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> that is the key of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph>.","source":"A <code>TKey</code> that is the key of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>."}],"pos":[8250,8357],"yaml":true},{"content":"Returns a string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>, using the string representations of the key and value.","nodes":[{"pos":[0,157],"content":"Returns a string representation of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph>, using the string representations of the key and value.","source":"Returns a string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>, using the string representations of the key and value."}],"pos":[9972,10130],"yaml":true},{"content":"The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets. For example, the <xref:System.Collections.Generic.KeyValuePair%602.ToString%2A> method for a <xref:System.Collections.Generic.KeyValuePair%602> structure with the string <xref:System.Collections.Generic.KeyValuePair%602.Key%2A> \"Test\" and the integer <xref:System.Collections.Generic.KeyValuePair%602.Value%2A> 14 returns the string \"[Test, 14]\".  \n  \n> [!NOTE]\n>  This method uses the `ToString` methods provided by the key and value types. Some types do not return useful or informative values for their `ToString` methods.","nodes":[{"pos":[0,500],"content":"The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets. For example, the <xref:System.Collections.Generic.KeyValuePair%602.ToString%2A> method for a <xref:System.Collections.Generic.KeyValuePair%602> structure with the string <xref:System.Collections.Generic.KeyValuePair%602.Key%2A> \"Test\" and the integer <xref:System.Collections.Generic.KeyValuePair%602.Value%2A> 14 returns the string \"[Test, 14]\".","nodes":[{"content":"The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets. For example, the <xref:System.Collections.Generic.KeyValuePair%602.ToString%2A> method for a <xref:System.Collections.Generic.KeyValuePair%602> structure with the string <xref:System.Collections.Generic.KeyValuePair%602.Key%2A> \"Test\" and the integer <xref:System.Collections.Generic.KeyValuePair%602.Value%2A> 14 returns the string \"[Test, 14]\".","pos":[0,500],"nodes":[{"content":"The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets.","pos":[0,153]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Collections.Generic.KeyValuePair%602.ToString%2A&gt;</ph> method for a <ph id=\"ph2\">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure with the string <ph id=\"ph3\">&lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt;</ph> \"Test\" and the integer <ph id=\"ph4\">&lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt;</ph> 14 returns the string \"[Test, 14]\".","pos":[154,500],"source":" For example, the <xref:System.Collections.Generic.KeyValuePair%602.ToString%2A> method for a <xref:System.Collections.Generic.KeyValuePair%602> structure with the string <xref:System.Collections.Generic.KeyValuePair%602.Key%2A> \"Test\" and the integer <xref:System.Collections.Generic.KeyValuePair%602.Value%2A> 14 returns the string \"[Test, 14]\"."}]}]},{"pos":[508,679],"content":"[!NOTE]\n This method uses the `ToString` methods provided by the key and value types. Some types do not return useful or informative values for their `ToString` methods.","leadings":["","> "],"nodes":[{"content":" This method uses the `ToString` methods provided by the key and value types. Some types do not return useful or informative values for their `ToString` methods.","pos":[8,169],"nodes":[{"content":"This method uses the <ph id=\"ph1\">`ToString`</ph> methods provided by the key and value types.","pos":[1,77],"source":" This method uses the `ToString` methods provided by the key and value types."},{"content":"Some types do not return useful or informative values for their <ph id=\"ph1\">`ToString`</ph> methods.","pos":[78,161],"source":" Some types do not return useful or informative values for their `ToString` methods."}]}]}],"pos":[10141,10830],"yaml":true,"extradata":"MT"},{"content":"A string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>, which includes the string representations of the key and value.","nodes":[{"pos":[0,158],"content":"A string representation of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph>, which includes the string representations of the key and value.","source":"A string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>, which includes the string representations of the key and value."}],"pos":[10965,11124],"yaml":true},{"content":"Gets the value in the key/value pair.","nodes":[{"pos":[0,37],"content":"Gets the value in the key/value pair.","nodes":[{"content":"Gets the value in the key/value pair.","pos":[0,37]}]}],"pos":[12722,12760],"yaml":true},{"content":"This property is read/only.","nodes":[{"pos":[0,27],"content":"This property is read/only.","nodes":[{"content":"This property is read/only.","pos":[0,27]}]}],"pos":[12771,12799],"yaml":true,"extradata":"MT"},{"content":"A <code>TValue</code> that is the value of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>.","nodes":[{"pos":[0,110],"content":"A <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> that is the value of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.KeyValuePair`2\"&gt;&lt;/xref&gt;</ph>.","source":"A <code>TValue</code> that is the value of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>."}],"pos":[13547,13658],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.KeyValuePair`2\n  commentId: T:System.Collections.Generic.KeyValuePair`2\n  id: KeyValuePair`2\n  children:\n  - System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)\n  - System.Collections.Generic.KeyValuePair`2.Deconstruct(`0@,`1@)\n  - System.Collections.Generic.KeyValuePair`2.Key\n  - System.Collections.Generic.KeyValuePair`2.ToString\n  - System.Collections.Generic.KeyValuePair`2.Value\n  langs:\n  - csharp\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Defines a key/value pair that can be set or retrieved.\n  remarks: \"The <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=fullName> property returns an instance of this type.  \\n  \\n The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection. Since each element of a collection based on <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>. For example:  \\n  \\n [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]\\n [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]\\n [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  \\n  \\n The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.\"\n  example:\n  - \"The following code example shows how to enumerate the keys and values in a dictionary, using the <xref:System.Collections.Generic.KeyValuePair%602> structure.  \\n  \\n This code is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.  \\n  \\n [!code-cpp[Generic.Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#7)]\\n [!code-csharp[Generic.Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#7)]\\n [!code-vb[Generic.Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#7)]\"\n  syntax:\n    content: public struct KeyValuePair<TKey,TValue>\n    typeParameters:\n    - id: TKey\n      description: The type of the key.\n    - id: TValue\n      description: The type of the value.\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)\n  commentId: M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)\n  id: '#ctor(`0,`1)'\n  parent: System.Collections.Generic.KeyValuePair`2\n  langs:\n  - csharp\n  name: KeyValuePair<TKey,TValue>(TKey, TValue)\n  nameWithType: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey, TValue)\n  fullName: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey, TValue)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Initializes a new instance of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref> structure with the specified key and value.\n  syntax:\n    content: public KeyValuePair (TKey key, TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: The object defined in each key/value pair.\n    - id: value\n      type: TValue\n      description: The definition associated with <code>key</code>.\n  overload: System.Collections.Generic.KeyValuePair`2.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.KeyValuePair`2.Deconstruct(`0@,`1@)\n  commentId: M:System.Collections.Generic.KeyValuePair`2.Deconstruct(`0@,`1@)\n  id: Deconstruct(`0@,`1@)\n  parent: System.Collections.Generic.KeyValuePair`2\n  langs:\n  - csharp\n  name: Deconstruct(TKey, TValue)\n  nameWithType: KeyValuePair<TKey,TValue>.Deconstruct(TKey, TValue)\n  fullName: KeyValuePair<TKey,TValue>.Deconstruct(TKey, TValue)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Deconstruct (out TKey key, out TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: ''\n    - id: value\n      type: TValue\n      description: ''\n  overload: System.Collections.Generic.KeyValuePair`2.Deconstruct*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n- uid: System.Collections.Generic.KeyValuePair`2.Key\n  commentId: P:System.Collections.Generic.KeyValuePair`2.Key\n  id: Key\n  parent: System.Collections.Generic.KeyValuePair`2\n  langs:\n  - csharp\n  name: Key\n  nameWithType: KeyValuePair<TKey,TValue>.Key\n  fullName: KeyValuePair<TKey,TValue>.Key\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets the key in the key/value pair.\n  remarks: This property is read/only.\n  example:\n  - \"The following code example shows how to enumerate the keys and values in a dictionary, using the <xref:System.Collections.Generic.KeyValuePair%602> structure.  \\n  \\n This code is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.  \\n  \\n [!code-cpp[Generic.Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#7)]\\n [!code-csharp[Generic.Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#7)]\\n [!code-vb[Generic.Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#7)]\"\n  syntax:\n    content: public TKey Key { get; }\n    return:\n      type: TKey\n      description: A <code>TKey</code> that is the key of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>.\n  overload: System.Collections.Generic.KeyValuePair`2.Key*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.KeyValuePair`2.ToString\n  commentId: M:System.Collections.Generic.KeyValuePair`2.ToString\n  id: ToString\n  parent: System.Collections.Generic.KeyValuePair`2\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: KeyValuePair<TKey,TValue>.ToString()\n  fullName: KeyValuePair<TKey,TValue>.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Returns a string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>, using the string representations of the key and value.\n  remarks: \"The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets. For example, the <xref:System.Collections.Generic.KeyValuePair%602.ToString%2A> method for a <xref:System.Collections.Generic.KeyValuePair%602> structure with the string <xref:System.Collections.Generic.KeyValuePair%602.Key%2A> \\\"Test\\\" and the integer <xref:System.Collections.Generic.KeyValuePair%602.Value%2A> 14 returns the string \\\"[Test, 14]\\\".  \\n  \\n> [!NOTE]\\n>  This method uses the `ToString` methods provided by the key and value types. Some types do not return useful or informative values for their `ToString` methods.\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>, which includes the string representations of the key and value.\n  overload: System.Collections.Generic.KeyValuePair`2.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.Generic.KeyValuePair`2.Value\n  commentId: P:System.Collections.Generic.KeyValuePair`2.Value\n  id: Value\n  parent: System.Collections.Generic.KeyValuePair`2\n  langs:\n  - csharp\n  name: Value\n  nameWithType: KeyValuePair<TKey,TValue>.Value\n  fullName: KeyValuePair<TKey,TValue>.Value\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.Generic\n  summary: Gets the value in the key/value pair.\n  remarks: This property is read/only.\n  example:\n  - \"The following code example shows how to enumerate the keys and values in a dictionary, using the <xref:System.Collections.Generic.KeyValuePair%602> structure.  \\n  \\n This code is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.  \\n  \\n [!code-cpp[Generic.Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source.cpp#7)]\\n [!code-csharp[Generic.Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source.cs#7)]\\n [!code-vb[Generic.Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source.vb#7)]\"\n  syntax:\n    content: public TValue Value { get; }\n    return:\n      type: TValue\n      description: A <code>TValue</code> that is the value of the <xref href=\"System.Collections.Generic.KeyValuePair`2\"></xref>.\n  overload: System.Collections.Generic.KeyValuePair`2.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>(TKey, TValue)\n  nameWithType: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey, TValue)\n  fullName: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey, TValue)\n- uid: TKey\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.KeyValuePair`2.Deconstruct(`0@,`1@)\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: Deconstruct(TKey, TValue)\n  nameWithType: KeyValuePair<TKey,TValue>.Deconstruct(TKey, TValue)\n  fullName: KeyValuePair<TKey,TValue>.Deconstruct(TKey, TValue)\n- uid: System.Collections.Generic.KeyValuePair`2.Key\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: Key\n  nameWithType: KeyValuePair<TKey,TValue>.Key\n  fullName: KeyValuePair<TKey,TValue>.Key\n- uid: System.Collections.Generic.KeyValuePair`2.ToString\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: ToString()\n  nameWithType: KeyValuePair<TKey,TValue>.ToString()\n  fullName: KeyValuePair<TKey,TValue>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.KeyValuePair`2.Value\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: Value\n  nameWithType: KeyValuePair<TKey,TValue>.Value\n  fullName: KeyValuePair<TKey,TValue>.Value\n- uid: System.Collections.Generic.KeyValuePair`2.#ctor*\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>\n  fullName: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n- uid: System.Collections.Generic.KeyValuePair`2.Deconstruct*\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: Deconstruct\n  nameWithType: KeyValuePair<TKey,TValue>.Deconstruct\n  fullName: KeyValuePair<TKey,TValue>.Deconstruct\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n- uid: System.Collections.Generic.KeyValuePair`2.Key*\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: Key\n  nameWithType: KeyValuePair<TKey,TValue>.Key\n  fullName: KeyValuePair<TKey,TValue>.Key\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n- uid: System.Collections.Generic.KeyValuePair`2.ToString*\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: ToString\n  nameWithType: KeyValuePair<TKey,TValue>.ToString\n  fullName: KeyValuePair<TKey,TValue>.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n- uid: System.Collections.Generic.KeyValuePair`2.Value*\n  parent: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: Value\n  nameWithType: KeyValuePair<TKey,TValue>.Value\n  fullName: KeyValuePair<TKey,TValue>.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/KeyValuePair`2.xml\n"}