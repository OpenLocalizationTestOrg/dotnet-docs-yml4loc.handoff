### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePointManager
  commentId: T:System.Net.ServicePointManager
  id: ServicePointManager
  children:
  - System.Net.ServicePointManager.CertificatePolicy
  - System.Net.ServicePointManager.CheckCertificateRevocationList
  - System.Net.ServicePointManager.ClientCipherSuitesCallback
  - System.Net.ServicePointManager.DefaultConnectionLimit
  - System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  - System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  - System.Net.ServicePointManager.DnsRefreshTimeout
  - System.Net.ServicePointManager.EnableDnsRoundRobin
  - System.Net.ServicePointManager.EncryptionPolicy
  - System.Net.ServicePointManager.Expect100Continue
  - System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  - System.Net.ServicePointManager.FindServicePoint(System.Uri)
  - System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  - System.Net.ServicePointManager.MaxServicePointIdleTime
  - System.Net.ServicePointManager.MaxServicePoints
  - System.Net.ServicePointManager.ReusePort
  - System.Net.ServicePointManager.SecurityProtocol
  - System.Net.ServicePointManager.ServerCertificateValidationCallback
  - System.Net.ServicePointManager.ServerCipherSuitesCallback
  - System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePointManager.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePointManager
  nameWithType: ServicePointManager
  fullName: System.Net.ServicePointManager
  type: Class
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Manages the collection of <xref href="System.Net.ServicePoint"></xref> objects.
  remarks: "<xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.  \n  \n When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI. If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.  \n  \n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \n  \n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled."
  example:
  - "The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI www.contoso.com.  \n  \n [!code-cpp[Classic ServicePoint Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePoint Example/CPP/source.cpp#1)]\n [!code-csharp[Classic ServicePoint Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePoint Example/CS/source.cs#1)]\n [!code-vb[Classic ServicePoint Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePoint Example/VB/source.vb#1)]"
  syntax:
    content: public class ServicePointManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.CertificatePolicy
  commentId: P:System.Net.ServicePointManager.CertificatePolicy
  id: CertificatePolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: ServicePointManager.CertificatePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: Gets or sets policy for server certificates.
  remarks: "When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.  \n  \n The default certificate policy allows valid certificates and valid certificates that have expired."
  example:
  - "The following code example shows how to catch a certificate policy exception for a custom certificate policy. It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.  \n  \n [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CPP/source.cpp#1)]\n [!code-csharp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CS/source.cs#1)]\n [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Obsolete("Use ServerCertificateValidationCallback instead", false)]

      public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }
    return:
      type: System.Net.ICertificatePolicy
      description: An object that implements the <xref href="System.Net.ICertificatePolicy"></xref> interface.
  overload: System.Net.ServicePointManager.CertificatePolicy*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  commentId: P:System.Net.ServicePointManager.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: ServicePointManager.CheckCertificateRevocationList
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets a <xref href="System.Boolean"></xref> value that indicates whether the certificate is checked against the certificate authority revocation list.
  remarks: When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process. Its default value is `false`.
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]"
  syntax:
    content: >-
      [System.MonoTODO("CRL checks not implemented")]

      public static bool CheckCertificateRevocationList { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the certificate revocation list is checked; otherwise, `false`.'
  overload: System.Net.ServicePointManager.CheckCertificateRevocationList*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.ClientCipherSuitesCallback
  commentId: P:System.Net.ServicePointManager.ClientCipherSuitesCallback
  id: ClientCipherSuitesCallback
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ClientCipherSuitesCallback
  nameWithType: ServicePointManager.ClientCipherSuitesCallback
  fullName: ServicePointManager.ClientCipherSuitesCallback
  type: Property
  assemblies:
  - System
  namespace: System.Net
  syntax:
    content: >-
      [System.Obsolete("This API is no longer supported.", true)]

      public static System.Net.CipherSuitesCallback ClientCipherSuitesCallback { get; set; }
    return:
      type: System.Net.CipherSuitesCallback
      description: ''
  overload: System.Net.ServicePointManager.ClientCipherSuitesCallback*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  commentId: P:System.Net.ServicePointManager.DefaultConnectionLimit
  id: DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: ServicePointManager.DefaultConnectionLimit
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets the maximum number of concurrent connections allowed by a <xref href="System.Net.ServicePoint"></xref> object.
  remarks: "The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.  \n  \n Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change. If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.  \n  \n> [!NOTE]\n>  Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections. It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols. When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]"
  syntax:
    content: public static int DefaultConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: The maximum number of concurrent connections allowed by a <xref href="System.Net.ServicePoint"></xref> object. The default value is 2. When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to `true`. However, you can change the value programmatically when the autoConfig property is `true`. Set your preferred value once, when the AppDomain loads.
  overload: System.Net.ServicePointManager.DefaultConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <xref href="System.Net.ServicePointManager.DefaultConnectionLimit"></xref> is less than or equal to 0.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  commentId: F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  id: DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: ServicePointManager.DefaultNonPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: The default number of non-persistent connections (4) allowed on a <xref href="System.Net.ServicePoint"></xref> object connected to an HTTP/1.0 or later server. This field is constant but is no longer used in the .NET Framework 2.0.
  syntax:
    content: public const int DefaultNonPersistentConnectionLimit = 4;
    return:
      type: System.Int32
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  commentId: F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  id: DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: ServicePointManager.DefaultPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: The default number of persistent connections (2) allowed on a <xref href="System.Net.ServicePoint"></xref> object connected to an HTTP/1.1 or later server. This field is constant and is used to initialize the <xref href="System.Net.ServicePointManager.DefaultConnectionLimit"></xref> property if the value of the <xref href="System.Net.ServicePointManager.DefaultConnectionLimit"></xref> property has not been set either directly or through configuration.
  remarks: ''
  example:
  - "The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]"
  syntax:
    content: public const int DefaultPersistentConnectionLimit = 2;
    return:
      type: System.Int32
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  commentId: P:System.Net.ServicePointManager.DnsRefreshTimeout
  id: DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: ServicePointManager.DnsRefreshTimeout
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.
  remarks: ''
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]\n [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]\n [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]"
  syntax:
    content: public static int DnsRefreshTimeout { get; set; }
    return:
      type: System.Int32
      description: The time-out value, in milliseconds. A value of -1 indicates an infinite time-out period. The default value is 120,000 milliseconds (two minutes).
  overload: System.Net.ServicePointManager.DnsRefreshTimeout*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  commentId: P:System.Net.ServicePointManager.EnableDnsRoundRobin
  id: EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: ServicePointManager.EnableDnsRoundRobin
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.
  remarks: When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address. If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host. This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]\n [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]\n [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]"
  syntax:
    content: >-
      [System.MonoTODO]

      public static bool EnableDnsRoundRobin { get; set; }
    return:
      type: System.Boolean
      description: '`false` if a DNS resolution always returns the first IP address for a particular host; otherwise `true`. The default is `false`.'
  overload: System.Net.ServicePointManager.EnableDnsRoundRobin*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.EncryptionPolicy
  commentId: P:System.Net.ServicePointManager.EncryptionPolicy
  id: EncryptionPolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: ServicePointManager.EncryptionPolicy
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets the <xref href="System.Net.Security.EncryptionPolicy"></xref> for this <xref href="System.Net.ServicePointManager"></xref> instance.
  remarks: "If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>. This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.  \n  \n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."
  syntax:
    content: >-
      [System.MonoTODO("Always returns EncryptionPolicy.RequireEncryption.")]

      public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }
    return:
      type: System.Net.Security.EncryptionPolicy
      description: The encryption policy to use for this <xref href="System.Net.ServicePointManager"></xref> instance.
  overload: System.Net.ServicePointManager.EncryptionPolicy*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.Expect100Continue
  commentId: P:System.Net.ServicePointManager.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: ServicePointManager.Expect100Continue
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets a <xref href="System.Boolean"></xref> value that determines whether 100-Continue behavior is used.
  remarks: "When this property is set to `true`, 100-Continue behavior is used. Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true. The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \n  \n For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.  \n  \n If this property is `true`, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.  \n  \n Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new <xref:System.Net.ServicePoint> objects created after the change are affected.  \n  \n The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`.  \n  \n The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]"
  syntax:
    content: public static bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: '`true` to enable 100-Continue behavior. The default value is `true`.'
  overload: System.Net.ServicePointManager.Expect100Continue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  commentId: M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  id: FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri, IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri, IWebProxy)
  fullName: ServicePointManager.FindServicePoint(Uri, IWebProxy)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Finds an existing <xref href="System.Net.ServicePoint"></xref> object or creates a new <xref href="System.Net.ServicePoint"></xref> object to manage communications with the specified <xref href="System.Uri"></xref> object.
  remarks: The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);
    parameters:
    - id: address
      type: System.Uri
      description: A <xref href="System.Uri"></xref> object that contains the address of the Internet resource to contact.
    - id: proxy
      type: System.Net.IWebProxy
      description: The proxy data for this request.
    return:
      type: System.Net.ServicePoint
      description: The <xref href="System.Net.ServicePoint"></xref> object that manages communications for the request.
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>address</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The maximum number of <xref href="System.Net.ServicePoint"></xref> objects defined in <xref href="System.Net.ServicePointManager.MaxServicePoints"></xref> has been reached.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  commentId: M:System.Net.ServicePointManager.FindServicePoint(System.Uri)
  id: FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: ServicePointManager.FindServicePoint(Uri)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Finds an existing <xref href="System.Net.ServicePoint"></xref> object or creates a new <xref href="System.Net.ServicePoint"></xref> object to manage communications with the specified <xref href="System.Uri"></xref> object.
  remarks: The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: The <xref href="System.Uri"></xref> object of the Internet resource to contact.
    return:
      type: System.Net.ServicePoint
      description: The <xref href="System.Net.ServicePoint"></xref> object that manages communications for the request.
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>address</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The maximum number of <xref href="System.Net.ServicePoint"></xref> objects defined in <xref href="System.Net.ServicePointManager.MaxServicePoints"></xref> has been reached.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  commentId: M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  id: FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(String, IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String, IWebProxy)
  fullName: ServicePointManager.FindServicePoint(String, IWebProxy)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Finds an existing <xref href="System.Net.ServicePoint"></xref> object or creates a new <xref href="System.Net.ServicePoint"></xref> object to manage communications with the specified Uniform Resource Identifier (URI).
  remarks: The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.
  example:
  - "The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#7)]\n [!code-csharp[System.Net.ServicePoint#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#7)]\n [!code-vb[System.Net.ServicePoint#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#7)]"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);
    parameters:
    - id: uriString
      type: System.String
      description: The URI of the Internet resource to be contacted.
    - id: proxy
      type: System.Net.IWebProxy
      description: The proxy data for this request.
    return:
      type: System.Net.ServicePoint
      description: The <xref href="System.Net.ServicePoint"></xref> object that manages communications for the request.
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: The URI specified in <code>uriString</code> is invalid.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The maximum number of <xref href="System.Net.ServicePoint"></xref> objects defined in <xref href="System.Net.ServicePointManager.MaxServicePoints"></xref> has been reached.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  commentId: P:System.Net.ServicePointManager.MaxServicePointIdleTime
  id: MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: ServicePointManager.MaxServicePointIdleTime
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets the maximum idle time of a <xref href="System.Net.ServicePoint"></xref> object.
  remarks: "The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects. Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.  \n  \n After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection. A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]\n [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]\n [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]"
  syntax:
    content: public static int MaxServicePointIdleTime { get; set; }
    return:
      type: System.Int32
      description: The maximum idle time, in milliseconds, of a <xref href="System.Net.ServicePoint"></xref> object. The default value is 100,000 milliseconds (100 seconds).
  overload: System.Net.ServicePointManager.MaxServicePointIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <xref href="System.Net.ServicePointManager.MaxServicePointIdleTime"></xref> is less than <xref href="System.Threading.Timeout.Infinite"></xref> or greater than <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.MaxServicePoints
  commentId: P:System.Net.ServicePointManager.MaxServicePoints
  id: MaxServicePoints
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: ServicePointManager.MaxServicePoints
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets the maximum number of <xref href="System.Net.ServicePoint"></xref> objects to maintain at any time.
  remarks: When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times. If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]\n [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]\n [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]"
  syntax:
    content: public static int MaxServicePoints { get; set; }
    return:
      type: System.Int32
      description: The maximum number of <xref href="System.Net.ServicePoint"></xref> objects to maintain. The default value is 0, which means there is no limit to the number of <xref href="System.Net.ServicePoint"></xref> objects.
  overload: System.Net.ServicePointManager.MaxServicePoints*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <xref href="System.Net.ServicePointManager.MaxServicePoints"></xref> is less than 0 or greater than <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.ReusePort
  commentId: P:System.Net.ServicePointManager.ReusePort
  id: ReusePort
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: ServicePointManager.ReusePort
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Setting this property value to `true` causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket. This causes the underlying outgoing ports to be shared. This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.
  remarks: The default value is `false`.
  syntax:
    content: >-
      [System.MonoTODO]

      public static bool ReusePort { get; set; }
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean"></xref>.
  overload: System.Net.ServicePointManager.ReusePort*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.SecurityProtocol
  commentId: P:System.Net.ServicePointManager.SecurityProtocol
  id: SecurityProtocol
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: ServicePointManager.SecurityProtocol
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets the security protocol used by the <xref href="System.Net.ServicePoint"></xref> objects managed by the <xref href="System.Net.ServicePointManager"></xref> object.
  remarks: "This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.  \n  \nStarting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=fullName>. This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator. For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).\n \nFor versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property. The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses. Defaults vary depending on individual machine configuration, installed software, and applied patches.  \n  \n Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default. If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection. Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.  \n  \n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \n  \n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled."
  syntax:
    content: public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }
    return:
      type: System.Net.SecurityProtocolType
      description: One of the values defined in the <xref href="System.Net.SecurityProtocolType"></xref> enumeration.
  overload: System.Net.ServicePointManager.SecurityProtocol*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The value specified to set the property is not a valid <xref href="System.Net.SecurityProtocolType"></xref> enumeration value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  commentId: P:System.Net.ServicePointManager.ServerCertificateValidationCallback
  id: ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: ServicePointManager.ServerCertificateValidationCallback
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Gets or sets the callback to validate a server certificate.
  remarks: "An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate. When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.  \n  \n When custom validation is not used, the certificate name is compared with host name used to create the request. For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of \"https://www.contoso.com/default.hmtl\", the default behavior is for the client to check the certificate against www.contoso.com."
  syntax:
    content: public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }
    return:
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: A <xref href="System.Net.Security.RemoteCertificateValidationCallback"></xref>. The default value is `null`.
  overload: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.ServerCipherSuitesCallback
  commentId: P:System.Net.ServicePointManager.ServerCipherSuitesCallback
  id: ServerCipherSuitesCallback
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ServerCipherSuitesCallback
  nameWithType: ServicePointManager.ServerCipherSuitesCallback
  fullName: ServicePointManager.ServerCipherSuitesCallback
  type: Property
  assemblies:
  - System
  namespace: System.Net
  syntax:
    content: >-
      [System.Obsolete("This API is no longer supported.", true)]

      public static System.Net.CipherSuitesCallback ServerCipherSuitesCallback { get; set; }
    return:
      type: System.Net.CipherSuitesCallback
      description: ''
  overload: System.Net.ServicePointManager.ServerCipherSuitesCallback*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  commentId: M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean, Int32, Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)
  fullName: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Enables or disables the keep-alive option on a TCP connection.
  remarks: "An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.  \n  \n The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10.  \n  \n If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>."
  syntax:
    content: public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <code>keepAliveTime</code> and <code>keepAliveInterval</code> values.  \n  \n If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.  \n  \n The default value is false."
    - id: keepAliveTime
      type: System.Int32
      description: "Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.  \n  \n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown."
    - id: keepAliveInterval
      type: System.Int32
      description: "Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.  \n  \n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown."
  overload: System.Net.ServicePointManager.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for <code>keepAliveTime</code> or <code>keepAliveInterval</code> parameter is less than or equal to 0.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  commentId: P:System.Net.ServicePointManager.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: ServicePointManager.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Net.ServicePoint
  namespace: System.Net
  summary: Determines whether the Nagle algorithm is used by the service points managed by this <xref href="System.Net.ServicePointManager"></xref> object.
  remarks: "The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.  \n  \n Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new service points created after the change are affected.  \n  \n The Nagle algorithm is fully described in IETF RFC 896."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]"
  syntax:
    content: public static bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: '`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.'
  overload: System.Net.ServicePointManager.UseNagleAlgorithm*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.UriFormatException
  parent: System
  isExternal: false
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Net.ServicePointManager.CertificatePolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: ServicePointManager.CertificatePolicy
- uid: System.Net.ICertificatePolicy
  parent: System.Net
  isExternal: false
  name: ICertificatePolicy
  nameWithType: ICertificatePolicy
  fullName: System.Net.ICertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: ServicePointManager.CheckCertificateRevocationList
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.ServicePointManager.ClientCipherSuitesCallback
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ClientCipherSuitesCallback
  nameWithType: ServicePointManager.ClientCipherSuitesCallback
  fullName: ServicePointManager.ClientCipherSuitesCallback
- uid: System.Net.CipherSuitesCallback
  parent: System.Net
  isExternal: false
  name: CipherSuitesCallback
  nameWithType: CipherSuitesCallback
  fullName: System.Net.CipherSuitesCallback
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: ServicePointManager.DefaultConnectionLimit
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: ServicePointManager.DefaultNonPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: ServicePointManager.DefaultPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: ServicePointManager.EncryptionPolicy
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri, IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri, IWebProxy)
  fullName: ServicePointManager.FindServicePoint(Uri, IWebProxy)
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: false
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: ServicePointManager.FindServicePoint(Uri)
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(String, IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String, IWebProxy)
  fullName: ServicePointManager.FindServicePoint(String, IWebProxy)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: ServicePointManager.SecurityProtocol
- uid: System.Net.SecurityProtocolType
  parent: System.Net
  isExternal: false
  name: SecurityProtocolType
  nameWithType: SecurityProtocolType
  fullName: System.Net.SecurityProtocolType
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.ServicePointManager.ServerCipherSuitesCallback
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCipherSuitesCallback
  nameWithType: ServicePointManager.ServerCipherSuitesCallback
  fullName: ServicePointManager.ServerCipherSuitesCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive(Boolean, Int32, Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)
  fullName: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: ServicePointManager.UseNagleAlgorithm
- uid: System.Net.ServicePointManager.CertificatePolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: ServicePointManager.CertificatePolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: ServicePointManager.CheckCertificateRevocationList
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.ClientCipherSuitesCallback*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ClientCipherSuitesCallback
  nameWithType: ServicePointManager.ClientCipherSuitesCallback
  fullName: ServicePointManager.ClientCipherSuitesCallback
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.DefaultConnectionLimit*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: ServicePointManager.DefaultConnectionLimit
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.DnsRefreshTimeout*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: ServicePointManager.DnsRefreshTimeout
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: ServicePointManager.EnableDnsRoundRobin
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.EncryptionPolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: ServicePointManager.EncryptionPolicy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.Expect100Continue*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: ServicePointManager.Expect100Continue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.FindServicePoint*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint
  nameWithType: ServicePointManager.FindServicePoint
  fullName: ServicePointManager.FindServicePoint
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: ServicePointManager.MaxServicePointIdleTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.MaxServicePoints*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: ServicePointManager.MaxServicePoints
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.ReusePort*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: ServicePointManager.ReusePort
  monikers:
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.SecurityProtocol*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: ServicePointManager.SecurityProtocol
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: ServicePointManager.ServerCertificateValidationCallback
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.ServerCipherSuitesCallback*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCipherSuitesCallback
  nameWithType: ServicePointManager.ServerCipherSuitesCallback
  fullName: ServicePointManager.ServerCipherSuitesCallback
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.SetTcpKeepAlive*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePointManager.SetTcpKeepAlive
  fullName: ServicePointManager.SetTcpKeepAlive
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Net.ServicePointManager.UseNagleAlgorithm*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: ServicePointManager.UseNagleAlgorithm
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
