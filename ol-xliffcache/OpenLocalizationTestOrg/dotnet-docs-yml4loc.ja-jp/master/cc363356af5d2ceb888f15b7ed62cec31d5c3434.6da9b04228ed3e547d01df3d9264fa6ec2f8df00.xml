{"nodes":[{"content":"Provides a representation of the environment of variables and arguments that is available to an activity at runtime.","nodes":[{"pos":[0,116],"content":"Provides a representation of the environment of variables and arguments that is available to an activity at runtime.","nodes":[{"content":"Provides a representation of the environment of variables and arguments that is available to an activity at runtime.","pos":[0,116]}]}],"pos":[921,1038],"yaml":true},{"content":"Called by derived class constructors to initialize the object.","nodes":[{"pos":[0,62],"content":"Called by derived class constructors to initialize the object.","nodes":[{"content":"Called by derived class constructors to initialize the object.","pos":[0,62]}]}],"pos":[2502,2565],"yaml":true},{"content":"When overridden in a derived class, returns a collection of <xref href=\"System.Activities.LocationReference\"></xref> objects in the current scope.","nodes":[{"pos":[0,146],"content":"When overridden in a derived class, returns a collection of <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph> objects in the current scope.","source":"When overridden in a derived class, returns a collection of <xref href=\"System.Activities.LocationReference\"></xref> objects in the current scope."}],"pos":[3799,3946],"yaml":true},{"content":"A collection of location reference objects in the current scope.","nodes":[{"pos":[0,64],"content":"A collection of location reference objects in the current scope.","nodes":[{"content":"A collection of location reference objects in the current scope.","pos":[0,64]}]}],"pos":[4225,4290],"yaml":true},{"content":"When overridden in a derived class, determines whether the specified <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope.","nodes":[{"pos":[0,158],"content":"When overridden in a derived class, determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph> is visible in the current scope.","source":"When overridden in a derived class, determines whether the specified <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope."}],"pos":[5545,5704],"yaml":true},{"content":"The location to evaluate.","nodes":[{"pos":[0,25],"content":"The location to evaluate.","nodes":[{"content":"The location to evaluate.","pos":[0,25]}]}],"pos":[5926,5952],"yaml":true},{"content":"`true` if the <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph> is visible in the current scope; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope; otherwise, `false`."}],"pos":[6010,6136],"yaml":true},{"content":"Gets or sets the containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets or sets the containing <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>."}],"pos":[7195,7292],"yaml":true},{"content":"The containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>.","nodes":[{"pos":[0,83],"content":"The containing <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;&lt;/xref&gt;</ph>.","source":"The containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>."}],"pos":[7490,7574],"yaml":true},{"content":"Gets the activity that determines the scoping rules for this environment.","nodes":[{"pos":[0,73],"content":"Gets the activity that determines the scoping rules for this environment.","nodes":[{"content":"Gets the activity that determines the scoping rules for this environment.","pos":[0,73]}]}],"pos":[8618,8692],"yaml":true},{"content":"The activity that determines the scoping rules for this environment.","nodes":[{"pos":[0,68],"content":"The activity that determines the scoping rules for this environment.","nodes":[{"content":"The activity that determines the scoping rules for this environment.","pos":[0,68]}]}],"pos":[8842,8911],"yaml":true},{"content":"When overridden in a derived class, attempts to get the specified <xref href=\"System.Activities.LocationReference\"></xref>.","nodes":[{"pos":[0,123],"content":"When overridden in a derived class, attempts to get the specified <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, attempts to get the specified <xref href=\"System.Activities.LocationReference\"></xref>."}],"pos":[10302,10426],"yaml":true},{"content":"The name of the <xref href=\"System.Activities.LocationReference\"></xref> to retrieve.","nodes":[{"pos":[0,85],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph> to retrieve.","source":"The name of the <xref href=\"System.Activities.LocationReference\"></xref> to retrieve."}],"pos":[10633,10719],"yaml":true},{"content":"When this method returns `true`, <code>result</code> contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, `null`. This parameter is passed uninitialized.","nodes":[{"pos":[0,206],"content":"When this method returns `true`, <code>result</code> contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, `null`. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns <ph id=\"ph1\">`true`</ph>, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains the <ph id=\"ph3\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph> with the specified name; otherwise, <ph id=\"ph4\">`null`</ph>.","pos":[0,166],"source":"When this method returns `true`, <code>result</code> contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, `null`."},{"content":"This parameter is passed uninitialized.","pos":[167,206]}]}],"pos":[10803,11010],"yaml":true},{"content":"`true` if a <xref href=\"System.Activities.LocationReference\"></xref> with the specified name is present; otherwise, `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if a <ph id=\"ph2\">&lt;xref href=\"System.Activities.LocationReference\"&gt;&lt;/xref&gt;</ph> with the specified name is present; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if a <xref href=\"System.Activities.LocationReference\"></xref> with the specified name is present; otherwise, `false`."}],"pos":[11068,11195],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.LocationReferenceEnvironment\n  commentId: T:System.Activities.LocationReferenceEnvironment\n  id: LocationReferenceEnvironment\n  children:\n  - System.Activities.LocationReferenceEnvironment.#ctor\n  - System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  - System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  - System.Activities.LocationReferenceEnvironment.Parent\n  - System.Activities.LocationReferenceEnvironment.Root\n  - System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  langs:\n  - csharp\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Provides a representation of the environment of variables and arguments that is available to an activity at runtime.\n  syntax:\n    content: public abstract class LocationReferenceEnvironment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.LocationReferenceEnvironment.#ctor\n  commentId: M:System.Activities.LocationReferenceEnvironment.#ctor\n  id: '#ctor'\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: LocationReferenceEnvironment()\n  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment()\n  fullName: LocationReferenceEnvironment.LocationReferenceEnvironment()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Called by derived class constructors to initialize the object.\n  syntax:\n    content: protected LocationReferenceEnvironment ();\n    parameters: []\n  overload: System.Activities.LocationReferenceEnvironment.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  commentId: M:System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  id: GetLocationReferences\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: GetLocationReferences()\n  nameWithType: LocationReferenceEnvironment.GetLocationReferences()\n  fullName: LocationReferenceEnvironment.GetLocationReferences()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When overridden in a derived class, returns a collection of <xref href=\"System.Activities.LocationReference\"></xref> objects in the current scope.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.LocationReference> GetLocationReferences ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Activities.LocationReference}\n      description: A collection of location reference objects in the current scope.\n  overload: System.Activities.LocationReferenceEnvironment.GetLocationReferences*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  commentId: M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  id: IsVisible(System.Activities.LocationReference)\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: IsVisible(LocationReference)\n  nameWithType: LocationReferenceEnvironment.IsVisible(LocationReference)\n  fullName: LocationReferenceEnvironment.IsVisible(LocationReference)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When overridden in a derived class, determines whether the specified <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope.\n  syntax:\n    content: public abstract bool IsVisible (System.Activities.LocationReference locationReference);\n    parameters:\n    - id: locationReference\n      type: System.Activities.LocationReference\n      description: The location to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Activities.LocationReference\"></xref> is visible in the current scope; otherwise, `false`.'\n  overload: System.Activities.LocationReferenceEnvironment.IsVisible*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.LocationReferenceEnvironment.Parent\n  commentId: P:System.Activities.LocationReferenceEnvironment.Parent\n  id: Parent\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: LocationReferenceEnvironment.Parent\n  fullName: LocationReferenceEnvironment.Parent\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>.\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment Parent { get; protected set; }\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: The containing <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref>.\n  overload: System.Activities.LocationReferenceEnvironment.Parent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.LocationReferenceEnvironment.Root\n  commentId: P:System.Activities.LocationReferenceEnvironment.Root\n  id: Root\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: Root\n  nameWithType: LocationReferenceEnvironment.Root\n  fullName: LocationReferenceEnvironment.Root\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity that determines the scoping rules for this environment.\n  syntax:\n    content: public abstract System.Activities.Activity Root { get; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that determines the scoping rules for this environment.\n  overload: System.Activities.LocationReferenceEnvironment.Root*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  commentId: M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  id: TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  parent: System.Activities.LocationReferenceEnvironment\n  langs:\n  - csharp\n  name: TryGetLocationReference(String, LocationReference)\n  nameWithType: LocationReferenceEnvironment.TryGetLocationReference(String, LocationReference)\n  fullName: LocationReferenceEnvironment.TryGetLocationReference(String, LocationReference)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When overridden in a derived class, attempts to get the specified <xref href=\"System.Activities.LocationReference\"></xref>.\n  syntax:\n    content: public abstract bool TryGetLocationReference (string name, out System.Activities.LocationReference result);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Activities.LocationReference\"></xref> to retrieve.\n    - id: result\n      type: System.Activities.LocationReference\n      description: When this method returns `true`, <code>result</code> contains the <xref href=\"System.Activities.LocationReference\"></xref> with the specified name; otherwise, `null`. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if a <xref href=\"System.Activities.LocationReference\"></xref> with the specified name is present; otherwise, `false`.'\n  overload: System.Activities.LocationReferenceEnvironment.TryGetLocationReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.LocationReferenceEnvironment.#ctor\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: LocationReferenceEnvironment()\n  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment()\n  fullName: LocationReferenceEnvironment.LocationReferenceEnvironment()\n- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: GetLocationReferences()\n  nameWithType: LocationReferenceEnvironment.GetLocationReferences()\n  fullName: LocationReferenceEnvironment.GetLocationReferences()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Activities.LocationReference\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Collections.Generic.IEnumerable{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<LocationReference>\n  nameWithType: IEnumerable<LocationReference>\n  fullName: System.Collections.Generic.IEnumerable<System.Activities.LocationReference>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.LocationReference\n    name: LocationReference\n    nameWithType: LocationReference\n    fullName: System.Activities.LocationReference\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: IsVisible(LocationReference)\n  nameWithType: LocationReferenceEnvironment.IsVisible(LocationReference)\n  fullName: LocationReferenceEnvironment.IsVisible(LocationReference)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.LocationReferenceEnvironment.Parent\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Parent\n  nameWithType: LocationReferenceEnvironment.Parent\n  fullName: LocationReferenceEnvironment.Parent\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.LocationReferenceEnvironment.Root\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Root\n  nameWithType: LocationReferenceEnvironment.Root\n  fullName: LocationReferenceEnvironment.Root\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: TryGetLocationReference(String, LocationReference)\n  nameWithType: LocationReferenceEnvironment.TryGetLocationReference(String, LocationReference)\n  fullName: LocationReferenceEnvironment.TryGetLocationReference(String, LocationReference)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.LocationReferenceEnvironment.#ctor*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment.LocationReferenceEnvironment\n  fullName: LocationReferenceEnvironment.LocationReferenceEnvironment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n- uid: System.Activities.LocationReferenceEnvironment.GetLocationReferences*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: GetLocationReferences\n  nameWithType: LocationReferenceEnvironment.GetLocationReferences\n  fullName: LocationReferenceEnvironment.GetLocationReferences\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n- uid: System.Activities.LocationReferenceEnvironment.IsVisible*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: IsVisible\n  nameWithType: LocationReferenceEnvironment.IsVisible\n  fullName: LocationReferenceEnvironment.IsVisible\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n- uid: System.Activities.LocationReferenceEnvironment.Parent*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Parent\n  nameWithType: LocationReferenceEnvironment.Parent\n  fullName: LocationReferenceEnvironment.Parent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n- uid: System.Activities.LocationReferenceEnvironment.Root*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: Root\n  nameWithType: LocationReferenceEnvironment.Root\n  fullName: LocationReferenceEnvironment.Root\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n- uid: System.Activities.LocationReferenceEnvironment.TryGetLocationReference*\n  parent: System.Activities.LocationReferenceEnvironment\n  isExternal: false\n  name: TryGetLocationReference\n  nameWithType: LocationReferenceEnvironment.TryGetLocationReference\n  fullName: LocationReferenceEnvironment.TryGetLocationReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/LocationReferenceEnvironment.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}