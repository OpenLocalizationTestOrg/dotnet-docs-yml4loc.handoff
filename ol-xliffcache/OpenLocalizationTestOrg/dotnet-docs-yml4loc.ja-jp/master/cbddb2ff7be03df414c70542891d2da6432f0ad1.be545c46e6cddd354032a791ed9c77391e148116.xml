{"nodes":[{"content":"Exposes the public members of the <xref href=\"System.Reflection.PropertyInfo\"></xref> class to unmanaged code.","nodes":[{"pos":[0,110],"content":"Exposes the public members of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> class to unmanaged code.","source":"Exposes the public members of the <xref href=\"System.Reflection.PropertyInfo\"></xref> class to unmanaged code."}],"pos":[3001,3112],"yaml":true},{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","nodes":[{"pos":[0,111],"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,111]}]},{"pos":[118,290],"content":"This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","nodes":[{"content":"This interface preserves the vtable order of the <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt;</ph> class members that can be accessed by unmanaged COM objects.","pos":[0,172],"source":"This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}],"pos":[3123,3418],"yaml":true,"extradata":"MT"},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.Attributes\"></xref> property.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.Attributes\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.Attributes\"></xref> property."}],"pos":[5176,5309],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,219],"content":"The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.Attributes%2A&gt;</ph> property gets the attributes of this property.","pos":[0,102],"source":"The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property."}]}],"pos":[5320,5544],"yaml":true,"extradata":"MT"},{"content":"The attributes of this property.","nodes":[{"pos":[0,32],"content":"The attributes of this property.","nodes":[{"content":"The attributes of this property.","pos":[0,32]}]}],"pos":[5711,5744],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.CanRead\"></xref> property.","nodes":[{"pos":[0,129],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.CanRead\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.CanRead\"></xref> property."}],"pos":[6903,7033],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,236],"content":"The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.CanRead%2A&gt;</ph> property gets a value indicating whether the property can be read.","pos":[0,119],"source":"The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read."}]}],"pos":[7044,7285],"yaml":true,"extradata":"MT"},{"content":"`true` if this property can be read; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if this property can be read; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this property can be read; otherwise, `false`."}],"pos":[7395,7454],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.CanWrite\"></xref> property.","nodes":[{"pos":[0,130],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.CanWrite\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.CanWrite\"></xref> property."}],"pos":[8616,8747],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,243],"content":"The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.CanWrite%2A&gt;</ph> property gets a value indicating whether the property can be written to.","pos":[0,126],"source":"The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to."}]}],"pos":[8758,9006],"yaml":true,"extradata":"MT"},{"content":"`true` if this property can be written to; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if this property can be written to; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this property can be written to; otherwise, `false`."}],"pos":[9117,9182],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.DeclaringType\"></xref> property.","nodes":[{"pos":[0,133],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.DeclaringType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.DeclaringType\"></xref> property."}],"pos":[10375,10509],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,224],"content":"The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</ph> property gets the class that declares this member.","pos":[0,107],"source":"The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."}]}],"pos":[10520,10749],"yaml":true,"extradata":"MT"},{"content":"The `Type` object for the class that declares this member.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">`Type`</ph> object for the class that declares this member.","source":"The `Type` object for the class that declares this member."}],"pos":[10862,10921],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.Equals(System.Object)\"></xref> method.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.Equals(System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.Equals(System.Object)\"></xref> method."}],"pos":[12144,12269],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,256],"content":"The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Object.Equals%2A&gt;</ph> method determines whether the specified <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph>.","pos":[0,141],"source":"The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."}]}],"pos":[12280,12541],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>."}],"pos":[12676,12779],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`."}],"pos":[12837,12978],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetAccessors\"></xref> method.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetAccessors\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetAccessors\"></xref> method."}],"pos":[14167,14300],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,315],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt;</ph> method returns an array whose elements reflect the public <ph id=\"ph2\">`get`</ph>, <ph id=\"ph3\">`set`</ph>, and other accessors of the property reflected by the current instance.","source":"The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance."}],"pos":[14311,14631],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects that reflect the public `get`, `set`, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.","nodes":[{"pos":[0,266],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> objects that reflect the public <ph id=\"ph2\">`get`</ph>, <ph id=\"ph3\">`set`</ph>, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.","source":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects that reflect the public `get`, `set`, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements."}],"pos":[14802,15069],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetAccessors(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,148],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetAccessors(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetAccessors(System.Boolean)\"></xref> method."}],"pos":[16333,16482],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,345],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetAccessors%2A&gt;</ph> method returns an array whose elements reflect the public and, if specified, non-public <ph id=\"ph2\">`get`</ph>, <ph id=\"ph3\">`set`</ph>, and other accessors of the property reflected by the current instance.","source":"The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance."}],"pos":[16493,16843],"yaml":true,"extradata":"MT"},{"content":"`true` to include non-public methods in the returned `MethodInfo` array; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to include non-public methods in the returned <ph id=\"ph2\">`MethodInfo`</ph> array; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to include non-public methods in the returned `MethodInfo` array; otherwise, `false`."}],"pos":[17017,17112],"yaml":true},{"content":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects whose elements reflect the `get`, `set`, and other accessors of the property reflected by the current instance. If the <code>nonPublic</code> parameter is `true`, this array contains public and non-public `get`, `set`, and other accessors. If <code>nonPublic</code> is `false`, this array contains only public `get`, `set`, and other accessors. If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.","nodes":[{"pos":[0,524],"content":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects whose elements reflect the `get`, `set`, and other accessors of the property reflected by the current instance. If the <code>nonPublic</code> parameter is `true`, this array contains public and non-public `get`, `set`, and other accessors. If <code>nonPublic</code> is `false`, this array contains only public `get`, `set`, and other accessors. If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> objects whose elements reflect the <ph id=\"ph2\">`get`</ph>, <ph id=\"ph3\">`set`</ph>, and other accessors of the property reflected by the current instance.","pos":[0,181],"source":"An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects whose elements reflect the `get`, `set`, and other accessors of the property reflected by the current instance."},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph>, this array contains public and non-public <ph id=\"ph3\">`get`</ph>, <ph id=\"ph4\">`set`</ph>, and other accessors.","pos":[182,309],"source":" If the <code>nonPublic</code> parameter is `true`, this array contains public and non-public `get`, `set`, and other accessors."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>, this array contains only public <ph id=\"ph3\">`get`</ph>, <ph id=\"ph4\">`set`</ph>, and other accessors.","pos":[310,414],"source":" If <code>nonPublic</code> is `false`, this array contains only public `get`, `set`, and other accessors."},{"content":"If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.","pos":[415,524]}]}],"pos":[17186,17711],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,153],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"></xref> method."}],"pos":[19017,19171],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,239],"content":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method returns an array containing all the custom attributes.","pos":[0,124],"source":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."}]}],"pos":[19182,19426],"yaml":true,"extradata":"MT"},{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","nodes":[{"pos":[0,87],"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","nodes":[{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","pos":[0,87]}]}],"pos":[19581,19669],"yaml":true},{"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","nodes":[{"pos":[0,110],"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","nodes":[{"content":"An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.","pos":[0,110]}]}],"pos":[19728,19839],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,165],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method."}],"pos":[21206,21372],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,256],"content":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method returns an array of custom attributes identified by <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph>.","pos":[0,141],"source":"The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."}]}],"pos":[21383,21644],"yaml":true,"extradata":"MT"},{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","nodes":[{"pos":[0,99],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]}],"pos":[21822,21922],"yaml":true},{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","nodes":[{"pos":[0,87],"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","nodes":[{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","pos":[0,87]}]}],"pos":[21986,22074],"yaml":true},{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"pos":[0,124],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]}],"pos":[22133,22258],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetGetMethod\"></xref> method.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetGetMethod\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetGetMethod\"></xref> method."}],"pos":[23460,23593],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,232],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt;</ph> method returns the public <ph id=\"ph2\">`get`</ph> accessor for this property.","source":"The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property."}],"pos":[23604,23841],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public `get` accessor for this property, or `null` if the `get` accessor is non-public or does not exist.","nodes":[{"pos":[0,181],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the public <ph id=\"ph2\">`get`</ph> accessor for this property, or <ph id=\"ph3\">`null`</ph> if the <ph id=\"ph4\">`get`</ph> accessor is non-public or does not exist.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public `get` accessor for this property, or `null` if the `get` accessor is non-public or does not exist."}],"pos":[24008,24190],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,148],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)\"></xref> method."}],"pos":[25454,25603],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,246],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A&gt;</ph> method returns the public or non-public <ph id=\"ph2\">`get`</ph> accessor for this property.","source":"The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property."}],"pos":[25614,25865],"yaml":true,"extradata":"MT"},{"content":"`true` to return a non-public `get` accessor; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> to return a non-public <ph id=\"ph2\">`get`</ph> accessor; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to return a non-public `get` accessor; otherwise, `false`."}],"pos":[26037,26105],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `get` accessor for this property, if the <code>nonPublic</code> parameter is `true`. Or `null` if <code>nonPublic</code> is `false` and the `get` accessor is non-public, or if <code>nonPublic</code> is `true` but no `get` accessors exist.","nodes":[{"pos":[0,314],"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `get` accessor for this property, if the <code>nonPublic</code> parameter is `true`. Or `null` if <code>nonPublic</code> is `false` and the `get` accessor is non-public, or if <code>nonPublic</code> is `true` but no `get` accessors exist.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">`get`</ph> accessor for this property, if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph4\">`true`</ph>.","pos":[0,160],"source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `get` accessor for this property, if the <code>nonPublic</code> parameter is `true`."},{"content":"Or <ph id=\"ph1\">`null`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`false`</ph> and the <ph id=\"ph4\">`get`</ph> accessor is non-public, or if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">nonPublic</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph6\">`true`</ph> but no <ph id=\"ph7\">`get`</ph> accessors exist.","pos":[161,314],"source":" Or `null` if <code>nonPublic</code> is `false` and the `get` accessor is non-public, or if <code>nonPublic</code> is `true` but no `get` accessors exist."}]}],"pos":[26177,26492],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.GetHashCode\"></xref> method.","nodes":[{"pos":[0,114],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.GetHashCode\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.GetHashCode\"></xref> method."}],"pos":[27681,27796],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,330],"content":"The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","nodes":[{"content":"The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> method serves as a hash function for a particular type.","pos":[0,95],"source":"The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[96,215],"source":" <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table."}]}]}],"pos":[27807,28142],"yaml":true,"extradata":"MT"},{"content":"The hash code for the current instance.","nodes":[{"pos":[0,39],"content":"The hash code for the current instance.","nodes":[{"content":"The hash code for the current instance.","pos":[0,39]}]}],"pos":[28267,28307],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[29825,29893],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,185],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[109,185],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[29904,30090],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[30289,30332],"yaml":true},{"content":"An array of names to be mapped.","nodes":[{"pos":[0,31],"content":"An array of names to be mapped.","nodes":[{"content":"An array of names to be mapped.","pos":[0,31]}]}],"pos":[30397,30429],"yaml":true},{"content":"The count of the names to be mapped.","nodes":[{"pos":[0,36],"content":"The count of the names to be mapped.","nodes":[{"content":"The count of the names to be mapped.","pos":[0,36]}]}],"pos":[30491,30528],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[30588,30640],"yaml":true},{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","nodes":[{"pos":[0,90],"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","nodes":[{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","pos":[0,90]}]}],"pos":[30704,30795],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetIndexParameters\"></xref> method.","nodes":[{"pos":[0,138],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetIndexParameters\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetIndexParameters\"></xref> method."}],"pos":[32027,32166],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,247],"content":"The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetIndexParameters%2A&gt;</ph> method returns an array of all the index parameters for the property","pos":[0,132],"source":"The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property"}]}],"pos":[32177,32429],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Reflection.ParameterInfo\"></xref> containing the parameters for the indexes.","nodes":[{"pos":[0,112],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterInfo\"&gt;&lt;/xref&gt;</ph> containing the parameters for the indexes.","source":"An array of type <xref href=\"System.Reflection.ParameterInfo\"></xref> containing the parameters for the indexes."}],"pos":[32612,32725],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)\"></xref> method.","nodes":[{"pos":[0,148],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)\"></xref> method."}],"pos":[33995,34144],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,225],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt;</ph> method returns the <ph id=\"ph2\">`set`</ph> accessor for this property.","source":"The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property."}],"pos":[34155,34385],"yaml":true,"extradata":"MT"},{"content":"`true` to return a non-public accessor; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> to return a non-public accessor; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to return a non-public accessor; otherwise, `false`."}],"pos":[34557,34619],"yaml":true},{"content":"One of the values in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property.  \n  \n </td><td> The `set` accessor is public.  \n  \n -or-  \n  \n The <code>nonPublic</code> parameter is `true` and the `set` accessor is non-public.  \n  \n </td></tr><tr><td>`null`</td><td> The <code>nonPublic</code> parameter is `true`, but the property is read-only.  \n  \n -or-  \n  \n The <code>nonPublic</code> parameter is `false` and the `set` accessor is non-public.  \n  \n -or-  \n  \n There is no `set` accessor.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,41],"content":"One of the values in the following table.","nodes":[{"content":"One of the values in the following table.","pos":[0,41]}]},{"pos":[48,294],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property.  \n  \n </td><td> The `set` accessor is public.","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Meaning","pos":[45,57],"source":" Meaning  \n  \n "},{"content":" A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property.  \n  \n ","pos":[92,207],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">`Set`</ph> method for this property.","pos":[1,108],"source":" A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property."}]},{"content":"The <ph id=\"ph1\">`set`</ph> accessor is public.","pos":[217,246],"source":" The `set` accessor is public."}]},{"pos":[301,305],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[312,396],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`true`</ph> and the <ph id=\"ph3\">`set`</ph> accessor is non-public.","source":"The <code>nonPublic</code> parameter is `true` and the `set` accessor is non-public."},{"pos":[403,515],"content":"</td></tr><tr><td>`null`</td><td> The <code>nonPublic</code> parameter is `true`, but the property is read-only.","nodes":[{"content":"The <ph id=\"ph1\">&lt;code&gt;nonPublic&lt;/code&gt;</ph> parameter is <ph id=\"ph2\">`true`</ph>, but the property is read-only.","pos":[34,112],"source":" The <code>nonPublic</code> parameter is `true`, but the property is read-only."}]},{"pos":[522,526],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[533,618],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nonPublic</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`false`</ph> and the <ph id=\"ph3\">`set`</ph> accessor is non-public.","source":"The <code>nonPublic</code> parameter is `false` and the `set` accessor is non-public."},{"pos":[625,629],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[636,663],"content":"There is no <ph id=\"ph1\">`set`</ph> accessor.","source":"There is no `set` accessor."}],"pos":[34691,35416],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetSetMethod\"></xref> method.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetSetMethod\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetSetMethod\"></xref> method."}],"pos":[36611,36744],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,232],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A&gt;</ph> method returns the public <ph id=\"ph2\">`set`</ph> accessor for this property.","source":"The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property."}],"pos":[36755,36992],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property if the `set` accessor is public, or `null` if the `set` accessor is not public.","nodes":[{"pos":[0,188],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object representing the <ph id=\"ph2\">`Set`</ph> method for this property if the <ph id=\"ph3\">`set`</ph> accessor is public, or <ph id=\"ph4\">`null`</ph> if the <ph id=\"ph5\">`set`</ph> accessor is not public.","source":"The <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property if the `set` accessor is public, or `null` if the `set` accessor is not public."}],"pos":[37159,37348],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.GetType\"></xref> method.","nodes":[{"pos":[0,110],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.GetType\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.GetType\"></xref> method."}],"pos":[38513,38624],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.GetType%2A> method gets the type of the current instance.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,196],"content":"The <xref:System.Object.GetType%2A> method gets the type of the current instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Object.GetType%2A&gt;</ph> method gets the type of the current instance.","pos":[0,81],"source":"The <xref:System.Object.GetType%2A> method gets the type of the current instance."}]}],"pos":[38635,38836],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object.","nodes":[{"pos":[0,42],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Type\"></xref> object."}],"pos":[38957,39000],"yaml":true},{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","nodes":[{"pos":[0,109],"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","pos":[0,109]}]}],"pos":[40379,40489],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,183],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[109,183],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[40500,40684],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[40851,40883],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[40943,40991],"yaml":true},{"content":"A pointer to the requested type information object.","nodes":[{"pos":[0,51],"content":"A pointer to the requested type information object.","nodes":[{"content":"A pointer to the requested type information object.","pos":[0,51]}]}],"pos":[41054,41106],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[42390,42483],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,188],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[109,188],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[42494,42683],"yaml":true,"extradata":"MT"},{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","nodes":[{"pos":[0,178],"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","pos":[0,178],"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.","pos":[0,138]},{"content":"This parameter is passed uninitialized.","pos":[139,178]}]}]}],"pos":[42834,43013],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])\"></xref> method.","nodes":[{"pos":[0,159],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])\"></xref> method."}],"pos":[44329,44489],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,243],"content":"The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt;</ph> method returns a literal value associated with the property by a compiler.","pos":[0,128],"source":"The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler."}]}],"pos":[44500,44748],"yaml":true,"extradata":"MT"},{"content":"The object whose property value will be returned.","nodes":[{"pos":[0,49],"content":"The object whose property value will be returned.","nodes":[{"content":"The object whose property value will be returned.","pos":[0,49]}]}],"pos":[44899,44949],"yaml":true},{"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"pos":[0,101],"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <ph id=\"ph1\">`null`</ph> for non-indexed properties.","pos":[46,101],"source":" This value should be `null` for non-indexed properties."}]}],"pos":[45012,45114],"yaml":true},{"content":"The property value for the <code>obj</code> parameter.","nodes":[{"pos":[0,54],"content":"The property value for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The property value for the <code>obj</code> parameter."}],"pos":[45171,45226],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.","nodes":[{"pos":[0,248],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method."}],"pos":[46906,47155],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,289],"content":"The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.GetValue%2A&gt;</ph> method returns the value of a property having the specified binding, index, and <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.","pos":[0,174],"source":"The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>."}]}],"pos":[47166,47460],"yaml":true,"extradata":"MT"},{"content":"The object whose property value will be returned.","nodes":[{"pos":[0,49],"content":"The object whose property value will be returned.","nodes":[{"content":"The object whose property value will be returned.","pos":[0,49]}]}],"pos":[47729,47779],"yaml":true},{"content":"The invocation attribute. This must be a bit flag from `BindingFlags`: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.","nodes":[{"pos":[0,307],"content":"The invocation attribute. This must be a bit flag from `BindingFlags`: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.","nodes":[{"content":"The invocation attribute.","pos":[0,25]},{"content":"This must be a bit flag from <ph id=\"ph1\">`BindingFlags`</ph>: <ph id=\"ph2\">`InvokeMethod`</ph>, <ph id=\"ph3\">`CreateInstance`</ph>, <ph id=\"ph4\">`Static`</ph>, <ph id=\"ph5\">`GetField`</ph>, <ph id=\"ph6\">`SetField`</ph>, <ph id=\"ph7\">`GetProperty`</ph>, or <ph id=\"ph8\">`SetProperty`</ph>.","pos":[26,171],"source":" This must be a bit flag from `BindingFlags`: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`."},{"content":"A suitable invocation attribute must be specified.","pos":[172,222]},{"content":"If a static member will be invoked, the <ph id=\"ph1\">`Static`</ph> flag of <ph id=\"ph2\">`BindingFlags`</ph> must be set.","pos":[223,307],"source":" If a static member will be invoked, the `Static` flag of `BindingFlags` must be set."}]}],"pos":[47862,48172],"yaml":true},{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects through reflection. If <code>binder</code> is `null`, the default binder is used.","nodes":[{"pos":[0,206],"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects through reflection. If <code>binder</code> is `null`, the default binder is used.","nodes":[{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <ph id=\"ph1\">`MemberInfo`</ph> objects through reflection.","pos":[0,144],"source":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects through reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, the default binder is used.","pos":[145,206],"source":" If <code>binder</code> is `null`, the default binder is used."}]}],"pos":[48245,48452],"yaml":true},{"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"pos":[0,101],"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <ph id=\"ph1\">`null`</ph> for non-indexed properties.","pos":[46,101],"source":" This value should be `null` for non-indexed properties."}]}],"pos":[48515,48617],"yaml":true},{"content":"The `CultureInfo` object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.","nodes":[{"pos":[0,342],"content":"The `CultureInfo` object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.","nodes":[{"content":"The <ph id=\"ph1\">`CultureInfo`</ph> object that represents the culture for which the resource will be localized.","pos":[0,94],"source":"The `CultureInfo` object that represents the culture for which the resource will be localized."},{"content":"Note that if the resource is not localized for this culture, the <ph id=\"ph1\">`CultureInfo.Parent`</ph> method will be called successively in search of a match.","pos":[95,237],"source":" Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match."},{"content":"If this value is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">`CultureInfo`</ph> is obtained from the <ph id=\"ph3\">`CultureInfo.CurrentUICulture`</ph> property.","pos":[238,342],"source":" If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property."}]}],"pos":[48699,49042],"yaml":true},{"content":"The property value for the <code>obj</code> parameter.","nodes":[{"pos":[0,54],"content":"The property value for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The property value for the <code>obj</code> parameter."}],"pos":[49099,49154],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[50819,50883],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,178],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[109,178],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[50894,51073],"yaml":true,"extradata":"MT"},{"content":"An identifier of a member.","nodes":[{"pos":[0,26],"content":"An identifier of a member.","nodes":[{"content":"An identifier of a member.","pos":[0,26]}]}],"pos":[51335,51362],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[51420,51463],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[51523,51575],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[51636,51678],"yaml":true},{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,161],"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,161]}]}],"pos":[51745,51907],"yaml":true},{"content":"A pointer to the location where the result will be stored.","nodes":[{"pos":[0,58],"content":"A pointer to the location where the result will be stored.","nodes":[{"content":"A pointer to the location where the result will be stored.","pos":[0,58]}]}],"pos":[51973,52032],"yaml":true},{"content":"A pointer to a structure that contains exception information.","nodes":[{"pos":[0,61],"content":"A pointer to a structure that contains exception information.","nodes":[{"content":"A pointer to a structure that contains exception information.","pos":[0,61]}]}],"pos":[52098,52160],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[52224,52275],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,155],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method."}],"pos":[53569,53725],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,273],"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</ph> method indicates whether one or more instance of the <ph id=\"ph2\">`attributeType`</ph> parameter is applied to this member.","source":"The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member."}],"pos":[53736,54014],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> object to which the custom attributes are applied.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object to which the custom attributes are applied.","source":"The <xref href=\"System.Type\"></xref> object to which the custom attributes are applied."}],"pos":[54178,54266],"yaml":true},{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","nodes":[{"pos":[0,87],"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","nodes":[{"content":"true to search this member's inheritance chain to find the attributes; otherwise false.","pos":[0,87]}]}],"pos":[54330,54418],"yaml":true},{"content":"`true` if one or more instances of the <code>attributeType</code> parameter are applied to this member; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if one or more instances of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter are applied to this member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if one or more instances of the <code>attributeType</code> parameter are applied to this member; otherwise, `false`."}],"pos":[54476,54602],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.IsSpecialName\"></xref> property.","nodes":[{"pos":[0,135],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.IsSpecialName\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.IsSpecialName\"></xref> property."}],"pos":[55796,55932],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,250],"content":"The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.IsSpecialName%2A&gt;</ph> property sets a value indicating whether the property is the special name.","pos":[0,133],"source":"The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name."}]}],"pos":[55943,56198],"yaml":true,"extradata":"MT"},{"content":"`true` if this property is the special name; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if this property is the special name; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this property is the special name; otherwise, `false`."}],"pos":[56314,56381],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.MemberType\"></xref> property.","nodes":[{"pos":[0,132],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.MemberType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.MemberType\"></xref> property."}],"pos":[57561,57694],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,274],"content":"The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.MemberType%2A&gt;</ph> property gets a <ph id=\"ph2\">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value indicating that this member is a property.","pos":[0,157],"source":"The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property."}]}],"pos":[57705,57984],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating that this member is a property.","nodes":[{"pos":[0,111],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;&lt;/xref&gt;</ph> values indicating that this member is a property.","source":"One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating that this member is a property."}],"pos":[58137,58249],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property.","nodes":[{"pos":[0,124],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.Name\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property."}],"pos":[59390,59515],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,210],"content":"The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property gets the name of the current member.","pos":[0,93],"source":"The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."}]}],"pos":[59526,59741],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> object containing the name of this member.","nodes":[{"pos":[0,79],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object containing the name of this member.","source":"A <xref href=\"System.String\"></xref> object containing the name of this member."}],"pos":[59849,59929],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.PropertyType\"></xref> property.","nodes":[{"pos":[0,134],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.PropertyType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.PropertyType\"></xref> property."}],"pos":[61112,61247],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,215],"content":"The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.PropertyType%2A&gt;</ph> property gets the type of this property.","pos":[0,98],"source":"The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property."}]}],"pos":[61258,61478],"yaml":true,"extradata":"MT"},{"content":"The type of this property.","nodes":[{"pos":[0,26],"content":"The type of this property.","nodes":[{"content":"The type of this property.","pos":[0,26]}]}],"pos":[61590,61617],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.ReflectedType\"></xref> property.","nodes":[{"pos":[0,133],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo.ReflectedType\"&gt;&lt;/xref&gt;</ph> property.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.ReflectedType\"></xref> property."}],"pos":[62814,62948],"yaml":true},{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.","nodes":[{"pos":[0,110],"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This property is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,110]}]},{"pos":[117,277],"content":"The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> property gets the class object that was used to obtain this <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo&gt;</ph> object.","pos":[0,160],"source":"The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object."}]}],"pos":[62959,63241],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> object through which this <xref href=\"System.Reflection.MemberInfo\"></xref> object was obtained.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object through which this <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> object was obtained.","source":"The <xref href=\"System.Type\"></xref> object through which this <xref href=\"System.Reflection.MemberInfo\"></xref> object was obtained."}],"pos":[63354,63488],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\"></xref> method.","nodes":[{"pos":[0,243],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\"></xref> method."}],"pos":[65239,65483],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,237],"content":"The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.FieldInfo.SetValue%2A&gt;</ph> method sets the property value for the given object to the given value.","pos":[0,122],"source":"The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value."}]}],"pos":[65494,65736],"yaml":true,"extradata":"MT"},{"content":"The object whose property value will be returned.","nodes":[{"pos":[0,49],"content":"The object whose property value will be returned.","nodes":[{"content":"The object whose property value will be returned.","pos":[0,49]}]}],"pos":[66017,66067],"yaml":true},{"content":"The new value for this property.","nodes":[{"pos":[0,32],"content":"The new value for this property.","nodes":[{"content":"The new value for this property.","pos":[0,32]}]}],"pos":[66128,66161],"yaml":true},{"content":"The invocation attribute. This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.","nodes":[{"pos":[0,344],"content":"The invocation attribute. This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.","nodes":[{"content":"The invocation attribute.","pos":[0,25]},{"content":"This must be a bit flag from <ph id=\"ph1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;&lt;/xref&gt;</ph>: <ph id=\"ph2\">`InvokeMethod`</ph>, <ph id=\"ph3\">`CreateInstance`</ph>, <ph id=\"ph4\">`Static`</ph>, <ph id=\"ph5\">`GetField`</ph>, <ph id=\"ph6\">`SetField`</ph>, <ph id=\"ph7\">`GetProperty`</ph>, or <ph id=\"ph8\">`SetProperty`</ph>.","pos":[26,208],"source":" This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`."},{"content":"A suitable invocation attribute must be specified.","pos":[209,259]},{"content":"If a static member will be invoked, the <ph id=\"ph1\">`Static`</ph> flag of <ph id=\"ph2\">`BindingFlags`</ph> must be set.","pos":[260,344],"source":" If a static member will be invoked, the `Static` flag of `BindingFlags` must be set."}]}],"pos":[66244,66591],"yaml":true},{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href=\"System.Reflection.MemberInfo\"></xref> objects through reflection. If <code>binder</code> is `null`, the default binder is used.","nodes":[{"pos":[0,243],"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href=\"System.Reflection.MemberInfo\"></xref> objects through reflection. If <code>binder</code> is `null`, the default binder is used.","nodes":[{"content":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> objects through reflection.","pos":[0,181],"source":"An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href=\"System.Reflection.MemberInfo\"></xref> objects through reflection."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">binder</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, the default binder is used.","pos":[182,243],"source":" If <code>binder</code> is `null`, the default binder is used."}]}],"pos":[66664,66908],"yaml":true},{"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"pos":[0,101],"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <ph id=\"ph1\">`null`</ph> for non-indexed properties.","pos":[46,101],"source":" This value should be `null` for non-indexed properties."}]}],"pos":[66971,67073],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.","nodes":[{"pos":[0,382],"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that represents the culture for which the resource will be localized.","pos":[0,134],"source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents the culture for which the resource will be localized."},{"content":"Note that if the resource is not localized for this culture, the <ph id=\"ph1\">`CultureInfo.Parent`</ph> method will be called successively in search of a match.","pos":[135,277],"source":" Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match."},{"content":"If this value is <ph id=\"ph1\">`null`</ph>, the <ph id=\"ph2\">`CultureInfo`</ph> is obtained from the <ph id=\"ph3\">`CultureInfo.CurrentUICulture`</ph> property.","pos":[278,382],"source":" If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property."}]}],"pos":[67155,67538],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\"></xref> method.","nodes":[{"pos":[0,173],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\"></xref> method."}],"pos":[68912,69086],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[115,255],"content":"The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.PropertyInfo.SetValue%2A&gt;</ph> method sets the value of the property with optional index values for index properties.","pos":[0,140],"source":"The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties."}]}],"pos":[69097,69357],"yaml":true,"extradata":"MT"},{"content":"The object whose property value will be set.","nodes":[{"pos":[0,44],"content":"The object whose property value will be set.","nodes":[{"content":"The object whose property value will be set.","pos":[0,44]}]}],"pos":[69520,69565],"yaml":true},{"content":"The new value for this property.","nodes":[{"pos":[0,32],"content":"The new value for this property.","nodes":[{"content":"The new value for this property.","pos":[0,32]}]}],"pos":[69626,69659],"yaml":true},{"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"pos":[0,101],"content":"Optional index values for indexed properties. This value should be `null` for non-indexed properties.","nodes":[{"content":"Optional index values for indexed properties.","pos":[0,45]},{"content":"This value should be <ph id=\"ph1\">`null`</ph> for non-indexed properties.","pos":[46,101],"source":" This value should be `null` for non-indexed properties."}]}],"pos":[69722,69824],"yaml":true},{"content":"Provides COM objects with version-independent access to the <xref href=\"System.Object.ToString\"></xref> method.","nodes":[{"pos":[0,111],"content":"Provides COM objects with version-independent access to the <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method.","source":"Provides COM objects with version-independent access to the <xref href=\"System.Object.ToString\"></xref> method."}],"pos":[70991,71103],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"pos":[0,108],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]}],"pos":[71114,71223],"yaml":true,"extradata":"MT"},{"content":"A string that represents the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,72],"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"A string that represents the current <xref href=\"System.Object\"></xref>."}],"pos":[71349,71422],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._PropertyInfo\n  commentId: T:System.Runtime.InteropServices._PropertyInfo\n  id: _PropertyInfo\n  children:\n  - System.Runtime.InteropServices._PropertyInfo.Attributes\n  - System.Runtime.InteropServices._PropertyInfo.CanRead\n  - System.Runtime.InteropServices._PropertyInfo.CanWrite\n  - System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  - System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  - System.Runtime.InteropServices._PropertyInfo.GetType\n  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  - System.Runtime.InteropServices._PropertyInfo.MemberType\n  - System.Runtime.InteropServices._PropertyInfo.Name\n  - System.Runtime.InteropServices._PropertyInfo.PropertyType\n  - System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  - System.Runtime.InteropServices._PropertyInfo.ToString\n  langs:\n  - csharp\n  name: _PropertyInfo\n  nameWithType: _PropertyInfo\n  fullName: System.Runtime.InteropServices._PropertyInfo\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Exposes the public members of the <xref href=\"System.Reflection.PropertyInfo\"></xref> class to unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"F59ED4E4-E68F-3218-BD77-061AA82824BF\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface _PropertyInfo\n  derivedClasses:\n  - System.Reflection.PropertyInfo\n  implements: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.Attributes\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _PropertyInfo.Attributes\n  fullName: _PropertyInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.Attributes\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.\"\n  syntax:\n    content: public System.Reflection.PropertyAttributes Attributes { get; }\n    return:\n      type: System.Reflection.PropertyAttributes\n      description: The attributes of this property.\n  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.CanRead\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.CanRead\n  id: CanRead\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: _PropertyInfo.CanRead\n  fullName: _PropertyInfo.CanRead\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.CanRead\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.\"\n  syntax:\n    content: public bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this property can be read; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.CanWrite\n  id: CanWrite\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: _PropertyInfo.CanWrite\n  fullName: _PropertyInfo.CanWrite\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.CanWrite\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.\"\n  syntax:\n    content: public bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this property can be written to; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _PropertyInfo.DeclaringType\n  fullName: _PropertyInfo.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.DeclaringType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The `Type` object for the class that declares this member.\n  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _PropertyInfo.Equals(Object)\n  fullName: _PropertyInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.Equals(System.Object)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._PropertyInfo.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  id: GetAccessors\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetAccessors()\n  nameWithType: _PropertyInfo.GetAccessors()\n  fullName: _PropertyInfo.GetAccessors()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetAccessors\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.\"\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetAccessors ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects that reflect the public `get`, `set`, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  id: GetAccessors(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetAccessors(Boolean)\n  nameWithType: _PropertyInfo.GetAccessors(Boolean)\n  fullName: _PropertyInfo.GetAccessors(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetAccessors(System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.\"\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: '`true` to include non-public methods in the returned `MethodInfo` array; otherwise, `false`.'\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array of <xref href=\"System.Reflection.MethodInfo\"></xref> objects whose elements reflect the `get`, `set`, and other accessors of the property reflected by the current instance. If the <code>nonPublic</code> parameter is `true`, this array contains public and non-public `get`, `set`, and other accessors. If <code>nonPublic</code> is `false`, this array contains only public `get`, `set`, and other accessors. If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)\n  fullName: _PropertyInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: true to search this member's inheritance chain to find the attributes; otherwise false.\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Type, Boolean)\n  fullName: _PropertyInfo.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: true to search this member's inheritance chain to find the attributes; otherwise false.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  id: GetGetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetGetMethod()\n  nameWithType: _PropertyInfo.GetGetMethod()\n  fullName: _PropertyInfo.GetGetMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetGetMethod\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetGetMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the public `get` accessor for this property, or `null` if the `get` accessor is non-public or does not exist.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  id: GetGetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetGetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetGetMethod(Boolean)\n  fullName: _PropertyInfo.GetGetMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: '`true` to return a non-public `get` accessor; otherwise, `false`.'\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `get` accessor for this property, if the <code>nonPublic</code> parameter is `true`. Or `null` if <code>nonPublic</code> is `false` and the `get` accessor is non-public, or if <code>nonPublic</code> is `true` but no `get` accessors exist.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _PropertyInfo.GetHashCode()\n  fullName: _PropertyInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.GetHashCode\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: An array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: The count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: An array allocated by the caller that receives the identifiers corresponding to the names.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  id: GetIndexParameters\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetIndexParameters()\n  nameWithType: _PropertyInfo.GetIndexParameters()\n  fullName: _PropertyInfo.GetIndexParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetIndexParameters\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property\"\n  syntax:\n    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: An array of type <xref href=\"System.Reflection.ParameterInfo\"></xref> containing the parameters for the indexes.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  id: GetSetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetSetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetSetMethod(Boolean)\n  fullName: _PropertyInfo.GetSetMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: '`true` to return a non-public accessor; otherwise, `false`.'\n    return:\n      type: System.Reflection.MethodInfo\n      description: \"One of the values in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> A <xref href=\\\"System.Reflection.MethodInfo\\\"></xref> object representing the `Set` method for this property.  \\n  \\n </td><td> The `set` accessor is public.  \\n  \\n -or-  \\n  \\n The <code>nonPublic</code> parameter is `true` and the `set` accessor is non-public.  \\n  \\n </td></tr><tr><td>`null`</td><td> The <code>nonPublic</code> parameter is `true`, but the property is read-only.  \\n  \\n -or-  \\n  \\n The <code>nonPublic</code> parameter is `false` and the `set` accessor is non-public.  \\n  \\n -or-  \\n  \\n There is no `set` accessor.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  id: GetSetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetSetMethod()\n  nameWithType: _PropertyInfo.GetSetMethod()\n  fullName: _PropertyInfo.GetSetMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetSetMethod\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetSetMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property if the `set` accessor is public, or `null` if the `set` accessor is not public.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetType\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _PropertyInfo.GetType()\n  fullName: _PropertyInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.GetType\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetType%2A> method gets the type of the current instance.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: A pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)\n  fullName: _PropertyInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  id: GetValue(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetValue(Object, Object[])\n  nameWithType: _PropertyInfo.GetValue(Object, Object[])\n  fullName: _PropertyInfo.GetValue(Object, Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.\"\n  syntax:\n    content: public object GetValue (object obj, object[] index);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be returned.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.\n    return:\n      type: System.Object\n      description: The property value for the <code>obj</code> parameter.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.\"\n  syntax:\n    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be returned.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: 'The invocation attribute. This must be a bit flag from `BindingFlags`: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.'\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects through reflection. If <code>binder</code> is `null`, the default binder is used.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The `CultureInfo` object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.\n    return:\n      type: System.Object\n      description: The property value for the <code>obj</code> parameter.\n  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: An identifier of a member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: A pointer to the location where the result will be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: A pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: _PropertyInfo.IsDefined(Type, Boolean)\n  fullName: _PropertyInfo.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: true to search this member's inheritance chain to find the attributes; otherwise false.\n    return:\n      type: System.Boolean\n      description: '`true` if one or more instances of the <code>attributeType</code> parameter are applied to this member; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _PropertyInfo.IsSpecialName\n  fullName: _PropertyInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.IsSpecialName\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this property is the special name; otherwise, `false`.'\n  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.MemberType\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _PropertyInfo.MemberType\n  fullName: _PropertyInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.MemberType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: One of the <xref href=\"System.Reflection.MemberTypes\"></xref> values indicating that this member is a property.\n  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.Name\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _PropertyInfo.Name\n  fullName: _PropertyInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.Name\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> object containing the name of this member.\n  overload: System.Runtime.InteropServices._PropertyInfo.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.PropertyType\n  id: PropertyType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: PropertyType\n  nameWithType: _PropertyInfo.PropertyType\n  fullName: _PropertyInfo.PropertyType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.PropertyType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.\"\n  syntax:\n    content: public Type PropertyType { get; }\n    return:\n      type: System.Type\n      description: The type of this property.\n  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  commentId: P:System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _PropertyInfo.ReflectedType\n  fullName: _PropertyInfo.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.MemberInfo.ReflectedType\"></xref> property.\n  remarks: \"This property is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> object through which this <xref href=\"System.Reflection.MemberInfo\"></xref> object was obtained.\n  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.\"\n  syntax:\n    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be returned.\n    - id: value\n      type: System.Object\n      description: The new value for this property.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: 'The invocation attribute. This must be a bit flag from <xref href=\"System.Reflection.BindingFlags\"></xref>: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.'\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href=\"System.Reflection.MemberInfo\"></xref> objects through reflection. If <code>binder</code> is `null`, the default binder is used.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.\n  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  id: SetValue(System.Object,System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: SetValue(Object, Object, Object[])\n  nameWithType: _PropertyInfo.SetValue(Object, Object, Object[])\n  fullName: _PropertyInfo.SetValue(Object, Object, Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\"></xref> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.\"\n  syntax:\n    content: public void SetValue (object obj, object value, object[] index);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object whose property value will be set.\n    - id: value\n      type: System.Object\n      description: The new value for this property.\n    - id: index\n      type: System.Object[]\n      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.\n  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices._PropertyInfo.ToString\n  commentId: M:System.Runtime.InteropServices._PropertyInfo.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._PropertyInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _PropertyInfo.ToString()\n  fullName: _PropertyInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref href=\"System.Object.ToString\"></xref> method.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code.\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Object\"></xref>.\n  overload: System.Runtime.InteropServices._PropertyInfo.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Runtime.InteropServices._PropertyInfo.Attributes\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _PropertyInfo.Attributes\n  fullName: _PropertyInfo.Attributes\n- uid: System.Reflection.PropertyAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyAttributes\n  nameWithType: PropertyAttributes\n  fullName: System.Reflection.PropertyAttributes\n- uid: System.Runtime.InteropServices._PropertyInfo.CanRead\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanRead\n  nameWithType: _PropertyInfo.CanRead\n  fullName: _PropertyInfo.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanWrite\n  nameWithType: _PropertyInfo.CanWrite\n  fullName: _PropertyInfo.CanWrite\n- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _PropertyInfo.DeclaringType\n  fullName: _PropertyInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _PropertyInfo.Equals(Object)\n  fullName: _PropertyInfo.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetAccessors()\n  nameWithType: _PropertyInfo.GetAccessors()\n  fullName: _PropertyInfo.GetAccessors()\n- uid: System.Reflection.MethodInfo\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo[]\n  nameWithType: MethodInfo[]\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: System.Reflection.MethodInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetAccessors(Boolean)\n  nameWithType: _PropertyInfo.GetAccessors(Boolean)\n  fullName: _PropertyInfo.GetAccessors(Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)\n  fullName: _PropertyInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: _PropertyInfo.GetCustomAttributes(Type, Boolean)\n  fullName: _PropertyInfo.GetCustomAttributes(Type, Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetGetMethod()\n  nameWithType: _PropertyInfo.GetGetMethod()\n  fullName: _PropertyInfo.GetGetMethod()\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetGetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetGetMethod(Boolean)\n  fullName: _PropertyInfo.GetGetMethod(Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _PropertyInfo.GetHashCode()\n  fullName: _PropertyInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIndexParameters()\n  nameWithType: _PropertyInfo.GetIndexParameters()\n  fullName: _PropertyInfo.GetIndexParameters()\n- uid: System.Reflection.ParameterInfo\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Reflection.ParameterInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo[]\n  nameWithType: ParameterInfo[]\n  fullName: System.Reflection.ParameterInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetSetMethod(Boolean)\n  nameWithType: _PropertyInfo.GetSetMethod(Boolean)\n  fullName: _PropertyInfo.GetSetMethod(Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetSetMethod()\n  nameWithType: _PropertyInfo.GetSetMethod()\n  fullName: _PropertyInfo.GetSetMethod()\n- uid: System.Runtime.InteropServices._PropertyInfo.GetType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetType()\n  nameWithType: _PropertyInfo.GetType()\n  fullName: _PropertyInfo.GetType()\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)\n  fullName: _PropertyInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetValue(Object, Object[])\n  nameWithType: _PropertyInfo.GetValue(Object, Object[])\n  fullName: _PropertyInfo.GetValue(Object, Object[])\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: _PropertyInfo.IsDefined(Type, Boolean)\n  fullName: _PropertyInfo.IsDefined(Type, Boolean)\n- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _PropertyInfo.IsSpecialName\n  fullName: _PropertyInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._PropertyInfo.MemberType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _PropertyInfo.MemberType\n  fullName: _PropertyInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Runtime.InteropServices._PropertyInfo.Name\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Name\n  nameWithType: _PropertyInfo.Name\n  fullName: _PropertyInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: PropertyType\n  nameWithType: _PropertyInfo.PropertyType\n  fullName: _PropertyInfo.PropertyType\n- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _PropertyInfo.ReflectedType\n  fullName: _PropertyInfo.ReflectedType\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)\n  nameWithType: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)\n  fullName: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: SetValue(Object, Object, Object[])\n  nameWithType: _PropertyInfo.SetValue(Object, Object, Object[])\n  fullName: _PropertyInfo.SetValue(Object, Object, Object[])\n- uid: System.Runtime.InteropServices._PropertyInfo.ToString\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: _PropertyInfo.ToString()\n  fullName: _PropertyInfo.ToString()\n- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetAccessors\n  nameWithType: _PropertyInfo.GetAccessors\n  fullName: _PropertyInfo.GetAccessors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _PropertyInfo.GetCustomAttributes\n  fullName: _PropertyInfo.GetCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetGetMethod\n  nameWithType: _PropertyInfo.GetGetMethod\n  fullName: _PropertyInfo.GetGetMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetSetMethod\n  nameWithType: _PropertyInfo.GetSetMethod\n  fullName: _PropertyInfo.GetSetMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetValue\n  nameWithType: _PropertyInfo.GetValue\n  fullName: _PropertyInfo.GetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: SetValue\n  nameWithType: _PropertyInfo.SetValue\n  fullName: _PropertyInfo.SetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _PropertyInfo.Attributes\n  fullName: _PropertyInfo.Attributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanRead\n  nameWithType: _PropertyInfo.CanRead\n  fullName: _PropertyInfo.CanRead\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: CanWrite\n  nameWithType: _PropertyInfo.CanWrite\n  fullName: _PropertyInfo.CanWrite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _PropertyInfo.DeclaringType\n  fullName: _PropertyInfo.DeclaringType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.Equals*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Equals\n  nameWithType: _PropertyInfo.Equals\n  fullName: _PropertyInfo.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _PropertyInfo.GetHashCode\n  fullName: _PropertyInfo.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _PropertyInfo.GetIDsOfNames\n  fullName: _PropertyInfo.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetIndexParameters\n  nameWithType: _PropertyInfo.GetIndexParameters\n  fullName: _PropertyInfo.GetIndexParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetType\n  nameWithType: _PropertyInfo.GetType\n  fullName: _PropertyInfo.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _PropertyInfo.GetTypeInfo\n  fullName: _PropertyInfo.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _PropertyInfo.GetTypeInfoCount\n  fullName: _PropertyInfo.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _PropertyInfo.Invoke\n  fullName: _PropertyInfo.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: _PropertyInfo.IsDefined\n  fullName: _PropertyInfo.IsDefined\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _PropertyInfo.IsSpecialName\n  fullName: _PropertyInfo.IsSpecialName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _PropertyInfo.MemberType\n  fullName: _PropertyInfo.MemberType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.Name*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: Name\n  nameWithType: _PropertyInfo.Name\n  fullName: _PropertyInfo.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: PropertyType\n  nameWithType: _PropertyInfo.PropertyType\n  fullName: _PropertyInfo.PropertyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _PropertyInfo.ReflectedType\n  fullName: _PropertyInfo.ReflectedType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n- uid: System.Runtime.InteropServices._PropertyInfo.ToString*\n  parent: System.Runtime.InteropServices._PropertyInfo\n  isExternal: false\n  name: ToString\n  nameWithType: _PropertyInfo.ToString\n  fullName: _PropertyInfo.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml\n"}