{"nodes":[{"content":"Processes session tokens by using signing and encryption keys specified in the ASP.NET `<machineKey>` element in a configuration file.","nodes":[{"pos":[0,134],"content":"Processes session tokens by using signing and encryption keys specified in the ASP.NET <ph id=\"ph1\">`&lt;machineKey&gt;`</ph> element in a configuration file.","source":"Processes session tokens by using signing and encryption keys specified in the ASP.NET `<machineKey>` element in a configuration file."}],"pos":[781,916],"yaml":true},{"content":"By default, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.ProtectedDataCookieTransform> class, which uses the Data Protection API (DPAPI), to protect the session token. The DPAPI provides protection by using the user or machine credentials and stores the key data in the user profile. This means that a session token signed and encrypted on one computer cannot be validated or decrypted on a different computer.  \n  \n By contrast, the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.Services.MachineKeyTransform> class, which protects the session cookie data by using the cryptographic material specified in the `<machineKey>` element in the configuration file. This means that the same keys (and session tokens) can be used across multiple computers. This is particularly important when an application is deployed in a web farm. For more information about how to use Windows Identity Foundation to protect applications that are deployed in a web farm, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).  \n  \n Configure the application to use the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> by adding it to the token handler collection. You must first remove the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> (or any handler derived from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class) from the token handler collection if such a handler is present. This is because <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and a token handler collection cannot contain multiple handlers of any given type.","nodes":[{"pos":[0,474],"content":"By default, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.ProtectedDataCookieTransform> class, which uses the Data Protection API (DPAPI), to protect the session token. The DPAPI provides protection by using the user or machine credentials and stores the key data in the user profile. This means that a session token signed and encrypted on one computer cannot be validated or decrypted on a different computer.","nodes":[{"content":"By default, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.ProtectedDataCookieTransform> class, which uses the Data Protection API (DPAPI), to protect the session token. The DPAPI provides protection by using the user or machine credentials and stores the key data in the user profile. This means that a session token signed and encrypted on one computer cannot be validated or decrypted on a different computer.","pos":[0,474],"nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class uses the <ph id=\"ph2\">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> class, which uses the Data Protection API (DPAPI), to protect the session token.","pos":[0,231],"source":"By default, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.ProtectedDataCookieTransform> class, which uses the Data Protection API (DPAPI), to protect the session token."},{"content":"The DPAPI provides protection by using the user or machine credentials and stores the key data in the user profile.","pos":[232,347]},{"content":"This means that a session token signed and encrypted on one computer cannot be validated or decrypted on a different computer.","pos":[348,474]}]}]},{"pos":[481,1164],"content":"By contrast, the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.Services.MachineKeyTransform> class, which protects the session cookie data by using the cryptographic material specified in the `<machineKey>` element in the configuration file. This means that the same keys (and session tokens) can be used across multiple computers. This is particularly important when an application is deployed in a web farm. For more information about how to use Windows Identity Foundation to protect applications that are deployed in a web farm, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).","nodes":[{"content":"By contrast, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> class uses the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Services.MachineKeyTransform&gt;</ph> class, which protects the session cookie data by using the cryptographic material specified in the <ph id=\"ph3\">`&lt;machineKey&gt;`</ph> element in the configuration file.","pos":[0,319],"source":"By contrast, the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.Services.MachineKeyTransform> class, which protects the session cookie data by using the cryptographic material specified in the `<machineKey>` element in the configuration file."},{"content":"This means that the same keys (and session tokens) can be used across multiple computers.","pos":[320,409]},{"content":"This is particularly important when an application is deployed in a web farm.","pos":[410,487]},{"content":"For more information about how to use Windows Identity Foundation to protect applications that are deployed in a web farm, see <bpt id=\"p1\">[</bpt>WIF and Web Farms<ept id=\"p1\">](~/docs/framework/security/wif-and-web-farms.md)</ept>.","pos":[488,683],"source":" For more information about how to use Windows Identity Foundation to protect applications that are deployed in a web farm, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md)."}]},{"pos":[1171,1848],"content":"Configure the application to use the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> by adding it to the token handler collection. You must first remove the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> (or any handler derived from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class) from the token handler collection if such a handler is present. This is because <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and a token handler collection cannot contain multiple handlers of any given type.","nodes":[{"content":"Configure the application to use the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> by adding it to the token handler collection. You must first remove the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> (or any handler derived from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class) from the token handler collection if such a handler is present. This is because <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and a token handler collection cannot contain multiple handlers of any given type.","pos":[0,677],"nodes":[{"content":"Configure the application to use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> by adding it to the token handler collection.","pos":[0,164],"source":"Configure the application to use the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> by adding it to the token handler collection."},{"content":"You must first remove the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> (or any handler derived from the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class) from the token handler collection if such a handler is present.","pos":[165,420],"source":" You must first remove the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> (or any handler derived from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class) from the token handler collection if such a handler is present."},{"content":"This is because <ph id=\"ph1\">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> derives from <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and a token handler collection cannot contain multiple handlers of any given type.","pos":[421,677],"source":" This is because <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and a token handler collection cannot contain multiple handlers of any given type."}]}]}],"pos":[927,2782],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"></xref> class.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"></xref> class."}],"pos":[9934,10071],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"></xref> class that has the specified default token lifetime.","nodes":[{"pos":[0,182],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class that has the specified default token lifetime.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"></xref> class that has the specified default token lifetime."}],"pos":[11568,11751],"yaml":true},{"content":"The default lifetime for a token.","nodes":[{"pos":[0,33],"content":"The default lifetime for a token.","nodes":[{"content":"The default lifetime for a token.","pos":[0,33]}]}],"pos":[11932,11966],"yaml":true},{"content":"<code>tokenLifetime</code> is shorter than or equal to <xref href=\"System.TimeSpan.Zero\"></xref>","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;code&gt;tokenLifetime&lt;/code&gt;</ph> is shorter than or equal to <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan.Zero\"&gt;&lt;/xref&gt;</ph>","source":"<code>tokenLifetime</code> is shorter than or equal to <xref href=\"System.TimeSpan.Zero\"></xref>"}],"pos":[12184,12281],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  commentId: T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  id: MachineKeySessionSecurityTokenHandler\n  children:\n  - System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor\n  - System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)\n  langs:\n  - csharp\n  name: MachineKeySessionSecurityTokenHandler\n  nameWithType: MachineKeySessionSecurityTokenHandler\n  fullName: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  type: Class\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Processes session tokens by using signing and encryption keys specified in the ASP.NET `<machineKey>` element in a configuration file.\n  remarks: \"By default, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.ProtectedDataCookieTransform> class, which uses the Data Protection API (DPAPI), to protect the session token. The DPAPI provides protection by using the user or machine credentials and stores the key data in the user profile. This means that a session token signed and encrypted on one computer cannot be validated or decrypted on a different computer.  \\n  \\n By contrast, the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class uses the <xref:System.IdentityModel.Services.MachineKeyTransform> class, which protects the session cookie data by using the cryptographic material specified in the `<machineKey>` element in the configuration file. This means that the same keys (and session tokens) can be used across multiple computers. This is particularly important when an application is deployed in a web farm. For more information about how to use Windows Identity Foundation to protect applications that are deployed in a web farm, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).  \\n  \\n Configure the application to use the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> by adding it to the token handler collection. You must first remove the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> (or any handler derived from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class) from the token handler collection if such a handler is present. This is because <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and a token handler collection cannot contain multiple handlers of any given type.\"\n  example:\n  - \"The following XML shows how to use the ASP.NET `<machineKey>` element in configuration to explicitly specify signing and encryption keys. The `<machineKey>` element is specified under the `<system.web>` element in a configuration file.  \\n  \\n```xml  \\n<machineKey compatibilityMode=\\\"Framework45\\\" decryptionKey=\\\"CC510D … 8925E6\\\" validationKey=\\\"BEAC8 … 6A4B1DE\\\" />  \\n```  \\n  \\n The following XML shows how to add the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> to a token handler collection. The default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is first removed from the collection. Token handlers are configured under the [\\\\&lt;securityTokenHandlers\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element.  \\n  \\n```xml  \\n<securityTokenHandlers>  \\n  <remove type=\\\"System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\\\" />  \\n  <add type=\\\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\\\" />  \\n</securityTokenHandlers>  \\n```\"\n  syntax:\n    content: 'public class MachineKeySessionSecurityTokenHandler : System.IdentityModel.Tokens.SessionSecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  - System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services.Tokens/MachineKeySessionSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor\n  commentId: M:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: MachineKeySessionSecurityTokenHandler()\n  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()\n  fullName: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: public MachineKeySessionSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services.Tokens/MachineKeySessionSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)\n  commentId: M:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)\n  id: '#ctor(System.TimeSpan)'\n  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  langs:\n  - csharp\n  name: MachineKeySessionSecurityTokenHandler(TimeSpan)\n  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)\n  fullName: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\"></xref> class that has the specified default token lifetime.\n  syntax:\n    content: public MachineKeySessionSecurityTokenHandler (TimeSpan tokenLifetime);\n    parameters:\n    - id: tokenLifetime\n      type: System.TimeSpan\n      description: The default lifetime for a token.\n  overload: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>tokenLifetime</code> is shorter than or equal to <xref href=\"System.TimeSpan.Zero\"></xref>\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services.Tokens/MachineKeySessionSecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityTokenHandler\n  nameWithType: SessionSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  isExternal: false\n  name: MachineKeySessionSecurityTokenHandler()\n  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()\n  fullName: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler()\n- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor(System.TimeSpan)\n  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  isExternal: false\n  name: MachineKeySessionSecurityTokenHandler(TimeSpan)\n  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)\n  fullName: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler\n  isExternal: false\n  name: MachineKeySessionSecurityTokenHandler\n  nameWithType: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler\n  fullName: MachineKeySessionSecurityTokenHandler.MachineKeySessionSecurityTokenHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services.Tokens/MachineKeySessionSecurityTokenHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(String)\n  nameWithType: SecurityTokenHandler.CanReadToken(String)\n  fullName: SecurityTokenHandler.CanReadToken(String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: SessionSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: SessionSecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: SessionSecurityTokenHandler.CanValidateToken\n  fullName: SessionSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: SessionSecurityTokenHandler.CanWriteToken\n  fullName: SessionSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: Configuration\n  nameWithType: SecurityTokenHandler.Configuration\n  fullName: SecurityTokenHandler.Configuration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ContainingCollection\n  nameWithType: SecurityTokenHandler.ContainingCollection\n  fullName: SecurityTokenHandler.ContainingCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateSecurityTokenReference(SecurityToken, Boolean)\n  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n  fullName: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  fullName: SessionSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: DetectReplayedToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n  fullName: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: SessionSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: SessionSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(String)\n  nameWithType: SecurityTokenHandler.ReadToken(String)\n  fullName: SecurityTokenHandler.ReadToken(String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: SessionSecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader, SecurityTokenResolver)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n  fullName: SessionSecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: SessionSecurityTokenHandler.TokenType\n  fullName: SessionSecurityTokenHandler.TokenType\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationFailure(SecurityToken, String)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n  fullName: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationSuccess(SecurityToken)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n  fullName: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SessionSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: SessionSecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  fullName: SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)\n  fullName: SecurityTokenHandler.WriteToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: SessionSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: SessionSecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ApplyTransforms(Byte[], Boolean)\n  nameWithType: SessionSecurityTokenHandler.ApplyTransforms(Byte[], Boolean)\n  fullName: SessionSecurityTokenHandler.ApplyTransforms(Byte[], Boolean)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CookieElementName\n  nameWithType: SessionSecurityTokenHandler.CookieElementName\n  fullName: SessionSecurityTokenHandler.CookieElementName\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CookieNamespace\n  nameWithType: SessionSecurityTokenHandler.CookieNamespace\n  fullName: SessionSecurityTokenHandler.CookieNamespace\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)\n  nameWithType: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)\n  fullName: SessionSecurityTokenHandler.CreateSessionSecurityToken(ClaimsPrincipal, String, String, DateTime, DateTime)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultCookieTransforms\n  nameWithType: SessionSecurityTokenHandler.DefaultCookieTransforms\n  fullName: SessionSecurityTokenHandler.DefaultCookieTransforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultLifetime\n  fullName: SessionSecurityTokenHandler.DefaultLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: DefaultTokenLifetime\n  nameWithType: SessionSecurityTokenHandler.DefaultTokenLifetime\n  fullName: SessionSecurityTokenHandler.DefaultTokenLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(Byte[], SecurityTokenResolver)\n  nameWithType: SessionSecurityTokenHandler.ReadToken(Byte[], SecurityTokenResolver)\n  fullName: SessionSecurityTokenHandler.ReadToken(Byte[], SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: SetTransforms(IEnumerable<CookieTransform>)\n  nameWithType: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)\n  fullName: SessionSecurityTokenHandler.SetTransforms(IEnumerable<CookieTransform>)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: TokenLifetime\n  nameWithType: SessionSecurityTokenHandler.TokenLifetime\n  fullName: SessionSecurityTokenHandler.TokenLifetime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: Transforms\n  nameWithType: SessionSecurityTokenHandler.Transforms\n  fullName: SessionSecurityTokenHandler.Transforms\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateSession(SessionSecurityToken)\n  nameWithType: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)\n  fullName: SessionSecurityTokenHandler.ValidateSession(SessionSecurityToken)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SessionSecurityToken, String)\n  nameWithType: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken, String)\n  fullName: SessionSecurityTokenHandler.ValidateToken(SessionSecurityToken, String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(SessionSecurityToken)\n  nameWithType: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)\n  fullName: SessionSecurityTokenHandler.WriteToken(SessionSecurityToken)\n"}