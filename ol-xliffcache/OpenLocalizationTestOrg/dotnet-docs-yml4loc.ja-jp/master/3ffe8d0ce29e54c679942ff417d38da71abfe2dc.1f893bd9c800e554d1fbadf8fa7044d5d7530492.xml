{"nodes":[{"content":"Provides the base class for relating one member to another.","nodes":[{"pos":[0,59],"content":"Provides the base class for relating one member to another.","nodes":[{"content":"Provides the base class for relating one member to another.","pos":[0,59]}]}],"pos":[1516,1576],"yaml":true},{"content":"Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code. So, for example, the text of a button is generated in the following format.  \n  \n```csharp  \nthis.okButton.Text = \"OK\";  \n```  \n  \n One of the limitations of this scheme is that it is difficult to retrieve a property from another location. For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.  \n  \n```csharp  \nthis.titleLabel.Text = this.Text;  \n```","nodes":[{"pos":[0,226],"content":"Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code. So, for example, the text of a button is generated in the following format.","nodes":[{"content":"Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code. So, for example, the text of a button is generated in the following format.","pos":[0,226],"nodes":[{"content":"Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.","pos":[0,150]},{"content":"So, for example, the text of a button is generated in the following format.","pos":[151,226]}]}]},{"pos":[283,546],"content":"One of the limitations of this scheme is that it is difficult to retrieve a property from another location. For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.","nodes":[{"content":"One of the limitations of this scheme is that it is difficult to retrieve a property from another location. For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.","pos":[0,263],"nodes":[{"content":"One of the limitations of this scheme is that it is difficult to retrieve a property from another location.","pos":[0,107]},{"content":"For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.","pos":[108,263]}]}]}],"pos":[1587,2205],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationshipService\"></xref> class.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.MemberRelationshipService\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationshipService\"></xref> class."}],"pos":[5003,5134],"yaml":true},{"content":"Gets a relationship to the given source relationship.","nodes":[{"pos":[0,53],"content":"Gets a relationship to the given source relationship.","nodes":[{"content":"Gets a relationship to the given source relationship.","pos":[0,53]}]}],"pos":[6946,7000],"yaml":true},{"content":"The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.","nodes":[{"pos":[0,141],"content":"The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.","nodes":[{"content":"The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.","pos":[0,141]}]}],"pos":[7011,7153],"yaml":true,"extradata":"MT"},{"content":"The source relationship.","nodes":[{"pos":[0,24],"content":"The source relationship.","nodes":[{"content":"The source relationship.","pos":[0,24]}]}],"pos":[7470,7495],"yaml":true},{"content":"A relationship to <code>source</code>, or <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"></xref> if no relationship exists.","nodes":[{"pos":[0,157],"content":"A relationship to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"&gt;&lt;/xref&gt;</ph> if no relationship exists.","source":"A relationship to <code>source</code>, or <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"></xref> if no relationship exists."}],"pos":[7600,7758],"yaml":true},{"content":"Establishes a relationship between a source and target object.","nodes":[{"pos":[0,62],"content":"Establishes a relationship between a source and target object.","nodes":[{"content":"Establishes a relationship between a source and target object.","pos":[0,62]}]}],"pos":[9434,9497],"yaml":true},{"content":"If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed.","nodes":[{"pos":[0,142],"content":"If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph> is assigned to the source, any existing relationship is removed.","pos":[0,142],"source":"If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed."}]}],"pos":[9508,9651],"yaml":true,"extradata":"MT"},{"content":"The source relationship. This is the left-hand side of a relationship assignment.","nodes":[{"pos":[0,81],"content":"The source relationship. This is the left-hand side of a relationship assignment.","nodes":[{"content":"The source relationship. This is the left-hand side of a relationship assignment.","pos":[0,81],"nodes":[{"content":"The source relationship.","pos":[0,24]},{"content":"This is the left-hand side of a relationship assignment.","pos":[25,81]}]}]}],"pos":[9958,10040],"yaml":true},{"content":"The current relationship associated with <code>source</code>, or <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"></xref> if there is no relationship.","nodes":[{"pos":[0,182],"content":"The current relationship associated with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"&gt;&lt;/xref&gt;</ph> if there is no relationship.","source":"The current relationship associated with <code>source</code>, or <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"></xref> if there is no relationship."}],"pos":[10145,10328],"yaml":true},{"content":"<code>source</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>source</code> is `null`."}],"pos":[10531,10562],"yaml":true},{"content":"<code>source</code> is empty, or the relationship is not supported by the service.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is empty, or the relationship is not supported by the service.","source":"<code>source</code> is empty, or the relationship is not supported by the service."}],"pos":[10656,10739],"yaml":true},{"content":"Establishes a relationship between a source and target object.","nodes":[{"pos":[0,62],"content":"Establishes a relationship between a source and target object.","nodes":[{"content":"Establishes a relationship between a source and target object.","pos":[0,62]}]}],"pos":[12291,12354],"yaml":true},{"content":"The owner of a source relationship.","nodes":[{"pos":[0,35],"content":"The owner of a source relationship.","nodes":[{"content":"The owner of a source relationship.","pos":[0,35]}]}],"pos":[12621,12657],"yaml":true},{"content":"The member of a source relationship.","nodes":[{"pos":[0,36],"content":"The member of a source relationship.","nodes":[{"content":"The member of a source relationship.","pos":[0,36]}]}],"pos":[12750,12787],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship\"></xref> structure encapsulating the relationship between a source and target object, or `null` if there is no relationship.","nodes":[{"pos":[0,200],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship\"&gt;&lt;/xref&gt;</ph> structure encapsulating the relationship between a source and target object, or <ph id=\"ph2\">`null`</ph> if there is no relationship.","source":"A <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship\"></xref> structure encapsulating the relationship between a source and target object, or `null` if there is no relationship."}],"pos":[12892,13093],"yaml":true},{"content":"<code>sourceOwner</code> or <code>sourceMember</code> is `null`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">&lt;code&gt;sourceOwner&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;sourceMember&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>sourceOwner</code> or <code>sourceMember</code> is `null`."}],"pos":[13296,13361],"yaml":true},{"content":"<code>sourceOwner</code> or <code>sourceMember</code> is empty, or the relationship is not supported by the service.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;code&gt;sourceOwner&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;sourceMember&lt;/code&gt;</ph> is empty, or the relationship is not supported by the service.","source":"<code>sourceOwner</code> or <code>sourceMember</code> is empty, or the relationship is not supported by the service."}],"pos":[13455,13572],"yaml":true},{"content":"Creates a relationship between the source object and target relationship.","nodes":[{"pos":[0,73],"content":"Creates a relationship between the source object and target relationship.","nodes":[{"content":"Creates a relationship between the source object and target relationship.","pos":[0,73]}]}],"pos":[15443,15517],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>. The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.","nodes":[{"pos":[0,388],"content":"The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>. The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>. The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.","pos":[0,388],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A&gt;</ph> method clears any existing relationship if the relationship parameter is <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty&gt;</ph>.","pos":[0,247],"source":"The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>."},{"content":"The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.","pos":[248,388]}]}]}],"pos":[15528,15917],"yaml":true,"extradata":"MT"},{"content":"The source relationship.","nodes":[{"pos":[0,24],"content":"The source relationship.","nodes":[{"content":"The source relationship.","pos":[0,24]}]}],"pos":[16253,16278],"yaml":true},{"content":"The relationship to set into the source.","nodes":[{"pos":[0,40],"content":"The relationship to set into the source.","nodes":[{"content":"The relationship to set into the source.","pos":[0,40]}]}],"pos":[16394,16435],"yaml":true},{"content":"The relationship is not supported by the service.","nodes":[{"pos":[0,49],"content":"The relationship is not supported by the service.","nodes":[{"content":"The relationship is not supported by the service.","pos":[0,49]}]}],"pos":[16641,16691],"yaml":true},{"content":"Gets a value indicating whether the given relationship is supported.","nodes":[{"pos":[0,68],"content":"Gets a value indicating whether the given relationship is supported.","nodes":[{"content":"Gets a value indicating whether the given relationship is supported.","pos":[0,68]}]}],"pos":[18592,18661],"yaml":true},{"content":"The source relationship.","nodes":[{"pos":[0,24],"content":"The source relationship.","nodes":[{"content":"The source relationship.","pos":[0,24]}]}],"pos":[19000,19025],"yaml":true},{"content":"The relationship to set into the source.","nodes":[{"pos":[0,40],"content":"The relationship to set into the source.","nodes":[{"content":"The relationship to set into the source.","pos":[0,40]}]}],"pos":[19141,19182],"yaml":true},{"content":"`true` if a relationship between the given two objects is supported; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if a relationship between the given two objects is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a relationship between the given two objects is supported; otherwise, `false`."}],"pos":[19240,19331],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  commentId: T:System.ComponentModel.Design.Serialization.MemberRelationshipService\n  id: MemberRelationshipService\n  children:\n  - System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor\n  - System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)\n  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)\n  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)\n  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  langs:\n  - csharp\n  name: MemberRelationshipService\n  nameWithType: MemberRelationshipService\n  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Provides the base class for relating one member to another.\n  remarks: \"Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code. So, for example, the text of a button is generated in the following format.  \\n  \\n```csharp  \\nthis.okButton.Text = \\\"OK\\\";  \\n```  \\n  \\n One of the limitations of this scheme is that it is difficult to retrieve a property from another location. For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.  \\n  \\n```csharp  \\nthis.titleLabel.Text = this.Text;  \\n```\"\n  example:\n  - \"The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> simplifies retrieval of a property value from another location. A designer can access this service to dictate that one member is assigned the value of another. The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value. Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.  \\n  \\n```csharp  \\nobject titleLabel, form;  \\nPropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)[\\\"Text\\\"];  \\nPropertyDescriptor formText = TypeDescriptor.GetProperties(form)[\\\"Text\\\"];  \\nMemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  \\nms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  \\n```\"\n  syntax:\n    content: public abstract class MemberRelationshipService\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor\n  commentId: M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  langs:\n  - csharp\n  name: MemberRelationshipService()\n  nameWithType: MemberRelationshipService.MemberRelationshipService()\n  fullName: MemberRelationshipService.MemberRelationshipService()\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationshipService\"></xref> class.\n  syntax:\n    content: protected MemberRelationshipService ();\n    parameters: []\n  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)\n  commentId: M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)\n  id: GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  langs:\n  - csharp\n  name: GetRelationship(MemberRelationship)\n  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)\n  fullName: MemberRelationshipService.GetRelationship(MemberRelationship)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets a relationship to the given source relationship.\n  remarks: The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.\n  syntax:\n    content: protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);\n    parameters:\n    - id: source\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The source relationship.\n    return:\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: A relationship to <code>source</code>, or <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"></xref> if no relationship exists.\n  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)\n  commentId: P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)\n  id: Item(System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  langs:\n  - csharp\n  name: Item(MemberRelationship)\n  nameWithType: MemberRelationshipService.Item(MemberRelationship)\n  fullName: MemberRelationshipService.Item(MemberRelationship)\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Establishes a relationship between a source and target object.\n  remarks: If <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> is assigned to the source, any existing relationship is removed.\n  syntax:\n    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }\n    parameters:\n    - id: source\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The source relationship. This is the left-hand side of a relationship assignment.\n    return:\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The current relationship associated with <code>source</code>, or <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship.Empty\"></xref> if there is no relationship.\n  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>source</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>source</code> is empty, or the relationship is not supported by the service.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)\n  commentId: P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)\n  id: Item(System.Object,System.ComponentModel.MemberDescriptor)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  langs:\n  - csharp\n  name: Item(Object, MemberDescriptor)\n  nameWithType: MemberRelationshipService.Item(Object, MemberDescriptor)\n  fullName: MemberRelationshipService.Item(Object, MemberDescriptor)\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Establishes a relationship between a source and target object.\n  syntax:\n    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }\n    parameters:\n    - id: sourceOwner\n      type: System.Object\n      description: The owner of a source relationship.\n    - id: sourceMember\n      type: System.ComponentModel.MemberDescriptor\n      description: The member of a source relationship.\n    return:\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: A <xref href=\"System.ComponentModel.Design.Serialization.MemberRelationship\"></xref> structure encapsulating the relationship between a source and target object, or `null` if there is no relationship.\n  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sourceOwner</code> or <code>sourceMember</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sourceOwner</code> or <code>sourceMember</code> is empty, or the relationship is not supported by the service.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  commentId: M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  id: SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  langs:\n  - csharp\n  name: SetRelationship(MemberRelationship, MemberRelationship)\n  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship, MemberRelationship)\n  fullName: MemberRelationshipService.SetRelationship(MemberRelationship, MemberRelationship)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Creates a relationship between the source object and target relationship.\n  remarks: The <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>. The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.\n  syntax:\n    content: protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);\n    parameters:\n    - id: source\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The source relationship.\n    - id: relationship\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The relationship to set into the source.\n  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The relationship is not supported by the service.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  commentId: M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  id: SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  langs:\n  - csharp\n  name: SupportsRelationship(MemberRelationship, MemberRelationship)\n  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship, MemberRelationship)\n  fullName: MemberRelationshipService.SupportsRelationship(MemberRelationship, MemberRelationship)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets a value indicating whether the given relationship is supported.\n  syntax:\n    content: public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);\n    parameters:\n    - id: source\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The source relationship.\n    - id: relationship\n      type: System.ComponentModel.Design.Serialization.MemberRelationship\n      description: The relationship to set into the source.\n    return:\n      type: System.Boolean\n      description: '`true` if a relationship between the given two objects is supported; otherwise, `false`.'\n  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: MemberRelationshipService()\n  nameWithType: MemberRelationshipService.MemberRelationshipService()\n  fullName: MemberRelationshipService.MemberRelationshipService()\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: GetRelationship(MemberRelationship)\n  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)\n  fullName: MemberRelationshipService.GetRelationship(MemberRelationship)\n- uid: System.ComponentModel.Design.Serialization.MemberRelationship\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: MemberRelationship\n  nameWithType: MemberRelationship\n  fullName: System.ComponentModel.Design.Serialization.MemberRelationship\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: Item(MemberRelationship)\n  nameWithType: MemberRelationshipService.Item(MemberRelationship)\n  fullName: MemberRelationshipService.Item(MemberRelationship)\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: Item(Object, MemberDescriptor)\n  nameWithType: MemberRelationshipService.Item(Object, MemberDescriptor)\n  fullName: MemberRelationshipService.Item(Object, MemberDescriptor)\n- uid: System.ComponentModel.MemberDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: MemberDescriptor\n  nameWithType: MemberDescriptor\n  fullName: System.ComponentModel.MemberDescriptor\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: SetRelationship(MemberRelationship, MemberRelationship)\n  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship, MemberRelationship)\n  fullName: MemberRelationshipService.SetRelationship(MemberRelationship, MemberRelationship)\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: SupportsRelationship(MemberRelationship, MemberRelationship)\n  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship, MemberRelationship)\n  fullName: MemberRelationshipService.SupportsRelationship(MemberRelationship, MemberRelationship)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: MemberRelationshipService\n  nameWithType: MemberRelationshipService.MemberRelationshipService\n  fullName: MemberRelationshipService.MemberRelationshipService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: GetRelationship\n  nameWithType: MemberRelationshipService.GetRelationship\n  fullName: MemberRelationshipService.GetRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: Item\n  nameWithType: MemberRelationshipService.Item\n  fullName: MemberRelationshipService.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: SetRelationship\n  nameWithType: MemberRelationshipService.SetRelationship\n  fullName: MemberRelationshipService.SetRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*\n  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService\n  isExternal: false\n  name: SupportsRelationship\n  nameWithType: MemberRelationshipService.SupportsRelationship\n  fullName: MemberRelationshipService.SupportsRelationship\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/MemberRelationshipService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}