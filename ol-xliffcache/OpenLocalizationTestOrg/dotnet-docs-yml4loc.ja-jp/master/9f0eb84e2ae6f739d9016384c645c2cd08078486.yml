### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlMembershipProvider
  commentId: T:System.Web.Security.SqlMembershipProvider
  id: SqlMembershipProvider
  children:
  - System.Web.Security.SqlMembershipProvider.#ctor
  - System.Web.Security.SqlMembershipProvider.ApplicationName
  - System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  - System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  - System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GeneratePassword
  - System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  - System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  - System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  - System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  - System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  - System.Web.Security.SqlMembershipProvider.PasswordFormat
  - System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  - System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  - System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  - System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  - System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  langs:
  - csharp
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider
  fullName: System.Web.Security.SqlMembershipProvider
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Manages storage of membership information for an ASP.NET application in a SQL Server database.
  remarks: "This class is used by the <xref:System.Web.Security.Membership> and <xref:System.Web.Security.MembershipUser> classes to provide membership services for an ASP.NET application using a SQL Server database. You cannot use a <xref:System.Web.Security.SqlMembershipProvider> without SQL Server. When your computer has SQL Server Express installed with the default instance name and user-instancing enabled, the <xref:System.Web.Security.SqlMembershipProvider> object will create a database called `aspnetdb` in the application's `App_Data` directory the first time the application is run.  \n  \n To manually create the database, run the `Aspnet_regsql.exe` executable found in the `%systemroot%\\Microsoft.NET\\Framework\\ versionNumber` folder and specify the `-A m` option (for example `aspnet_regsql.exe -A m`). The database created is called Aspnetdb. Alternatively, run `Aspnet_regsql.exe` to pull up the GUI configuration mode and choose to configure all ASP.NET Features.  \n  \n If the membership provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file defines a default <xref:System.Web.Security.SqlMembershipProvider> instance named `AspNetSqlMembershipProvider` that connects to the default SQL Server Express instance on the local machine. You can use this instance of the provider if you installed SQL Server Express with the default instance name, or you can define your own instance in the Web.config file for your ASP.NET application.  \n  \n If you set the `passwordCompatMode` attribute to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, the application can use the hashing and encryption membership options that were added in ASP.NET 4. However, if the `passwordCompatMode` attribute is set to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, only the hashing and encryption membership options from the ASP.NET 2.0, ASP.NET 3.5, and ASP.NET 3.5 SP1 can be used. The default value is <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. For more information, see <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application configured to use a <xref:System.Web.Security.SqlMembershipProvider>.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\"  \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          maxInvalidPasswordAttempts=\"5\"  \n          passwordAttemptWindow=\"10\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlMembershipProvider : System.Web.Security.MembershipProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Security.MembershipProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])
  - System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])
  - System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  - System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  - System.Web.Security.MembershipProvider.ValidatingPassword
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  commentId: M:System.Web.Security.SqlMembershipProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: SqlMembershipProvider.SqlMembershipProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Initializes a new instance of the <xref href="System.Web.Security.SqlMembershipProvider"></xref> class.
  remarks: The <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> constructor is called by ASP.NET to create an instance of the <xref:System.Web.Security.SqlMembershipProvider> class as specified in the configuration for the application. This constructor is not intended to be used from your code.
  syntax:
    content: public SqlMembershipProvider ();
    parameters: []
  overload: System.Web.Security.SqlMembershipProvider.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  commentId: P:System.Web.Security.SqlMembershipProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: SqlMembershipProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets or sets the name of the application to store and retrieve membership information for.
  remarks: "The <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> is used by the <xref:System.Web.Security.SqlMembershipProvider> to group user information. By qualifying user information with an application name, you can store information for multiple applications in a single database without running into conflicts between duplicate user names. Also, multiple ASP.NET applications can use the same user database by specifying the same value in the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property. The <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property can be set programmatically, or it can be set declaratively in the configuration file for the Web application with the `applicationName` attribute.  \n  \n If a value is not specified for the `applicationName` attribute in the configuration file for the Web application, then the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value for the first request made to the application is used.  \n  \n> [!CAUTION]\n>  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property value. The <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property is not thread safe for multiple writes, and changing the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property value can result in unexpected behavior for multiple users of an application. We recommend that you avoid writing code to allow users to set the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property unless you must. An example of an application where setting the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property may be required is an administrative application that manages membership data for multiple applications. Such an application should be a single-user application and not a Web application."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: The name of the application to store and retrieve membership information for. The default is the <xref href="System.Web.HttpRequest.ApplicationPath"></xref> property value for the current <xref href="System.Web.HttpContext.Request"></xref>.
  overload: System.Web.Security.SqlMembershipProvider.ApplicationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An attempt was made to set the <xref href="System.Web.Security.SqlMembershipProvider.ApplicationName"></xref> property to an empty string or `null`.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: An attempt was made to set the <xref href="System.Web.Security.SqlMembershipProvider.ApplicationName"></xref> property to a string that is longer than 256 characters.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  id: ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePassword(String, String, String)
  nameWithType: SqlMembershipProvider.ChangePassword(String, String, String)
  fullName: SqlMembershipProvider.ChangePassword(String, String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Modifies a user's password.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to update the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n The maximum password length is 128 characters.  \n  \n If an incorrect password is supplied to the <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \n  \n You can call the <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. The <xref:System.Web.Security.Membership.Provider%2A> property exposes the `defaultProvider` specified in the Web.config file for the application. Configured providers that are not the default provider referenced using the <xref:System.Web.Security.Membership.Providers%2A> property.  \n  \n You can also change user passwords by using the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example modifies the password for the specified user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  -->"
  syntax:
    content: public override bool ChangePassword (string username, string oldPassword, string newPassword);
    parameters:
    - id: username
      type: System.String
      description: The user to update the password for.
    - id: oldPassword
      type: System.String
      description: The current password for the specified user.
    - id: newPassword
      type: System.String
      description: The new password for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the password was updated successfully. `false` if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.'
  overload: System.Web.Security.SqlMembershipProvider.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPassword</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The change-password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event, and the <xref href=\"System.Web.Security.ValidatePasswordEventArgs.FailureInformation\"></xref> property was `null`.  \n  \n \\- or -  \n  \n The length of <code>newPassword</code> is less than the minimum length specified in the <xref href=\"System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength\"></xref> property.  \n  \n \\- or -  \n  \n The number of non-alphabetic characters in <code>newPassword</code> is less than the required number of non-alphabetic characters specified in the <xref href=\"System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters\"></xref> property.  \n  \n \\- or -  \n  \n <code>newPassword</code> does not pass the regular expression defined in the <xref href=\"System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression\"></xref> property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is `null`.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is `null`.  \n  \n \\- or -  \n  \n <code>newPassword</code> is `null`."
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: <code>username</code> was not found in the database.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: An error occurred while setting the new password value at the database.
  - type: System.Exception
    commentId: T:System.Exception
    description: An unhandled exception occurred.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePasswordQuestionAndAnswer(String, String, String, String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
  fullName: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Updates the password question and answer for a user in the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.MembershipUser> class to update the password question and answer for a user in the SQL Server database that is specified in the ASP.NET application's configuration file (Web.config). The password answer is encrypted using the format that is specified in the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property.  \n  \n Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. The <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> method updates the password question and answer for a membership user.  \n  \n If an incorrect password is supplied to the <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> method, the internal counters that track invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by calling the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \n  \n The maximum length for the password question is 256 characters. The maximum length for the password answer is 128 characters.  \n  \n For more information, see <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>, and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example updates the password question and answer for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  -->"
  syntax:
    content: public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);
    parameters:
    - id: username
      type: System.String
      description: The user to change the password question and answer for.
    - id: password
      type: System.String
      description: The password for the specified user.
    - id: newPasswordQuestion
      type: System.String
      description: The new password question for the specified user.
    - id: newPasswordAnswer
      type: System.String
      description: The new password answer for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the update was successful; otherwise, `false`. A value of `false` is also returned if the <code>password</code> is incorrect, the user is locked out, or the user does not exist in the database.'
  overload: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>password</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is an empty string or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPasswordAnswer</code> is longer than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is `null`.  \n  \n \\- or -  \n  \n <code>password</code> is `null`.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is `null` and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\"></xref> is `true`.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is `null` and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\"></xref> is `true`."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: An error occurred when changing the password question and answer in the database.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  commentId: M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  fullName: SqlMembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Adds a new user to the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to create a new user in the SQL Server database specified in the ASP.NET application's configuration file.  \n  \n New users are identified with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \n  \n If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true`, and `null` or an empty string (\"\") is specified for the `email` parameter, the user creation will fail. The user creation will also fail if the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is set to `true` and the value specified for the `email` parameter is a duplicate of the e-mail address for an existing user in the database for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \n  \n The maximum length for the user name is 256 characters. The maximum length for the e-mail address is 256 characters. The maximum length for the password in clear text or after it has been hashed or encrypted is 128 characters.  \n  \n Other conditions that will cause user creation to fail:  \n  \n-   The `password` parameter is `null`, or an empty string after trimming.  \n  \n-   The length of the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property.  \n  \n-   The number of non-alphabetic characters in the `password` parameter is less than the value specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property.  \n  \n-   The `password` parameter does not pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property.  \n  \n-   Custom password-validation code canceled user creation during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.  \n  \n-   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the `passwordAnswer` parameter is either `null` or an empty string after trimming.  \n  \n-   The `passwordAnswer` parameter is an empty string.  \n  \n-   The `passwordAnswer` parameter is longer than 128 characters.  \n  \n-   The <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is `true` and the password question is either `null` or an empty string after trimming.  \n  \n-   The `passwordQuestion` parameter is an empty string.  \n  \n-   The `passwordQuestion` parameter is longer than 256 characters.  \n  \n-   The `providerUserKey` parameter set to an object of a type other than <xref:System.Guid?displayProperty=fullName>.  \n  \n-   The `providerUserKey` parameter is a duplicate of an existing user key.  \n  \n-   The `username` parameter is a duplicate of an existing user name.  \n  \n Leading and trailing spaces are trimmed from all string parameter values."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the sign-in page for the application.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  -->"
  syntax:
    content: public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: The user name for the new user.
    - id: password
      type: System.String
      description: The password for the new user.
    - id: email
      type: System.String
      description: The e-mail address for the new user.
    - id: passwordQuestion
      type: System.String
      description: The password question for the new user.
    - id: passwordAnswer
      type: System.String
      description: The password answer for the new user.
    - id: isApproved
      type: System.Boolean
      description: Whether or not the new user is approved to be validated.
    - id: providerUserKey
      type: System.Object
      description: A <xref href="System.Guid"></xref> that uniquely identifies the membership user in the SQL Server database.
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: One of the <xref href="System.Web.Security.MembershipCreateStatus"></xref> values, indicating whether the user was created successfully.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object for the newly created user. If no user was created, this method returns `null`.
  overload: System.Web.Security.SqlMembershipProvider.CreateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  commentId: M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: DeleteUser(String, Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String, Boolean)
  fullName: SqlMembershipProvider.DeleteUser(String, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Removes a user's membership information from the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to remove a user from the SQL Server database specified in the ASP.NET application's configuration file.  \n  \n Deleted users are only deleted from the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \n  \n If `deleteAllRelatedData` is set to `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features is also deleted for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \n  \n If the membership user does not exist in the database, and `deleteAllRelatedData` is `true`, then the related data and the user information stored for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization features will still be deleted for the application specified in the <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> property. As a result, the <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> method can be used for quickly deleting information related to a user, even when the <xref:System.Web.Security.SqlMembershipProvider> object is not used for storing authenticated user information.  \n  \n Leading and trailing spaces are trimmed from the `username` parameter value."
  example:
  - "The following code example deletes the currently logged-on user.  \n  \n> [!NOTE]\n>  This example uses <xref:System.Web.Security.SqlMembershipProvider> to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  -->"
  syntax:
    content: public override bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to delete.
    - id: deleteAllRelatedData
      type: System.Boolean
      description: '`true` to delete data related to the user from the database; `false` to leave data related to the user in the database.'
    return:
      type: System.Boolean
      description: '`true` if the user was deleted; otherwise, `false`. A value of `false` is also returned if the user does not exist in the database.'
  overload: System.Web.Security.SqlMembershipProvider.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>username</code> is an empty string (""), contains a comma, or is longer than 256 characters.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  commentId: P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: SqlMembershipProvider.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.
  remarks: Password reset allows the membership provider to replace the current password for a user name with a new, randomly generated password. This is especially useful when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, as users cannot retrieve hashed password values.
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider supports password reset; otherwise, `false`. The default is `true`.'
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  commentId: P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: SqlMembershipProvider.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.
  remarks: "If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, a user will not be able to retrieve his or her existing password from the database. The <xref:System.Web.Security.MembershipPasswordFormat.Hashed> password format provides one-way encoding of password values. Passwords are hashed with a randomly generated salt value and compared to values stored in the database for authentication. Hashed values cannot be unencoded to retrieve the original password value.  \n  \n If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, and <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider supports password retrieval; otherwise, `false`. The default is `false`.'
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByEmail(String, Int32, Int32, Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
  fullName: SqlMembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Returns a collection of membership users for which the e-mail address field contains the specified e-mail address.
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> returns a list of membership users in which the e-mail address contains a match with the supplied `emailToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `emailToMatch` parameter value, using the LIKE clause. SQL Server wildcard characters can be included in the parameter value. For example, if the `emailToMatch` parameter is set to \"address@example.com\", then information for users with the e-mail address \"address@example.com\" is returned, if it exists. If the `emailToMatch` parameter is set to \"%@example.com\", then information for users with the e-mail address \"address@example.com\", \"address2@example.com\", \"admin@example.com\", and so on is returned.  \n  \n The results returned by <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through tenth users returned. The `totalRecords` parameter would be set to 13.  \n  \n Leading and trailing spaces are trimmed from the `emailToMatch` parameter value."
  example:
  - "The following code example uses the <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  -->"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: The e-mail address to search for.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> that contains a page of <code>pageSize</code><xref href="System.Web.Security.MembershipUser"></xref> objects beginning at the page specified by <code>pageIndex</code>.
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emailToMatch</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByName(String, Int32, Int32, Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
  fullName: SqlMembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of membership users where the user name contains the specified user name to match.
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users for which the user name contains a match with the supplied `usernameToMatch` for the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> searches for a user name that matches the `usernameToMatch` parameter value, using the LIKE clause. SQL Server wildcard characters can be included with the parameter value. For example, if the `usernameToMatch` parameter is set to \"user1\", then user information for the user with the user name of \"user1\" is returned, if it exists. If the `usernameToMatch` parameter is set to \"user%\", then user information for users with the user name of \"user1\", \"user2\", \"user_admin\", and so on are returned.  \n  \n The results returned by <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. The `totalRecords` parameter would be set to 13.  \n  \n Leading and trailing spaces are trimmed from the `usernameToMatch` parameter value."
  example:
  - "The following code example uses the <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses System.Web.Security.SqlMembershipProvider to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  -->"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: The user name to search for.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: When this method returns, contains the total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> that contains a page of <code>pageSize</code><xref href="System.Web.Security.MembershipUser"></xref> objects beginning at the page specified by <code>pageIndex</code>.
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds <xref href=\"System.Int32.MaxValue\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>usernameToMatch</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  commentId: M:System.Web.Security.SqlMembershipProvider.GeneratePassword
  id: GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: SqlMembershipProvider.GeneratePassword()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Generates a random password that is at least 14 characters long.
  remarks: "The <xref:System.Web.Security.Membership> class provides a <xref:System.Web.Security.Membership.GeneratePassword%2A> method, which generates a password of a specified size with at least the specified number of non-alphabetic characters. The <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> method of the <xref:System.Web.Security.SqlMembershipProvider> calls the <xref:System.Web.Security.Membership.GeneratePassword%2A> method of the <xref:System.Web.Security.Membership> class to retrieve a random password that is at least 14 characters long. If the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property is greater than 14, the password returned will be the length specified in the  <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property.  \n  \n You can specifically call the <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> method by referencing the <xref:System.Web.Security.SqlMembershipProvider> class directly from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class.  \n  \n The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`. No hidden or non-printable control characters are included in the generated password.  \n  \n> [!NOTE]\n>  The random password created by the <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties."
  example:
  - "The following code example generates a random 10-character password.  \n  \n [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]"
  syntax:
    content: public virtual string GeneratePassword ();
    parameters: []
    return:
      type: System.String
      description: A random password that is at least 14 characters long.
  overload: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetAllUsers(Int32, Int32, Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32, Int32, Int32)
  fullName: SqlMembershipProvider.GetAllUsers(Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of all the users in the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n The results returned by <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. The `totalRecords` parameter would be set to 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  -->"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> of <xref href="System.Web.Security.MembershipUser"></xref> objects representing all the users in the database for the configured <xref href="System.Web.Security.SqlMembershipProvider.ApplicationName"></xref>.
  overload: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  commentId: M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: SqlMembershipProvider.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Returns the number of users currently accessing the application.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to retrieve the number of users considered online from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> returns the number of users of the current application whose last activity date and time is greater than the current date and time less the value of the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> property in minutes.  \n  \n Only users associated with the configured <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> are included in the count."
  example:
  - "The following code example returns a list of users with a count of the users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  -->"
  syntax:
    content: public override int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: The number of users currently accessing the application.
  overload: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  id: GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetPassword(String, String)
  nameWithType: SqlMembershipProvider.GetPassword(String, String)
  fullName: SqlMembershipProvider.GetPassword(String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Returns the password for the specified user name from the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.MembershipUser> class to retrieve the password for a user from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n If an incorrect password answer is supplied to the <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> method, the internal counter that tracks invalid password-answer attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \n  \n You can call the <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance through the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class.  \n  \n If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, the <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> method cannot retrieve the password. Hashed passwords are encrypted one-way and cannot be decrypted. If the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, and <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> is set to `true`, a <xref:System.Configuration.Provider.ProviderException> is thrown when the provider is initialized.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the user in an e-mail message.  \n  \n> [!NOTE]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file by using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  -->"
  syntax:
    content: public override string GetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: The user to retrieve the password for.
    - id: passwordAnswer
      type: System.String
      description: The password answer for the user.
    return:
      type: System.String
      description: The password for the specified user name.
  overload: System.Web.Security.SqlMembershipProvider.GetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The membership user identified by <code>username</code> is locked out."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval"></xref> is set to `false`.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One of the parameter values exceeds the maximum allowed length.  \n  \n \\- or -  \n  \n <code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\"></xref> is `true`.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>passwordAnswer</code> is greater than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is `null`.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is `null` and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\"></xref> is `true`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  commentId: M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(String, Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String, Boolean)
  fullName: SqlMembershipProvider.GetUser(String, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to retrieve user information from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n If `userIsOnline` is `true`, the last activity date/time stamp for the user is updated to the current date and time. This is reflected in the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> and <xref:System.Web.Security.MembershipUser.IsOnline%2A> properties and in the value returned by <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  \n  \n Leading and trailing spaces are trimmed from the `username` parameter value."
  example:
  - "The following code example uses the <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> method to determine whether a user exists before retrieving the password for the user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  -->"
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to get information for.
    - id: userIsOnline
      type: System.Boolean
      description: '`true` to update the last activity date/time stamp for the user; `false` to return user information without updating the last activity date/time stamp for the user.'
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the specified user. If no user is found in the database for the specified <code>username</code> value, `null` is returned.
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>username</code> contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  commentId: M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(Object, Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object, Boolean)
  fullName: SqlMembershipProvider.GetUser(Object, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.
  remarks: <xref:System.Web.Security.Membership.GetUser%2A> retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified using the unique identifier specified with the `providerUserKey` parameter.
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: The unique identifier for the user.
    - id: userIsOnline
      type: System.Boolean
      description: '`true` to update the last-activity date/time stamp for the specified user; otherwise, `false`.'
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <code>providerUserKey</code> value, `null` is returned.
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>providerUserKey</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>providerUserKey</code> is not of type <xref href="System.Guid"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: SqlMembershipProvider.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the user name associated with the specified e-mail address.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class with an e-mail address, which it uses to retrieve an associated user name from the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n If more than one user in the membership database has the same e-mail address, the first user name encountered is returned. You can set the `requiresUniqueEmail` attribute to `true` in the application-configuration file to ensure that each e-mail address in the database is unique.  \n  \n Leading and trailing spaces are trimmed from the `email` parameter value."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  -->"
  syntax:
    content: public override string GetUserNameByEmail (string email);
    parameters:
    - id: email
      type: System.String
      description: The e-mail address to search for.
    return:
      type: System.String
      description: The user name associated with the specified e-mail address. If no match is found, this method returns `null`.
  overload: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>email</code> exceeds 256 characters.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: More than one user with the same e-mail address exists in the database and <xref href="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail"></xref> is `true`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: Initialize(String, NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String, NameValueCollection)
  fullName: SqlMembershipProvider.Initialize(String, NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.
  remarks: This method initializes the <xref:System.Web.Security.SqlMembershipProvider> with the property values specified in the ASP.NET application configuration file (Web.config) and is not intended to be used directly from your code.
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: The name of the <xref href="System.Web.Security.SqlMembershipProvider"></xref> instance to initialize.
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: A <xref href="System.Collections.Specialized.NameValueCollection"></xref> that contains the names and values of configuration options for the membership provider.
  overload: System.Web.Security.SqlMembershipProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>config</code> is `null`.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The `enablePasswordRetrieval`, `enablePasswordReset`, `requiresQuestionAndAnswer`, or `requiresUniqueEmail` attribute is set to a value other than a `Boolean`.  \n  \n \\- or -  \n  \n The `maxInvalidPasswordAttempts` or the `passwordAttemptWindow` attribute is set to a value other than a positive integer.  \n  \n \\- or -  \n  \n The `minRequiredPasswordLength` attribute is set to a value other than a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The `minRequiredNonalphanumericCharacters` attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The value for the `passwordStrengthRegularExpression` attribute is not a valid regular expression.  \n  \n \\- or -  \n  \n The `applicationName` attribute is set to a value that is greater than 256 characters.  \n  \n \\- or -  \n  \n The `passwordFormat` attribute specified in the application configuration file is an invalid <xref href=\"System.Web.Security.MembershipPasswordFormat\"></xref> enumeration.  \n  \n \\- or -  \n  \n The `passwordFormat` attribute is set to <xref href=\"System.Web.Security.MembershipPasswordFormat.Hashed\"></xref> and the `enablePasswordRetrieval` attribute is set to `true` in the application configuration.  \n  \n \\- or -  \n  \n The `passwordFormat` attribute is set to `Encrypted` and the  configuration element specifies `AutoGenerate` for the `decryptionKey` attribute.  \n  \n \\- or -  \n  \n The `connectionStringName` attribute is empty or does not exist in the application configuration.  \n  \n \\- or -  \n  \n The value of the connection string for the `connectionStringName` attribute value is empty, or the specified `connectionStringName` does not exist in the application configuration file.  \n  \n \\- or -  \n  \n The value for the `commandTimeout` attribute is set to a value other than zero or a positive integer.  \n  \n \\- or -  \n  \n The application configuration file for this <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance contains an unrecognized attribute."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The current trust level is less than `Low`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The provider has already been initialized prior to the current call to the <xref href="System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></xref> method.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  commentId: P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: SqlMembershipProvider.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
  remarks: "The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the value of the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property within the number of minutes identified by the value of the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked with the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counters that track the number of invalid password and password-answer attempts are reset to zero. If a valid password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, only the counter that tracks the number of invalid password-answer attempts is reset to zero.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> keeps counts of invalid password attempts and invalid password-answer attempts separately. Invalid password attempts result in only the password-attempt counter being incremented. Invalid password-answer attempts result in only the password-answer counter being incremented.  \n  \n The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration section.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: The number of invalid password or password-answer attempts allowed before the membership user is locked out.
  overload: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  commentId: P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the minimum number of special characters that must be present in a valid password.
  remarks: "The <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.  \n  \n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`."
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to one character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonalphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: The minimum number of special characters that must be present in a valid password.
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  commentId: P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: SqlMembershipProvider.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the minimum length required for a password.
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.SqlMembershipProvider> object.  \n  \n The <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n    <providers>  \n      <add  \n        name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        minRequiredPasswordLength=\"7\"  \n        />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: The minimum length required for a password.
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  commentId: P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: SqlMembershipProvider.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.
  remarks: "The <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or the password answer of a membership user through repeated attempts. When users are attempting to log in, change their password, or reset their password, only a certain number of consecutive attempts are allowed within a specified time window. The length of the time window is specified by the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> property, which identifies the number of minutes allowed between invalid attempts. If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified for the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> property, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true`. The user can be unlocked by calling the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If the interval between the current failed attempt and the last failed attempt is greater than the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> property setting, the current invalid attempt is counted as the first. If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to zero. If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to zero.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> keeps count of invalid password attempts and invalid password-answer attempts separately. Invalid password attempts result in only the password-attempt counter being incremented. Invalid password-answer attempts result in only the password-answer counter being incremented.  \n  \n The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property value is set in the application configuration using the `passwordAttemptWindow` attribute of the  configuration section.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answers are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the <xref href="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow"></xref> property setting, each failed attempt is treated as if it were the first failed attempt.
  overload: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  commentId: P:System.Web.Security.SqlMembershipProvider.PasswordFormat
  id: PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: SqlMembershipProvider.PasswordFormat
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating the format for storing passwords in the SQL Server membership database.
  remarks: "Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> value is specified in the  section of the Web.config file for the ASP.NET application.  \n  \n `Encrypted` and `Hashed` passwords are encrypted or hashed by default based on information supplied in the  element in your configuration. Note that if you specify a value of `3DES` for the `validation` attribute, or if no value is specified, hashed passwords will be hashed using the <xref:System.Security.Cryptography.SHA1> algorithm.  \n  \n A custom hash algorithm can be defined using the `hashAlgorithmType` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element. If you choose encryption, default password encryption uses AES. You can change the encryption algorithm by setting the `decryption` attribute of the  configuration element. If you are encrypting passwords, you must provide an explicit value for the `decryptionKey` attribute in the  element. The default value of `AutoGenerate` for the `decryptionKey` attribute is not supported when using encrypted passwords with ASP.NET Membership."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to `Hashed`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }
    return:
      type: System.Web.Security.MembershipPasswordFormat
      description: One of the <xref href="System.Web.Security.MembershipPasswordFormat"></xref> values, indicating the format for storing passwords in the SQL Server database.
  overload: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  commentId: P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: SqlMembershipProvider.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the regular expression used to evaluate a password.
  remarks: "The <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.SqlMembershipProvider> object.  \n  \n The <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \n  \n-   Is at least seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\"@\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: A regular expression used to evaluate a password.
  overload: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  commentId: P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: SqlMembershipProvider.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.
  remarks: "Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. When creating a user name, a user can supply a question and answer that can later be used to retrieve or reset a forgotten password. If the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> property and the <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> property are both `false`, the value of the <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> property is irrelevant.  \n  \n For more information, see <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> and <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a password answer for password reset or retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: '`true` if a password answer is required for password reset and retrieval; otherwise, `false`. The default is `true`.'
  overload: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  commentId: P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  id: RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: SqlMembershipProvider.RequiresUniqueEmail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the SQL Server membership provider is configured to require a unique e-mail address for each user name.
  remarks: ''
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a unique e-mail address for each user name.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      requiresUniqueEmail=\"true\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresUniqueEmail { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider requires a unique e-mail address; otherwise, `false`. The default is `false`.'
  overload: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  id: ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ResetPassword(String, String)
  nameWithType: SqlMembershipProvider.ResetPassword(String, String)
  fullName: SqlMembershipProvider.ResetPassword(String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Resets a user's password to a new, automatically generated password.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to reset the password for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config) to a new, randomly generated value. The new password is returned.  \n  \n> [!NOTE]\n>  The random password created by the <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> method is most commonly used when the <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> property is set to `Hashed`. If a user forgets a password that is hashed, the password cannot be retrieved. However, the provider can reset the password to a new, automatically generated password if the user supplies the correct password answer.  \n  \n If an incorrect password answer is supplied to the <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password answer is supplied and the user is not currently locked out, then the internal counter that tracks invalid password-answer attempts is reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \n  \n You can call the <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> method directly by first obtaining a reference to the <xref:System.Web.Security.SqlMembershipProvider> instance from the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. The generated password will be at least 14 characters long, or the length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> property, and will contain the number of non-alphanumeric characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property. The password is not guaranteed to pass the regular expression contained in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> property, if one is specified.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example resets a user's password and returns the new, automatically generated password.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  -->"
  syntax:
    content: public override string ResetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: The user to reset the password for.
    - id: passwordAnswer
      type: System.String
      description: The password answer for the specified user.
    return:
      type: System.String
      description: The new password for the specified user.
  overload: System.Web.Security.SqlMembershipProvider.ResetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The user account is currently locked."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.Web.Security.SqlMembershipProvider.EnablePasswordReset"></xref> is set to `false`.
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n The change password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event and the <xref href=\"System.Web.Security.ValidatePasswordEventArgs.FailureInformation\"></xref> property was `null`.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string, or is longer than 128 characters, and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\"></xref> is `true`.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is longer than 128 characters after encoding."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is `null`.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is `null` and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer\"></xref> is `true`."
  - type: System.Exception
    commentId: T:System.Exception
    description: An unhandled exception occurred.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  id: UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: SqlMembershipProvider.UnlockUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Clears the user's locked-out status so that the membership user can be validated.
  remarks: "Users are most commonly locked out and cannot be validated by the <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> method when the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> is exceeded within the <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  \n  \n Leading and trailing spaces are trimmed from the `username` parameter value."
  syntax:
    content: public override bool UnlockUser (string username);
    parameters:
    - id: username
      type: System.String
      description: The name of the membership user to clear the locked-out status for.
    return:
      type: System.Boolean
      description: '`true` if the membership user was successfully unlocked; otherwise, `false`. A value of `false` is also returned if the user does not exist in the database.'
  overload: System.Web.Security.SqlMembershipProvider.UnlockUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>username</code> is an empty string, is longer than 256 characters, or contains a comma.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  commentId: M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: SqlMembershipProvider.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Updates information about a user in the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to update user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config). The <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, and <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property values are updated for the specified membership user.  \n  \n The maximum length for the <xref:System.Web.Security.MembershipUser.UserName%2A> property is 256 characters. The maximum length for the <xref:System.Web.Security.MembershipUser.Email%2A> property is 256 characters.  \n  \n The password for a membership user cannot be updated using the <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> method. To update the password for a membership user, use the <xref:System.Web.Security.MembershipUser.ChangePassword%2A> method of the <xref:System.Web.Security.MembershipUser> class."
  example:
  - "The following code example updates the e-mail address for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  -->"
  syntax:
    content: public override void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object that represents the user to update and the updated information for the user.
  overload: System.Web.Security.SqlMembershipProvider.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code> is `null`.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.Security.MembershipUser.UserName\"></xref> property of <code>user</code> is `null`.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.Security.MembershipUser.Email\"></xref> property of <code>user</code> is `null` and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\"></xref> is set to `true`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.Security.MembershipUser.UserName\"></xref> property of <code>user</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.Security.MembershipUser.Email\"></xref> property of <code>user</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.Security.MembershipUser.Email\"></xref> property of <code>user</code> is an empty string and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\"></xref> is set to `true`."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref href=\"System.Web.Security.MembershipUser.UserName\"></xref> property of <code>user</code> was not found in the database.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.Security.MembershipUser.Email\"></xref> property of <code>user</code> was equal to an existing e-mail address in the database and <xref href=\"System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail\"></xref> is set to true.  \n  \n \\- or -  \n  \n The user update failed."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  commentId: M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ValidateUser(String, String)
  nameWithType: SqlMembershipProvider.ValidateUser(String, String)
  fullName: SqlMembershipProvider.ValidateUser(String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Verifies that the specified user name and password exist in the SQL Server membership database.
  remarks: "This method is called by the <xref:System.Web.Security.Membership> class to validate user information for a user in the SQL Server database specified in the ASP.NET application's configuration file (Web.config).  \n  \n When a user is successfully validated, the last activity date and last sign-in date values are updated to the current date and time in the database.  \n  \n If an incorrect password is supplied to the <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> method, the internal counter that tracks invalid password attempts is incremented by one. This can result in the user being locked out and unable to log on until the lock status is cleared by a call to the <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> method. If the correct password is supplied and the user is not currently locked out, then the internal counters that track invalid password and password-answer attempts are reset to zero. For more information, see the <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> and <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> properties.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example shows the sign-in page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  -->"
  syntax:
    content: public override bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to validate.
    - id: password
      type: System.String
      description: The password for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the specified username and password are valid; otherwise, `false`. A value of `false` is also returned if the user does not exist in the database.'
  overload: System.Web.Security.SqlMembershipProvider.ValidateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: false
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Web.Security.MembershipPasswordException
  parent: System.Web.Security
  isExternal: false
  name: MembershipPasswordException
  nameWithType: MembershipPasswordException
  fullName: System.Web.Security.MembershipPasswordException
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: SqlMembershipProvider.SqlMembershipProvider()
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: SqlMembershipProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword(String, String, String)
  nameWithType: SqlMembershipProvider.ChangePassword(String, String, String)
  fullName: SqlMembershipProvider.ChangePassword(String, String, String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer(String, String, String, String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
  fullName: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  fullName: SqlMembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: false
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: false
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser(String, Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String, Boolean)
  fullName: SqlMembershipProvider.DeleteUser(String, Boolean)
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail(String, Int32, Int32, Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
  fullName: SqlMembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: false
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName(String, Int32, Int32, Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
  fullName: SqlMembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: SqlMembershipProvider.GeneratePassword()
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers(Int32, Int32, Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32, Int32, Int32)
  fullName: SqlMembershipProvider.GetAllUsers(Int32, Int32, Int32)
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: SqlMembershipProvider.GetNumberOfUsersOnline()
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword(String, String)
  nameWithType: SqlMembershipProvider.GetPassword(String, String)
  fullName: SqlMembershipProvider.GetPassword(String, String)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(String, Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String, Boolean)
  fullName: SqlMembershipProvider.GetUser(String, Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(Object, Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object, Boolean)
  fullName: SqlMembershipProvider.GetUser(Object, Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: SqlMembershipProvider.GetUserNameByEmail(String)
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize(String, NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String, NameValueCollection)
  fullName: SqlMembershipProvider.Initialize(String, NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.MembershipPasswordFormat
  parent: System.Web.Security
  isExternal: false
  name: MembershipPasswordFormat
  nameWithType: MembershipPasswordFormat
  fullName: System.Web.Security.MembershipPasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword(String, String)
  nameWithType: SqlMembershipProvider.ResetPassword(String, String)
  fullName: SqlMembershipProvider.ResetPassword(String, String)
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: SqlMembershipProvider.UnlockUser(String)
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: SqlMembershipProvider.UpdateUser(MembershipUser)
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser(String, String)
  nameWithType: SqlMembershipProvider.ValidateUser(String, String)
  fullName: SqlMembershipProvider.ValidateUser(String, String)
- uid: System.Web.Security.SqlMembershipProvider.#ctor*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider.SqlMembershipProvider
  fullName: SqlMembershipProvider.SqlMembershipProvider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: SqlMembershipProvider.ApplicationName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword
  nameWithType: SqlMembershipProvider.ChangePassword
  fullName: SqlMembershipProvider.ChangePassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer
  fullName: SqlMembershipProvider.ChangePasswordQuestionAndAnswer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.CreateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser
  nameWithType: SqlMembershipProvider.CreateUser
  fullName: SqlMembershipProvider.CreateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser
  nameWithType: SqlMembershipProvider.DeleteUser
  fullName: SqlMembershipProvider.DeleteUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: SqlMembershipProvider.EnablePasswordReset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: SqlMembershipProvider.EnablePasswordRetrieval
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail
  nameWithType: SqlMembershipProvider.FindUsersByEmail
  fullName: SqlMembershipProvider.FindUsersByEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName
  nameWithType: SqlMembershipProvider.FindUsersByName
  fullName: SqlMembershipProvider.FindUsersByName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword
  nameWithType: SqlMembershipProvider.GeneratePassword
  fullName: SqlMembershipProvider.GeneratePassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers
  nameWithType: SqlMembershipProvider.GetAllUsers
  fullName: SqlMembershipProvider.GetAllUsers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline
  fullName: SqlMembershipProvider.GetNumberOfUsersOnline
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.GetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword
  nameWithType: SqlMembershipProvider.GetPassword
  fullName: SqlMembershipProvider.GetPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.GetUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser
  nameWithType: SqlMembershipProvider.GetUser
  fullName: SqlMembershipProvider.GetUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: SqlMembershipProvider.GetUserNameByEmail
  fullName: SqlMembershipProvider.GetUserNameByEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.Initialize*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlMembershipProvider.Initialize
  fullName: SqlMembershipProvider.Initialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: SqlMembershipProvider.MaxInvalidPasswordAttempts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: SqlMembershipProvider.MinRequiredPasswordLength
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: SqlMembershipProvider.PasswordAttemptWindow
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: SqlMembershipProvider.PasswordFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: SqlMembershipProvider.PasswordStrengthRegularExpression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: SqlMembershipProvider.RequiresQuestionAndAnswer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: SqlMembershipProvider.RequiresUniqueEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword
  nameWithType: SqlMembershipProvider.ResetPassword
  fullName: SqlMembershipProvider.ResetPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser
  nameWithType: SqlMembershipProvider.UnlockUser
  fullName: SqlMembershipProvider.UnlockUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser
  nameWithType: SqlMembershipProvider.UpdateUser
  fullName: SqlMembershipProvider.UpdateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser
  nameWithType: SqlMembershipProvider.ValidateUser
  fullName: SqlMembershipProvider.ValidateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/SqlMembershipProvider.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: ProviderBase.Name
- uid: System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: DecryptPassword(Byte[])
  nameWithType: MembershipProvider.DecryptPassword(Byte[])
  fullName: MembershipProvider.DecryptPassword(Byte[])
- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EncryptPassword(Byte[])
  nameWithType: MembershipProvider.EncryptPassword(Byte[])
  fullName: MembershipProvider.EncryptPassword(Byte[])
- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  nameWithType: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  fullName: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
- uid: System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: OnValidatingPassword(ValidatePasswordEventArgs)
  nameWithType: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)
  fullName: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)
- uid: System.Web.Security.MembershipProvider.ValidatingPassword
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ValidatingPassword
  nameWithType: MembershipProvider.ValidatingPassword
  fullName: MembershipProvider.ValidatingPassword
